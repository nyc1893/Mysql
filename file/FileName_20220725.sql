-- MySQL dump 10.13  Distrib 8.0.19, for Win64 (x86_64)
--
-- Host: localhost    Database: 
-- ------------------------------------------------------
-- Server version	8.0.19

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!50606 SET @OLD_INNODB_STATS_AUTO_RECALC=@@INNODB_STATS_AUTO_RECALC */;
/*!50606 SET GLOBAL INNODB_STATS_AUTO_RECALC=OFF */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `mysql`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mysql` /*!40100 DEFAULT CHARACTER SET utf8 */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `mysql`;

--
-- Table structure for table `columns_priv`
--

DROP TABLE IF EXISTS `columns_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `columns_priv` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `Db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Column_name` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Column privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `columns_priv`
--

LOCK TABLES `columns_priv` WRITE;
/*!40000 ALTER TABLE `columns_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `columns_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `component`
--

DROP TABLE IF EXISTS `component`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `component` (
  `component_id` int unsigned NOT NULL AUTO_INCREMENT,
  `component_group_id` int unsigned NOT NULL,
  `component_urn` text NOT NULL,
  PRIMARY KEY (`component_id`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='Components';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `component`
--

LOCK TABLES `component` WRITE;
/*!40000 ALTER TABLE `component` DISABLE KEYS */;
/*!40000 ALTER TABLE `component` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `db`
--

DROP TABLE IF EXISTS `db`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `db` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `Db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`,`User`),
  KEY `User` (`User`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Database privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `db`
--

LOCK TABLES `db` WRITE;
/*!40000 ALTER TABLE `db` DISABLE KEYS */;
INSERT INTO `db` VALUES ('localhost','performance_schema','mysql.session','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N'),('localhost','sys','mysql.sys','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','Y');
/*!40000 ALTER TABLE `db` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `default_roles`
--

DROP TABLE IF EXISTS `default_roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `default_roles` (
  `HOST` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `USER` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `DEFAULT_ROLE_HOST` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '%',
  `DEFAULT_ROLE_USER` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  PRIMARY KEY (`HOST`,`USER`,`DEFAULT_ROLE_HOST`,`DEFAULT_ROLE_USER`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Default roles';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `default_roles`
--

LOCK TABLES `default_roles` WRITE;
/*!40000 ALTER TABLE `default_roles` DISABLE KEYS */;
/*!40000 ALTER TABLE `default_roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `engine_cost`
--

DROP TABLE IF EXISTS `engine_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `engine_cost` (
  `engine_name` varchar(64) NOT NULL,
  `device_type` int NOT NULL,
  `cost_name` varchar(64) NOT NULL,
  `cost_value` float DEFAULT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `comment` varchar(1024) DEFAULT NULL,
  `default_value` float GENERATED ALWAYS AS ((case `cost_name` when _utf8mb3'io_block_read_cost' then 1.0 when _utf8mb3'memory_block_read_cost' then 0.25 else NULL end)) VIRTUAL,
  PRIMARY KEY (`cost_name`,`engine_name`,`device_type`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `engine_cost`
--

LOCK TABLES `engine_cost` WRITE;
/*!40000 ALTER TABLE `engine_cost` DISABLE KEYS */;
INSERT INTO `engine_cost` (`engine_name`, `device_type`, `cost_name`, `cost_value`, `last_update`, `comment`) VALUES ('default',0,'io_block_read_cost',NULL,'2021-01-02 22:28:30',NULL),('default',0,'memory_block_read_cost',NULL,'2021-01-02 22:28:30',NULL);
/*!40000 ALTER TABLE `engine_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `func`
--

DROP TABLE IF EXISTS `func`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `func` (
  `name` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `ret` tinyint NOT NULL DEFAULT '0',
  `dl` char(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `type` enum('function','aggregate') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='User defined functions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `func`
--

LOCK TABLES `func` WRITE;
/*!40000 ALTER TABLE `func` DISABLE KEYS */;
/*!40000 ALTER TABLE `func` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `global_grants`
--

DROP TABLE IF EXISTS `global_grants`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `global_grants` (
  `USER` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `HOST` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `PRIV` char(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `WITH_GRANT_OPTION` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  PRIMARY KEY (`USER`,`HOST`,`PRIV`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Extended global grants';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `global_grants`
--

LOCK TABLES `global_grants` WRITE;
/*!40000 ALTER TABLE `global_grants` DISABLE KEYS */;
INSERT INTO `global_grants` VALUES ('mysql.session','localhost','BACKUP_ADMIN','N'),('mysql.session','localhost','CLONE_ADMIN','N'),('mysql.session','localhost','CONNECTION_ADMIN','N'),('mysql.session','localhost','PERSIST_RO_VARIABLES_ADMIN','N'),('mysql.session','localhost','SESSION_VARIABLES_ADMIN','N'),('mysql.session','localhost','SYSTEM_USER','N'),('mysql.session','localhost','SYSTEM_VARIABLES_ADMIN','N'),('root','localhost','APPLICATION_PASSWORD_ADMIN','Y'),('root','localhost','AUDIT_ADMIN','Y'),('root','localhost','BACKUP_ADMIN','Y'),('root','localhost','BINLOG_ADMIN','Y'),('root','localhost','BINLOG_ENCRYPTION_ADMIN','Y'),('root','localhost','CLONE_ADMIN','Y'),('root','localhost','CONNECTION_ADMIN','Y'),('root','localhost','ENCRYPTION_KEY_ADMIN','Y'),('root','localhost','GROUP_REPLICATION_ADMIN','Y'),('root','localhost','INNODB_REDO_LOG_ARCHIVE','Y'),('root','localhost','PERSIST_RO_VARIABLES_ADMIN','Y'),('root','localhost','REPLICATION_APPLIER','Y'),('root','localhost','REPLICATION_SLAVE_ADMIN','Y'),('root','localhost','RESOURCE_GROUP_ADMIN','Y'),('root','localhost','RESOURCE_GROUP_USER','Y'),('root','localhost','ROLE_ADMIN','Y'),('root','localhost','SERVICE_CONNECTION_ADMIN','Y'),('root','localhost','SESSION_VARIABLES_ADMIN','Y'),('root','localhost','SET_USER_ID','Y'),('root','localhost','SYSTEM_USER','Y'),('root','localhost','SYSTEM_VARIABLES_ADMIN','Y'),('root','localhost','TABLE_ENCRYPTION_ADMIN','Y'),('root','localhost','XA_RECOVER_ADMIN','Y'),('username','%','APPLICATION_PASSWORD_ADMIN','Y'),('username','%','AUDIT_ADMIN','Y'),('username','%','BACKUP_ADMIN','Y'),('username','%','BINLOG_ADMIN','Y'),('username','%','BINLOG_ENCRYPTION_ADMIN','Y'),('username','%','CLONE_ADMIN','Y'),('username','%','CONNECTION_ADMIN','Y'),('username','%','ENCRYPTION_KEY_ADMIN','Y'),('username','%','GROUP_REPLICATION_ADMIN','Y'),('username','%','INNODB_REDO_LOG_ARCHIVE','Y'),('username','%','PERSIST_RO_VARIABLES_ADMIN','Y'),('username','%','REPLICATION_APPLIER','Y'),('username','%','REPLICATION_SLAVE_ADMIN','Y'),('username','%','RESOURCE_GROUP_ADMIN','Y'),('username','%','RESOURCE_GROUP_USER','Y'),('username','%','ROLE_ADMIN','Y'),('username','%','SERVICE_CONNECTION_ADMIN','Y'),('username','%','SESSION_VARIABLES_ADMIN','Y'),('username','%','SET_USER_ID','Y'),('username','%','SYSTEM_USER','Y'),('username','%','SYSTEM_VARIABLES_ADMIN','Y'),('username','%','TABLE_ENCRYPTION_ADMIN','Y'),('username','%','XA_RECOVER_ADMIN','Y'),('username','localhost','APPLICATION_PASSWORD_ADMIN','Y'),('username','localhost','AUDIT_ADMIN','Y'),('username','localhost','BACKUP_ADMIN','Y'),('username','localhost','BINLOG_ADMIN','Y'),('username','localhost','BINLOG_ENCRYPTION_ADMIN','Y'),('username','localhost','CLONE_ADMIN','Y'),('username','localhost','CONNECTION_ADMIN','Y'),('username','localhost','ENCRYPTION_KEY_ADMIN','Y'),('username','localhost','GROUP_REPLICATION_ADMIN','Y'),('username','localhost','INNODB_REDO_LOG_ARCHIVE','Y'),('username','localhost','PERSIST_RO_VARIABLES_ADMIN','Y'),('username','localhost','REPLICATION_APPLIER','Y'),('username','localhost','REPLICATION_SLAVE_ADMIN','Y'),('username','localhost','RESOURCE_GROUP_ADMIN','Y'),('username','localhost','RESOURCE_GROUP_USER','Y'),('username','localhost','ROLE_ADMIN','Y'),('username','localhost','SERVICE_CONNECTION_ADMIN','Y'),('username','localhost','SESSION_VARIABLES_ADMIN','Y'),('username','localhost','SET_USER_ID','Y'),('username','localhost','SYSTEM_USER','Y'),('username','localhost','SYSTEM_VARIABLES_ADMIN','Y'),('username','localhost','TABLE_ENCRYPTION_ADMIN','Y'),('username','localhost','XA_RECOVER_ADMIN','Y'),('uu','%','APPLICATION_PASSWORD_ADMIN','Y'),('uu','%','AUDIT_ADMIN','Y'),('uu','%','BACKUP_ADMIN','Y'),('uu','%','BINLOG_ADMIN','Y'),('uu','%','BINLOG_ENCRYPTION_ADMIN','Y'),('uu','%','CLONE_ADMIN','Y'),('uu','%','CONNECTION_ADMIN','Y'),('uu','%','ENCRYPTION_KEY_ADMIN','Y'),('uu','%','GROUP_REPLICATION_ADMIN','Y'),('uu','%','INNODB_REDO_LOG_ARCHIVE','Y'),('uu','%','PERSIST_RO_VARIABLES_ADMIN','Y'),('uu','%','REPLICATION_APPLIER','Y'),('uu','%','REPLICATION_SLAVE_ADMIN','Y'),('uu','%','RESOURCE_GROUP_ADMIN','Y'),('uu','%','RESOURCE_GROUP_USER','Y'),('uu','%','ROLE_ADMIN','Y'),('uu','%','SERVICE_CONNECTION_ADMIN','Y'),('uu','%','SESSION_VARIABLES_ADMIN','Y'),('uu','%','SET_USER_ID','Y'),('uu','%','SYSTEM_USER','Y'),('uu','%','SYSTEM_VARIABLES_ADMIN','Y'),('uu','%','TABLE_ENCRYPTION_ADMIN','Y'),('uu','%','XA_RECOVER_ADMIN','Y');
/*!40000 ALTER TABLE `global_grants` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `gtid_executed`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `gtid_executed` (
  `source_uuid` char(36) NOT NULL COMMENT 'uuid of the source where the transaction was originally executed.',
  `interval_start` bigint NOT NULL COMMENT 'First number of interval.',
  `interval_end` bigint NOT NULL COMMENT 'Last number of interval.',
  PRIMARY KEY (`source_uuid`,`interval_start`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `help_category`
--

DROP TABLE IF EXISTS `help_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `help_category` (
  `help_category_id` smallint unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `parent_category_id` smallint unsigned DEFAULT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_category_id`),
  UNIQUE KEY `name` (`name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='help categories';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_category`
--

LOCK TABLES `help_category` WRITE;
/*!40000 ALTER TABLE `help_category` DISABLE KEYS */;
INSERT INTO `help_category` VALUES (0,'Contents',0,''),(1,'Help Metadata',0,''),(2,'Data Types',0,''),(3,'Administration',0,''),(4,'Language Structure',0,''),(5,'Geographic Features',0,''),(6,'MBR',5,''),(7,'WKT',5,''),(8,'Functions',0,''),(9,'Comparison Operators',8,''),(10,'Logical Operators',8,''),(11,'Control Flow Functions',8,''),(12,'String Functions',8,''),(13,'Numeric Functions',8,''),(14,'Date and Time Functions',8,''),(15,'Bit Functions',8,''),(16,'Encryption Functions',8,''),(17,'Locking Functions',8,''),(18,'Information Functions',8,''),(19,'Spatial Functions',8,''),(20,'WKT Functions',19,''),(21,'WKB Functions',19,''),(22,'Geometry Constructors',19,''),(23,'Geometry Property Functions',19,''),(24,'Point Property Functions',19,''),(25,'LineString Property Functions',19,''),(26,'Polygon Property Functions',19,''),(27,'GeometryCollection Property Functions',19,''),(28,'Geometry Relation Functions',19,''),(29,'MBR Functions',19,''),(30,'GROUP BY Functions and Modifiers',8,''),(31,'Performance Schema Functions',8,''),(32,'Miscellaneous Functions',8,''),(33,'Data Definition',0,''),(34,'Data Manipulation',0,''),(35,'Transactions',0,''),(36,'Compound Statements',0,''),(37,'Account Management',0,''),(38,'Table Maintenance',0,''),(39,'User-Defined Functions',0,''),(40,'Components',0,''),(41,'Plugins',0,''),(42,'Utility',0,''),(43,'Storage Engines',0,'');
/*!40000 ALTER TABLE `help_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_keyword`
--

DROP TABLE IF EXISTS `help_keyword`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `help_keyword` (
  `help_keyword_id` int unsigned NOT NULL,
  `name` char(64) NOT NULL,
  PRIMARY KEY (`help_keyword_id`),
  UNIQUE KEY `name` (`name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='help keywords';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_keyword`
--

LOCK TABLES `help_keyword` WRITE;
/*!40000 ALTER TABLE `help_keyword` DISABLE KEYS */;
INSERT INTO `help_keyword` VALUES (225,'(JSON'),(226,'->'),(228,'->>'),(46,'<>'),(628,'ACCOUNT'),(422,'ACTION'),(40,'ADD'),(653,'ADMIN'),(108,'AES_DECRYPT'),(109,'AES_ENCRYPT'),(341,'AFTER'),(95,'AGAINST'),(675,'AGGREGATE'),(342,'ALGORITHM'),(488,'ALL'),(41,'ALTER'),(343,'ANALYZE'),(47,'AND'),(311,'ANY_VALUE'),(423,'ARCHIVE'),(102,'ARRAY'),(489,'AS'),(259,'ASC'),(404,'AT'),(513,'AUTOCOMMIT'),(447,'AUTOEXTEND_SIZE'),(344,'AUTO_INCREMENT'),(345,'AVG_ROW_LENGTH'),(527,'BACKUP'),(541,'BEFORE'),(514,'BEGIN'),(48,'BETWEEN'),(72,'BIGINT'),(104,'BINARY'),(704,'BINLOG'),(312,'BIN_TO_UUID'),(8,'BOOL'),(9,'BOOLEAN'),(62,'BOTH'),(408,'BTREE'),(260,'BY'),(33,'BYTE'),(712,'CACHE'),(455,'CALL'),(283,'CAN_ACCESS_COLUMN'),(284,'CAN_ACCESS_DATABASE'),(285,'CAN_ACCESS_TABLE'),(286,'CAN_ACCESS_VIEW'),(424,'CASCADE'),(53,'CASE'),(608,'CATALOG_NAME'),(75,'CEIL'),(76,'CEILING'),(515,'CHAIN'),(346,'CHANGE'),(547,'CHANNEL'),(34,'CHAR'),(30,'CHARACTER'),(687,'CHARSET'),(347,'CHECK'),(348,'CHECKSUM'),(629,'CIPHER'),(609,'CLASS_ORIGIN'),(654,'CLIENT'),(683,'CLONE'),(461,'CLOSE'),(349,'COALESCE'),(707,'CODE'),(316,'COLLATE'),(689,'COLLATION'),(350,'COLUMN'),(351,'COLUMNS'),(610,'COLUMN_NAME'),(321,'COMMENT'),(516,'COMMIT'),(530,'COMMITTED'),(425,'COMPACT'),(322,'COMPLETION'),(679,'COMPONENT'),(426,'COMPRESSED'),(352,'COMPRESSION'),(475,'CONCURRENT'),(605,'CONDITION'),(353,'CONNECTION'),(517,'CONSISTENT'),(354,'CONSTRAINT'),(611,'CONSTRAINT_CATALOG'),(612,'CONSTRAINT_NAME'),(613,'CONSTRAINT_SCHEMA'),(606,'CONTINUE'),(103,'CONVERT'),(258,'COUNT'),(42,'CREATE'),(256,'CREATE_DH_PARAMETERS'),(506,'CROSS'),(427,'CSV'),(268,'CUME_DIST'),(630,'CURRENT'),(116,'CURRENT_ROLE'),(323,'CURRENT_USER'),(603,'CURSOR'),(614,'CURSOR_NAME'),(355,'DATA'),(317,'DATABASE'),(690,'DATABASES'),(397,'DATAFILE'),(27,'DATE'),(105,'DATETIME'),(79,'DATE_ADD'),(80,'DATE_SUB'),(81,'DAY'),(82,'DAY_HOUR'),(83,'DAY_MINUTE'),(84,'DAY_SECOND'),(593,'DEALLOCATE'),(19,'DEC'),(22,'DECIMAL'),(594,'DECLARE'),(2,'DEFAULT'),(584,'DEFAULT_AUTH'),(324,'DEFINER'),(415,'DEFINITION'),(468,'DELAYED'),(356,'DELAY_KEY_WRITE'),(428,'DELETE'),(269,'DENSE_RANK'),(261,'DESC'),(724,'DESCRIBE'),(416,'DESCRIPTION'),(615,'DIAGNOSTICS'),(357,'DIRECTORY'),(325,'DISABLE'),(358,'DISCARD'),(257,'DISTINCT'),(490,'DISTINCTROW'),(326,'DO'),(359,'DROP'),(505,'DUAL'),(491,'DUMPFILE'),(469,'DUPLICATE'),(429,'DYNAMIC'),(54,'ELSE'),(595,'ELSEIF'),(327,'ENABLE'),(476,'ENCLOSED'),(318,'ENCRYPTION'),(55,'END'),(405,'ENDS'),(360,'ENGINE'),(691,'ENGINES'),(713,'ERROR'),(692,'ERRORS'),(66,'ESCAPE'),(477,'ESCAPED'),(328,'EVENT'),(705,'EVENTS'),(406,'EVERY'),(666,'EXCEPT'),(361,'EXCHANGE'),(592,'EXECUTE'),(403,'EXISTS'),(607,'EXIT'),(96,'EXPANSION'),(631,'EXPIRE'),(725,'EXPLAIN'),(714,'EXPORT'),(673,'EXTENDED'),(448,'EXTENT_SIZE'),(227,'EXTRACTION)'),(632,'FAILED_LOGIN_ATTEMPTS'),(6,'FALSE'),(671,'FAST'),(430,'FEDERATED'),(604,'FETCH'),(478,'FIELDS'),(655,'FILE'),(449,'FILE_BLOCK_SIZE'),(574,'FILTER'),(362,'FIRST'),(270,'FIRST_VALUE'),(20,'FIXED'),(23,'FLOAT4'),(24,'FLOAT8'),(73,'FLOOR'),(715,'FLUSH'),(492,'FOR'),(507,'FORCE'),(363,'FOREIGN'),(726,'FORMAT'),(279,'FORMAT_BYTES'),(280,'FORMAT_PICO_TIME'),(63,'FROM'),(431,'FULL'),(364,'FULLTEXT'),(334,'FUNCTION'),(716,'GENERAL'),(149,'GEOMCOLLECTION'),(150,'GEOMETRYCOLLECTION'),(616,'GET'),(287,'GET_DD_COLUMN_PRIVILEGES'),(288,'GET_DD_CREATE_OPTIONS'),(289,'GET_DD_INDEX_SUB_PART_LENGTH'),(531,'GLOBAL'),(656,'GRANT'),(693,'GRANTS'),(336,'GROUP'),(313,'GROUPING'),(462,'HANDLER'),(493,'HAVING'),(432,'HEAP'),(5,'HELP'),(0,'HELP_DATE'),(1,'HELP_VERSION'),(470,'HIGH_PRIORITY'),(633,'HISTORY'),(409,'HOST'),(694,'HOSTS'),(85,'HOUR'),(86,'HOUR_MINUTE'),(87,'HOUR_SECOND'),(117,'ICU_VERSION'),(486,'IDENTIFIED'),(58,'IF'),(471,'IGNORE'),(548,'IGNORE_SERVER_IDS'),(365,'IMPORT'),(97,'IN'),(43,'INDEX'),(695,'INDEXES'),(479,'INFILE'),(398,'INITIAL_SIZE'),(229,'INLINE'),(508,'INNER'),(433,'INNODB'),(59,'INSERT'),(366,'INSERT_METHOD'),(680,'INSTALL'),(335,'INSTANCE'),(10,'INT1'),(13,'INT2'),(14,'INT3'),(16,'INT4'),(18,'INT8'),(17,'INTEGER'),(290,'INTERNAL_AUTO_INCREMENT'),(291,'INTERNAL_AVG_ROW_LENGTH'),(293,'INTERNAL_CHECKSUM'),(292,'INTERNAL_CHECK_TIME'),(294,'INTERNAL_DATA_FREE'),(295,'INTERNAL_DATA_LENGTH'),(296,'INTERNAL_DD_CHAR_LENGTH'),(297,'INTERNAL_GET_COMMENT_OR_ERROR'),(298,'INTERNAL_GET_ENABLED_ROLE_JSON'),(299,'INTERNAL_GET_HOSTNAME'),(300,'INTERNAL_GET_USERNAME'),(301,'INTERNAL_GET_VIEW_WARNING_OR_ERROR'),(302,'INTERNAL_INDEX_COLUMN_CARDINALITY'),(303,'INTERNAL_INDEX_LENGTH'),(304,'INTERNAL_IS_ENABLED_ROLE'),(305,'INTERNAL_IS_MANDATORY_ROLE'),(306,'INTERNAL_KEYS_DISABLED'),(307,'INTERNAL_MAX_DATA_LENGTH'),(308,'INTERNAL_TABLE_ROWS'),(309,'INTERNAL_UPDATE_TIME'),(88,'INTERVAL'),(472,'INTO'),(367,'INVISIBLE'),(585,'IO_THREAD'),(49,'IS'),(532,'ISOLATION'),(634,'ISSUER'),(314,'IS_UUID'),(310,'IS_VISIBLE_DD_OBJECT'),(596,'ITERATE'),(494,'JOIN'),(106,'JSON'),(219,'JSON_ARRAY'),(264,'JSON_ARRAYAGG'),(236,'JSON_ARRAY_APPEND'),(237,'JSON_ARRAY_INSERT'),(222,'JSON_CONTAINS'),(223,'JSON_CONTAINS_PATH'),(246,'JSON_DEPTH'),(224,'JSON_EXTRACT'),(238,'JSON_INSERT'),(231,'JSON_KEYS'),(247,'JSON_LENGTH'),(239,'JSON_MERGE'),(240,'JSON_MERGE_PATCH'),(241,'JSON_MERGE_PRESERVE'),(220,'JSON_OBJECT'),(265,'JSON_OBJECTAGG'),(232,'JSON_OVERLAPS'),(253,'JSON_PRETTY'),(221,'JSON_QUOTE'),(242,'JSON_REMOVE'),(243,'JSON_REPLACE'),(251,'JSON_SCHEMA_VALID'),(252,'JSON_SCHEMA_VALIDATION_REPORT'),(233,'JSON_SEARCH'),(244,'JSON_SET'),(254,'JSON_STORAGE_FREE'),(255,'JSON_STORAGE_SIZE'),(250,'JSON_TABLE'),(248,'JSON_TYPE'),(245,'JSON_UNQUOTE'),(249,'JSON_VALID'),(44,'KEY'),(368,'KEYS'),(369,'KEY_BLOCK_SIZE'),(721,'KILL'),(271,'LAG'),(463,'LAST'),(272,'LAST_VALUE'),(273,'LEAD'),(64,'LEADING'),(597,'LEAVE'),(722,'LEAVES'),(509,'LEFT'),(533,'LEVEL'),(60,'LIKE'),(456,'LIMIT'),(480,'LINES'),(151,'LINESTRING'),(481,'LOAD'),(482,'LOCAL'),(370,'LOCK'),(337,'LOGFILE'),(542,'LOGS'),(38,'LONG'),(39,'LONGBINARY'),(598,'LOOP'),(457,'LOW_PRIORITY'),(543,'MASTER'),(549,'MASTER_AUTO_POSITION'),(550,'MASTER_BIND'),(551,'MASTER_COMPRESSION_ALGORITHMS'),(552,'MASTER_CONNECT_RETRY'),(553,'MASTER_HEARTBEAT_PERIOD'),(554,'MASTER_HOST'),(555,'MASTER_LOG_FILE'),(556,'MASTER_LOG_POS'),(557,'MASTER_PASSWORD'),(558,'MASTER_PORT'),(559,'MASTER_RETRY_COUNT'),(560,'MASTER_SSL'),(561,'MASTER_SSL_CA'),(562,'MASTER_SSL_CERT'),(563,'MASTER_SSL_CIPHER'),(564,'MASTER_SSL_CRL'),(565,'MASTER_SSL_CRLPATH'),(566,'MASTER_SSL_KEY'),(567,'MASTER_SSL_VERIFY_SERVER_CERT'),(568,'MASTER_TLS_VERSION'),(569,'MASTER_USER'),(570,'MASTER_ZSTD_COMPRESSION_LEVEL'),(98,'MATCH'),(635,'MAX_CONNECTIONS_PER_HOUR'),(636,'MAX_QUERIES_PER_HOUR'),(371,'MAX_ROWS'),(450,'MAX_SIZE'),(637,'MAX_UPDATES_PER_HOUR'),(638,'MAX_USER_CONNECTIONS'),(202,'MBRCONTAINS'),(203,'MBRDISJOINT'),(204,'MBRINTERSECTS'),(205,'MBROVERLAPS'),(206,'MBRTOUCHES'),(207,'MBRWITHIN'),(672,'MEDIUM'),(234,'MEMBER'),(495,'MEMORY'),(434,'MERGE'),(617,'MESSAGE_TEXT'),(15,'MIDDLEINT'),(89,'MINUTE'),(90,'MINUTE_SECOND'),(372,'MIN_ROWS'),(74,'MOD'),(99,'MODE'),(373,'MODIFY'),(91,'MONTH'),(435,'MRG_MYISAM'),(152,'MULTILINESTRING'),(153,'MULTIPOINT'),(154,'MULTIPOLYGON'),(696,'MUTEX'),(436,'MYISAM'),(618,'MYSQL_ERRNO'),(417,'NAME'),(688,'NAMES'),(31,'NATIONAL'),(510,'NATURAL'),(32,'NCHAR'),(437,'NDB'),(438,'NDBCLUSTER'),(639,'NEVER'),(464,'NEXT'),(439,'NO'),(451,'NODEGROUP'),(640,'NONE'),(50,'NOT'),(670,'NO_WRITE_TO_BINLOG'),(274,'NTH_VALUE'),(275,'NTILE'),(51,'NULL'),(619,'NUMBER'),(21,'NUMERIC'),(35,'NVARCHAR'),(235,'OF'),(496,'OFFSET'),(641,'OLD'),(329,'ON'),(518,'ONLY'),(465,'OPEN'),(374,'OPTIMIZE'),(717,'OPTIMIZER_COSTS'),(657,'OPTION'),(642,'OPTIONAL'),(483,'OPTIONALLY'),(339,'OPTIONS'),(52,'OR'),(262,'ORDER'),(418,'ORGANIZATION'),(511,'OUTER'),(497,'OUTFILE'),(410,'OWNER'),(375,'PACK_KEYS'),(376,'PARSER'),(440,'PARTIAL'),(377,'PARTITION'),(378,'PARTITIONING'),(379,'PASSWORD'),(643,'PASSWORD_LOCK_TIME'),(230,'PATH)'),(276,'PERCENT_RANK'),(684,'PERSIST'),(685,'PERSIST_ONLY'),(681,'PLUGIN'),(708,'PLUGINS'),(586,'PLUGIN_DIR'),(155,'POINT'),(156,'POLYGON'),(411,'PORT'),(77,'POW'),(78,'POWER'),(25,'PRECISION'),(538,'PREPARE'),(330,'PRESERVE'),(466,'PREV'),(380,'PRIMARY'),(658,'PRIVILEGES'),(571,'PRIVILEGE_CHECKS_USER'),(338,'PROCEDURE'),(659,'PROCESS'),(697,'PROCESSLIST'),(709,'PROFILE'),(710,'PROFILES'),(664,'PROXY'),(281,'PS_CURRENT_THREAD_ID'),(282,'PS_THREAD_ID'),(544,'PURGE'),(100,'QUERY'),(458,'QUICK'),(644,'RANDOM'),(110,'RANDOM_BYTES'),(277,'RANK'),(467,'READ'),(26,'REAL'),(381,'REBUILD'),(539,'RECOVER'),(441,'REDUNDANT'),(419,'REFERENCE'),(442,'REFERENCES'),(68,'REGEXP_INSTR'),(69,'REGEXP_LIKE'),(70,'REGEXP_REPLACE'),(71,'REGEXP_SUBSTR'),(718,'RELAY'),(711,'RELAYLOG'),(572,'RELAY_LOG_FILE'),(573,'RELAY_LOG_POS'),(519,'RELEASE'),(660,'RELOAD'),(382,'REMOVE'),(331,'RENAME'),(383,'REORGANIZE'),(384,'REPAIR'),(599,'REPEAT'),(534,'REPEATABLE'),(420,'REPLACE'),(575,'REPLICATE_DO_DB'),(576,'REPLICATE_DO_TABLE'),(577,'REPLICATE_IGNORE_DB'),(578,'REPLICATE_IGNORE_TABLE'),(579,'REPLICATE_REWRITE_DB'),(580,'REPLICATE_WILD_DO_TABLE'),(581,'REPLICATE_WILD_IGNORE_TABLE'),(582,'REPLICATION'),(645,'REQUIRE'),(545,'RESET'),(625,'RESIGNAL'),(667,'RESOURCE'),(723,'RESTART'),(445,'RESTRICT'),(646,'RETAIN'),(601,'RETURN'),(620,'RETURNED_SQLSTATE'),(676,'RETURNS'),(647,'REUSE'),(665,'REVOKE'),(512,'RIGHT'),(67,'RLIKE'),(648,'ROLE'),(118,'ROLES_GRAPHML'),(520,'ROLLBACK'),(487,'ROWS'),(621,'ROW_COUNT'),(385,'ROW_FORMAT'),(278,'ROW_NUMBER'),(526,'SAVEPOINT'),(332,'SCHEDULE'),(319,'SCHEMA'),(698,'SCHEMAS'),(622,'SCHEMA_NAME'),(92,'SECOND'),(473,'SELECT'),(263,'SEPARATOR'),(3,'SERIAL'),(535,'SERIALIZABLE'),(340,'SERVER'),(536,'SESSION'),(320,'SET'),(111,'SHA'),(112,'SHA1'),(113,'SHA2'),(498,'SHARE'),(699,'SHOW'),(661,'SHUTDOWN'),(627,'SIGNAL'),(107,'SIGNED'),(333,'SLAVE'),(719,'SLOW'),(521,'SNAPSHOT'),(412,'SOCKET'),(677,'SONAME'),(61,'SOUNDS'),(386,'SPATIAL'),(626,'SQLSTATE'),(587,'SQL_AFTER_GTIDS'),(588,'SQL_AFTER_MTS_GAPS'),(589,'SQL_BEFORE_GTIDS'),(499,'SQL_BIG_RESULT'),(500,'SQL_BUFFER_RESULT'),(501,'SQL_CALC_FOUND_ROWS'),(546,'SQL_LOG_BIN'),(502,'SQL_NO_CACHE'),(583,'SQL_SLAVE_SKIP_COUNTER'),(503,'SQL_SMALL_RESULT'),(590,'SQL_THREAD'),(649,'SSL'),(522,'START'),(484,'STARTING'),(407,'STARTS'),(114,'STATEMENT_DIGEST'),(115,'STATEMENT_DIGEST_TEXT'),(387,'STATS_AUTO_RECALC'),(388,'STATS_PERSISTENT'),(389,'STATS_SAMPLE_PAGES'),(700,'STATUS'),(266,'STD'),(267,'STDDEV'),(591,'STOP'),(706,'STORAGE'),(443,'STORED'),(504,'STRAIGHT_JOIN'),(678,'STRING'),(177,'ST_AREA'),(157,'ST_ASBINARY'),(212,'ST_ASGEOJSON'),(159,'ST_ASTEXT'),(158,'ST_ASWKB'),(160,'ST_ASWKT'),(185,'ST_BUFFER'),(186,'ST_BUFFER_STRATEGY'),(178,'ST_CENTROID'),(193,'ST_CONTAINS'),(187,'ST_CONVEXHULL'),(194,'ST_CROSSES'),(188,'ST_DIFFERENCE'),(162,'ST_DIMENSION'),(195,'ST_DISJOINT'),(196,'ST_DISTANCE'),(214,'ST_DISTANCE_SPHERE'),(172,'ST_ENDPOINT'),(163,'ST_ENVELOPE'),(197,'ST_EQUALS'),(179,'ST_EXTERIORRING'),(208,'ST_GEOHASH'),(119,'ST_GEOMCOLLFROMTEXT'),(134,'ST_GEOMCOLLFROMWKB'),(120,'ST_GEOMETRYCOLLECTIONFROMTEXT'),(135,'ST_GEOMETRYCOLLECTIONFROMWKB'),(121,'ST_GEOMETRYFROMTEXT'),(136,'ST_GEOMETRYFROMWKB'),(183,'ST_GEOMETRYN'),(164,'ST_GEOMETRYTYPE'),(213,'ST_GEOMFROMGEOJSON'),(122,'ST_GEOMFROMTEXT'),(137,'ST_GEOMFROMWKB'),(180,'ST_INTERIORRINGN'),(189,'ST_INTERSECTION'),(198,'ST_INTERSECTS'),(173,'ST_ISCLOSED'),(165,'ST_ISEMPTY'),(166,'ST_ISSIMPLE'),(215,'ST_ISVALID'),(209,'ST_LATFROMGEOHASH'),(168,'ST_LATITUDE'),(123,'ST_LINEFROMTEXT'),(138,'ST_LINEFROMWKB'),(124,'ST_LINESTRINGFROMTEXT'),(139,'ST_LINESTRINGFROMWKB'),(210,'ST_LONGFROMGEOHASH'),(169,'ST_LONGITUDE'),(216,'ST_MAKEENVELOPE'),(125,'ST_MLINEFROMTEXT'),(140,'ST_MLINEFROMWKB'),(127,'ST_MPOINTFROMTEXT'),(142,'ST_MPOINTFROMWKB'),(129,'ST_MPOLYFROMTEXT'),(144,'ST_MPOLYFROMWKB'),(126,'ST_MULTILINESTRINGFROMTEXT'),(141,'ST_MULTILINESTRINGFROMWKB'),(128,'ST_MULTIPOINTFROMTEXT'),(143,'ST_MULTIPOINTFROMWKB'),(130,'ST_MULTIPOLYGONFROMTEXT'),(145,'ST_MULTIPOLYGONFROMWKB'),(184,'ST_NUMGEOMETRIES'),(181,'ST_NUMINTERIORRING'),(182,'ST_NUMINTERIORRINGS'),(174,'ST_NUMPOINTS'),(199,'ST_OVERLAPS'),(211,'ST_POINTFROMGEOHASH'),(131,'ST_POINTFROMTEXT'),(146,'ST_POINTFROMWKB'),(175,'ST_POINTN'),(132,'ST_POLYFROMTEXT'),(147,'ST_POLYFROMWKB'),(133,'ST_POLYGONFROMTEXT'),(148,'ST_POLYGONFROMWKB'),(217,'ST_SIMPLIFY'),(167,'ST_SRID'),(176,'ST_STARTPOINT'),(161,'ST_SWAPXY'),(190,'ST_SYMDIFFERENCE'),(200,'ST_TOUCHES'),(191,'ST_TRANSFORM'),(192,'ST_UNION'),(218,'ST_VALIDATE'),(201,'ST_WITHIN'),(170,'ST_X'),(171,'ST_Y'),(623,'SUBCLASS_ORIGIN'),(650,'SUBJECT'),(662,'SUPER'),(421,'SYSTEM'),(45,'TABLE'),(529,'TABLES'),(390,'TABLESPACE'),(624,'TABLE_NAME'),(454,'TEMPORARY'),(485,'TERMINATED'),(56,'THEN'),(668,'THREAD_PRIORITY'),(29,'TIME'),(28,'TIMESTAMP'),(399,'TO'),(727,'TRADITIONAL'),(65,'TRAILING'),(523,'TRANSACTION'),(728,'TREE'),(453,'TRIGGER'),(701,'TRIGGERS'),(7,'TRUE'),(391,'TRUNCATE'),(392,'TYPE'),(651,'UNBOUNDED'),(537,'UNCOMMITTED'),(400,'UNDO'),(682,'UNINSTALL'),(393,'UNION'),(394,'UNIQUE'),(528,'UNLOCK'),(11,'UNSIGNED'),(600,'UNTIL'),(446,'UPDATE'),(395,'UPGRADE'),(663,'USAGE'),(452,'USE'),(413,'USER'),(720,'USER_RESOURCES'),(674,'USE_FRM'),(459,'USING'),(315,'UUID_TO_BIN'),(4,'VALUE'),(474,'VALUES'),(36,'VARCHARACTER'),(686,'VARIABLE'),(702,'VARIABLES'),(37,'VARYING'),(669,'VCPU'),(402,'VIEW'),(444,'VIRTUAL'),(396,'VISIBLE'),(401,'WAIT'),(703,'WARNINGS'),(57,'WHEN'),(460,'WHERE'),(602,'WHILE'),(101,'WITH'),(524,'WORK'),(414,'WRAPPER'),(525,'WRITE'),(652,'X509'),(540,'XA'),(93,'YEAR'),(94,'YEAR_MONTH'),(12,'ZEROFILL');
/*!40000 ALTER TABLE `help_keyword` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_relation`
--

DROP TABLE IF EXISTS `help_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `help_relation` (
  `help_topic_id` int unsigned NOT NULL,
  `help_keyword_id` int unsigned NOT NULL,
  PRIMARY KEY (`help_keyword_id`,`help_topic_id`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='keyword-topic relation';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_relation`
--

LOCK TABLES `help_relation` WRITE;
/*!40000 ALTER TABLE `help_relation` DISABLE KEYS */;
INSERT INTO `help_relation` VALUES (0,0),(1,1),(2,2),(499,2),(500,2),(507,2),(510,2),(511,2),(519,2),(520,2),(543,2),(548,2),(581,2),(599,2),(601,2),(607,2),(609,2),(2,3),(519,3),(2,4),(543,4),(548,4),(597,4),(598,4),(3,5),(687,5),(4,6),(5,6),(4,7),(5,7),(7,8),(8,8),(7,9),(231,9),(7,10),(7,11),(11,11),(13,11),(14,11),(16,11),(17,11),(234,11),(7,12),(11,12),(13,12),(14,12),(16,12),(17,12),(9,13),(10,14),(10,15),(11,16),(11,17),(234,17),(619,17),(13,18),(14,19),(14,20),(519,20),(14,21),(15,22),(234,22),(619,22),(16,23),(17,24),(17,25),(17,26),(619,26),(19,27),(179,27),(181,27),(234,27),(21,28),(215,28),(22,29),(213,29),(234,29),(24,30),(26,30),(499,30),(500,30),(507,30),(510,30),(511,30),(519,30),(546,30),(547,30),(549,30),(627,30),(628,30),(630,30),(634,30),(24,31),(26,31),(24,32),(25,33),(25,34),(234,34),(26,35),(26,36),(26,37),(35,38),(35,39),(44,40),(507,40),(508,40),(521,40),(44,41),(499,41),(500,41),(501,41),(502,41),(503,41),(504,41),(505,41),(506,41),(507,41),(508,41),(509,41),(599,41),(604,41),(610,41),(44,42),(510,42),(511,42),(512,42),(513,42),(514,42),(515,42),(516,42),(517,42),(518,42),(519,42),(521,42),(522,42),(523,42),(600,42),(601,42),(611,42),(619,42),(630,42),(638,42),(639,42),(640,42),(641,42),(642,42),(643,42),(645,42),(44,43),(507,43),(513,43),(519,43),(527,43),(551,43),(630,43),(656,43),(676,43),(679,43),(44,44),(507,44),(519,44),(520,44),(543,44),(44,45),(507,45),(519,45),(532,45),(536,45),(537,45),(542,45),(614,45),(615,45),(616,45),(617,45),(618,45),(630,45),(643,45),(670,45),(47,46),(52,47),(66,47),(52,48),(59,49),(60,49),(61,49),(62,49),(60,50),(62,50),(65,50),(510,50),(511,50),(512,50),(518,50),(600,50),(601,50),(61,51),(62,51),(520,51),(67,52),(518,52),(71,53),(582,53),(71,54),(582,54),(71,55),(564,55),(579,55),(582,55),(583,55),(586,55),(587,55),(589,55),(71,56),(582,56),(583,56),(71,57),(582,57),(72,58),(510,58),(511,58),(512,58),(518,58),(524,58),(525,58),(526,58),(530,58),(531,58),(532,58),(535,58),(583,58),(599,58),(600,58),(601,58),(602,58),(603,58),(681,58),(90,59),(543,59),(544,59),(545,59),(114,60),(630,60),(636,60),(637,60),(114,61),(120,62),(120,63),(539,63),(542,63),(549,63),(630,63),(633,63),(636,63),(637,63),(656,63),(666,63),(120,64),(120,65),(125,66),(129,67),(130,68),(131,69),(132,70),(133,71),(139,72),(139,73),(140,74),(159,74),(146,75),(147,76),(161,77),(162,78),(181,79),(181,80),(181,81),(599,81),(601,81),(181,82),(181,83),(181,84),(181,85),(181,86),(181,87),(181,88),(512,88),(599,88),(601,88),(181,89),(181,90),(181,91),(181,92),(181,93),(181,94),(231,95),(231,96),(231,97),(549,97),(633,97),(636,97),(637,97),(656,97),(666,97),(231,98),(231,99),(549,99),(231,100),(678,100),(231,101),(507,101),(513,101),(519,101),(599,101),(601,101),(604,101),(677,101),(233,102),(233,103),(234,103),(234,104),(565,104),(566,104),(631,104),(632,104),(677,104),(234,105),(234,106),(684,106),(685,106),(686,106),(234,107),(244,108),(245,109),(254,110),(255,111),(255,112),(256,113),(257,114),(258,115),(272,116),(276,117),(278,118),(285,119),(285,120),(286,121),(286,122),(287,123),(287,124),(288,125),(288,126),(289,127),(289,128),(290,129),(290,130),(291,131),(292,132),(292,133),(293,134),(293,135),(294,136),(294,137),(295,138),(295,139),(296,140),(296,141),(297,142),(297,143),(298,144),(298,145),(299,146),(300,147),(300,148),(301,149),(302,150),(303,151),(304,152),(305,153),(306,154),(307,155),(308,156),(309,157),(309,158),(310,159),(310,160),(311,161),(312,162),(313,163),(314,164),(315,165),(316,166),(317,167),(318,168),(319,169),(320,170),(321,171),(322,172),(323,173),(325,174),(326,175),(327,176),(328,177),(329,178),(330,179),(331,180),(332,181),(332,182),(333,183),(334,184),(335,185),(336,186),(337,187),(338,188),(339,189),(340,190),(341,191),(342,192),(343,193),(344,194),(345,195),(346,196),(347,197),(348,198),(349,199),(350,200),(351,201),(352,202),(355,203),(357,204),(358,205),(359,206),(360,207),(361,208),(362,209),(363,210),(364,211),(365,212),(366,213),(367,214),(368,215),(369,216),(370,217),(371,218),(372,219),(373,220),(374,221),(375,222),(376,223),(377,224),(378,225),(379,225),(378,226),(378,227),(379,228),(379,229),(379,230),(380,231),(381,232),(382,233),(383,234),(383,235),(384,236),(385,237),(386,238),(387,239),(388,240),(389,241),(390,242),(391,243),(392,244),(393,245),(394,246),(395,247),(396,248),(397,249),(398,250),(399,251),(400,252),(401,253),(402,254),(403,255),(415,256),(417,257),(422,257),(423,257),(426,257),(427,257),(432,257),(549,257),(552,257),(422,258),(651,258),(674,258),(423,259),(549,259),(423,260),(507,260),(519,260),(539,260),(546,260),(547,260),(549,260),(553,260),(599,260),(601,260),(423,261),(549,261),(684,261),(685,261),(686,261),(423,262),(507,262),(539,262),(549,262),(553,262),(423,263),(424,264),(425,265),(428,266),(429,267),(436,268),(437,269),(438,270),(439,271),(440,272),(441,273),(442,274),(443,275),(444,276),(445,277),(446,278),(447,279),(448,280),(449,281),(450,282),(451,283),(452,284),(453,285),(454,286),(455,287),(456,288),(457,289),(458,290),(459,291),(460,292),(461,293),(462,294),(463,295),(464,296),(465,297),(466,298),(467,299),(468,300),(469,301),(470,302),(471,303),(472,304),(473,305),(474,306),(475,307),(476,308),(477,309),(478,310),(479,311),(480,312),(482,313),(491,314),(497,315),(499,316),(500,316),(507,316),(510,316),(511,316),(519,316),(499,317),(500,317),(510,317),(511,317),(517,317),(524,317),(525,317),(630,317),(638,317),(639,317),(499,318),(500,318),(507,318),(510,318),(511,318),(519,318),(499,319),(500,319),(510,319),(511,319),(524,319),(525,319),(630,319),(638,319),(639,319),(499,320),(500,320),(507,320),(510,320),(511,320),(519,320),(520,320),(543,320),(546,320),(547,320),(548,320),(549,320),(553,320),(554,320),(555,320),(556,320),(557,320),(568,320),(572,320),(597,320),(598,320),(607,320),(608,320),(609,320),(613,320),(626,320),(627,320),(628,320),(629,320),(630,320),(634,320),(501,321),(507,321),(512,321),(513,321),(519,321),(521,321),(501,322),(512,322),(501,323),(512,323),(501,324),(512,324),(501,325),(507,325),(512,325),(610,325),(611,325),(501,326),(512,326),(540,326),(589,326),(501,327),(507,327),(512,327),(610,327),(611,327),(501,328),(512,328),(526,328),(640,328),(501,329),(512,329),(520,329),(551,329),(501,330),(512,330),(501,331),(507,331),(508,331),(536,331),(605,331),(501,332),(512,332),(501,333),(512,333),(571,333),(573,333),(574,333),(667,333),(668,333),(680,333),(502,334),(515,334),(516,334),(528,334),(529,334),(619,334),(620,334),(630,334),(641,334),(653,334),(654,334),(503,335),(561,335),(504,336),(514,336),(521,336),(549,336),(610,336),(611,336),(612,336),(613,336),(504,337),(514,337),(521,337),(505,338),(515,338),(516,338),(528,338),(529,338),(630,338),(642,338),(661,338),(662,338),(506,339),(517,339),(506,340),(517,340),(530,340),(507,341),(507,342),(507,343),(614,343),(684,343),(685,343),(686,343),(507,344),(507,345),(519,345),(507,346),(569,346),(570,346),(507,347),(519,347),(615,347),(507,348),(519,348),(616,348),(507,349),(507,350),(507,351),(519,351),(546,351),(630,351),(636,351),(637,351),(507,352),(519,352),(507,353),(519,353),(678,353),(684,353),(685,353),(686,353),(507,354),(519,354),(507,355),(517,355),(519,355),(546,355),(507,356),(519,356),(507,357),(519,357),(507,358),(599,358),(507,359),(508,359),(524,359),(525,359),(526,359),(527,359),(528,359),(529,359),(530,359),(531,359),(532,359),(533,359),(534,359),(535,359),(577,359),(578,359),(602,359),(603,359),(612,359),(620,359),(507,360),(508,360),(519,360),(521,360),(533,360),(630,360),(649,360),(677,360),(507,361),(507,362),(519,362),(541,362),(507,363),(517,363),(519,363),(520,363),(507,364),(513,364),(519,364),(507,365),(542,365),(546,365),(507,366),(519,366),(507,367),(513,367),(519,367),(507,368),(630,368),(656,368),(507,369),(519,369),(507,370),(549,370),(561,370),(562,370),(599,370),(601,370),(677,370),(507,371),(519,371),(507,372),(519,372),(507,373),(507,374),(617,374),(507,375),(519,375),(507,376),(513,376),(519,376),(507,377),(519,377),(539,377),(543,377),(546,377),(548,377),(549,377),(551,377),(676,377),(679,377),(507,378),(507,379),(517,379),(573,379),(599,379),(601,379),(608,379),(507,380),(507,381),(507,382),(507,383),(507,384),(618,384),(507,385),(519,385),(507,386),(513,386),(518,386),(531,386),(507,387),(519,387),(507,388),(519,388),(507,389),(519,389),(507,390),(508,390),(521,390),(533,390),(507,391),(537,391),(507,392),(611,392),(507,393),(552,393),(507,394),(507,395),(615,395),(507,396),(513,396),(519,396),(508,397),(521,397),(508,398),(521,398),(508,399),(558,399),(559,399),(560,399),(565,399),(566,399),(569,399),(608,399),(508,400),(521,400),(533,400),(595,400),(508,401),(521,401),(509,402),(523,402),(535,402),(510,403),(511,403),(512,403),(518,403),(524,403),(525,403),(526,403),(530,403),(531,403),(532,403),(535,403),(599,403),(600,403),(601,403),(602,403),(603,403),(681,403),(512,404),(512,405),(512,406),(512,407),(513,408),(517,409),(517,410),(517,411),(517,412),(517,413),(573,413),(599,413),(601,413),(603,413),(605,413),(611,413),(645,413),(517,414),(518,415),(518,416),(518,417),(518,418),(518,419),(531,419),(518,420),(546,420),(547,420),(548,420),(599,420),(608,420),(518,421),(531,421),(611,421),(519,422),(520,422),(519,423),(519,424),(520,424),(532,424),(535,424),(519,425),(519,426),(519,427),(546,427),(519,428),(520,428),(539,428),(519,429),(519,430),(519,431),(630,431),(636,431),(637,431),(663,431),(671,431),(519,432),(519,433),(630,433),(519,434),(519,435),(519,436),(519,437),(519,438),(519,439),(520,439),(519,440),(519,441),(519,442),(520,442),(604,442),(519,443),(519,444),(520,445),(532,445),(535,445),(520,446),(543,446),(549,446),(553,446),(521,447),(521,448),(521,449),(521,450),(521,451),(521,452),(551,452),(688,452),(522,453),(534,453),(630,453),(532,454),(538,455),(539,456),(541,456),(549,456),(553,456),(633,456),(666,456),(539,457),(543,457),(546,457),(547,457),(548,457),(553,457),(562,457),(539,458),(615,458),(618,458),(539,459),(551,459),(576,459),(655,459),(539,460),(541,460),(553,460),(636,460),(637,460),(656,460),(541,461),(590,461),(541,462),(595,462),(541,463),(541,464),(541,465),(593,465),(630,465),(658,465),(541,466),(541,467),(554,467),(555,467),(556,467),(557,467),(562,467),(563,467),(564,467),(677,467),(543,468),(545,468),(548,468),(543,469),(543,470),(549,470),(543,471),(546,471),(547,471),(549,471),(551,471),(553,471),(679,471),(543,472),(548,472),(549,472),(679,472),(543,473),(544,473),(548,473),(549,473),(684,473),(685,473),(686,473),(543,474),(548,474),(546,475),(547,475),(546,476),(546,477),(546,478),(630,478),(636,478),(637,478),(546,479),(547,479),(546,480),(547,480),(546,481),(679,481),(546,482),(547,482),(562,482),(614,482),(617,482),(618,482),(677,482),(546,483),(546,484),(546,485),(547,486),(599,486),(601,486),(547,487),(549,488),(552,488),(571,488),(599,488),(604,488),(606,488),(607,488),(609,488),(676,488),(679,488),(549,489),(551,489),(562,489),(599,489),(601,489),(604,489),(549,490),(549,491),(549,492),(569,492),(571,492),(573,492),(574,492),(591,492),(594,492),(595,492),(608,492),(613,492),(630,492),(666,492),(668,492),(677,492),(684,492),(685,492),(686,492),(549,493),(549,494),(551,494),(549,495),(549,496),(549,497),(549,498),(549,499),(549,500),(549,501),(549,502),(549,503),(549,504),(551,504),(550,505),(551,506),(551,507),(610,507),(612,507),(551,508),(551,509),(551,510),(551,511),(551,512),(554,513),(555,513),(556,513),(557,513),(554,514),(555,514),(556,514),(557,514),(564,514),(579,514),(554,515),(555,515),(556,515),(557,515),(554,516),(555,516),(556,516),(557,516),(564,516),(554,517),(555,517),(556,517),(557,517),(564,517),(554,518),(555,518),(556,518),(557,518),(563,518),(564,518),(554,519),(555,519),(556,519),(557,519),(558,519),(559,519),(560,519),(564,519),(554,520),(555,520),(556,520),(557,520),(558,520),(559,520),(560,520),(564,520),(554,521),(555,521),(556,521),(557,521),(564,521),(554,522),(555,522),(556,522),(557,522),(564,522),(573,522),(554,523),(555,523),(556,523),(557,523),(563,523),(554,524),(555,524),(556,524),(557,524),(554,525),(555,525),(556,525),(557,525),(562,525),(563,525),(564,525),(558,526),(559,526),(560,526),(561,527),(561,528),(562,528),(599,528),(601,528),(562,529),(630,529),(658,529),(671,529),(677,529),(563,530),(563,531),(572,531),(626,531),(669,531),(673,531),(563,532),(563,533),(563,534),(563,535),(563,536),(626,536),(669,536),(673,536),(563,537),(564,538),(575,538),(577,538),(578,538),(564,539),(564,540),(565,541),(566,541),(565,542),(566,542),(630,542),(631,542),(632,542),(677,542),(565,543),(566,543),(567,543),(569,543),(631,543),(632,543),(657,543),(680,543),(565,544),(566,544),(567,545),(571,545),(680,545),(681,545),(568,546),(569,547),(571,547),(573,547),(574,547),(666,547),(668,547),(677,547),(569,548),(569,549),(569,550),(569,551),(569,552),(569,553),(569,554),(569,555),(569,556),(569,557),(569,558),(569,559),(569,560),(569,561),(569,562),(569,563),(569,564),(569,565),(569,566),(569,567),(569,568),(569,569),(569,570),(569,571),(569,572),(569,573),(570,574),(570,575),(570,576),(570,577),(570,578),(570,579),(570,580),(570,581),(570,582),(604,582),(572,583),(573,584),(573,585),(574,585),(573,586),(573,587),(573,588),(573,589),(573,590),(574,590),(574,591),(576,592),(604,592),(577,593),(578,593),(581,594),(591,594),(594,594),(595,594),(583,595),(584,596),(585,597),(586,598),(587,599),(587,600),(588,601),(589,602),(591,603),(592,604),(594,605),(595,606),(595,607),(596,608),(597,608),(598,608),(596,609),(597,609),(598,609),(596,610),(597,610),(598,610),(596,611),(597,611),(598,611),(596,612),(597,612),(598,612),(596,613),(597,613),(598,613),(596,614),(597,614),(598,614),(596,615),(596,616),(596,617),(597,617),(598,617),(596,618),(597,618),(598,618),(596,619),(596,620),(596,621),(596,622),(597,622),(598,622),(596,623),(597,623),(598,623),(596,624),(597,624),(598,624),(597,625),(597,626),(598,626),(598,627),(599,628),(601,628),(599,629),(601,629),(599,630),(601,630),(608,630),(599,631),(601,631),(599,632),(601,632),(599,633),(601,633),(599,634),(601,634),(599,635),(601,635),(599,636),(601,636),(599,637),(601,637),(599,638),(601,638),(599,639),(601,639),(599,640),(604,640),(607,640),(609,640),(599,641),(599,642),(601,642),(599,643),(601,643),(599,644),(601,644),(608,644),(599,645),(601,645),(599,646),(608,646),(599,647),(601,647),(599,648),(600,648),(601,648),(602,648),(604,648),(607,648),(609,648),(599,649),(601,649),(599,650),(601,650),(599,651),(601,651),(599,652),(601,652),(604,653),(604,654),(604,655),(604,656),(606,656),(604,657),(606,657),(604,658),(606,658),(660,658),(677,658),(604,659),(604,660),(604,661),(683,661),(604,662),(604,663),(606,664),(606,665),(609,666),(610,667),(611,667),(612,667),(613,667),(610,668),(611,668),(610,669),(611,669),(614,670),(617,670),(618,670),(677,670),(615,671),(615,672),(618,673),(636,673),(637,673),(656,673),(671,673),(618,674),(619,675),(619,676),(619,677),(619,678),(621,679),(623,679),(621,680),(622,680),(622,681),(624,681),(630,681),(623,682),(624,682),(625,683),(626,684),(681,684),(626,685),(626,686),(627,687),(628,687),(629,688),(630,689),(635,689),(630,690),(647,690),(648,690),(630,691),(650,691),(630,692),(651,692),(630,693),(655,693),(630,694),(667,694),(677,694),(630,695),(630,696),(649,696),(630,697),(663,697),(630,698),(647,698),(648,698),(630,699),(631,699),(632,699),(633,699),(634,699),(635,699),(636,699),(637,699),(638,699),(639,699),(640,699),(641,699),(642,699),(643,699),(645,699),(647,699),(648,699),(649,699),(650,699),(651,699),(652,699),(653,699),(654,699),(655,699),(656,699),(657,699),(658,699),(659,699),(660,699),(661,699),(662,699),(663,699),(664,699),(665,699),(666,699),(667,699),(668,699),(669,699),(670,699),(671,699),(672,699),(673,699),(674,699),(630,700),(649,700),(654,700),(657,700),(662,700),(668,700),(669,700),(670,700),(677,700),(630,701),(672,701),(630,702),(673,702),(630,703),(674,703),(633,704),(675,704),(633,705),(652,705),(666,705),(650,706),(653,707),(661,707),(659,708),(664,709),(665,710),(666,711),(676,712),(679,712),(677,713),(677,714),(677,715),(677,716),(677,717),(677,718),(677,719),(677,720),(678,721),(679,722),(682,723),(684,724),(685,724),(686,724),(684,725),(685,725),(686,725),(684,726),(685,726),(686,726),(684,727),(685,727),(686,727),(684,728),(685,728),(686,728);
/*!40000 ALTER TABLE `help_relation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_topic`
--

DROP TABLE IF EXISTS `help_topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `help_topic` (
  `help_topic_id` int unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `help_category_id` smallint unsigned NOT NULL,
  `description` text NOT NULL,
  `example` text NOT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_topic_id`),
  UNIQUE KEY `name` (`name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='help topics';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_topic`
--

LOCK TABLES `help_topic` WRITE;
/*!40000 ALTER TABLE `help_topic` DISABLE KEYS */;
INSERT INTO `help_topic` VALUES (0,'HELP_DATE',1,'This help information was generated from the MySQL 8.0 Reference Manual\non: 2019-11-23\n','',''),(1,'HELP_VERSION',1,'This help information was generated from the MySQL 8.0 Reference Manual\non: 2019-11-23 (revision: 64296)\n\nThis information applies to MySQL 8.0 through 8.0.20.\n','',''),(2,'AUTO_INCREMENT',2,'The AUTO_INCREMENT attribute can be used to generate a unique identity\nfor new rows:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html\n\n','CREATE TABLE animals (\n     id MEDIUMINT NOT NULL AUTO_INCREMENT,\n     name CHAR(30) NOT NULL,\n     PRIMARY KEY (id)\n);\n\nINSERT INTO animals (name) VALUES\n    (\'dog\'),(\'cat\'),(\'penguin\'),\n    (\'lax\'),(\'whale\'),(\'ostrich\');\n\nSELECT * FROM animals;\n','https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html'),(3,'HELP COMMAND',3,'Syntax:\nmysql> help search_string\n\nIf you provide an argument to the help command, mysql uses it as a\nsearch string to access server-side help from the contents of the MySQL\nReference Manual. The proper operation of this command requires that\nthe help tables in the mysql database be initialized with help topic\ninformation (see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-side-help-support.html).\n\nIf there is no match for the search string, the search fails:\n\nmysql> help me\n\nNothing found\nPlease try to run \'help contents\' for a list of all accessible topics\n\nUse help contents to see a list of the help categories:\n\nmysql> help contents\nYou asked for help about help category: \"Contents\"\nFor more information, type \'help <item>\', where <item> is one of the\nfollowing categories:\n   Account Management\n   Administration\n   Data Definition\n   Data Manipulation\n   Data Types\n   Functions\n   Functions and Modifiers for Use with GROUP BY\n   Geographic Features\n   Language Structure\n   Plugins\n   Storage Engines\n   Stored Routines\n   Table Maintenance\n   Transactions\n   Triggers\n\nIf the search string matches multiple items, mysql shows a list of\nmatching topics:\n\nmysql> help logs\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following topics:\n   SHOW\n   SHOW BINARY LOGS\n   SHOW ENGINE\n   SHOW LOGS\n\nUse a topic as the search string to see the help entry for that topic:\n\nmysql> help show binary logs\nName: \'SHOW BINARY LOGS\'\nDescription:\nSyntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [purge-binary-logs], that shows how\nto determine which logs can be purged.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000015 |    724935 | Yes       |\n| binlog.000016 |    733481 | Yes       |\n+---------------+-----------+-----------+\n\nThe search string can contain the wildcard characters % and _. These\nhave the same meaning as for pattern-matching operations performed with\nthe LIKE operator. For example, HELP rep% returns a list of topics that\nbegin with rep:\n\nmysql> HELP rep%\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following\ntopics:\n   REPAIR TABLE\n   REPEAT FUNCTION\n   REPEAT LOOP\n   REPLACE\n   REPLACE FUNCTION\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mysql-server-side-help.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/mysql-server-side-help.html'),(4,'TRUE',4,'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/boolean-literals.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/boolean-literals.html'),(5,'FALSE',4,'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/boolean-literals.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/boolean-literals.html'),(6,'BIT',2,'BIT[(M)]\n\nA bit-value type. M indicates the number of bits per value, from 1 to\n64. The default is 1 if M is omitted.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(7,'TINYINT',2,'TINYINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA very small integer. The signed range is -128 to 127. The unsigned\nrange is 0 to 255.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(8,'BOOLEAN',2,'BOOL, BOOLEAN\n\nThese types are synonyms for TINYINT(1). A value of zero is considered\nfalse. Nonzero values are considered true:\n\nmysql> SELECT IF(0, \'true\', \'false\');\n+------------------------+\n| IF(0, \'true\', \'false\') |\n+------------------------+\n| false                  |\n+------------------------+\n\nmysql> SELECT IF(1, \'true\', \'false\');\n+------------------------+\n| IF(1, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nmysql> SELECT IF(2, \'true\', \'false\');\n+------------------------+\n| IF(2, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nHowever, the values TRUE and FALSE are merely aliases for 1 and 0,\nrespectively, as shown here:\n\nmysql> SELECT IF(0 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(0 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| true                           |\n+--------------------------------+\n\nmysql> SELECT IF(1 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(1 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT IF(2 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(2 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| false                         |\n+-------------------------------+\n\nmysql> SELECT IF(2 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(2 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| false                          |\n+--------------------------------+\n\nThe last two statements display the results shown because 2 is equal to\nneither 1 nor 0.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(9,'SMALLINT',2,'SMALLINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA small integer. The signed range is -32768 to 32767. The unsigned\nrange is 0 to 65535.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(10,'MEDIUMINT',2,'MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA medium-sized integer. The signed range is -8388608 to 8388607. The\nunsigned range is 0 to 16777215.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(11,'INT',2,'INT[(M)] [UNSIGNED] [ZEROFILL]\n\nA normal-size integer. The signed range is -2147483648 to 2147483647.\nThe unsigned range is 0 to 4294967295.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(12,'INTEGER',2,'INTEGER[(M)] [UNSIGNED] [ZEROFILL]\n\nThis type is a synonym for INT.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(13,'BIGINT',2,'BIGINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA large integer. The signed range is -9223372036854775808 to\n9223372036854775807. The unsigned range is 0 to 18446744073709551615.\n\nSERIAL is an alias for BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(14,'DECIMAL',2,'DECIMAL[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nA packed \"exact\" fixed-point number. M is the total number of digits\n(the precision) and D is the number of digits after the decimal point\n(the scale). The decimal point and (for negative numbers) the - sign\nare not counted in M. If D is 0, values have no decimal point or\nfractional part. The maximum number of digits (M) for DECIMAL is 65.\nThe maximum number of supported decimals (D) is 30. If D is omitted,\nthe default is 0. If M is omitted, the default is 10.\n\nUNSIGNED, if specified, disallows negative values. As of MySQL 8.0.17,\nthe UNSIGNED attribute is deprecated for columns of type DECIMAL (and\nany synonyms) and support for it will be removed in a future MySQL\nversion. Consider using a simple CHECK constraint instead for such\ncolumns.\n\nAll basic calculations (+, -, *, /) with DECIMAL columns are done with\na precision of 65 digits.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(15,'DEC',2,'DEC[(M[,D])] [UNSIGNED] [ZEROFILL], NUMERIC[(M[,D])] [UNSIGNED]\n[ZEROFILL], FIXED[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nThese types are synonyms for DECIMAL. The FIXED synonym is available\nfor compatibility with other database systems.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(16,'FLOAT',2,'FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA small (single-precision) floating-point number. Permissible values\nare -3.402823466E+38 to -1.175494351E-38, 0, and 1.175494351E-38 to\n3.402823466E+38. These are the theoretical limits, based on the IEEE\nstandard. The actual range might be slightly smaller depending on your\nhardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits permitted by the hardware. A single-precision floating-point\nnumber is accurate to approximately 7 decimal places.\n\nFLOAT(M,D) is a nonstandard MySQL extension. As of MySQL 8.0.17, this\nsyntax is deprecated and support for it will be removed in a future\nMySQL version.\n\nUNSIGNED, if specified, disallows negative values. As of MySQL 8.0.17,\nthe UNSIGNED attribute is deprecated for columns of type FLOAT (and any\nsynonyms) and support for it will be removed in a future MySQL version.\nConsider using a simple CHECK constraint instead for such columns.\n\nUsing FLOAT might give you some unexpected problems because all\ncalculations in MySQL are done with double precision. See\nhttps://dev.mysql.com/doc/refman/8.0/en/no-matching-rows.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(17,'DOUBLE',2,'DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA normal-size (double-precision) floating-point number. Permissible\nvalues are -1.7976931348623157E+308 to -2.2250738585072014E-308, 0, and\n2.2250738585072014E-308 to 1.7976931348623157E+308. These are the\ntheoretical limits, based on the IEEE standard. The actual range might\nbe slightly smaller depending on your hardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits permitted by the hardware. A double-precision floating-point\nnumber is accurate to approximately 15 decimal places.\n\nDOUBLE(M,D) is a nonstandard MySQL extension. As of MySQL 8.0.17, this\nsyntax is deprecated and support for it will be removed in a future\nMySQL version.\n\nUNSIGNED, if specified, disallows negative values. As of MySQL 8.0.17,\nthe UNSIGNED attribute is deprecated for columns of type DOUBLE (and\nany synonyms) and support for it will be removed in a future MySQL\nversion. Consider using a simple CHECK constraint instead for such\ncolumns.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(18,'DOUBLE PRECISION',2,'DOUBLE PRECISION[(M,D)] [UNSIGNED] [ZEROFILL], REAL[(M,D)] [UNSIGNED]\n[ZEROFILL]\n\nThese types are synonyms for DOUBLE. Exception: If the REAL_AS_FLOAT\nSQL mode is enabled, REAL is a synonym for FLOAT rather than DOUBLE.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html'),(19,'DATE',2,'DATE\n\nA date. The supported range is \'1000-01-01\' to \'9999-12-31\'. MySQL\ndisplays DATE values in \'YYYY-MM-DD\' format, but permits assignment of\nvalues to DATE columns using either strings or numbers.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html'),(20,'DATETIME',2,'DATETIME[(fsp)]\n\nA date and time combination. The supported range is \'1000-01-01\n00:00:00.000000\' to \'9999-12-31 23:59:59.999999\'. MySQL displays\nDATETIME values in \'YYYY-MM-DD hh:mm:ss[.fraction]\' format, but permits\nassignment of values to DATETIME columns using either strings or\nnumbers.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nAutomatic initialization and updating to the current date and time for\nDATETIME columns can be specified using DEFAULT and ON UPDATE column\ndefinition clauses, as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html'),(21,'TIMESTAMP',2,'TIMESTAMP[(fsp)]\n\nA timestamp. The range is \'1970-01-01 00:00:01.000000\' UTC to\n\'2038-01-19 03:14:07.999999\' UTC. TIMESTAMP values are stored as the\nnumber of seconds since the epoch (\'1970-01-01 00:00:00\' UTC). A\nTIMESTAMP cannot represent the value \'1970-01-01 00:00:00\' because that\nis equivalent to 0 seconds from the epoch and the value 0 is reserved\nfor representing \'0000-00-00 00:00:00\', the \"zero\" TIMESTAMP value.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nThe way the server handles TIMESTAMP definitions depends on the value\nof the explicit_defaults_for_timestamp system variable (see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html).\n\nIf explicit_defaults_for_timestamp is enabled, there is no automatic\nassignment of the DEFAULT CURRENT_TIMESTAMP or ON UPDATE\nCURRENT_TIMESTAMP attributes to any TIMESTAMP column. They must be\nincluded explicitly in the column definition. Also, any TIMESTAMP not\nexplicitly declared as NOT NULL permits NULL values.\n\nIf explicit_defaults_for_timestamp is disabled, the server handles\nTIMESTAMP as follows:\n\nUnless specified otherwise, the first TIMESTAMP column in a table is\ndefined to be automatically set to the date and time of the most recent\nmodification if not explicitly assigned a value. This makes TIMESTAMP\nuseful for recording the timestamp of an INSERT or UPDATE operation.\nYou can also set any TIMESTAMP column to the current date and time by\nassigning it a NULL value, unless it has been defined with the NULL\nattribute to permit NULL values.\n\nAutomatic initialization and updating to the current date and time can\nbe specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE\nCURRENT_TIMESTAMP column definition clauses. By default, the first\nTIMESTAMP column has these properties, as previously noted. However,\nany TIMESTAMP column in a table can be defined to have these\nproperties.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html'),(22,'TIME',2,'TIME[(fsp)]\n\nA time. The range is \'-838:59:59.000000\' to \'838:59:59.000000\'. MySQL\ndisplays TIME values in \'hh:mm:ss[.fraction]\' format, but permits\nassignment of values to TIME columns using either strings or numbers.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html'),(23,'YEAR DATA TYPE',2,'YEAR[(4)]\n\nA year in 4-digit format. MySQL displays YEAR values in YYYY format,\nbut permits assignment of values to YEAR columns using either strings\nor numbers. Values display as 1901 to 2155, or 0000.\n\nFor additional information about YEAR display format and interpretation\nof input values, see https://dev.mysql.com/doc/refman/8.0/en/year.html.\n\n*Note*:\n\nAs of MySQL 8.0.19, the YEAR(4) data type with an explicit display\nwidth is deprecated and support for it will be removed in a future\nMySQL version. Instead, use YEAR without a display width, which has the\nsame meaning.\n\nMySQL 8.0 does not support the 2-digit YEAR(2) data type permitted in\nolder versions of MySQL. For instructions on converting to 4-digit\nYEAR, see 2-Digit YEAR(2) Limitations and Migrating to 4-Digit YEAR\n(https://dev.mysql.com/doc/refman/5.7/en/migrating-from-year2.html) in\nMySQL 5.7 Reference Manual (https://dev.mysql.com/doc/refman/5.7/en/).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html'),(24,'CHAR',2,'[NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA fixed-length string that is always right-padded with spaces to the\nspecified length when stored. M represents the column length in\ncharacters. The range of M is 0 to 255. If M is omitted, the length is\n1.\n\n*Note*:\n\nTrailing spaces are removed when CHAR values are retrieved unless the\nPAD_CHAR_TO_FULL_LENGTH SQL mode is enabled.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(25,'CHAR BYTE',2,'The CHAR BYTE data type is an alias for the BINARY data type. This is a\ncompatibility feature.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(26,'VARCHAR',2,'[NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA variable-length string. M represents the maximum column length in\ncharacters. The range of M is 0 to 65,535. The effective maximum length\nof a VARCHAR is subject to the maximum row size (65,535 bytes, which is\nshared among all columns) and the character set used. For example, utf8\ncharacters can require up to three bytes per character, so a VARCHAR\ncolumn that uses the utf8 character set can be declared to be a maximum\nof 21,844 characters. See\nhttps://dev.mysql.com/doc/refman/8.0/en/column-count-limit.html.\n\nMySQL stores VARCHAR values as a 1-byte or 2-byte length prefix plus\ndata. The length prefix indicates the number of bytes in the value. A\nVARCHAR column uses one length byte if values require no more than 255\nbytes, two length bytes if values may require more than 255 bytes.\n\n*Note*:\n\nMySQL follows the standard SQL specification, and does not remove\ntrailing spaces from VARCHAR values.\n\nVARCHAR is shorthand for CHARACTER VARYING. NATIONAL VARCHAR is the\nstandard SQL way to define that a VARCHAR column should use some\npredefined character set. MySQL uses utf8 as this predefined character\nset. https://dev.mysql.com/doc/refman/8.0/en/charset-national.html.\nNVARCHAR is shorthand for NATIONAL VARCHAR.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(27,'BINARY',2,'BINARY[(M)]\n\nThe BINARY type is similar to the CHAR type, but stores binary byte\nstrings rather than nonbinary character strings. An optional length M\nrepresents the column length in bytes. If omitted, M defaults to 1.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(28,'VARBINARY',2,'VARBINARY(M)\n\nThe VARBINARY type is similar to the VARCHAR type, but stores binary\nbyte strings rather than nonbinary character strings. M represents the\nmaximum column length in bytes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(29,'TINYBLOB',2,'TINYBLOB\n\nA BLOB column with a maximum length of 255 (28 − 1) bytes. Each\nTINYBLOB value is stored using a 1-byte length prefix that indicates\nthe number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(30,'TINYTEXT',2,'TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 255 (28 − 1) characters. The\neffective maximum length is less if the value contains multibyte\ncharacters. Each TINYTEXT value is stored using a 1-byte length prefix\nthat indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(31,'BLOB',2,'BLOB[(M)]\n\nA BLOB column with a maximum length of 65,535 (216 − 1) bytes. Each\nBLOB value is stored using a 2-byte length prefix that indicates the\nnumber of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest BLOB type large enough to hold\nvalues M bytes long.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(32,'TEXT',2,'TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 65,535 (216 − 1) characters.\nThe effective maximum length is less if the value contains multibyte\ncharacters. Each TEXT value is stored using a 2-byte length prefix that\nindicates the number of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest TEXT type large enough to hold\nvalues M characters long.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(33,'MEDIUMBLOB',2,'MEDIUMBLOB\n\nA BLOB column with a maximum length of 16,777,215 (224 − 1) bytes.\nEach MEDIUMBLOB value is stored using a 3-byte length prefix that\nindicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(34,'MEDIUMTEXT',2,'MEDIUMTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 16,777,215 (224 − 1)\ncharacters. The effective maximum length is less if the value contains\nmultibyte characters. Each MEDIUMTEXT value is stored using a 3-byte\nlength prefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(35,'LONGBLOB',2,'LONGBLOB\n\nA BLOB column with a maximum length of 4,294,967,295 or 4GB (232 − 1)\nbytes. The effective maximum length of LONGBLOB columns depends on the\nconfigured maximum packet size in the client/server protocol and\navailable memory. Each LONGBLOB value is stored using a 4-byte length\nprefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(36,'LONGTEXT',2,'LONGTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 4,294,967,295 or 4GB (232 − 1)\ncharacters. The effective maximum length is less if the value contains\nmultibyte characters. The effective maximum length of LONGTEXT columns\nalso depends on the configured maximum packet size in the client/server\nprotocol and available memory. Each LONGTEXT value is stored using a\n4-byte length prefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(37,'ENUM',2,'ENUM(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nAn enumeration. A string object that can have only one value, chosen\nfrom the list of values \'value1\', \'value2\', ..., NULL or the special \'\'\nerror value. ENUM values are represented internally as integers.\n\nAn ENUM column can have a maximum of 65,535 distinct elements.\n\nThe maximum supported length of an individual ENUM element is M <= 255\nand (M x w) <= 1020, where M is the element literal length and w is the\nnumber of bytes required for the maximum-length character in the\ncharacter set.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(38,'SET DATA TYPE',2,'SET(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA set. A string object that can have zero or more values, each of which\nmust be chosen from the list of values \'value1\', \'value2\', ... SET\nvalues are represented internally as integers.\n\nA SET column can have a maximum of 64 distinct members.\n\nThe maximum supported length of an individual SET element is M <= 255\nand (M x w) <= 1020, where M is the element literal length and w is the\nnumber of bytes required for the maximum-length character in the\ncharacter set.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html'),(39,'BLOB DATA TYPE',2,'A BLOB is a binary large object that can hold a variable amount of\ndata. The four BLOB types are TINYBLOB, BLOB, MEDIUMBLOB, and LONGBLOB.\nThese differ only in the maximum length of the values they can hold.\nThe four TEXT types are TINYTEXT, TEXT, MEDIUMTEXT, and LONGTEXT. These\ncorrespond to the four BLOB types and have the same maximum lengths and\nstorage requirements. See\nhttps://dev.mysql.com/doc/refman/8.0/en/storage-requirements.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/blob.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/blob.html'),(40,'GEOMETRY HIERARCHY',5,'Geometry is the base class. It is an abstract class. The instantiable\nsubclasses of Geometry are restricted to zero-, one-, and\ntwo-dimensional geometric objects that exist in two-dimensional\ncoordinate space. All instantiable geometry classes are defined so that\nvalid instances of a geometry class are topologically closed (that is,\nall defined geometries include their boundary).\n\nThe base Geometry class has subclasses for Point, Curve, Surface, and\nGeometryCollection:\n\no Point represents zero-dimensional objects.\n\no Curve represents one-dimensional objects, and has subclass\n  LineString, with sub-subclasses Line and LinearRing.\n\no Surface is designed for two-dimensional objects and has subclass\n  Polygon.\n\no GeometryCollection has specialized zero-, one-, and two-dimensional\n  collection classes named MultiPoint, MultiLineString, and\n  MultiPolygon for modeling geometries corresponding to collections of\n  Points, LineStrings, and Polygons, respectively. MultiCurve and\n  MultiSurface are introduced as abstract superclasses that generalize\n  the collection interfaces to handle Curves and Surfaces.\n\nGeometry, Curve, Surface, MultiCurve, and MultiSurface are defined as\nnoninstantiable classes. They define a common set of methods for their\nsubclasses and are included for extensibility.\n\nPoint, LineString, Polygon, GeometryCollection, MultiPoint,\nMultiLineString, and MultiPolygon are instantiable classes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-geometry-class-hierarchy.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-geometry-class-hierarchy.html'),(41,'MBR DEFINITION',6,'Its MBR (minimum bounding rectangle), or envelope. This is the bounding\ngeometry, formed by the minimum and maximum (X,Y) coordinates:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-class-geometry.html\n\n','((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n','https://dev.mysql.com/doc/refman/8.0/en/gis-class-geometry.html'),(42,'WKT DEFINITION',7,'The Well-Known Text (WKT) representation of geometry values is designed\nfor exchanging geometry data in ASCII form. The OpenGIS specification\nprovides a Backus-Naur grammar that specifies the formal production\nrules for writing WKT values (see\nhttps://dev.mysql.com/doc/refman/8.0/en/spatial-types.html).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-data-formats.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-data-formats.html'),(43,'SPATIAL COLUMNS',5,'MySQL provides a standard way of creating spatial columns for geometry\ntypes, for example, with CREATE TABLE or ALTER TABLE. Spatial columns\nare supported for MyISAM, InnoDB, NDB, and ARCHIVE tables. See also the\nnotes about spatial indexes under [HELP SPATIAL indexes].\n\nColumns with a spatial data type can have an SRID attribute, to\nexplicitly indicate the spatial reference system (SRS) for values\nstored in the column. For implications of an SRID-restricted column,\nsee https://dev.mysql.com/doc/refman/8.0/en/spatial-type-overview.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/creating-spatial-columns.html\n\n','CREATE TABLE geom (g GEOMETRY);\n','https://dev.mysql.com/doc/refman/8.0/en/creating-spatial-columns.html'),(44,'SPATIAL INDEXES',5,'For InnoDB and MyISAM tables, MySQL can create spatial indexes using\nsyntax similar to that for creating regular indexes, but using the\nSPATIAL keyword. Columns in spatial indexes must be declared NOT NULL.\nThe following examples demonstrate how to create spatial indexes:\n\no With CREATE TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL SRID 4326, SPATIAL INDEX(g));\n\no With ALTER TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL SRID 4326);\nALTER TABLE geom ADD SPATIAL INDEX(g);\n\no With CREATE INDEX:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL SRID 4326);\nCREATE SPATIAL INDEX g ON geom (g);\n\nSPATIAL INDEX creates an R-tree index. For storage engines that support\nnonspatial indexing of spatial columns, the engine creates a B-tree\nindex. A B-tree index on spatial values is useful for exact-value\nlookups, but not for range scans.\n\nThe optimizer can use spatial indexes defined on columns that are\nSRID-restricted. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/spatial-type-overview.html, and\nhttps://dev.mysql.com/doc/refman/8.0/en/spatial-index-optimization.html\n.\n\nFor more information on indexing spatial columns, see [HELP CREATE\nINDEX].\n\nTo drop spatial indexes, use ALTER TABLE or DROP INDEX:\n\no With ALTER TABLE:\n\nALTER TABLE geom DROP INDEX g;\n\no With DROP INDEX:\n\nDROP INDEX g ON geom;\n\nExample: Suppose that a table geom contains more than 32,000\ngeometries, which are stored in the column g of type GEOMETRY. The\ntable also has an AUTO_INCREMENT column fid for storing object ID\nvalues.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/creating-spatial-indexes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/creating-spatial-indexes.html'),(45,'=',9,'=\n\nEqual:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 1 = 0;\n        -> 0\nmysql> SELECT \'0\' = 0;\n        -> 1\nmysql> SELECT \'0.0\' = 0;\n        -> 1\nmysql> SELECT \'0.01\' = 0;\n        -> 0\nmysql> SELECT \'.01\' = 0.01;\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(46,'<=>',9,'Syntax:\n<=>\n\nNULL-safe equal. This operator performs an equality comparison like the\n= operator, but returns 1 rather than NULL if both operands are NULL,\nand 0 rather than NULL if one operand is NULL.\n\nThe <=> operator is equivalent to the standard SQL IS NOT DISTINCT FROM\noperator.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL;\n        -> 1, 1, 0\nmysql> SELECT 1 = 1, NULL = NULL, 1 = NULL;\n        -> 1, NULL, NULL\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(47,'!=',9,'Syntax:\n<>, !=\n\nNot equal:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT \'.01\' <> \'0.01\';\n        -> 1\nmysql> SELECT .01 <> \'0.01\';\n        -> 0\nmysql> SELECT \'zapp\' <> \'zappp\';\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(48,'<=',9,'Syntax:\n<=\n\nLess than or equal:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 0.1 <= 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(49,'<',9,'Syntax:\n<\n\nLess than:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 2 < 2;\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(50,'>=',9,'Syntax:\n>=\n\nGreater than or equal:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 2 >= 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(51,'>',9,'Syntax:\n>\n\nGreater than:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 2 > 2;\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(52,'BETWEEN AND',9,'Syntax:\nexpr BETWEEN min AND max\n\nIf expr is greater than or equal to min and expr is less than or equal\nto max, BETWEEN returns 1, otherwise it returns 0. This is equivalent\nto the expression (min <= expr AND expr <= max) if all the arguments\nare of the same type. Otherwise type conversion takes place according\nto the rules described in\nhttps://dev.mysql.com/doc/refman/8.0/en/type-conversion.html, but\napplied to all the three arguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 2 BETWEEN 1 AND 3, 2 BETWEEN 3 and 1;\n        -> 1, 0\nmysql> SELECT 1 BETWEEN 2 AND 3;\n        -> 0\nmysql> SELECT \'b\' BETWEEN \'a\' AND \'c\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'3\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'x-3\';\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(53,'NOT BETWEEN',9,'Syntax:\nexpr NOT BETWEEN min AND max\n\nThis is the same as NOT (expr BETWEEN min AND max).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(54,'COALESCE',9,'Syntax:\nCOALESCE(value,...)\n\nReturns the first non-NULL value in the list, or NULL if there are no\nnon-NULL values.\n\nThe return type of COALESCE() is the aggregated type of the argument\ntypes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT COALESCE(NULL,1);\n        -> 1\nmysql> SELECT COALESCE(NULL,NULL,NULL);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(55,'GREATEST',9,'Syntax:\nGREATEST(value1,value2,...)\n\nWith two or more arguments, returns the largest (maximum-valued)\nargument. The arguments are compared using the same rules as for\nLEAST().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT GREATEST(2,0);\n        -> 2\nmysql> SELECT GREATEST(34.0,3.0,5.0,767.0);\n        -> 767.0\nmysql> SELECT GREATEST(\'B\',\'A\',\'C\');\n        -> \'C\'\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(56,'IN',9,'Syntax:\nexpr IN (value,...)\n\nReturns 1 (true) if expr is equal to any of the values in the IN()\nlist, else returns 0 (false).\n\nType conversion takes place according to the rules described in\nhttps://dev.mysql.com/doc/refman/8.0/en/type-conversion.html, applied\nto all the arguments. If no type conversion is needed for the values in\nthe IN() list, they are all non-JSON constants of the same type, and\nexpr can be compared to each of them as a value of the same type\n(possibly after type conversion), an optimization takes place. The\nvalues the list are sorted and the search for expr is done using a\nbinary search, which makes the IN() operation very quick.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 2 IN (0,3,5,7);\n        -> 0\nmysql> SELECT \'wefwf\' IN (\'wee\',\'wefwf\',\'weg\');\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(57,'NOT IN',9,'Syntax:\nexpr NOT IN (value,...)\n\nThis is the same as NOT (expr IN (value,...)).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(58,'INTERVAL',9,'Syntax:\nINTERVAL(N,N1,N2,N3,...)\n\nReturns 0 if N < N1, 1 if N < N2 and so on or -1 if N is NULL. All\narguments are treated as integers. It is required that N1 < N2 < N3 <\n... < Nn for this function to work correctly. This is because a binary\nsearch is used (very fast).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT INTERVAL(23, 1, 15, 17, 30, 44, 200);\n        -> 3\nmysql> SELECT INTERVAL(10, 1, 10, 100, 1000);\n        -> 2\nmysql> SELECT INTERVAL(22, 23, 30, 44, 200);\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(59,'IS',9,'Syntax:\nIS boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN;\n        -> 1, 1, 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(60,'IS NOT',9,'Syntax:\nIS NOT boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN;\n        -> 1, 1, 0\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(61,'IS NULL',9,'Syntax:\nIS NULL\n\nTests whether a value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL;\n        -> 0, 0, 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(62,'IS NOT NULL',9,'Syntax:\nIS NOT NULL\n\nTests whether a value is not NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL;\n        -> 1, 1, 0\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(63,'ISNULL',9,'Syntax:\nISNULL(expr)\n\nIf expr is NULL, ISNULL() returns 1, otherwise it returns 0.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT ISNULL(1+1);\n        -> 0\nmysql> SELECT ISNULL(1/0);\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(64,'LEAST',9,'Syntax:\nLEAST(value1,value2,...)\n\nWith two or more arguments, returns the smallest (minimum-valued)\nargument. The arguments are compared using the following rules:\n\no If any argument is NULL, the result is NULL. No comparison is needed.\n\no If all arguments are integer-valued, they are compared as integers.\n\no If at least one argument is double precision, they are compared as\n  double-precision values. Otherwise, if at least one argument is a\n  DECIMAL value, they are compared as DECIMAL values.\n\no If the arguments comprise a mix of numbers and strings, they are\n  compared as strings.\n\no If any argument is a nonbinary (character) string, the arguments are\n  compared as nonbinary strings.\n\no In all other cases, the arguments are compared as binary strings.\n\nThe return type of LEAST() is the aggregated type of the comparison\nargument types.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n\n','mysql> SELECT LEAST(2,0);\n        -> 0\nmysql> SELECT LEAST(34.0,3.0,5.0,767.0);\n        -> 3.0\nmysql> SELECT LEAST(\'B\',\'A\',\'C\');\n        -> \'A\'\n','https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html'),(65,'!',10,'Syntax:\nNOT, !\n\nLogical NOT. Evaluates to 1 if the operand is 0, to 0 if the operand is\nnonzero, and NOT NULL returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html\n\n','mysql> SELECT NOT 10;\n        -> 0\nmysql> SELECT NOT 0;\n        -> 1\nmysql> SELECT NOT NULL;\n        -> NULL\nmysql> SELECT ! (1+1);\n        -> 0\nmysql> SELECT ! 1+1;\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html'),(66,'AND',10,'Syntax:\nAND, &&\n\nLogical AND. Evaluates to 1 if all operands are nonzero and not NULL,\nto 0 if one or more operands are 0, otherwise NULL is returned.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html\n\n','mysql> SELECT 1 AND 1;\n        -> 1\nmysql> SELECT 1 AND 0;\n        -> 0\nmysql> SELECT 1 AND NULL;\n        -> NULL\nmysql> SELECT 0 AND NULL;\n        -> 0\nmysql> SELECT NULL AND 0;\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html'),(67,'OR',10,'Syntax:\nOR, ||\n\nLogical OR. When both operands are non-NULL, the result is 1 if any\noperand is nonzero, and 0 otherwise. With a NULL operand, the result is\n1 if the other operand is nonzero, and NULL otherwise. If both operands\nare NULL, the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html\n\n','mysql> SELECT 1 OR 1;\n        -> 1\nmysql> SELECT 1 OR 0;\n        -> 1\nmysql> SELECT 0 OR 0;\n        -> 0\nmysql> SELECT 0 OR NULL;\n        -> NULL\nmysql> SELECT 1 OR NULL;\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html'),(68,'XOR',10,'Syntax:\nXOR\n\nLogical XOR. Returns NULL if either operand is NULL. For non-NULL\noperands, evaluates to 1 if an odd number of operands is nonzero,\notherwise 0 is returned.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html\n\n','mysql> SELECT 1 XOR 1;\n        -> 0\nmysql> SELECT 1 XOR 0;\n        -> 1\nmysql> SELECT 1 XOR NULL;\n        -> NULL\nmysql> SELECT 1 XOR 1 XOR 1;\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html'),(69,'ASSIGN-VALUE',10,'Syntax:\n:=\n\nAssignment operator. Causes the user variable on the left hand side of\nthe operator to take on the value to its right. The value on the right\nhand side may be a literal value, another variable storing a value, or\nany legal expression that yields a scalar value, including the result\nof a query (provided that this value is a scalar value). You can\nperform multiple assignments in the same SET statement. You can perform\nmultiple assignments in the same statement.\n\nUnlike =, the := operator is never interpreted as a comparison\noperator. This means you can use := in any valid SQL statement (not\njust in SET statements) to assign a value to a variable.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html\n\n','mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1\n\nmysql> SELECT @var1:=COUNT(*) FROM t1;\n        -> 4\nmysql> SELECT @var1;\n        -> 4\n','https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html'),(70,'ASSIGN-EQUAL',10,'Syntax:\n=\n\nThis operator is used to perform value assignments in two cases,\ndescribed in the next two paragraphs.\n\nWithin a SET statement, = is treated as an assignment operator that\ncauses the user variable on the left hand side of the operator to take\non the value to its right. (In other words, when used in a SET\nstatement, = is treated identically to :=.) The value on the right hand\nside may be a literal value, another variable storing a value, or any\nlegal expression that yields a scalar value, including the result of a\nquery (provided that this value is a scalar value). You can perform\nmultiple assignments in the same SET statement.\n\nIn the SET clause of an UPDATE statement, = also acts as an assignment\noperator; in this case, however, it causes the column named on the left\nhand side of the operator to assume the value given to the right,\nprovided any WHERE conditions that are part of the UPDATE are met. You\ncan make multiple assignments in the same SET clause of an UPDATE\nstatement.\n\nIn any other context, = is treated as a comparison operator.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html\n\n','mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1\n','https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html'),(71,'CASE OPERATOR',11,'Syntax:\nCASE value WHEN [compare_value] THEN result [WHEN [compare_value] THEN\nresult ...] [ELSE result] END\n\nCASE WHEN [condition] THEN result [WHEN [condition] THEN result ...]\n[ELSE result] END\n\nThe first CASE syntax returns the result for the first\nvalue=compare_value comparison that is true. The second syntax returns\nthe result for the first condition that is true. If no comparison or\ncondition is true, the result after ELSE is returned, or NULL if there\nis no ELSE part.\n\n*Note*:\n\nThe syntax of the CASE expr described here differs slightly from that\nof the SQL CASE statement described in [HELP CASE statement], for use\ninside stored programs. The CASE statement cannot have an ELSE NULL\nclause, and it is terminated with END CASE instead of END.\n\nThe return type of a CASE expression result is the aggregated type of\nall result values:\n\no If all types are numeric, the aggregated type is also numeric:\n\n  o If at least one argument is double precision, the result is double\n    precision.\n\n  o Otherwise, if at least one argument is DECIMAL, the result is\n    DECIMAL.\n\n  o Otherwise, the result is an integer type (with one exception):\n\n    o If all integer types are all signed or all unsigned, the result\n      is the same sign and the precision is the highest of all\n      specified integer types (that is, TINYINT, SMALLINT, MEDIUMINT,\n      INT, or BIGINT).\n\n    o If there is a combination of signed and unsigned integer types,\n      the result is signed and the precision may be higher. For\n      example, if the types are signed INT and unsigned INT, the result\n      is signed BIGINT.\n\n    o The exception is unsigned BIGINT combined with any signed integer\n      type. The result is DECIMAL with sufficient precision and scale\n      0.\n\no If all types are BIT, the result is BIT. Otherwise, BIT arguments are\n  treated similar to BIGINT.\n\no If all types are YEAR, the result is YEAR. Otherwise, YEAR arguments\n  are treated similar to INT.\n\no If all types are character string (CHAR or VARCHAR), the result is\n  VARCHAR with maximum length determined by the longest character\n  length of the operands.\n\no If all types are character or binary string, the result is VARBINARY.\n\no SET and ENUM are treated similar to VARCHAR; the result is VARCHAR.\n\no If all types are JSON, the result is JSON.\n\no If all types are temporal, the result is temporal:\n\n  o If all temporal types are DATE, TIME, or TIMESTAMP, the result is\n    DATE, TIME, or TIMESTAMP, respectively.\n\n  o Otherwise, for a mix of temporal types, the result is DATETIME.\n\no If all types are GEOMETRY, the result is GEOMETRY.\n\no If any type is BLOB, the result is BLOB.\n\no For all other type combinations, the result is VARCHAR.\n\no Literal NULL operands are ignored for type aggregation.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html\n\n','mysql> SELECT CASE 1 WHEN 1 THEN \'one\'\n    ->     WHEN 2 THEN \'two\' ELSE \'more\' END;\n        -> \'one\'\nmysql> SELECT CASE WHEN 1>0 THEN \'true\' ELSE \'false\' END;\n        -> \'true\'\nmysql> SELECT CASE BINARY \'B\'\n    ->     WHEN \'a\' THEN 1 WHEN \'b\' THEN 2 END;\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html'),(72,'IF FUNCTION',11,'Syntax:\nIF(expr1,expr2,expr3)\n\nIf expr1 is TRUE (expr1 <> 0 and expr1 <> NULL), IF() returns expr2.\nOtherwise, it returns expr3.\n\n*Note*:\n\nThere is also an IF statement, which differs from the IF() function\ndescribed here. See [HELP IF statement].\n\nIf only one of expr2 or expr3 is explicitly NULL, the result type of\nthe IF() function is the type of the non-NULL expression.\n\nThe default return type of IF() (which may matter when it is stored\ninto a temporary table) is calculated as follows:\n\no If expr2 or expr3 produce a string, the result is a string.\n\n  If expr2 and expr3 are both strings, the result is case-sensitive if\n  either string is case sensitive.\n\no If expr2 or expr3 produce a floating-point value, the result is a\n  floating-point value.\n\no If expr2 or expr3 produce an integer, the result is an integer.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html\n\n','mysql> SELECT IF(1>2,2,3);\n        -> 3\nmysql> SELECT IF(1<2,\'yes\',\'no\');\n        -> \'yes\'\nmysql> SELECT IF(STRCMP(\'test\',\'test1\'),\'no\',\'yes\');\n        -> \'no\'\n','https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html'),(73,'IFNULL',11,'Syntax:\nIFNULL(expr1,expr2)\n\nIf expr1 is not NULL, IFNULL() returns expr1; otherwise it returns\nexpr2.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html\n\n','mysql> SELECT IFNULL(1,0);\n        -> 1\nmysql> SELECT IFNULL(NULL,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,\'yes\');\n        -> \'yes\'\n','https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html'),(74,'NULLIF',11,'Syntax:\nNULLIF(expr1,expr2)\n\nReturns NULL if expr1 = expr2 is true, otherwise returns expr1. This is\nthe same as CASE WHEN expr1 = expr2 THEN NULL ELSE expr1 END.\n\nThe return value has the same type as the first argument.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html\n\n','mysql> SELECT NULLIF(1,1);\n        -> NULL\nmysql> SELECT NULLIF(1,2);\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html'),(75,'ASCII',12,'Syntax:\nASCII(str)\n\nReturns the numeric value of the leftmost character of the string str.\nReturns 0 if str is the empty string. Returns NULL if str is NULL.\nASCII() works for 8-bit characters.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT ASCII(\'2\');\n        -> 50\nmysql> SELECT ASCII(2);\n        -> 50\nmysql> SELECT ASCII(\'dx\');\n        -> 100\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(76,'BIN',12,'Syntax:\nBIN(N)\n\nReturns a string representation of the binary value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,2). Returns\nNULL if N is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT BIN(12);\n        -> \'1100\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(77,'BIT_LENGTH',12,'Syntax:\nBIT_LENGTH(str)\n\nReturns the length of the string str in bits.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT BIT_LENGTH(\'text\');\n        -> 32\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(78,'CHAR FUNCTION',12,'Syntax:\nCHAR(N,... [USING charset_name])\n\nCHAR() interprets each argument N as an integer and returns a string\nconsisting of the characters given by the code values of those\nintegers. NULL values are skipped.\n\nBy default, CHAR() returns a binary string. To produce a string in a\ngiven character set, use the optional USING clause:\n\nmysql> SELECT CHARSET(CHAR(X\'65\')), CHARSET(CHAR(X\'65\' USING utf8));\n+----------------------+---------------------------------+\n| CHARSET(CHAR(X\'65\')) | CHARSET(CHAR(X\'65\' USING utf8)) |\n+----------------------+---------------------------------+\n| binary               | utf8                            |\n+----------------------+---------------------------------+\n\nIf USING is given and the result string is illegal for the given\ncharacter set, a warning is issued. Also, if strict SQL mode is\nenabled, the result from CHAR() becomes NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT CHAR(77,121,83,81,\'76\');\n        -> \'MySQL\'\nmysql> SELECT CHAR(77,77.3,\'77.3\');\n        -> \'MMM\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(79,'CHAR_LENGTH',12,'Syntax:\nCHAR_LENGTH(str)\n\nReturns the length of the string str, measured in characters. A\nmultibyte character counts as a single character. This means that for a\nstring containing five 2-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(80,'CHARACTER_LENGTH',12,'Syntax:\nCHARACTER_LENGTH(str)\n\nCHARACTER_LENGTH() is a synonym for CHAR_LENGTH().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(81,'CONCAT',12,'Syntax:\nCONCAT(str1,str2,...)\n\nReturns the string that results from concatenating the arguments. May\nhave one or more arguments. If all arguments are nonbinary strings, the\nresult is a nonbinary string. If the arguments include any binary\nstrings, the result is a binary string. A numeric argument is converted\nto its equivalent nonbinary string form.\n\nCONCAT() returns NULL if any argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT CONCAT(\'My\', \'S\', \'QL\');\n        -> \'MySQL\'\nmysql> SELECT CONCAT(\'My\', NULL, \'QL\');\n        -> NULL\nmysql> SELECT CONCAT(14.3);\n        -> \'14.3\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(82,'CONCAT_WS',12,'Syntax:\nCONCAT_WS(separator,str1,str2,...)\n\nCONCAT_WS() stands for Concatenate With Separator and is a special form\nof CONCAT(). The first argument is the separator for the rest of the\narguments. The separator is added between the strings to be\nconcatenated. The separator can be a string, as can the rest of the\narguments. If the separator is NULL, the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT CONCAT_WS(\',\',\'First name\',\'Second name\',\'Last Name\');\n        -> \'First name,Second name,Last Name\'\nmysql> SELECT CONCAT_WS(\',\',\'First name\',NULL,\'Last Name\');\n        -> \'First name,Last Name\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(83,'ELT',12,'Syntax:\nELT(N,str1,str2,str3,...)\n\nELT() returns the Nth element of the list of strings: str1 if N = 1,\nstr2 if N = 2, and so on. Returns NULL if N is less than 1 or greater\nthan the number of arguments. ELT() is the complement of FIELD().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT ELT(1, \'Aa\', \'Bb\', \'Cc\', \'Dd\');\n        -> \'Aa\'\nmysql> SELECT ELT(4, \'Aa\', \'Bb\', \'Cc\', \'Dd\');\n        -> \'Dd\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(84,'EXPORT_SET',12,'Syntax:\nEXPORT_SET(bits,on,off[,separator[,number_of_bits]])\n\nReturns a string such that for every bit set in the value bits, you get\nan on string and for every bit not set in the value, you get an off\nstring. Bits in bits are examined from right to left (from low-order to\nhigh-order bits). Strings are added to the result from left to right,\nseparated by the separator string (the default being the comma\ncharacter ,). The number of bits examined is given by number_of_bits,\nwhich has a default of 64 if not specified. number_of_bits is silently\nclipped to 64 if larger than 64. It is treated as an unsigned integer,\nso a value of −1 is effectively the same as 64.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT EXPORT_SET(5,\'Y\',\'N\',\',\',4);\n        -> \'Y,N,Y,N\'\nmysql> SELECT EXPORT_SET(6,\'1\',\'0\',\',\',10);\n        -> \'0,1,1,0,0,0,0,0,0,0\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(85,'FIELD',12,'Syntax:\nFIELD(str,str1,str2,str3,...)\n\nReturns the index (position) of str in the str1, str2, str3, ... list.\nReturns 0 if str is not found.\n\nIf all arguments to FIELD() are strings, all arguments are compared as\nstrings. If all arguments are numbers, they are compared as numbers.\nOtherwise, the arguments are compared as double.\n\nIf str is NULL, the return value is 0 because NULL fails equality\ncomparison with any value. FIELD() is the complement of ELT().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT FIELD(\'Bb\', \'Aa\', \'Bb\', \'Cc\', \'Dd\', \'Ff\');\n        -> 2\nmysql> SELECT FIELD(\'Gg\', \'Aa\', \'Bb\', \'Cc\', \'Dd\', \'Ff\');\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(86,'FIND_IN_SET',12,'Syntax:\nFIND_IN_SET(str,strlist)\n\nReturns a value in the range of 1 to N if the string str is in the\nstring list strlist consisting of N substrings. A string list is a\nstring composed of substrings separated by , characters. If the first\nargument is a constant string and the second is a column of type SET,\nthe FIND_IN_SET() function is optimized to use bit arithmetic. Returns\n0 if str is not in strlist or if strlist is the empty string. Returns\nNULL if either argument is NULL. This function does not work properly\nif the first argument contains a comma (,) character.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT FIND_IN_SET(\'b\',\'a,b,c,d\');\n        -> 2\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(87,'FORMAT',12,'Syntax:\nFORMAT(X,D[,locale])\n\nFormats the number X to a format like \'#,###,###.##\', rounded to D\ndecimal places, and returns the result as a string. If D is 0, the\nresult has no decimal point or fractional part.\n\nThe optional third parameter enables a locale to be specified to be\nused for the result number\'s decimal point, thousands separator, and\ngrouping between separators. Permissible locale values are the same as\nthe legal values for the lc_time_names system variable (see\nhttps://dev.mysql.com/doc/refman/8.0/en/locale-support.html). If no\nlocale is specified, the default is \'en_US\'.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT FORMAT(12332.123456, 4);\n        -> \'12,332.1235\'\nmysql> SELECT FORMAT(12332.1,4);\n        -> \'12,332.1000\'\nmysql> SELECT FORMAT(12332.2,0);\n        -> \'12,332\'\nmysql> SELECT FORMAT(12332.2,2,\'de_DE\');\n        -> \'12.332,20\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(88,'FROM_BASE64',12,'Syntax:\nFROM_BASE64(str)\n\nTakes a string encoded with the base-64 encoded rules used by\nTO_BASE64() and returns the decoded result as a binary string. The\nresult is NULL if the argument is NULL or not a valid base-64 string.\nSee the description of TO_BASE64() for details about the encoding and\ndecoding rules.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT TO_BASE64(\'abc\'), FROM_BASE64(TO_BASE64(\'abc\'));\n        -> \'JWJj\', \'abc\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(89,'HEX',12,'Syntax:\nHEX(str), HEX(N)\n\nFor a string argument str, HEX() returns a hexadecimal string\nrepresentation of str where each byte of each character in str is\nconverted to two hexadecimal digits. (Multibyte characters therefore\nbecome more than two digits.) The inverse of this operation is\nperformed by the UNHEX() function.\n\nFor a numeric argument N, HEX() returns a hexadecimal string\nrepresentation of the value of N treated as a longlong (BIGINT) number.\nThis is equivalent to CONV(N,10,16). The inverse of this operation is\nperformed by CONV(HEX(N),16,10).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT X\'616263\', HEX(\'abc\'), UNHEX(HEX(\'abc\'));\n        -> \'abc\', 616263, \'abc\'\nmysql> SELECT HEX(255), CONV(HEX(255),16,10);\n        -> \'FF\', 255\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(90,'INSERT FUNCTION',12,'Syntax:\nINSERT(str,pos,len,newstr)\n\nReturns the string str, with the substring beginning at position pos\nand len characters long replaced by the string newstr. Returns the\noriginal string if pos is not within the length of the string. Replaces\nthe rest of the string from position pos if len is not within the\nlength of the rest of the string. Returns NULL if any argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT INSERT(\'Quadratic\', 3, 4, \'What\');\n        -> \'QuWhattic\'\nmysql> SELECT INSERT(\'Quadratic\', -1, 4, \'What\');\n        -> \'Quadratic\'\nmysql> SELECT INSERT(\'Quadratic\', 3, 100, \'What\');\n        -> \'QuWhat\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(91,'INSTR',12,'Syntax:\nINSTR(str,substr)\n\nReturns the position of the first occurrence of substring substr in\nstring str. This is the same as the two-argument form of LOCATE(),\nexcept that the order of the arguments is reversed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT INSTR(\'foobarbar\', \'bar\');\n        -> 4\nmysql> SELECT INSTR(\'xbar\', \'foobar\');\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(92,'LCASE',12,'Syntax:\nLCASE(str)\n\nLCASE() is a synonym for LOWER().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(93,'LEFT',12,'Syntax:\nLEFT(str,len)\n\nReturns the leftmost len characters from the string str, or NULL if any\nargument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT LEFT(\'foobarbar\', 5);\n        -> \'fooba\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(94,'LENGTH',12,'Syntax:\nLENGTH(str)\n\nReturns the length of the string str, measured in bytes. A multibyte\ncharacter counts as multiple bytes. This means that for a string\ncontaining five 2-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT LENGTH(\'text\');\n        -> 4\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(95,'LOAD_FILE',12,'Syntax:\nLOAD_FILE(file_name)\n\nReads the file and returns the file contents as a string. To use this\nfunction, the file must be located on the server host, you must specify\nthe full path name to the file, and you must have the FILE privilege.\nThe file must be readable by the server and its size less than\nmax_allowed_packet bytes. If the secure_file_priv system variable is\nset to a nonempty directory name, the file to be loaded must be located\nin that directory. (Prior to MySQL 8.0.17, the file must be readable by\nall, not just readable by the server.)\n\nIf the file does not exist or cannot be read because one of the\npreceding conditions is not satisfied, the function returns NULL.\n\nThe character_set_filesystem system variable controls interpretation of\nfile names that are given as literal strings.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> UPDATE t\n            SET blob_col=LOAD_FILE(\'/tmp/picture\')\n            WHERE id=1;\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(96,'LOCATE',12,'Syntax:\nLOCATE(substr,str), LOCATE(substr,str,pos)\n\nThe first syntax returns the position of the first occurrence of\nsubstring substr in string str. The second syntax returns the position\nof the first occurrence of substring substr in string str, starting at\nposition pos. Returns 0 if substr is not in str. Returns NULL if any\nargument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT LOCATE(\'bar\', \'foobarbar\');\n        -> 4\nmysql> SELECT LOCATE(\'xbar\', \'foobar\');\n        -> 0\nmysql> SELECT LOCATE(\'bar\', \'foobarbar\', 5);\n        -> 7\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(97,'LOWER',12,'Syntax:\nLOWER(str)\n\nReturns the string str with all characters changed to lowercase\naccording to the current character set mapping. The default is utf8mb4.\n\nmysql> SELECT LOWER(\'QUADRATICALLY\');\n        -> \'quadratically\'\n\nLOWER() (and UPPER()) are ineffective when applied to binary strings\n(BINARY, VARBINARY, BLOB). To perform lettercase conversion, convert\nthe string to a nonbinary string:\n\nmysql> SET @str = BINARY \'New York\';\nmysql> SELECT LOWER(@str), LOWER(CONVERT(@str USING utf8mb4));\n+-------------+------------------------------------+\n| LOWER(@str) | LOWER(CONVERT(@str USING utf8mb4)) |\n+-------------+------------------------------------+\n| New York    | new york                           |\n+-------------+------------------------------------+\n\nFor collations of Unicode character sets, LOWER() and UPPER() work\naccording to the Unicode Collation Algorithm (UCA) version in the\ncollation name, if there is one, and UCA 4.0.0 if no version is\nspecified. For example, utf8mb4_0900_ai_ci and utf8_unicode_520_ci work\naccording to UCA 9.0.0 and 5.2.0, respectively, whereas utf8_unicode_ci\nworks according to UCA 4.0.0. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-unicode-sets.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(98,'LPAD',12,'Syntax:\nLPAD(str,len,padstr)\n\nReturns the string str, left-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT LPAD(\'hi\',4,\'??\');\n        -> \'??hi\'\nmysql> SELECT LPAD(\'hi\',1,\'??\');\n        -> \'h\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(99,'LTRIM',12,'Syntax:\nLTRIM(str)\n\nReturns the string str with leading space characters removed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT LTRIM(\'  barbar\');\n        -> \'barbar\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(100,'MAKE_SET',12,'Syntax:\nMAKE_SET(bits,str1,str2,...)\n\nReturns a set value (a string containing substrings separated by ,\ncharacters) consisting of the strings that have the corresponding bit\nin bits set. str1 corresponds to bit 0, str2 to bit 1, and so on. NULL\nvalues in str1, str2, ... are not appended to the result.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT MAKE_SET(1,\'a\',\'b\',\'c\');\n        -> \'a\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',\'world\');\n        -> \'hello,world\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',NULL,\'world\');\n        -> \'hello\'\nmysql> SELECT MAKE_SET(0,\'a\',\'b\',\'c\');\n        -> \'\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(101,'MID',12,'Syntax:\nMID(str,pos,len)\n\nMID(str,pos,len) is a synonym for SUBSTRING(str,pos,len).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(102,'OCT',12,'Syntax:\nOCT(N)\n\nReturns a string representation of the octal value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,8). Returns\nNULL if N is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT OCT(12);\n        -> \'14\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(103,'OCTET_LENGTH',12,'Syntax:\nOCTET_LENGTH(str)\n\nOCTET_LENGTH() is a synonym for LENGTH().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(104,'ORD',12,'Syntax:\nORD(str)\n\nIf the leftmost character of the string str is a multibyte character,\nreturns the code for that character, calculated from the numeric values\nof its constituent bytes using this formula:\n\n  (1st byte code)\n+ (2nd byte code * 256)\n+ (3rd byte code * 256^2) ...\n\nIf the leftmost character is not a multibyte character, ORD() returns\nthe same value as the ASCII() function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT ORD(\'2\');\n        -> 50\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(105,'POSITION',12,'Syntax:\nPOSITION(substr IN str)\n\nPOSITION(substr IN str) is a synonym for LOCATE(substr,str).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(106,'QUOTE',12,'Syntax:\nQUOTE(str)\n\nQuotes a string to produce a result that can be used as a properly\nescaped data value in an SQL statement. The string is returned enclosed\nby single quotation marks and with each instance of backslash (\\),\nsingle quote (\'), ASCII NUL, and Control+Z preceded by a backslash. If\nthe argument is NULL, the return value is the word \"NULL\" without\nenclosing single quotation marks.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT QUOTE(\'Don\\\'t!\');\n        -> \'Don\\\'t!\'\nmysql> SELECT QUOTE(NULL);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(107,'REPEAT FUNCTION',12,'Syntax:\nREPEAT(str,count)\n\nReturns a string consisting of the string str repeated count times. If\ncount is less than 1, returns an empty string. Returns NULL if str or\ncount are NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT REPEAT(\'MySQL\', 3);\n        -> \'MySQLMySQLMySQL\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(108,'REPLACE FUNCTION',12,'Syntax:\nREPLACE(str,from_str,to_str)\n\nReturns the string str with all occurrences of the string from_str\nreplaced by the string to_str. REPLACE() performs a case-sensitive\nmatch when searching for from_str.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT REPLACE(\'www.mysql.com\', \'w\', \'Ww\');\n        -> \'WwWwWw.mysql.com\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(109,'REVERSE',12,'Syntax:\nREVERSE(str)\n\nReturns the string str with the order of the characters reversed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT REVERSE(\'abc\');\n        -> \'cba\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(110,'RIGHT',12,'Syntax:\nRIGHT(str,len)\n\nReturns the rightmost len characters from the string str, or NULL if\nany argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT RIGHT(\'foobarbar\', 4);\n        -> \'rbar\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(111,'RPAD',12,'Syntax:\nRPAD(str,len,padstr)\n\nReturns the string str, right-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT RPAD(\'hi\',5,\'?\');\n        -> \'hi???\'\nmysql> SELECT RPAD(\'hi\',1,\'?\');\n        -> \'h\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(112,'RTRIM',12,'Syntax:\nRTRIM(str)\n\nReturns the string str with trailing space characters removed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT RTRIM(\'barbar   \');\n        -> \'barbar\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(113,'SOUNDEX',12,'Syntax:\nSOUNDEX(str)\n\nReturns a soundex string from str. Two strings that sound almost the\nsame should have identical soundex strings. A standard soundex string\nis four characters long, but the SOUNDEX() function returns an\narbitrarily long string. You can use SUBSTRING() on the result to get a\nstandard soundex string. All nonalphabetic characters in str are\nignored. All international alphabetic characters outside the A-Z range\nare treated as vowels.\n\n*Important*:\n\nWhen using SOUNDEX(), you should be aware of the following limitations:\n\no This function, as currently implemented, is intended to work well\n  with strings that are in the English language only. Strings in other\n  languages may not produce reliable results.\n\no This function is not guaranteed to provide consistent results with\n  strings that use multibyte character sets, including utf-8. See Bug\n  #22638 for more information.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT SOUNDEX(\'Hello\');\n        -> \'H400\'\nmysql> SELECT SOUNDEX(\'Quadratically\');\n        -> \'Q36324\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(114,'SOUNDS LIKE',12,'Syntax:\nexpr1 SOUNDS LIKE expr2\n\nThis is the same as SOUNDEX(expr1) = SOUNDEX(expr2).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(115,'SPACE',12,'Syntax:\nSPACE(N)\n\nReturns a string consisting of N space characters.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT SPACE(6);\n        -> \'      \'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(116,'SUBSTR',12,'Syntax:\nSUBSTR(str,pos), SUBSTR(str FROM pos), SUBSTR(str,pos,len), SUBSTR(str\nFROM pos FOR len)\n\nSUBSTR() is a synonym for SUBSTRING().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(117,'SUBSTRING',12,'Syntax:\nSUBSTRING(str,pos), SUBSTRING(str FROM pos), SUBSTRING(str,pos,len),\nSUBSTRING(str FROM pos FOR len)\n\nThe forms without a len argument return a substring from string str\nstarting at position pos. The forms with a len argument return a\nsubstring len characters long from string str, starting at position\npos. The forms that use FROM are standard SQL syntax. It is also\npossible to use a negative value for pos. In this case, the beginning\nof the substring is pos characters from the end of the string, rather\nthan the beginning. A negative value may be used for pos in any of the\nforms of this function. A value of 0 for pos returns an empty string.\n\nFor all forms of SUBSTRING(), the position of the first character in\nthe string from which the substring is to be extracted is reckoned as\n1.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT SUBSTRING(\'Quadratically\',5);\n        -> \'ratically\'\nmysql> SELECT SUBSTRING(\'foobarbar\' FROM 4);\n        -> \'barbar\'\nmysql> SELECT SUBSTRING(\'Quadratically\',5,6);\n        -> \'ratica\'\nmysql> SELECT SUBSTRING(\'Sakila\', -3);\n        -> \'ila\'\nmysql> SELECT SUBSTRING(\'Sakila\', -5, 3);\n        -> \'aki\'\nmysql> SELECT SUBSTRING(\'Sakila\' FROM -4 FOR 2);\n        -> \'ki\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(118,'SUBSTRING_INDEX',12,'Syntax:\nSUBSTRING_INDEX(str,delim,count)\n\nReturns the substring from string str before count occurrences of the\ndelimiter delim. If count is positive, everything to the left of the\nfinal delimiter (counting from the left) is returned. If count is\nnegative, everything to the right of the final delimiter (counting from\nthe right) is returned. SUBSTRING_INDEX() performs a case-sensitive\nmatch when searching for delim.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', 2);\n        -> \'www.mysql\'\nmysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', -2);\n        -> \'mysql.com\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(119,'TO_BASE64',12,'Syntax:\nTO_BASE64(str)\n\nConverts the string argument to base-64 encoded form and returns the\nresult as a character string with the connection character set and\ncollation. If the argument is not a string, it is converted to a string\nbefore conversion takes place. The result is NULL if the argument is\nNULL. Base-64 encoded strings can be decoded using the FROM_BASE64()\nfunction.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT TO_BASE64(\'abc\'), FROM_BASE64(TO_BASE64(\'abc\'));\n        -> \'JWJj\', \'abc\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(120,'TRIM',12,'Syntax:\nTRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr\nFROM] str)\n\nReturns the string str with all remstr prefixes or suffixes removed. If\nnone of the specifiers BOTH, LEADING, or TRAILING is given, BOTH is\nassumed. remstr is optional and, if not specified, spaces are removed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT TRIM(\'  bar   \');\n        -> \'bar\'\nmysql> SELECT TRIM(LEADING \'x\' FROM \'xxxbarxxx\');\n        -> \'barxxx\'\nmysql> SELECT TRIM(BOTH \'x\' FROM \'xxxbarxxx\');\n        -> \'bar\'\nmysql> SELECT TRIM(TRAILING \'xyz\' FROM \'barxxyz\');\n        -> \'barx\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(121,'UCASE',12,'Syntax:\nUCASE(str)\n\nUCASE() is a synonym for UPPER().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(122,'UNHEX',12,'Syntax:\nUNHEX(str)\n\nFor a string argument str, UNHEX(str) interprets each pair of\ncharacters in the argument as a hexadecimal number and converts it to\nthe byte represented by the number. The return value is a binary\nstring.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','mysql> SELECT UNHEX(\'4D7953514C\');\n        -> \'MySQL\'\nmysql> SELECT X\'4D7953514C\';\n        -> \'MySQL\'\nmysql> SELECT UNHEX(HEX(\'string\'));\n        -> \'string\'\nmysql> SELECT HEX(UNHEX(\'1267\'));\n        -> \'1267\'\n','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(123,'UPPER',12,'Syntax:\nUPPER(str)\n\nReturns the string str with all characters changed to uppercase\naccording to the current character set mapping. The default is utf8mb4.\n\nmysql> SELECT UPPER(\'Hej\');\n        -> \'HEJ\'\n\nSee the description of LOWER() for information that also applies to\nUPPER(). This included information about how to perform lettercase\nconversion of binary strings (BINARY, VARBINARY, BLOB) for which these\nfunctions are ineffective, and information about case folding for\nUnicode character sets.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(124,'WEIGHT_STRING',12,'Syntax:\nWEIGHT_STRING(str [AS {CHAR|BINARY}(N)] [flags])\n\nThis function returns the weight string for the input string. The\nreturn value is a binary string that represents the comparison and\nsorting value of the string. It has these properties:\n\no If WEIGHT_STRING(str1) = WEIGHT_STRING(str2), then str1 = str2 (str1\n  and str2 are considered equal)\n\no If WEIGHT_STRING(str1) < WEIGHT_STRING(str2), then str1 < str2 (str1\n  sorts before str2)\n\nWEIGHT_STRING() is a debugging function intended for internal use. Its\nbehavior can change without notice between MySQL versions. It can be\nused for testing and debugging of collations, especially if you are\nadding a new collation. See\nhttps://dev.mysql.com/doc/refman/8.0/en/adding-collation.html.\n\nThis list briefly summarizes the arguments. More details are given in\nthe discussion following the list.\n\no str: The input string expression.\n\no AS clause: Optional; cast the input string to a given type and\n  length.\n\no flags: Optional; unused.\n\nThe input string, str, is a string expression. If the input is a\nnonbinary (character) string such as a CHAR, VARCHAR, or TEXT value,\nthe return value contains the collation weights for the string. If the\ninput is a binary (byte) string such as a BINARY, VARBINARY, or BLOB\nvalue, the return value is the same as the input (the weight for each\nbyte in a binary string is the byte value). If the input is NULL,\nWEIGHT_STRING() returns NULL.\n\nExamples:\n\nmysql> SET @s = _utf8mb4 \'AB\' COLLATE utf8mb4_0900_ai_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 1C471C60               |\n+------+---------+------------------------+\n\nmysql> SET @s = _utf8mb4 \'ab\' COLLATE utf8mb4_0900_ai_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 1C471C60               |\n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'AB\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'ab\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 6162                   |\n+------+---------+------------------------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-functions.html'),(125,'LIKE',12,'Syntax:\nexpr LIKE pat [ESCAPE \'escape_char\']\n\nPattern matching using an SQL pattern. Returns 1 (TRUE) or 0 (FALSE).\nIf either expr or pat is NULL, the result is NULL.\n\nThe pattern need not be a literal string. For example, it can be\nspecified as a string expression or table column.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html\n\n','mysql> SELECT \'David!\' LIKE \'David_\';\n        -> 1\nmysql> SELECT \'David!\' LIKE \'%D%v%\';\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html'),(126,'NOT LIKE',12,'Syntax:\nexpr NOT LIKE pat [ESCAPE \'escape_char\']\n\nThis is the same as NOT (expr LIKE pat [ESCAPE \'escape_char\']).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html'),(127,'STRCMP',12,'Syntax:\nSTRCMP(expr1,expr2)\n\nSTRCMP() returns 0 if the strings are the same, -1 if the first\nargument is smaller than the second according to the current sort\norder, and 1 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html\n\n','mysql> SELECT STRCMP(\'text\', \'text2\');\n        -> -1\nmysql> SELECT STRCMP(\'text2\', \'text\');\n        -> 1\nmysql> SELECT STRCMP(\'text\', \'text\');\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html'),(128,'NOT REGEXP',12,'Syntax:\nexpr NOT REGEXP pat, expr NOT RLIKE pat\n\nThis is the same as NOT (expr REGEXP pat).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/regexp.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/regexp.html'),(129,'REGEXP',12,'Syntax:\nexpr REGEXP pat, expr RLIKE pat\n\nReturns 1 if the string expr matches the regular expression specified\nby the pattern pat, 0 otherwise. If expr or pat is NULL, the return\nvalue is NULL.\n\nREGEXP and RLIKE are synonyms for REGEXP_LIKE().\n\nFor additional information about how matching occurs, see the\ndescription for REGEXP_LIKE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/regexp.html\n\n','mysql> SELECT \'Michael!\' REGEXP \'.*\';\n+------------------------+\n| \'Michael!\' REGEXP \'.*\' |\n+------------------------+\n|                      1 |\n+------------------------+\nmysql> SELECT \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\';\n+---------------------------------------+\n| \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\' |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\nmysql> SELECT \'a\' REGEXP \'^[a-d]\';\n+---------------------+\n| \'a\' REGEXP \'^[a-d]\' |\n+---------------------+\n|                   1 |\n+---------------------+\nmysql> SELECT \'a\' REGEXP \'A\', \'a\' REGEXP BINARY \'A\';\n+----------------+-----------------------+\n| \'a\' REGEXP \'A\' | \'a\' REGEXP BINARY \'A\' |\n+----------------+-----------------------+\n|              1 |                     0 |\n+----------------+-----------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/regexp.html'),(130,'REGEXP_INSTR',12,'REGEXP_INSTR(expr, pat[, pos[, occurrence[, return_option[,\nmatch_type]]]])\n\nReturns the starting index of the substring of the string expr that\nmatches the regular expression specified by the pattern pat, 0 if there\nis no match. If expr or pat is NULL, the return value is NULL.\nCharacter indexes begin at 1.\n\nREGEXP_INSTR() takes these optional arguments:\n\no pos: The position in expr at which to start the search. If omitted,\n  the default is 1.\n\no occurrence: Which occurrence of a match to search for. If omitted,\n  the default is 1.\n\no return_option: Which type of position to return. If this value is 0,\n  REGEXP_INSTR() returns the position of the matched substring\'s first\n  character. If this value is 1, REGEXP_INSTR() returns the position\n  following the matched substring. If omitted, the default is 0.\n\no match_type: A string that specifies how to perform matching. The\n  meaning is as described for REGEXP_LIKE().\n\nFor additional information about how matching occurs, see the\ndescription for REGEXP_LIKE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/regexp.html\n\n','mysql> SELECT REGEXP_INSTR(\'dog cat dog\', \'dog\');\n+------------------------------------+\n| REGEXP_INSTR(\'dog cat dog\', \'dog\') |\n+------------------------------------+\n|                                  1 |\n+------------------------------------+\nmysql> SELECT REGEXP_INSTR(\'dog cat dog\', \'dog\', 2);\n+---------------------------------------+\n| REGEXP_INSTR(\'dog cat dog\', \'dog\', 2) |\n+---------------------------------------+\n|                                     9 |\n+---------------------------------------+\nmysql> SELECT REGEXP_INSTR(\'aa aaa aaaa\', \'a{2}\');\n+-------------------------------------+\n| REGEXP_INSTR(\'aa aaa aaaa\', \'a{2}\') |\n+-------------------------------------+\n|                                   1 |\n+-------------------------------------+\nmysql> SELECT REGEXP_INSTR(\'aa aaa aaaa\', \'a{4}\');\n+-------------------------------------+\n| REGEXP_INSTR(\'aa aaa aaaa\', \'a{4}\') |\n+-------------------------------------+\n|                                   8 |\n+-------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/regexp.html'),(131,'REGEXP_LIKE',12,'REGEXP_LIKE(expr, pat[, match_type])\n\nReturns 1 if the string expr matches the regular expression specified\nby the pattern pat, 0 otherwise. If expr or pat is NULL, the return\nvalue is NULL.\n\nThe pattern can be an extended regular expression, the syntax for which\nis discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/regexp.html#regexp-syntax. The\npattern need not be a literal string. For example, it can be specified\nas a string expression or table column.\n\nThe optional match_type argument is a string that may contain any or\nall the following characters specifying how to perform matching:\n\no c: Case sensitive matching.\n\no i: Case insensitive matching.\n\no m: Multiple-line mode. Recognize line terminators within the string.\n  The default behavior is to match line terminators only at the start\n  and end of the string expression.\n\no n: The . character matches line terminators. The default is for .\n  matching to stop at the end of a line.\n\no u: Unix-only line endings. Only the newline character is recognized\n  as a line ending by the ., ^, and $ match operators.\n\nIf characters specifying contradictory options are specified within\nmatch_type, the rightmost one takes precedence.\n\nBy default, regular expression operations use the character set and\ncollation of the expr and pat arguments when deciding the type of a\ncharacter and performing the comparison. If the arguments have\ndifferent character sets or collations, coercibility rules apply as\ndescribed in\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-collation-coercibility.\nhtml. Arguments may be specified with explicit collation indicators to\nchange comparison behavior.\n\nmysql> SELECT REGEXP_LIKE(\'CamelCase\', \'CAMELCASE\');\n+---------------------------------------+\n| REGEXP_LIKE(\'CamelCase\', \'CAMELCASE\') |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\nmysql> SELECT REGEXP_LIKE(\'CamelCase\', \'CAMELCASE\' COLLATE utf8mb4_0900_as_cs);\n+------------------------------------------------------------------+\n| REGEXP_LIKE(\'CamelCase\', \'CAMELCASE\' COLLATE utf8mb4_0900_as_cs) |\n+------------------------------------------------------------------+\n|                                                                0 |\n+------------------------------------------------------------------+\n\nmatch_type may be specified with the c or i characters to override the\ndefault case sensitivity. Exception: If either argument is a binary\nstring, the arguments are handled in case-sensitive fashion as binary\nstrings, even if match_type contains the i character.\n\n*Note*:\n\nBecause MySQL uses the C escape syntax in strings (for example, \\n to\nrepresent the newline character), you must double any \\ that you use in\nyour expr and pat arguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/regexp.html\n\n','mysql> SELECT REGEXP_LIKE(\'Michael!\', \'.*\');\n+-------------------------------+\n| REGEXP_LIKE(\'Michael!\', \'.*\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\nmysql> SELECT REGEXP_LIKE(\'new*\\n*line\', \'new\\\\*.\\\\*line\');\n+----------------------------------------------+\n| REGEXP_LIKE(\'new*\\n*line\', \'new\\\\*.\\\\*line\') |\n+----------------------------------------------+\n|                                            0 |\n+----------------------------------------------+\nmysql> SELECT REGEXP_LIKE(\'a\', \'^[a-d]\');\n+----------------------------+\n| REGEXP_LIKE(\'a\', \'^[a-d]\') |\n+----------------------------+\n|                          1 |\n+----------------------------+\nmysql> SELECT REGEXP_LIKE(\'a\', \'A\'), REGEXP_LIKE(\'a\', BINARY \'A\');\n+-----------------------+------------------------------+\n| REGEXP_LIKE(\'a\', \'A\') | REGEXP_LIKE(\'a\', BINARY \'A\') |\n+-----------------------+------------------------------+\n|                     1 |                            0 |\n+-----------------------+------------------------------+\n\nmysql> SELECT REGEXP_LIKE(\'abc\', \'ABC\');\n+---------------------------+\n| REGEXP_LIKE(\'abc\', \'ABC\') |\n+---------------------------+\n|                         1 |\n+---------------------------+\nmysql> SELECT REGEXP_LIKE(\'abc\', \'ABC\', \'c\');\n+--------------------------------+\n| REGEXP_LIKE(\'abc\', \'ABC\', \'c\') |\n+--------------------------------+\n|                              0 |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/regexp.html'),(132,'REGEXP_REPLACE',12,'REGEXP_REPLACE(expr, pat, repl[, pos[, occurrence[, match_type]]])\n\nReplaces occurrences in the string expr that match the regular\nexpression specified by the pattern pat with the replacement string\nrepl, and returns the resulting string. If expr, pat, or repl is NULL,\nthe return value is NULL.\n\nREGEXP_REPLACE() takes these optional arguments:\n\no pos: The position in expr at which to start the search. If omitted,\n  the default is 1.\n\no occurrence: Which occurrence of a match to replace. If omitted, the\n  default is 0 (which means \"replace all occurrences\").\n\no match_type: A string that specifies how to perform matching. The\n  meaning is as described for REGEXP_LIKE().\n\nPrior to MySQL 8.0.17, the result returned by this function used the\nUTF-16 character set; in MySQL 8.0.17 and later, the character set and\ncollation of the expression searched for matches is used. (Bug #94203,\nBug #29308212)\n\nFor additional information about how matching occurs, see the\ndescription for REGEXP_LIKE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/regexp.html\n\n','mysql> SELECT REGEXP_REPLACE(\'a b c\', \'b\', \'X\');\n+-----------------------------------+\n| REGEXP_REPLACE(\'a b c\', \'b\', \'X\') |\n+-----------------------------------+\n| a X c                             |\n+-----------------------------------+\nmysql> SELECT REGEXP_REPLACE(\'abc def ghi\', \'[a-z]+\', \'X\', 1, 3);\n+----------------------------------------------------+\n| REGEXP_REPLACE(\'abc def ghi\', \'[a-z]+\', \'X\', 1, 3) |\n+----------------------------------------------------+\n| abc def X                                          |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/regexp.html'),(133,'REGEXP_SUBSTR',12,'REGEXP_SUBSTR(expr, pat[, pos[, occurrence[, match_type]]])\n\nReturns the substring of the string expr that matches the regular\nexpression specified by the pattern pat, NULL if there is no match. If\nexpr or pat is NULL, the return value is NULL.\n\nREGEXP_SUBSTR() takes these optional arguments:\n\no pos: The position in expr at which to start the search. If omitted,\n  the default is 1.\n\no occurrence: Which occurrence of a match to search for. If omitted,\n  the default is 1.\n\no match_type: A string that specifies how to perform matching. The\n  meaning is as described for REGEXP_LIKE().\n\nPrior to MySQL 8.0.17, the result returned by this function used the\nUTF-16 character set; in MySQL 8.0.17 and later, the character set and\ncollation of the expression searched for matches is used. (Bug #94203,\nBug #29308212)\n\nFor additional information about how matching occurs, see the\ndescription for REGEXP_LIKE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/regexp.html\n\n','mysql> SELECT REGEXP_SUBSTR(\'abc def ghi\', \'[a-z]+\');\n+----------------------------------------+\n| REGEXP_SUBSTR(\'abc def ghi\', \'[a-z]+\') |\n+----------------------------------------+\n| abc                                    |\n+----------------------------------------+\nmysql> SELECT REGEXP_SUBSTR(\'abc def ghi\', \'[a-z]+\', 1, 3);\n+----------------------------------------------+\n| REGEXP_SUBSTR(\'abc def ghi\', \'[a-z]+\', 1, 3) |\n+----------------------------------------------+\n| ghi                                          |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/regexp.html'),(134,'+',13,'Syntax:\n+\n\nAddition:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','mysql> SELECT 3+5;\n        -> 8\n','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(135,'- BINARY',13,'Syntax:\n-\n\nSubtraction:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','mysql> SELECT 3-5;\n        -> -2\n','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(136,'- UNARY',13,'Syntax:\n-\n\nUnary minus. This operator changes the sign of the operand.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','mysql> SELECT - 2;\n        -> -2\n','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(137,'*',13,'Syntax:\n*\n\nMultiplication:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','mysql> SELECT 3*5;\n        -> 15\nmysql> SELECT 18014398509481984*18014398509481984.0;\n        -> 324518553658426726783156020576256.0\nmysql> SELECT 18014398509481984*18014398509481984;\n        -> out-of-range error\n','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(138,'/',13,'Syntax:\n/\n\nDivision:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','mysql> SELECT 3/5;\n        -> 0.60\n','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(139,'DIV',13,'Syntax:\nDIV\n\nInteger division. Discards from the division result any fractional part\nto the right of the decimal point.\n\nIf either operand has a noninteger type, the operands are converted to\nDECIMAL and divided using DECIMAL arithmetic before converting the\nresult to BIGINT. If the result exceeds BIGINT range, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','mysql> SELECT 5 DIV 2, -5 DIV 2, 5 DIV -2, -5 DIV -2;\n        -> 2, -2, -2, 2\n','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(140,'%',13,'Syntax:\nN % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M. For more\ninformation, see the description for the MOD() function in\nhttps://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html'),(141,'ABS',13,'Syntax:\nABS(X)\n\nReturns the absolute value of X.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(142,'ACOS',13,'Syntax:\nACOS(X)\n\nReturns the arc cosine of X, that is, the value whose cosine is X.\nReturns NULL if X is not in the range -1 to 1.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT ACOS(1);\n        -> 0\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(143,'ASIN',13,'Syntax:\nASIN(X)\n\nReturns the arc sine of X, that is, the value whose sine is X. Returns\nNULL if X is not in the range -1 to 1.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT ASIN(0.2);\n        -> 0.20135792079033\nmysql> SELECT ASIN(\'foo\');\n\n+-------------+\n| ASIN(\'foo\') |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-----------------------------------------+\n| Level   | Code | Message                                 |\n+---------+------+-----------------------------------------+\n| Warning | 1292 | Truncated incorrect DOUBLE value: \'foo\' |\n+---------+------+-----------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(144,'ATAN',13,'Syntax:\nATAN(X)\n\nReturns the arc tangent of X, that is, the value whose tangent is X.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT ATAN(2);\n        -> 1.1071487177941\nmysql> SELECT ATAN(-2);\n        -> -1.1071487177941\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(145,'ATAN2',13,'Syntax:\nATAN(Y,X), ATAN2(Y,X)\n\nReturns the arc tangent of the two variables X and Y. It is similar to\ncalculating the arc tangent of Y / X, except that the signs of both\narguments are used to determine the quadrant of the result.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT ATAN(-2,2);\n        -> -0.78539816339745\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(146,'CEIL',13,'Syntax:\nCEIL(X)\n\nCEIL() is a synonym for CEILING().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(147,'CEILING',13,'Syntax:\nCEILING(X)\n\nReturns the smallest integer value not less than X.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEILING(-1.23);\n        -> -1\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(148,'CONV',13,'Syntax:\nCONV(N,from_base,to_base)\n\nConverts numbers between different number bases. Returns a string\nrepresentation of the number N, converted from base from_base to base\nto_base. Returns NULL if any argument is NULL. The argument N is\ninterpreted as an integer, but may be specified as an integer or a\nstring. The minimum base is 2 and the maximum base is 36. If from_base\nis a negative number, N is regarded as a signed number. Otherwise, N is\ntreated as unsigned. CONV() works with 64-bit precision.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT CONV(\'a\',16,2);\n        -> \'1010\'\nmysql> SELECT CONV(\'6E\',18,8);\n        -> \'172\'\nmysql> SELECT CONV(-17,10,-18);\n        -> \'-H\'\nmysql> SELECT CONV(10+\'10\'+\'10\'+X\'0a\',10,10);\n        -> \'40\'\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(149,'COS',13,'Syntax:\nCOS(X)\n\nReturns the cosine of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT COS(PI());\n        -> -1\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(150,'COT',13,'Syntax:\nCOT(X)\n\nReturns the cotangent of X.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT COT(12);\n        -> -1.5726734063977\nmysql> SELECT COT(0);\n        -> out-of-range error\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(151,'CRC32',13,'Syntax:\nCRC32(expr)\n\nComputes a cyclic redundancy check value and returns a 32-bit unsigned\nvalue. The result is NULL if the argument is NULL. The argument is\nexpected to be a string and (if possible) is treated as one if it is\nnot.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT CRC32(\'MySQL\');\n        -> 3259397556\nmysql> SELECT CRC32(\'mysql\');\n        -> 2501908538\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(152,'DEGREES',13,'Syntax:\nDEGREES(X)\n\nReturns the argument X, converted from radians to degrees.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT DEGREES(PI());\n        -> 180\nmysql> SELECT DEGREES(PI() / 2);\n        -> 90\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(153,'EXP',13,'Syntax:\nEXP(X)\n\nReturns the value of e (the base of natural logarithms) raised to the\npower of X. The inverse of this function is LOG() (using a single\nargument only) or LN().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT EXP(2);\n        -> 7.3890560989307\nmysql> SELECT EXP(-2);\n        -> 0.13533528323661\nmysql> SELECT EXP(0);\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(154,'FLOOR',13,'Syntax:\nFLOOR(X)\n\nReturns the largest integer value not greater than X.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT FLOOR(1.23), FLOOR(-1.23);\n        -> 1, -2\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(155,'LN',13,'Syntax:\nLN(X)\n\nReturns the natural logarithm of X; that is, the base-e logarithm of X.\nIf X is less than or equal to 0.0E0, the function returns NULL and a\nwarning \"Invalid argument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT LN(2);\n        -> 0.69314718055995\nmysql> SELECT LN(-2);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(156,'LOG',13,'Syntax:\nLOG(X), LOG(B,X)\n\nIf called with one parameter, this function returns the natural\nlogarithm of X. If X is less than or equal to 0.0E0, the function\nreturns NULL and a warning \"Invalid argument for logarithm\" is\nreported.\n\nThe inverse of this function (when called with a single argument) is\nthe EXP() function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT LOG(2);\n        -> 0.69314718055995\nmysql> SELECT LOG(-2);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(157,'LOG2',13,'Syntax:\nLOG2(X)\n\nReturns the base-2 logarithm of X. If X is less than or equal to 0.0E0,\nthe function returns NULL and a warning \"Invalid argument for\nlogarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT LOG2(65536);\n        -> 16\nmysql> SELECT LOG2(-100);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(158,'LOG10',13,'Syntax:\nLOG10(X)\n\nReturns the base-10 logarithm of X. If X is less than or equal to\n0.0E0, the function returns NULL and a warning \"Invalid argument for\nlogarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT LOG10(2);\n        -> 0.30102999566398\nmysql> SELECT LOG10(100);\n        -> 2\nmysql> SELECT LOG10(-100);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(159,'MOD',13,'Syntax:\nMOD(N,M), N % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(160,'PI',13,'Syntax:\nPI()\n\nReturns the value of π (pi). The default number of decimal places\ndisplayed is seven, but MySQL uses the full double-precision value\ninternally.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793116\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(161,'POW',13,'Syntax:\nPOW(X,Y)\n\nReturns the value of X raised to the power of Y.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT POW(2,2);\n        -> 4\nmysql> SELECT POW(2,-2);\n        -> 0.25\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(162,'POWER',13,'Syntax:\nPOWER(X,Y)\n\nThis is a synonym for POW().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(163,'RADIANS',13,'Syntax:\nRADIANS(X)\n\nReturns the argument X, converted from degrees to radians. (Note that\nπ radians equals 180 degrees.)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT RADIANS(90);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(164,'RAND',13,'Syntax:\nRAND([N])\n\nReturns a random floating-point value v in the range 0 <= v < 1.0. To\nobtain a random integer R in the range i <= R < j, use the expression\nFLOOR(i + RAND() * (j − i)). For example, to obtain a random integer\nin the range the range 7 <= R < 12, use the following statement:\n\nSELECT FLOOR(7 + (RAND() * 5));\n\nIf an integer argument N is specified, it is used as the seed value:\n\no With a constant initializer argument, the seed is initialized once\n  when the statement is prepared, prior to execution.\n\no With a nonconstant initializer argument (such as a column name), the\n  seed is initialized with the value for each invocation of RAND().\n\nOne implication of this behavior is that for equal argument values,\nRAND(N) returns the same value each time, and thus produces a\nrepeatable sequence of column values. In the following example, the\nsequence of values produced by RAND(3) is the same both places it\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> CREATE TABLE t (i INT);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.61914388706828 |\n|    2 | 0.93845168309142 |\n|    3 | 0.83482678498591 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.35877890638893 |\n|    2 | 0.28941420772058 |\n|    3 | 0.37073435016976 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.01 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(165,'ROUND',13,'Syntax:\nROUND(X), ROUND(X,D)\n\nRounds the argument X to D decimal places. The rounding algorithm\ndepends on the data type of X. D defaults to 0 if not specified. D can\nbe negative to cause D digits left of the decimal point of the value X\nto become zero.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(166,'SIGN',13,'Syntax:\nSIGN(X)\n\nReturns the sign of the argument as -1, 0, or 1, depending on whether X\nis negative, zero, or positive.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(167,'SIN',13,'Syntax:\nSIN(X)\n\nReturns the sine of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT SIN(PI());\n        -> 1.2246063538224e-16\nmysql> SELECT ROUND(SIN(PI()));\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(168,'SQRT',13,'Syntax:\nSQRT(X)\n\nReturns the square root of a nonnegative number X.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT SQRT(4);\n        -> 2\nmysql> SELECT SQRT(20);\n        -> 4.4721359549996\nmysql> SELECT SQRT(-16);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(169,'TAN',13,'Syntax:\nTAN(X)\n\nReturns the tangent of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT TAN(PI());\n        -> -1.2246063538224e-16\nmysql> SELECT TAN(PI()+1);\n        -> 1.5574077246549\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(170,'TRUNCATE',13,'Syntax:\nTRUNCATE(X,D)\n\nReturns the number X, truncated to D decimal places. If D is 0, the\nresult has no decimal point or fractional part. D can be negative to\ncause D digits left of the decimal point of the value X to become zero.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n\n','mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100\nmysql> SELECT TRUNCATE(10.28*100,0);\n       -> 1028\n','https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html'),(171,'ADDDATE',14,'Syntax:\nADDDATE(date,INTERVAL expr unit), ADDDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, ADDDATE()\nis a synonym for DATE_ADD(). The related function SUBDATE() is a\nsynonym for DATE_SUB(). For information on the INTERVAL unit argument,\nsee\nhttps://dev.mysql.com/doc/refman/8.0/en/expressions.html#temporal-inter\nvals.\n\nmysql> SELECT DATE_ADD(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\nmysql> SELECT ADDDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\n\nWhen invoked with the days form of the second argument, MySQL treats it\nas an integer number of days to be added to expr.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT ADDDATE(\'2008-01-02\', 31);\n        -> \'2008-02-02\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(172,'ADDTIME',14,'Syntax:\nADDTIME(expr1,expr2)\n\nADDTIME() adds expr2 to expr1 and returns the result. expr1 is a time\nor datetime expression, and expr2 is a time expression.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT ADDTIME(\'2007-12-31 23:59:59.999999\', \'1 1:1:1.000002\');\n        -> \'2008-01-02 01:01:01.000001\'\nmysql> SELECT ADDTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'03:00:01.999997\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(173,'CONVERT_TZ',14,'Syntax:\nCONVERT_TZ(dt,from_tz,to_tz)\n\nCONVERT_TZ() converts a datetime value dt from the time zone given by\nfrom_tz to the time zone given by to_tz and returns the resulting\nvalue. Time zones are specified as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html. This\nfunction returns NULL if the arguments are invalid.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'GMT\',\'MET\');\n        -> \'2004-01-01 13:00:00\'\nmysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'+00:00\',\'+10:00\');\n        -> \'2004-01-01 22:00:00\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(174,'CURDATE',14,'Syntax:\nCURDATE()\n\nReturns the current date as a value in \'YYYY-MM-DD\' or YYYYMMDD format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT CURDATE();\n        -> \'2008-06-13\'\nmysql> SELECT CURDATE() + 0;\n        -> 20080613\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(175,'CURRENT_DATE',14,'Syntax:\nCURRENT_DATE, CURRENT_DATE()\n\nCURRENT_DATE and CURRENT_DATE() are synonyms for CURDATE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(176,'CURRENT_TIME',14,'Syntax:\nCURRENT_TIME, CURRENT_TIME([fsp])\n\nCURRENT_TIME and CURRENT_TIME() are synonyms for CURTIME().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(177,'CURRENT_TIMESTAMP',14,'Syntax:\nCURRENT_TIMESTAMP, CURRENT_TIMESTAMP([fsp])\n\nCURRENT_TIMESTAMP and CURRENT_TIMESTAMP() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(178,'CURTIME',14,'Syntax:\nCURTIME([fsp])\n\nReturns the current time as a value in \'hh:mm:ss\' or hhmmss format,\ndepending on whether the function is used in a string or numeric\ncontext. The value is expressed in the session time zone.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT CURTIME();\n        -> \'23:50:26\'\nmysql> SELECT CURTIME() + 0;\n        -> 235026.000000\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(179,'DATE FUNCTION',14,'Syntax:\nDATE(expr)\n\nExtracts the date part of the date or datetime expression expr.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DATE(\'2003-12-31 01:02:03\');\n        -> \'2003-12-31\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(180,'DATEDIFF',14,'Syntax:\nDATEDIFF(expr1,expr2)\n\nDATEDIFF() returns expr1 − expr2 expressed as a value in days from\none date to the other. expr1 and expr2 are date or date-and-time\nexpressions. Only the date parts of the values are used in the\ncalculation.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DATEDIFF(\'2007-12-31 23:59:59\',\'2007-12-30\');\n        -> 1\nmysql> SELECT DATEDIFF(\'2010-11-30 23:59:59\',\'2010-12-31\');\n        -> -31\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(181,'DATE_ADD',14,'Syntax:\nDATE_ADD(date,INTERVAL expr unit), DATE_SUB(date,INTERVAL expr unit)\n\nThese functions perform date arithmetic. The date argument specifies\nthe starting date or datetime value. expr is an expression specifying\nthe interval value to be added or subtracted from the starting date.\nexpr is evaluated as a string; it may start with a - for negative\nintervals. unit is a keyword indicating the units in which the\nexpression should be interpreted.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_ADD(\'2018-05-01\',INTERVAL 1 DAY);\n        -> \'2018-05-02\'\nmysql> SELECT DATE_SUB(\'2018-05-01\',INTERVAL 1 YEAR);\n        -> \'2017-05-01\'\nmysql> SELECT DATE_ADD(\'2020-12-31 23:59:59\',\n    ->                 INTERVAL 1 SECOND);\n        -> \'2021-01-01 00:00:00\'\nmysql> SELECT DATE_ADD(\'2018-12-31 23:59:59\',\n    ->                 INTERVAL 1 DAY);\n        -> \'2019-01-01 23:59:59\'\nmysql> SELECT DATE_ADD(\'2100-12-31 23:59:59\',\n    ->                 INTERVAL \'1:1\' MINUTE_SECOND);\n        -> \'2101-01-01 00:01:00\'\nmysql> SELECT DATE_SUB(\'2025-01-01 00:00:00\',\n    ->                 INTERVAL \'1 1:1:1\' DAY_SECOND);\n        -> \'2024-12-30 22:58:59\'\nmysql> SELECT DATE_ADD(\'1900-01-01 00:00:00\',\n    ->                 INTERVAL \'-1 10\' DAY_HOUR);\n        -> \'1899-12-30 14:00:00\'\nmysql> SELECT DATE_SUB(\'1998-01-02\', INTERVAL 31 DAY);\n        -> \'1997-12-02\'\nmysql> SELECT DATE_ADD(\'1992-12-31 23:59:59.000002\',\n    ->            INTERVAL \'1.999999\' SECOND_MICROSECOND);\n        -> \'1993-01-01 00:00:01.000001\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(182,'DATE_FORMAT',14,'Syntax:\nDATE_FORMAT(date,format)\n\nFormats the date value according to the format string.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_FORMAT(\'2009-10-04 22:23:00\', \'%W %M %Y\');\n        -> \'Sunday October 2009\'\nmysql> SELECT DATE_FORMAT(\'2007-10-04 22:23:00\', \'%H:%i:%s\');\n        -> \'22:23:00\'\nmysql> SELECT DATE_FORMAT(\'1900-10-04 22:23:00\',\n    ->                 \'%D %y %a %d %m %b %j\');\n        -> \'4th 00 Thu 04 10 Oct 277\'\nmysql> SELECT DATE_FORMAT(\'1997-10-04 22:23:00\',\n    ->                 \'%H %k %I %r %T %S %w\');\n        -> \'22 22 10 10:23:00 PM 22:23:00 00 6\'\nmysql> SELECT DATE_FORMAT(\'1999-01-01\', \'%X %V\');\n        -> \'1998 52\'\nmysql> SELECT DATE_FORMAT(\'2006-06-00\', \'%d\');\n        -> \'00\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(183,'DATE_SUB',14,'Syntax:\nDATE_SUB(date,INTERVAL expr unit)\n\nSee the description for DATE_ADD().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(184,'DAY',14,'Syntax:\nDAY(date)\n\nDAY() is a synonym for DAYOFMONTH().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(185,'DAYNAME',14,'Syntax:\nDAYNAME(date)\n\nReturns the name of the weekday for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(https://dev.mysql.com/doc/refman/8.0/en/locale-support.html).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DAYNAME(\'2007-02-03\');\n        -> \'Saturday\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(186,'DAYOFMONTH',14,'Syntax:\nDAYOFMONTH(date)\n\nReturns the day of the month for date, in the range 1 to 31, or 0 for\ndates such as \'0000-00-00\' or \'2008-00-00\' that have a zero day part.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFMONTH(\'2007-02-03\');\n        -> 3\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(187,'DAYOFWEEK',14,'Syntax:\nDAYOFWEEK(date)\n\nReturns the weekday index for date (1 = Sunday, 2 = Monday, ..., 7 =\nSaturday). These index values correspond to the ODBC standard.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFWEEK(\'2007-02-03\');\n        -> 7\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(188,'DAYOFYEAR',14,'Syntax:\nDAYOFYEAR(date)\n\nReturns the day of the year for date, in the range 1 to 366.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFYEAR(\'2007-02-03\');\n        -> 34\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(189,'EXTRACT',14,'Syntax:\nEXTRACT(unit FROM date)\n\nThe EXTRACT() function uses the same kinds of unit specifiers as\nDATE_ADD() or DATE_SUB(), but extracts parts from the date rather than\nperforming date arithmetic. For information on the unit argument, see\nhttps://dev.mysql.com/doc/refman/8.0/en/expressions.html#temporal-inter\nvals.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT EXTRACT(YEAR FROM \'2019-07-02\');\n        -> 2019\nmysql> SELECT EXTRACT(YEAR_MONTH FROM \'2019-07-02 01:02:03\');\n        -> 201907\nmysql> SELECT EXTRACT(DAY_MINUTE FROM \'2019-07-02 01:02:03\');\n        -> 20102\nmysql> SELECT EXTRACT(MICROSECOND\n    ->                FROM \'2003-01-02 10:30:00.000123\');\n        -> 123\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(190,'FROM_DAYS',14,'Syntax:\nFROM_DAYS(N)\n\nGiven a day number N, returns a DATE value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT FROM_DAYS(730669);\n        -> \'2000-07-03\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(191,'FROM_UNIXTIME',14,'Syntax:\nFROM_UNIXTIME(unix_timestamp[,format])\n\nReturns a representation of the unix_timestamp argument as a value in\n\'YYYY-MM-DD hh:mm:ss\' or YYYYMMDDhhmmss.uuuuuu format, depending on\nwhether the function is used in a string or numeric context.\nunix_timestamp is an internal timestamp value representing seconds\nsince \'1970-01-01 00:00:00\' UTC, such as produced by the\nUNIX_TIMESTAMP() function.\n\nThe return value is expressed in the session time zone. (Clients can\nset the session time zone as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html.) The\nformat string, if given, is used to format the result the same way as\ndescribed in the entry for the DATE_FORMAT() function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT FROM_UNIXTIME(1447430881);\n        -> \'2015-11-13 10:08:01\'\nmysql> SELECT FROM_UNIXTIME(1447430881) + 0;\n        -> 20151113100801\nmysql> SELECT FROM_UNIXTIME(1447430881,\n    ->                      \'%Y %D %M %h:%i:%s %x\');\n        -> \'2015 13th November 10:08:01 2015\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(192,'GET_FORMAT',14,'Syntax:\nGET_FORMAT({DATE|TIME|DATETIME}, {\'EUR\'|\'USA\'|\'JIS\'|\'ISO\'|\'INTERNAL\'})\n\nReturns a format string. This function is useful in combination with\nthe DATE_FORMAT() and the STR_TO_DATE() functions.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_FORMAT(\'2003-10-03\',GET_FORMAT(DATE,\'EUR\'));\n        -> \'03.10.2003\'\nmysql> SELECT STR_TO_DATE(\'10.31.2003\',GET_FORMAT(DATE,\'USA\'));\n        -> \'2003-10-31\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(193,'HOUR',14,'Syntax:\nHOUR(time)\n\nReturns the hour for time. The range of the return value is 0 to 23 for\ntime-of-day values. However, the range of TIME values actually is much\nlarger, so HOUR can return values greater than 23.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT HOUR(\'10:05:03\');\n        -> 10\nmysql> SELECT HOUR(\'272:59:59\');\n        -> 272\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(194,'LAST_DAY',14,'Syntax:\nLAST_DAY(date)\n\nTakes a date or datetime value and returns the corresponding value for\nthe last day of the month. Returns NULL if the argument is invalid.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT LAST_DAY(\'2003-02-05\');\n        -> \'2003-02-28\'\nmysql> SELECT LAST_DAY(\'2004-02-05\');\n        -> \'2004-02-29\'\nmysql> SELECT LAST_DAY(\'2004-01-01 01:01:01\');\n        -> \'2004-01-31\'\nmysql> SELECT LAST_DAY(\'2003-03-32\');\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(195,'LOCALTIME',14,'Syntax:\nLOCALTIME, LOCALTIME([fsp])\n\nLOCALTIME and LOCALTIME() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(196,'LOCALTIMESTAMP',14,'Syntax:\nLOCALTIMESTAMP, LOCALTIMESTAMP([fsp])\n\nLOCALTIMESTAMP and LOCALTIMESTAMP() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(197,'MAKEDATE',14,'Syntax:\nMAKEDATE(year,dayofyear)\n\nReturns a date, given year and day-of-year values. dayofyear must be\ngreater than 0 or the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT MAKEDATE(2011,31), MAKEDATE(2011,32);\n        -> \'2011-01-31\', \'2011-02-01\'\nmysql> SELECT MAKEDATE(2011,365), MAKEDATE(2014,365);\n        -> \'2011-12-31\', \'2014-12-31\'\nmysql> SELECT MAKEDATE(2011,0);\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(198,'MAKETIME',14,'Syntax:\nMAKETIME(hour,minute,second)\n\nReturns a time value calculated from the hour, minute, and second\narguments.\n\nThe second argument can have a fractional part.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT MAKETIME(12,15,30);\n        -> \'12:15:30\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(199,'MICROSECOND',14,'Syntax:\nMICROSECOND(expr)\n\nReturns the microseconds from the time or datetime expression expr as a\nnumber in the range from 0 to 999999.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT MICROSECOND(\'12:00:00.123456\');\n        -> 123456\nmysql> SELECT MICROSECOND(\'2019-12-31 23:59:59.000010\');\n        -> 10\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(200,'MINUTE',14,'Syntax:\nMINUTE(time)\n\nReturns the minute for time, in the range 0 to 59.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT MINUTE(\'2008-02-03 10:05:03\');\n        -> 5\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(201,'MONTH',14,'Syntax:\nMONTH(date)\n\nReturns the month for date, in the range 1 to 12 for January to\nDecember, or 0 for dates such as \'0000-00-00\' or \'2008-00-00\' that have\na zero month part.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT MONTH(\'2008-02-03\');\n        -> 2\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(202,'MONTHNAME',14,'Syntax:\nMONTHNAME(date)\n\nReturns the full name of the month for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(https://dev.mysql.com/doc/refman/8.0/en/locale-support.html).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT MONTHNAME(\'2008-02-03\');\n        -> \'February\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(203,'NOW',14,'Syntax:\nNOW([fsp])\n\nReturns the current date and time as a value in \'YYYY-MM-DD hh:mm:ss\'\nor YYYYMMDDhhmmss format, depending on whether the function is used in\na string or numeric context. The value is expressed in the session time\nzone.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT NOW();\n        -> \'2007-12-15 23:50:26\'\nmysql> SELECT NOW() + 0;\n        -> 20071215235026.000000\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(204,'PERIOD_ADD',14,'Syntax:\nPERIOD_ADD(P,N)\n\nAdds N months to period P (in the format YYMM or YYYYMM). Returns a\nvalue in the format YYYYMM.\n\n*Note*:\n\nThe period argument P is not a date value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT PERIOD_ADD(200801,2);\n        -> 200803\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(205,'PERIOD_DIFF',14,'Syntax:\nPERIOD_DIFF(P1,P2)\n\nReturns the number of months between periods P1 and P2. P1 and P2\nshould be in the format YYMM or YYYYMM. Note that the period arguments\nP1 and P2 are not date values.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT PERIOD_DIFF(200802,200703);\n        -> 11\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(206,'QUARTER',14,'Syntax:\nQUARTER(date)\n\nReturns the quarter of the year for date, in the range 1 to 4.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT QUARTER(\'2008-04-01\');\n        -> 2\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(207,'SECOND',14,'Syntax:\nSECOND(time)\n\nReturns the second for time, in the range 0 to 59.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT SECOND(\'10:05:03\');\n        -> 3\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(208,'SEC_TO_TIME',14,'Syntax:\nSEC_TO_TIME(seconds)\n\nReturns the seconds argument, converted to hours, minutes, and seconds,\nas a TIME value. The range of the result is constrained to that of the\nTIME data type. A warning occurs if the argument corresponds to a value\noutside that range.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT SEC_TO_TIME(2378);\n        -> \'00:39:38\'\nmysql> SELECT SEC_TO_TIME(2378) + 0;\n        -> 3938\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(209,'STR_TO_DATE',14,'Syntax:\nSTR_TO_DATE(str,format)\n\nThis is the inverse of the DATE_FORMAT() function. It takes a string\nstr and a format string format. STR_TO_DATE() returns a DATETIME value\nif the format string contains both date and time parts, or a DATE or\nTIME value if the string contains only date or time parts. If the date,\ntime, or datetime value extracted from str is illegal, STR_TO_DATE()\nreturns NULL and produces a warning.\n\nThe server scans str attempting to match format to it. The format\nstring can contain literal characters and format specifiers beginning\nwith %. Literal characters in format must match literally in str.\nFormat specifiers in format must match a date or time part in str. For\nthe specifiers that can be used in format, see the DATE_FORMAT()\nfunction description.\n\nmysql> SELECT STR_TO_DATE(\'01,5,2013\',\'%d,%m,%Y\');\n        -> \'2013-05-01\'\nmysql> SELECT STR_TO_DATE(\'May 1, 2013\',\'%M %d,%Y\');\n        -> \'2013-05-01\'\n\nScanning starts at the beginning of str and fails if format is found\nnot to match. Extra characters at the end of str are ignored.\n\nmysql> SELECT STR_TO_DATE(\'a09:30:17\',\'a%h:%i:%s\');\n        -> \'09:30:17\'\nmysql> SELECT STR_TO_DATE(\'a09:30:17\',\'%h:%i:%s\');\n        -> NULL\nmysql> SELECT STR_TO_DATE(\'09:30:17a\',\'%h:%i:%s\');\n        -> \'09:30:17\'\n\nUnspecified date or time parts have a value of 0, so incompletely\nspecified values in str produce a result with some or all parts set to\n0:\n\nmysql> SELECT STR_TO_DATE(\'abc\',\'abc\');\n        -> \'0000-00-00\'\nmysql> SELECT STR_TO_DATE(\'9\',\'%m\');\n        -> \'0000-09-00\'\nmysql> SELECT STR_TO_DATE(\'9\',\'%s\');\n        -> \'00:00:09\'\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(210,'SUBDATE',14,'Syntax:\nSUBDATE(date,INTERVAL expr unit), SUBDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, SUBDATE()\nis a synonym for DATE_SUB(). For information on the INTERVAL unit\nargument, see the discussion for DATE_ADD().\n\nmysql> SELECT DATE_SUB(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\nmysql> SELECT SUBDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\n\nThe second form enables the use of an integer value for days. In such\ncases, it is interpreted as the number of days to be subtracted from\nthe date or datetime expression expr.\n\nmysql> SELECT SUBDATE(\'2008-01-02 12:00:00\', 31);\n        -> \'2007-12-02 12:00:00\'\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(211,'SUBTIME',14,'Syntax:\nSUBTIME(expr1,expr2)\n\nSUBTIME() returns expr1 − expr2 expressed as a value in the same\nformat as expr1. expr1 is a time or datetime expression, and expr2 is a\ntime expression.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT SUBTIME(\'2007-12-31 23:59:59.999999\',\'1 1:1:1.000002\');\n        -> \'2007-12-30 22:58:58.999997\'\nmysql> SELECT SUBTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'-00:59:59.999999\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(212,'SYSDATE',14,'Syntax:\nSYSDATE([fsp])\n\nReturns the current date and time as a value in \'YYYY-MM-DD hh:mm:ss\'\nor YYYYMMDDhhmmss format, depending on whether the function is used in\na string or numeric context.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nSYSDATE() returns the time at which it executes. This differs from the\nbehavior for NOW(), which returns a constant time that indicates the\ntime at which the statement began to execute. (Within a stored function\nor trigger, NOW() returns the time at which the function or triggering\nstatement began to execute.)\n\nmysql> SELECT NOW(), SLEEP(2), NOW();\n+---------------------+----------+---------------------+\n| NOW()               | SLEEP(2) | NOW()               |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:36 |        0 | 2006-04-12 13:47:36 |\n+---------------------+----------+---------------------+\n\nmysql> SELECT SYSDATE(), SLEEP(2), SYSDATE();\n+---------------------+----------+---------------------+\n| SYSDATE()           | SLEEP(2) | SYSDATE()           |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:44 |        0 | 2006-04-12 13:47:46 |\n+---------------------+----------+---------------------+\n\nIn addition, the SET TIMESTAMP statement affects the value returned by\nNOW() but not by SYSDATE(). This means that timestamp settings in the\nbinary log have no effect on invocations of SYSDATE().\n\nBecause SYSDATE() can return different values even within the same\nstatement, and is not affected by SET TIMESTAMP, it is nondeterministic\nand therefore unsafe for replication if statement-based binary logging\nis used. If that is a problem, you can use row-based logging.\n\nAlternatively, you can use the --sysdate-is-now option to cause\nSYSDATE() to be an alias for NOW(). This works if the option is used on\nboth the master and the slave.\n\nThe nondeterministic nature of SYSDATE() also means that indexes cannot\nbe used for evaluating expressions that refer to it.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(213,'TIME FUNCTION',14,'Syntax:\nTIME(expr)\n\nExtracts the time part of the time or datetime expression expr and\nreturns it as a string.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIME(\'2003-12-31 01:02:03\');\n        -> \'01:02:03\'\nmysql> SELECT TIME(\'2003-12-31 01:02:03.000123\');\n        -> \'01:02:03.000123\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(214,'TIMEDIFF',14,'Syntax:\nTIMEDIFF(expr1,expr2)\n\nTIMEDIFF() returns expr1 − expr2 expressed as a time value. expr1 and\nexpr2 are time or date-and-time expressions, but both must be of the\nsame type.\n\nThe result returned by TIMEDIFF() is limited to the range allowed for\nTIME values. Alternatively, you can use either of the functions\nTIMESTAMPDIFF() and UNIX_TIMESTAMP(), both of which return integers.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIMEDIFF(\'2000:01:01 00:00:00\',\n    ->                 \'2000:01:01 00:00:00.000001\');\n        -> \'-00:00:00.000001\'\nmysql> SELECT TIMEDIFF(\'2008-12-31 23:59:59.000001\',\n    ->                 \'2008-12-30 01:01:01.000002\');\n        -> \'46:58:57.999999\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(215,'TIMESTAMP FUNCTION',14,'Syntax:\nTIMESTAMP(expr), TIMESTAMP(expr1,expr2)\n\nWith a single argument, this function returns the date or datetime\nexpression expr as a datetime value. With two arguments, it adds the\ntime expression expr2 to the date or datetime expression expr1 and\nreturns the result as a datetime value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMP(\'2003-12-31\');\n        -> \'2003-12-31 00:00:00\'\nmysql> SELECT TIMESTAMP(\'2003-12-31 12:00:00\',\'12:00:00\');\n        -> \'2004-01-01 00:00:00\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(216,'TIMESTAMPADD',14,'Syntax:\nTIMESTAMPADD(unit,interval,datetime_expr)\n\nAdds the integer expression interval to the date or datetime expression\ndatetime_expr. The unit for interval is given by the unit argument,\nwhich should be one of the following values: MICROSECOND\n(microseconds), SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or\nYEAR.\n\nThe unit value may be specified using one of keywords as shown, or with\na prefix of SQL_TSI_. For example, DAY and SQL_TSI_DAY both are legal.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMPADD(MINUTE,1,\'2003-01-02\');\n        -> \'2003-01-02 00:01:00\'\nmysql> SELECT TIMESTAMPADD(WEEK,1,\'2003-01-02\');\n        -> \'2003-01-09\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(217,'TIMESTAMPDIFF',14,'Syntax:\nTIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)\n\nReturns datetime_expr2 − datetime_expr1, where datetime_expr1 and\ndatetime_expr2 are date or datetime expressions. One expression may be\na date and the other a datetime; a date value is treated as a datetime\nhaving the time part \'00:00:00\' where necessary. The unit for the\nresult (an integer) is given by the unit argument. The legal values for\nunit are the same as those listed in the description of the\nTIMESTAMPADD() function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMPDIFF(MONTH,\'2003-02-01\',\'2003-05-01\');\n        -> 3\nmysql> SELECT TIMESTAMPDIFF(YEAR,\'2002-05-01\',\'2001-01-01\');\n        -> -1\nmysql> SELECT TIMESTAMPDIFF(MINUTE,\'2003-02-01\',\'2003-05-01 12:05:55\');\n        -> 128885\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(218,'TIME_FORMAT',14,'Syntax:\nTIME_FORMAT(time,format)\n\nThis is used like the DATE_FORMAT() function, but the format string may\ncontain format specifiers only for hours, minutes, seconds, and\nmicroseconds. Other specifiers produce a NULL value or 0.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIME_FORMAT(\'100:00:00\', \'%H %k %h %I %l\');\n        -> \'100 100 04 04 4\'\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(219,'TIME_TO_SEC',14,'Syntax:\nTIME_TO_SEC(time)\n\nReturns the time argument, converted to seconds.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TIME_TO_SEC(\'22:23:00\');\n        -> 80580\nmysql> SELECT TIME_TO_SEC(\'00:39:38\');\n        -> 2378\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(220,'TO_DAYS',14,'Syntax:\nTO_DAYS(date)\n\nGiven a date date, returns a day number (the number of days since year\n0).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TO_DAYS(950501);\n        -> 728779\nmysql> SELECT TO_DAYS(\'2007-10-07\');\n        -> 733321\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(221,'TO_SECONDS',14,'Syntax:\nTO_SECONDS(expr)\n\nGiven a date or datetime expr, returns the number of seconds since the\nyear 0. If expr is not a valid date or datetime value, returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT TO_SECONDS(950501);\n        -> 62966505600\nmysql> SELECT TO_SECONDS(\'2009-11-29\');\n        -> 63426672000\nmysql> SELECT TO_SECONDS(\'2009-11-29 13:43:32\');\n        -> 63426721412\nmysql> SELECT TO_SECONDS( NOW() );\n        -> 63426721458\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(222,'UNIX_TIMESTAMP',14,'Syntax:\nUNIX_TIMESTAMP([date])\n\nIf UNIX_TIMESTAMP() is called with no date argument, it returns a Unix\ntimestamp representing seconds since \'1970-01-01 00:00:00\' UTC.\n\nIf UNIX_TIMESTAMP() is called with a date argument, it returns the\nvalue of the argument as seconds since \'1970-01-01 00:00:00\' UTC. The\nserver interprets date as a value in the session time zone and converts\nit to an internal Unix timestamp value in UTC. (Clients can set the\nsession time zone as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html.) The\ndate argument may be a DATE, DATETIME, or TIMESTAMP string, or a number\nin YYMMDD, YYMMDDhhmmss, YYYYMMDD, or YYYYMMDDhhmmss format. If the\nargument includes a time part, it may optionally include a fractional\nseconds part.\n\nThe return value is an integer if no argument is given or the argument\ndoes not include a fractional seconds part, or DECIMAL if an argument\nis given that includes a fractional seconds part.\n\nWhen the date argument is a TIMESTAMP column, UNIX_TIMESTAMP() returns\nthe internal timestamp value directly, with no implicit\n\"string-to-Unix-timestamp\" conversion.\n\nThe valid range of argument values is the same as for the TIMESTAMP\ndata type: \'1970-01-01 00:00:01.000000\' UTC to \'2038-01-19\n03:14:07.999999\' UTC. If you pass an out-of-range date to\nUNIX_TIMESTAMP(), it returns 0.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT UNIX_TIMESTAMP();\n        -> 1447431666\nmysql> SELECT UNIX_TIMESTAMP(\'2015-11-13 10:20:19\');\n        -> 1447431619\nmysql> SELECT UNIX_TIMESTAMP(\'2015-11-13 10:20:19.012\');\n        -> 1447431619.012\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(223,'UTC_DATE',14,'Syntax:\nUTC_DATE, UTC_DATE()\n\nReturns the current UTC date as a value in \'YYYY-MM-DD\' or YYYYMMDD\nformat, depending on whether the function is used in a string or\nnumeric context.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_DATE(), UTC_DATE() + 0;\n        -> \'2003-08-14\', 20030814\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(224,'UTC_TIME',14,'Syntax:\nUTC_TIME, UTC_TIME([fsp])\n\nReturns the current UTC time as a value in \'hh:mm:ss\' or hhmmss format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_TIME(), UTC_TIME() + 0;\n        -> \'18:07:53\', 180753.000000\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(225,'UTC_TIMESTAMP',14,'Syntax:\nUTC_TIMESTAMP, UTC_TIMESTAMP([fsp])\n\nReturns the current UTC date and time as a value in \'YYYY-MM-DD\nhh:mm:ss\' or YYYYMMDDhhmmss format, depending on whether the function\nis used in a string or numeric context.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0;\n        -> \'2003-08-14 18:08:04\', 20030814180804.000000\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(226,'WEEK',14,'Syntax:\nWEEK(date[,mode])\n\nThis function returns the week number for date. The two-argument form\nof WEEK() enables you to specify whether the week starts on Sunday or\nMonday and whether the return value should be in the range from 0 to 53\nor from 1 to 53. If the mode argument is omitted, the value of the\ndefault_week_format system variable is used. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT WEEK(\'2008-02-20\');\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',0);\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',1);\n        -> 8\nmysql> SELECT WEEK(\'2008-12-31\',1);\n        -> 53\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(227,'WEEKDAY',14,'Syntax:\nWEEKDAY(date)\n\nReturns the weekday index for date (0 = Monday, 1 = Tuesday, ... 6 =\nSunday).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT WEEKDAY(\'2008-02-03 22:23:00\');\n        -> 6\nmysql> SELECT WEEKDAY(\'2007-11-06\');\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(228,'WEEKOFYEAR',14,'Syntax:\nWEEKOFYEAR(date)\n\nReturns the calendar week of the date as a number in the range from 1\nto 53. WEEKOFYEAR() is a compatibility function that is equivalent to\nWEEK(date,3).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT WEEKOFYEAR(\'2008-02-20\');\n        -> 8\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(229,'YEAR',14,'Syntax:\nYEAR(date)\n\nReturns the year for date, in the range 1000 to 9999, or 0 for the\n\"zero\" date.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT YEAR(\'1987-01-01\');\n        -> 1987\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(230,'YEARWEEK',14,'Syntax:\nYEARWEEK(date), YEARWEEK(date,mode)\n\nReturns year and week for a date. The year in the result may be\ndifferent from the year in the date argument for the first and the last\nweek of the year.\n\nThe mode argument works exactly like the mode argument to WEEK(). For\nthe single-argument syntax, a mode value of 0 is used. Unlike WEEK(),\nthe value of default_week_format does not influence YEARWEEK().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n\n','mysql> SELECT YEARWEEK(\'1987-01-01\');\n        -> 198652\n','https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html'),(231,'MATCH AGAINST',12,'Syntax:\nMATCH (col1,col2,...) AGAINST (expr [search_modifier])\n\nMySQL has support for full-text indexing and searching:\n\no A full-text index in MySQL is an index of type FULLTEXT.\n\no Full-text indexes can be used only with InnoDB or MyISAM tables, and\n  can be created only for CHAR, VARCHAR, or TEXT columns.\n\no MySQL provides a built-in full-text ngram parser that supports\n  Chinese, Japanese, and Korean (CJK), and an installable MeCab\n  full-text parser plugin for Japanese. Parsing differences are\n  outlined in\n  https://dev.mysql.com/doc/refman/8.0/en/fulltext-search-ngram.html,\n  and\n  https://dev.mysql.com/doc/refman/8.0/en/fulltext-search-mecab.html.\n\no A FULLTEXT index definition can be given in the CREATE TABLE\n  statement when a table is created, or added later using ALTER TABLE\n  or CREATE INDEX.\n\no For large data sets, it is much faster to load your data into a table\n  that has no FULLTEXT index and then create the index after that, than\n  to load data into a table that has an existing FULLTEXT index.\n\nFull-text searching is performed using MATCH() ... AGAINST syntax.\nMATCH() takes a comma-separated list that names the columns to be\nsearched. AGAINST takes a string to search for, and an optional\nmodifier that indicates what type of search to perform. The search\nstring must be a string value that is constant during query evaluation.\nThis rules out, for example, a table column because that can differ for\neach row.\n\nThere are three types of full-text searches:\n\no A natural language search interprets the search string as a phrase in\n  natural human language (a phrase in free text). There are no special\n  operators, with the exception of double quote (\") characters. The\n  stopword list applies. For more information about stopword lists, see\n  https://dev.mysql.com/doc/refman/8.0/en/fulltext-stopwords.html.\n\n  Full-text searches are natural language searches if the IN NATURAL\n  LANGUAGE MODE modifier is given or if no modifier is given. For more\n  information, see\n  https://dev.mysql.com/doc/refman/8.0/en/fulltext-natural-language.htm\n  l.\n\no A boolean search interprets the search string using the rules of a\n  special query language. The string contains the words to search for.\n  It can also contain operators that specify requirements such that a\n  word must be present or absent in matching rows, or that it should be\n  weighted higher or lower than usual. Certain common words (stopwords)\n  are omitted from the search index and do not match if present in the\n  search string. The IN BOOLEAN MODE modifier specifies a boolean\n  search. For more information, see\n  https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html.\n\no A query expansion search is a modification of a natural language\n  search. The search string is used to perform a natural language\n  search. Then words from the most relevant rows returned by the search\n  are added to the search string and the search is done again. The\n  query returns the rows from the second search. The IN NATURAL\n  LANGUAGE MODE WITH QUERY EXPANSION or WITH QUERY EXPANSION modifier\n  specifies a query expansion search. For more information, see\n  https://dev.mysql.com/doc/refman/8.0/en/fulltext-query-expansion.html\n  .\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/fulltext-search.html\n\n','mysql> SELECT id, body, MATCH (title,body) AGAINST\n    (\'Security implications of running MySQL as root\'\n    IN NATURAL LANGUAGE MODE) AS score\n    FROM articles WHERE MATCH (title,body) AGAINST\n    (\'Security implications of running MySQL as root\'\n    IN NATURAL LANGUAGE MODE);\n+----+-------------------------------------+-----------------+\n| id | body                                | score           |\n+----+-------------------------------------+-----------------+\n|  4 | 1. Never run mysqld as root. 2. ... | 1.5219271183014 |\n|  6 | When configured properly, MySQL ... | 1.3114095926285 |\n+----+-------------------------------------+-----------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/fulltext-search.html'),(232,'BINARY OPERATOR',12,'Syntax:\nBINARY expr\n\nThe BINARY operator converts the expression to a binary string. A\ncommon use for BINARY is to force a character string comparison to be\ndone byte by byte rather than character by character, in effect\nbecoming case-sensitive. The BINARY operator also causes trailing\nspaces in comparisons to be significant.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html\n\n','mysql> SELECT \'a\' = \'A\';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'A\';\n        -> 0\nmysql> SELECT \'a\' = \'a \';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'a \';\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html'),(233,'CAST',12,'Syntax:\nCAST(expr AS type [ARRAY])\n\nThe CAST() function takes an expression of any type and produces a\nresult value of the specified type, similar to CONVERT(). For more\ninformation, see the description of CONVERT().\n\nIn MySQL 8.0.17 and later, InnoDB allows the use of an additional ARRAY\nkeyword for creating a multi-valued index on a JSON array as part of\nCREATE INDEX, CREATE TABLE, and ALTER TABLE statements. ARRAY is not\nsupported except when used to create a multi-valued index in one of\nthese statements, in which case it is required. The column being\nindexed must be a column of type JSON. (CONVERT() does not support\nmulti-valued index creation or the ARRAY keyword.) The type following\nthe AS keyword may be any of the types supported by CAST(), with the\nexception of BINARY and JSON, which are not supported for this purpose.\nhttps://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-index-\nmulti-valued, provides syntax information and examples, as well as\nother relevant information.\n\nCAST() is standard SQL syntax.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html'),(234,'CONVERT',12,'Syntax:\nCONVERT(expr,type), CONVERT(expr USING transcoding_name)\n\nThe CONVERT() function takes an expression of any type and produces a\nresult value of the specified type.\n\nDiscussion of CONVERT(expr, type) syntax here also applies to CAST(expr\nAS type), which is equivalent.\n\nCONVERT(... USING ...) is standard SQL syntax. The non-USING form of\nCONVERT() is ODBC syntax.\n\nCONVERT() with USING converts data between different character sets. In\nMySQL, transcoding names are the same as the corresponding character\nset names. For example, this statement converts the string \'abc\' in the\ndefault character set to the corresponding string in the utf8 character\nset:\n\nSELECT CONVERT(\'abc\' USING utf8);\n\nCONVERT() without USING and CAST() take an expression and a type value\nspecifying the result type. These type values are permitted:\n\no BINARY[(N)]\n\n  Produces a string with the BINARY data type. See\n  https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html for a\n  description of how this affects comparisons. If the optional length N\n  is given, BINARY(N) causes the cast to use no more than N bytes of\n  the argument. Values shorter than N bytes are padded with 0x00 bytes\n  to a length of N.\n\no CHAR[(N)] [charset_info]\n\n  Produces a string with the CHAR data type. If the optional length N\n  is given, CHAR(N) causes the cast to use no more than N characters of\n  the argument. No padding occurs for values shorter than N characters.\n\n  With no charset_info clause, CHAR produces a string with the default\n  character set. To specify the character set explicitly, these\n  charset_info values are permitted:\n\n  o CHARACTER SET charset_name: Produces a string with the given\n    character set.\n\n  o ASCII: Shorthand for CHARACTER SET latin1.\n\n  o UNICODE: Shorthand for CHARACTER SET ucs2.\n\n  In all cases, the string has the default collation for the character\n  set.\n\no DATE\n\n  Produces a DATE value.\n\no DATETIME\n\n  Produces a DATETIME value.\n\no DECIMAL[(M[,D])]\n\n  Produces a DECIMAL value. If the optional M and D values are given,\n  they specify the maximum number of digits (the precision) and the\n  number of digits following the decimal point (the scale).\n\no DOUBLE\n\n  Produces a DOUBLE result. Added in MySQL 8.0.17.\n\no FLOAT[(P)]\n\n  If the precision P is not specified, produces a result of type FLOAT.\n  If P is provided and 0 <= < P <= 24, the result is of type FLOAT. If\n  25 <= P <= 53, the result is of type DOUBLE. If P < 0 or P > 53, an\n  error is returned. Added in MySQL 8.0.17.\n\no JSON\n\n  Produces a JSON value. For details on the rules for conversion of\n  values between JSON and other types, see\n  https://dev.mysql.com/doc/refman/8.0/en/json.html#json-comparison.\n\no NCHAR[(N)]\n\n  Like CHAR, but produces a string with the national character set. See\n  https://dev.mysql.com/doc/refman/8.0/en/charset-national.html.\n\n  Unlike CHAR, NCHAR does not permit trailing character set information\n  to be specified.\n\no REAL\n\n  Produces a result of type REAL. This is actually FLOAT if\n  REAL_AS_FLOAT SQL mode is enabled; otherwise the result is of type\n  DOUBLE.\n\no SIGNED [INTEGER]\n\n  Produces a signed integer value.\n\no TIME\n\n  Produces a TIME value.\n\no UNSIGNED [INTEGER]\n\n  Produces an unsigned integer value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html'),(235,'EXTRACTVALUE',12,'Syntax:\nExtractValue(xml_frag, xpath_expr)\n\nExtractValue() takes two string arguments, a fragment of XML markup\nxml_frag and an XPath expression xpath_expr (also known as a locator);\nit returns the text (CDATA) of the first text node which is a child of\nthe element or elements matched by the XPath expression.\n\nUsing this function is the equivalent of performing a match using the\nxpath_expr after appending /text(). In other words,\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b\') and\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b/text()\') produce the same\nresult.\n\nIf multiple matches are found, the content of the first child text node\nof each matching element is returned (in the order matched) as a\nsingle, space-delimited string.\n\nIf no matching text node is found for the expression (including the\nimplicit /text())---for whatever reason, as long as xpath_expr is\nvalid, and xml_frag consists of elements which are properly nested and\nclosed---an empty string is returned. No distinction is made between a\nmatch on an empty element and no match at all. This is by design.\n\nIf you need to determine whether no matching element was found in\nxml_frag or such an element was found but contained no child text\nnodes, you should test the result of an expression that uses the XPath\ncount() function. For example, both of these statements return an empty\nstring, as shown here:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nHowever, you can determine whether there was actually a matching\nelement using the following:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 1                                   |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 0                                   |\n+-------------------------------------+\n1 row in set (0.01 sec)\n\n*Important*:\n\nExtractValue() returns only CDATA, and does not return any tags that\nmight be contained within a matching tag, nor any of their content (see\nthe result returned as val1 in the following example).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/xml-functions.html\n\n','mysql> SELECT\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a\') AS val1,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a/b\') AS val2,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'//b\') AS val3,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/b\') AS val4,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b><b>eee</b></a>\', \'//b\') AS val5;\n\n+------+------+------+------+---------+\n| val1 | val2 | val3 | val4 | val5    |\n+------+------+------+------+---------+\n| ccc  | ddd  | ddd  |      | ddd eee |\n+------+------+------+------+---------+\n','https://dev.mysql.com/doc/refman/8.0/en/xml-functions.html'),(236,'UPDATEXML',12,'Syntax:\nUpdateXML(xml_target, xpath_expr, new_xml)\n\nThis function replaces a single portion of a given fragment of XML\nmarkup xml_target with a new XML fragment new_xml, and then returns the\nchanged XML. The portion of xml_target that is replaced matches an\nXPath expression xpath_expr supplied by the user.\n\nIf no expression matching xpath_expr is found, or if multiple matches\nare found, the function returns the original xml_target XML fragment.\nAll three arguments should be strings.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/xml-functions.html\n\n','mysql> SELECT\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a\', \'<e>fff</e>\') AS val1,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/b\', \'<e>fff</e>\') AS val2,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'//b\', \'<e>fff</e>\') AS val3,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val4,\n    ->   UpdateXML(\'<a><d></d><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val5\n    -> \\G\n\n*************************** 1. row ***************************\nval1: <e>fff</e>\nval2: <a><b>ccc</b><d></d></a>\nval3: <a><e>fff</e><d></d></a>\nval4: <a><b>ccc</b><e>fff</e></a>\nval5: <a><d></d><b>ccc</b><d></d></a>\n','https://dev.mysql.com/doc/refman/8.0/en/xml-functions.html'),(237,'|',15,'Syntax:\n|\n\nBitwise OR.\n\nThe result type depends on whether the arguments are evaluated as\nbinary strings or numbers:\n\no Binary-string evaluation occurs when the arguments have a binary\n  string type, and at least one of them is not a hexadecimal literal,\n  bit literal, or NULL literal. Numeric evaluation occurs otherwise,\n  with argument conversion to unsigned 64-bit integers as necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the arguments. If the arguments have unequal lengths, an\n  ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. Numeric evaluation\n  produces an unsigned 64-bit integer.\n\nFor more information, see the introductory discussion in this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT 29 | 15;\n        -> 31\nmysql> SELECT _binary X\'40404040\' | X\'01020304\';\n        -> \'ABCD\'\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(238,'&',15,'Syntax:\n&\n\nBitwise AND.\n\nThe result type depends on whether the arguments are evaluated as\nbinary strings or numbers:\n\no Binary-string evaluation occurs when the arguments have a binary\n  string type, and at least one of them is not a hexadecimal literal,\n  bit literal, or NULL literal. Numeric evaluation occurs otherwise,\n  with argument conversion to unsigned 64-bit integers as necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the arguments. If the arguments have unequal lengths, an\n  ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. Numeric evaluation\n  produces an unsigned 64-bit integer.\n\nFor more information, see the introductory discussion in this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT 29 & 15;\n        -> 13\nmysql> SELECT HEX(_binary X\'FF\' & b\'11110000\');\n        -> \'F0\'\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(239,'^',15,'Syntax:\n^\n\nBitwise XOR.\n\nThe result type depends on whether the arguments are evaluated as\nbinary strings or numbers:\n\no Binary-string evaluation occurs when the arguments have a binary\n  string type, and at least one of them is not a hexadecimal literal,\n  bit literal, or NULL literal. Numeric evaluation occurs otherwise,\n  with argument conversion to unsigned 64-bit integers as necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the arguments. If the arguments have unequal lengths, an\n  ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. Numeric evaluation\n  produces an unsigned 64-bit integer.\n\nFor more information, see the introductory discussion in this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT 1 ^ 1;\n        -> 0\nmysql> SELECT 1 ^ 0;\n        -> 1\nmysql> SELECT 11 ^ 3;\n        -> 8\nmysql> SELECT HEX(_binary X\'FEDC\' ^ X\'1111\');\n        -> \'EFCD\'\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(240,'<<',15,'Syntax:\n<<\n\nShifts a longlong (BIGINT) number or binary string to the left.\n\nThe result type depends on whether the bit argument is evaluated as a\nbinary string or number:\n\no Binary-string evaluation occurs when the bit argument has a binary\n  string type, and is not a hexadecimal literal, bit literal, or NULL\n  literal. Numeric evaluation occurs otherwise, with argument\n  conversion to an unsigned 64-bit integer as necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the bit argument. Numeric evaluation produces an unsigned 64-bit\n  integer.\n\nBits shifted off the end of the value are lost without warning,\nregardless of the argument type. In particular, if the shift count is\ngreater or equal to the number of bits in the bit argument, all bits in\nthe result are 0.\n\nFor more information, see the introductory discussion in this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT 1 << 2;\n        -> 4\nmysql> SELECT HEX(_binary X\'00FF00FF00FF\' << 8);\n        -> \'FF00FF00FF00\'\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(241,'>>',15,'Syntax:\n>>\n\nShifts a longlong (BIGINT) number or binary string to the right.\n\nThe result type depends on whether the bit argument is evaluated as a\nbinary string or number:\n\no Binary-string evaluation occurs when the bit argument has a binary\n  string type, and is not a hexadecimal literal, bit literal, or NULL\n  literal. Numeric evaluation occurs otherwise, with argument\n  conversion to an unsigned 64-bit integer as necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the bit argument. Numeric evaluation produces an unsigned 64-bit\n  integer.\n\nBits shifted off the end of the value are lost without warning,\nregardless of the argument type. In particular, if the shift count is\ngreater or equal to the number of bits in the bit argument, all bits in\nthe result are 0.\n\nFor more information, see the introductory discussion in this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT 4 >> 2;\n        -> 1\nmysql> SELECT HEX(_binary X\'00FF00FF00FF\' >> 8);\n        -> \'0000FF00FF00\'\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(242,'~',15,'Syntax:\n~\n\nInvert all bits.\n\nThe result type depends on whether the bit argument is evaluated as a\nbinary string or number:\n\no Binary-string evaluation occurs when the bit argument has a binary\n  string type, and is not a hexadecimal literal, bit literal, or NULL\n  literal. Numeric evaluation occurs otherwise, with argument\n  conversion to an unsigned 64-bit integer as necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the bit argument. Numeric evaluation produces an unsigned 64-bit\n  integer.\n\nFor more information, see the introductory discussion in this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT 5 & ~1;\n        -> 4\nmysql> SELECT HEX(~X\'0000FFFF1111EEEE\');\n        -> \'FFFF0000EEEE1111\'\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(243,'BIT_COUNT',15,'Syntax:\nBIT_COUNT(N)\n\nReturns the number of bits that are set in the argument N as an\nunsigned 64-bit integer, or NULL if the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n\n','mysql> SELECT BIT_COUNT(64), BIT_COUNT(BINARY 64);\n        -> 1, 7\nmysql> SELECT BIT_COUNT(\'64\'), BIT_COUNT(_binary \'64\');\n        -> 1, 7\nmysql> SELECT BIT_COUNT(X\'40\'), BIT_COUNT(_binary X\'40\');\n        -> 1, 1\n','https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html'),(244,'AES_DECRYPT',16,'Syntax:\nAES_DECRYPT(crypt_str,key_str[,init_vector])\n\nThis function decrypts data using the official AES (Advanced Encryption\nStandard) algorithm. For more information, see the description of\nAES_ENCRYPT().\n\nThe optional initialization vector argument, init_vector. Statements\nthat use AES_DECRYPT() are unsafe for statement-based replication.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(245,'AES_ENCRYPT',16,'Syntax:\nAES_ENCRYPT(str,key_str[,init_vector])\n\nAES_ENCRYPT() and AES_DECRYPT() implement encryption and decryption of\ndata using the official AES (Advanced Encryption Standard) algorithm,\npreviously known as \"Rijndael.\" The AES standard permits various key\nlengths. By default these functions implement AES with a 128-bit key\nlength. Key lengths of 196 or 256 bits can be used, as described later.\nThe key length is a trade off between performance and security.\n\nAES_ENCRYPT() encrypts the string str using the key string key_str and\nreturns a binary string containing the encrypted output. AES_DECRYPT()\ndecrypts the encrypted string crypt_str using the key string key_str\nand returns the original plaintext string. If either function argument\nis NULL, the function returns NULL.\n\nThe str and crypt_str arguments can be any length, and padding is\nautomatically added to str so it is a multiple of a block as required\nby block-based algorithms such as AES. This padding is automatically\nremoved by the AES_DECRYPT() function. The length of crypt_str can be\ncalculated using this formula:\n\n16 * (trunc(string_length / 16) + 1)\n\nFor a key length of 128 bits, the most secure way to pass a key to the\nkey_str argument is to create a truly random 128-bit value and pass it\nas a binary value. For example:\n\nINSERT INTO t\nVALUES (1,AES_ENCRYPT(\'text\',UNHEX(\'F3229A0B371ED2D9441B830D21A390C3\')));\n\nA passphrase can be used to generate an AES key by hashing the\npassphrase. For example:\n\nINSERT INTO t\nVALUES (1,AES_ENCRYPT(\'text\', UNHEX(SHA2(\'My secret passphrase\',512))));\n\nDo not pass a password or passphrase directly to crypt_str, hash it\nfirst. Previous versions of this documentation suggested the former\napproach, but it is no longer recommended as the examples shown here\nare more secure.\n\nIf AES_DECRYPT() detects invalid data or incorrect padding, it returns\nNULL. However, it is possible for AES_DECRYPT() to return a non-NULL\nvalue (possibly garbage) if the input data or the key is invalid.\n\nAES_ENCRYPT() and AES_DECRYPT() permit control of the block encryption\nmode and take an optional init_vector initialization vector argument:\n\no The block_encryption_mode system variable controls the mode for\n  block-based encryption algorithms. Its default value is aes-128-ecb,\n  which signifies encryption using a key length of 128 bits and ECB\n  mode. For a description of the permitted values of this variable, see\n  https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\no The optional init_vector argument provides an initialization vector\n  for block encryption modes that require it.\n\nFor modes that require the optional init_vector argument, it must be 16\nbytes or longer (bytes in excess of 16 are ignored). An error occurs if\ninit_vector is missing.\n\nFor modes that do not require init_vector, it is ignored and a warning\nis generated if it is specified.\n\nA random string of bytes to use for the initialization vector can be\nproduced by calling RANDOM_BYTES(16). For encryption modes that require\nan initialization vector, the same vector must be used for encryption\nand decryption.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SET block_encryption_mode = \'aes-256-cbc\';\nmysql> SET @key_str = SHA2(\'My secret passphrase\',512);\nmysql> SET @init_vector = RANDOM_BYTES(16);\nmysql> SET @crypt_str = AES_ENCRYPT(\'text\',@key_str,@init_vector);\nmysql> SELECT AES_DECRYPT(@crypt_str,@key_str,@init_vector);\n+-----------------------------------------------+\n| AES_DECRYPT(@crypt_str,@key_str,@init_vector) |\n+-----------------------------------------------+\n| text                                          |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(246,'COMPRESS',16,'Syntax:\nCOMPRESS(string_to_compress)\n\nCompresses a string and returns the result as a binary string. This\nfunction requires MySQL to have been compiled with a compression\nlibrary such as zlib. Otherwise, the return value is always NULL. The\ncompressed string can be uncompressed with UNCOMPRESS().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',1000)));\n        -> 21\nmysql> SELECT LENGTH(COMPRESS(\'\'));\n        -> 0\nmysql> SELECT LENGTH(COMPRESS(\'a\'));\n        -> 13\nmysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',16)));\n        -> 15\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(247,'DECODE',16,'Syntax:\nDECODE(crypt_str,pass_str)\n\nThis function was removed in MySQL 8.0.3.\n\nConsider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(248,'DES_DECRYPT',16,'Syntax:\nDES_DECRYPT(crypt_str[,key_str])\n\nThis function was removed in MySQL 8.0.3.\n\nConsider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(249,'DES_ENCRYPT',16,'Syntax:\nDES_ENCRYPT(str[,{key_num|key_str}])\n\nThis function was removed in MySQL 8.0.3.\n\nConsider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(250,'ENCODE',16,'Syntax:\nENCODE(str,pass_str)\n\nThis function was removed in MySQL 8.0.3.\n\nConsider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(251,'ENCRYPT',16,'Syntax:\nENCRYPT(str[,salt])\n\nThis function was removed in MySQL 8.0.3. For one-way hashing, consider\nusing SHA2() instead.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(252,'MD5',16,'Syntax:\nMD5(str)\n\nCalculates an MD5 128-bit checksum for the string. The value is\nreturned as a string of 32 hexadecimal digits, or NULL if the argument\nwas NULL. The return value can, for example, be used as a hash key. See\nthe notes at the beginning of this section about storing hash values\nefficiently.\n\nThe return value is a string in the connection character set.\n\nIf FIPS mode is enabled, MD5() returns NULL. See\nhttps://dev.mysql.com/doc/refman/8.0/en/fips-mode.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SELECT MD5(\'testing\');\n        -> \'ae2b1fca515949e5d54fb22b8ed95575\'\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(253,'PASSWORD',16,'Syntax:\nPASSWORD(str)\n\nThis function was removed in MySQL 8.0.11.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(254,'RANDOM_BYTES',16,'Syntax:\nRANDOM_BYTES(len)\n\nThis function returns a binary string of len random bytes generated\nusing the random number generator of the SSL library. Permitted values\nof len range from 1 to 1024. For values outside that range,\nRANDOM_BYTES() generates a warning and returns NULL.\n\nRANDOM_BYTES() can be used to provide the initialization vector for the\nAES_DECRYPT() and AES_ENCRYPT() functions. For use in that context, len\nmust be at least 16. Larger values are permitted, but bytes in excess\nof 16 are ignored.\n\nRANDOM_BYTES() generates a random value, which makes its result\nnondeterministic. Consequently, statements that use this function are\nunsafe for statement-based replication.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(255,'SHA1',16,'Syntax:\nSHA1(str), SHA(str)\n\nCalculates an SHA-1 160-bit checksum for the string, as described in\nRFC 3174 (Secure Hash Algorithm). The value is returned as a string of\n40 hexadecimal digits, or NULL if the argument was NULL. One of the\npossible uses for this function is as a hash key. See the notes at the\nbeginning of this section about storing hash values efficiently. SHA()\nis synonymous with SHA1().\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SELECT SHA1(\'abc\');\n        -> \'a9993e364706816aba3e25717850c26c9cd0d89d\'\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(256,'SHA2',16,'Syntax:\nSHA2(str, hash_length)\n\nCalculates the SHA-2 family of hash functions (SHA-224, SHA-256,\nSHA-384, and SHA-512). The first argument is the plaintext string to be\nhashed. The second argument indicates the desired bit length of the\nresult, which must have a value of 224, 256, 384, 512, or 0 (which is\nequivalent to 256). If either argument is NULL or the hash length is\nnot one of the permitted values, the return value is NULL. Otherwise,\nthe function result is a hash value containing the desired number of\nbits. See the notes at the beginning of this section about storing hash\nvalues efficiently.\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SELECT SHA2(\'abc\', 224);\n        -> \'23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7\'\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(257,'STATEMENT_DIGEST',16,'STATEMENT_DIGEST(statement)\n\nGiven an SQL statement as a string, returns the statement digest hash\nvalue as a string in the connection character set, or NULL if the\nargument is NULL. The related STATEMENT_DIGEST_TEXT() function returns\nthe normalized statement digest. For information about statement\ndigesting, see\nhttps://dev.mysql.com/doc/refman/8.0/en/performance-schema-statement-di\ngests.html.\n\nBoth functions use the MySQL parser to parse the statement. If parsing\nfails, an error occurs. The error message includes the parse error only\nif the statement is provided as a literal string.\n\nThe max_digest_length system variable determines the maximum number of\nbytes available to these functions for computing normalized statement\ndigests.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SET @stmt = \'SELECT * FROM mytable WHERE cola = 10 AND colb = 20\';\nmysql> SELECT STATEMENT_DIGEST(@stmt);\n+------------------------------------------------------------------+\n| STATEMENT_DIGEST(@stmt)                                          |\n+------------------------------------------------------------------+\n| 3bb95eeade896657c4526e74ff2a2862039d0a0fe8a9e7155b5fe492cbd78387 |\n+------------------------------------------------------------------+\nmysql> SELECT STATEMENT_DIGEST_TEXT(@stmt);\n+----------------------------------------------------------+\n| STATEMENT_DIGEST_TEXT(@stmt)                             |\n+----------------------------------------------------------+\n| SELECT * FROM `mytable` WHERE `cola` = ? AND `colb` = ?  |\n+----------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(258,'STATEMENT_DIGEST_TEXT',16,'STATEMENT_DIGEST_TEXT(statement)\n\nGiven an SQL statement as a string, returns the normalized statement\ndigest as a string in the connection character set, or NULL if the\nargument is NULL. For additional discussion and examples, see the\ndescription of the related STATEMENT_DIGEST() function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(259,'UNCOMPRESS',16,'Syntax:\nUNCOMPRESS(string_to_uncompress)\n\nUncompresses a string compressed by the COMPRESS() function. If the\nargument is not a compressed value, the result is NULL. This function\nrequires MySQL to have been compiled with a compression library such as\nzlib. Otherwise, the return value is always NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SELECT UNCOMPRESS(COMPRESS(\'any string\'));\n        -> \'any string\'\nmysql> SELECT UNCOMPRESS(\'any string\');\n        -> NULL\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(260,'UNCOMPRESSED_LENGTH',16,'Syntax:\nUNCOMPRESSED_LENGTH(compressed_string)\n\nReturns the length that the compressed string had before being\ncompressed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','mysql> SELECT UNCOMPRESSED_LENGTH(COMPRESS(REPEAT(\'a\',30)));\n        -> 30\n','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(261,'VALIDATE_PASSWORD_STRENGTH',16,'Syntax:\nVALIDATE_PASSWORD_STRENGTH(str)\n\nGiven an argument representing a plaintext password, this function\nreturns an integer to indicate how strong the password is. The return\nvalue ranges from 0 (weak) to 100 (strong).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html'),(262,'GET_LOCK',17,'Syntax:\nGET_LOCK(str,timeout)\n\nTries to obtain a lock with a name given by the string str, using a\ntimeout of timeout seconds. A negative timeout value means infinite\ntimeout. The lock is exclusive. While held by one session, other\nsessions cannot obtain a lock of the same name.\n\nReturns 1 if the lock was obtained successfully, 0 if the attempt timed\nout (for example, because another client has previously locked the\nname), or NULL if an error occurred (such as running out of memory or\nthe thread was killed with mysqladmin kill).\n\nA lock obtained with GET_LOCK() is released explicitly by executing\nRELEASE_LOCK() or implicitly when your session terminates (either\nnormally or abnormally). Locks obtained with GET_LOCK() are not\nreleased when transactions commit or roll back.\n\nGET_LOCK() is implemented using the metadata locking (MDL) subsystem.\nMultiple simultaneous locks can be acquired and GET_LOCK() does not\nrelease any existing locks. For example, suppose that you execute these\nstatements:\n\nSELECT GET_LOCK(\'lock1\',10);\nSELECT GET_LOCK(\'lock2\',10);\nSELECT RELEASE_LOCK(\'lock2\');\nSELECT RELEASE_LOCK(\'lock1\');\n\nThe second GET_LOCK() acquires a second lock and both RELEASE_LOCK()\ncalls return 1 (success).\n\nIt is even possible for a given session to acquire multiple locks for\nthe same name. Other sessions cannot acquire a lock with that name\nuntil the acquiring session releases all its locks for the name.\n\nUniquely named locks acquired with GET_LOCK() appear in the Performance\nSchema metadata_locks table. The OBJECT_TYPE column says USER LEVEL\nLOCK and the OBJECT_NAME column indicates the lock name. In the case\nthat multiple locks are acquired for the same name, only the first lock\nfor the name registers a row in the metadata_locks table. Subsequent\nlocks for the name increment a counter in the lock but do not acquire\nadditional metadata locks. The metadata_locks row for the lock is\ndeleted when the last lock instance on the name is released.\n\nThe capability of acquiring multiple locks means there is the\npossibility of deadlock among clients. When this happens, the server\nchooses a caller and terminates its lock-acquisition request with an\nER_USER_LOCK_DEADLOCK error. This error does not cause transactions to\nroll back.\n\nMySQL enforces a maximum length on lock names of 64 characters.\n\nGET_LOCK() can be used to implement application locks or to simulate\nrecord locks. Names are locked on a server-wide basis. If a name has\nbeen locked within one session, GET_LOCK() blocks any request by\nanother session for a lock with the same name. This enables clients\nthat agree on a given lock name to use the name to perform cooperative\nadvisory locking. But be aware that it also enables a client that is\nnot among the set of cooperating clients to lock a name, either\ninadvertently or deliberately, and thus prevent any of the cooperating\nclients from locking that name. One way to reduce the likelihood of\nthis is to use lock names that are database-specific or\napplication-specific. For example, use lock names of the form\ndb_name.str or app_name.str.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html'),(263,'IS_FREE_LOCK',17,'Syntax:\nIS_FREE_LOCK(str)\n\nChecks whether the lock named str is free to use (that is, not locked).\nReturns 1 if the lock is free (no one is using the lock), 0 if the lock\nis in use, and NULL if an error occurs (such as an incorrect argument).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html'),(264,'IS_USED_LOCK',17,'Syntax:\nIS_USED_LOCK(str)\n\nChecks whether the lock named str is in use (that is, locked). If so,\nit returns the connection identifier of the client session that holds\nthe lock. Otherwise, it returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html'),(265,'RELEASE_ALL_LOCKS',17,'Syntax:\nRELEASE_ALL_LOCKS()\n\nReleases all named locks held by the current session and returns the\nnumber of locks released (0 if there were none)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html'),(266,'RELEASE_LOCK',17,'Syntax:\nRELEASE_LOCK(str)\n\nReleases the lock named by the string str that was obtained with\nGET_LOCK(). Returns 1 if the lock was released, 0 if the lock was not\nestablished by this thread (in which case the lock is not released),\nand NULL if the named lock did not exist. The lock does not exist if it\nwas never obtained by a call to GET_LOCK() or if it has previously been\nreleased.\n\nThe DO statement is convenient to use with RELEASE_LOCK(). See [HELP\nDO].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/locking-functions.html'),(267,'BENCHMARK',18,'Syntax:\nBENCHMARK(count,expr)\n\nThe BENCHMARK() function executes the expression expr repeatedly count\ntimes. It may be used to time how quickly MySQL processes the\nexpression. The result value is 0, or NULL for inappropriate arguments\nsuch as a NULL or negative repeat count.\n\nThe intended use is from within the mysql client, which reports query\nexecution times:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT BENCHMARK(1000000,AES_ENCRYPT(\'hello\',\'goodbye\'));\n+---------------------------------------------------+\n| BENCHMARK(1000000,AES_ENCRYPT(\'hello\',\'goodbye\')) |\n+---------------------------------------------------+\n|                                                 0 |\n+---------------------------------------------------+\n1 row in set (4.74 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(268,'CHARSET',18,'Syntax:\nCHARSET(str)\n\nReturns the character set of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT CHARSET(\'abc\');\n        -> \'utf8\'\nmysql> SELECT CHARSET(CONVERT(\'abc\' USING latin1));\n        -> \'latin1\'\nmysql> SELECT CHARSET(USER());\n        -> \'utf8\'\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(269,'COERCIBILITY',18,'Syntax:\nCOERCIBILITY(str)\n\nReturns the collation coercibility value of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT COERCIBILITY(\'abc\' COLLATE utf8_swedish_ci);\n        -> 0\nmysql> SELECT COERCIBILITY(USER());\n        -> 3\nmysql> SELECT COERCIBILITY(\'abc\');\n        -> 4\nmysql> SELECT COERCIBILITY(1000);\n        -> 5\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(270,'COLLATION',18,'Syntax:\nCOLLATION(str)\n\nReturns the collation of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT COLLATION(\'abc\');\n        -> \'utf8_general_ci\'\nmysql> SELECT COLLATION(_utf8mb4\'abc\');\n        -> \'utf8mb4_0900_ai_ci\'\nmysql> SELECT COLLATION(_latin1\'abc\');\n        -> \'latin1_swedish_ci\'\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(271,'CONNECTION_ID',18,'Syntax:\nCONNECTION_ID()\n\nReturns the connection ID (thread ID) for the connection. Every\nconnection has an ID that is unique among the set of currently\nconnected clients.\n\nThe value returned by CONNECTION_ID() is the same type of value as\ndisplayed in the ID column of the INFORMATION_SCHEMA.PROCESSLIST table,\nthe Id column of SHOW PROCESSLIST output, and the PROCESSLIST_ID column\nof the Performance Schema threads table.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT CONNECTION_ID();\n        -> 23786\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(272,'CURRENT_ROLE',18,'CURRENT_ROLE()\n\nReturns a utf8 string containing the current active roles for the\ncurrent session, separated by commas, or NONE if there are none. The\nvalue reflects the setting of the sql_quote_show_create system\nvariable.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','GRANT \'r1\', \'r2\' TO \'u1\'@\'localhost\';\nSET DEFAULT ROLE ALL TO \'u1\'@\'localhost\';\n\nmysql> SELECT CURRENT_ROLE();\n+-------------------+\n| CURRENT_ROLE()    |\n+-------------------+\n| `r1`@`%`,`r2`@`%` |\n+-------------------+\nmysql> SET ROLE \'r1\'; SELECT CURRENT_ROLE();\n+----------------+\n| CURRENT_ROLE() |\n+----------------+\n| `r1`@`%`       |\n+----------------+\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(273,'CURRENT_USER',18,'Syntax:\nCURRENT_USER, CURRENT_USER()\n\nReturns the user name and host name combination for the MySQL account\nthat the server used to authenticate the current client. This account\ndetermines your access privileges. The return value is a string in the\nutf8 character set.\n\nThe value of CURRENT_USER() can differ from the value of USER().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT USER();\n        -> \'davida@localhost\'\nmysql> SELECT * FROM mysql.user;\nERROR 1044: Access denied for user \'\'@\'localhost\' to\ndatabase \'mysql\'\nmysql> SELECT CURRENT_USER();\n        -> \'@localhost\'\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(274,'DATABASE',18,'Syntax:\nDATABASE()\n\nReturns the default (current) database name as a string in the utf8\ncharacter set. If there is no default database, DATABASE() returns\nNULL. Within a stored routine, the default database is the database\nthat the routine is associated with, which is not necessarily the same\nas the database that is the default in the calling context.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT DATABASE();\n        -> \'test\'\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(275,'FOUND_ROWS',18,'Syntax:\nFOUND_ROWS()\n\n*Note*:\n\nThe SQL_CALC_FOUND_ROWS query modifier and accompanying FOUND_ROWS()\nfunction are deprecated as of MySQL 8.0.17 and will be removed in a\nfuture MySQL version. As a replacement, considering executing your\nquery with LIMIT, and then a second query with COUNT(*) and without\nLIMIT to determine whether there are additional rows. For example,\ninstead of these queries:\n\nSELECT SQL_CALC_FOUND_ROWS * FROM tbl_name WHERE id > 100 LIMIT 10;\nSELECT FOUND_ROWS();\n\nUse these queries instead:\n\nSELECT * FROM tbl_name WHERE id > 100 LIMIT 10;\nSELECT COUNT(*) WHERE id > 100;\n\nCOUNT(*) is subject to certain optimizations. SQL_CALC_FOUND_ROWS\ncauses some optimizations to be disabled.\n\nA SELECT statement may include a LIMIT clause to restrict the number of\nrows the server returns to the client. In some cases, it is desirable\nto know how many rows the statement would have returned without the\nLIMIT, but without running the statement again. To obtain this row\ncount, include an SQL_CALC_FOUND_ROWS option in the SELECT statement,\nand then invoke FOUND_ROWS() afterward:\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT SQL_CALC_FOUND_ROWS * FROM tbl_name\n    -> WHERE id > 100 LIMIT 10;\nmysql> SELECT FOUND_ROWS();\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(276,'ICU_VERSION',18,'ICU_VERSION()\n\nThe version of the International Components for Unicode (ICU) library\nused to support regular expression operations (see\nhttps://dev.mysql.com/doc/refman/8.0/en/regexp.html). This function is\nprimarily intended for use in test cases.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(277,'LAST_INSERT_ID',18,'Syntax:\nLAST_INSERT_ID(), LAST_INSERT_ID(expr)\n\nWith no argument, LAST_INSERT_ID() returns a BIGINT UNSIGNED (64-bit)\nvalue representing the first automatically generated value successfully\ninserted for an AUTO_INCREMENT column as a result of the most recently\nexecuted INSERT statement. The value of LAST_INSERT_ID() remains\nunchanged if no rows are successfully inserted.\n\nWith an argument, LAST_INSERT_ID() returns an unsigned integer.\n\nFor example, after inserting a row that generates an AUTO_INCREMENT\nvalue, you can get the value like this:\n\nmysql> SELECT LAST_INSERT_ID();\n        -> 195\n\nThe currently executing statement does not affect the value of\nLAST_INSERT_ID(). Suppose that you generate an AUTO_INCREMENT value\nwith one statement, and then refer to LAST_INSERT_ID() in a\nmultiple-row INSERT statement that inserts rows into a table with its\nown AUTO_INCREMENT column. The value of LAST_INSERT_ID() will remain\nstable in the second statement; its value for the second and later rows\nis not affected by the earlier row insertions. (However, if you mix\nreferences to LAST_INSERT_ID() and LAST_INSERT_ID(expr), the effect is\nundefined.)\n\nIf the previous statement returned an error, the value of\nLAST_INSERT_ID() is undefined. For transactional tables, if the\nstatement is rolled back due to an error, the value of LAST_INSERT_ID()\nis left undefined. For manual ROLLBACK, the value of LAST_INSERT_ID()\nis not restored to that before the transaction; it remains as it was at\nthe point of the ROLLBACK.\n\nWithin the body of a stored routine (procedure or function) or a\ntrigger, the value of LAST_INSERT_ID() changes the same way as for\nstatements executed outside the body of these kinds of objects. The\neffect of a stored routine or trigger upon the value of\nLAST_INSERT_ID() that is seen by following statements depends on the\nkind of routine:\n\no If a stored procedure executes statements that change the value of\n  LAST_INSERT_ID(), the changed value is seen by statements that follow\n  the procedure call.\n\no For stored functions and triggers that change the value, the value is\n  restored when the function or trigger ends, so following statements\n  will not see a changed value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(278,'ROLES_GRAPHML',18,'ROLES_GRAPHML()\n\nReturns a utf8 string containing a GraphML document representing memory\nrole subgraphs. The ROLE_ADMIN or SUPER privilege is required to see\ncontent in the <graphml> element. Otherwise, the result shows only an\nempty element:\n\nmysql> SELECT ROLES_GRAPHML();\n+---------------------------------------------------+\n| ROLES_GRAPHML()                                   |\n+---------------------------------------------------+\n| <?xml version=\"1.0\" encoding=\"UTF-8\"?><graphml /> |\n+---------------------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(279,'ROW_COUNT',18,'Syntax:\nROW_COUNT()\n\nROW_COUNT() returns a value as follows:\n\no DDL statements: 0. This applies to statements such as CREATE TABLE or\n  DROP TABLE.\n\no DML statements other than SELECT: The number of affected rows. This\n  applies to statements such as UPDATE, INSERT, or DELETE (as before),\n  but now also to statements such as ALTER TABLE and LOAD DATA.\n\no SELECT: -1 if the statement returns a result set, or the number of\n  rows \"affected\" if it does not. For example, for SELECT * FROM t1,\n  ROW_COUNT() returns -1. For SELECT * FROM t1 INTO OUTFILE\n  \'file_name\', ROW_COUNT() returns the number of rows written to the\n  file.\n\no SIGNAL statements: 0.\n\nFor UPDATE statements, the affected-rows value by default is the number\nof rows actually changed. If you specify the CLIENT_FOUND_ROWS flag to\nmysql_real_connect() when connecting to mysqld, the affected-rows value\nis the number of rows \"found\"; that is, matched by the WHERE clause.\n\nFor REPLACE statements, the affected-rows value is 2 if the new row\nreplaced an old row, because in this case, one row was inserted after\nthe duplicate was deleted.\n\nFor INSERT ... ON DUPLICATE KEY UPDATE statements, the affected-rows\nvalue per row is 1 if the row is inserted as a new row, 2 if an\nexisting row is updated, and 0 if an existing row is set to its current\nvalues. If you specify the CLIENT_FOUND_ROWS flag, the affected-rows\nvalue is 1 (not 0) if an existing row is set to its current values.\n\nThe ROW_COUNT() value is similar to the value from the\nmysql_affected_rows() C API function and the row count that the mysql\nclient displays following statement execution.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           3 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> DELETE FROM t WHERE i IN(1,2);\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           2 |\n+-------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(280,'SCHEMA',18,'Syntax:\nSCHEMA()\n\nThis function is a synonym for DATABASE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(281,'SESSION_USER',18,'Syntax:\nSESSION_USER()\n\nSESSION_USER() is a synonym for USER().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(282,'SYSTEM_USER',18,'Syntax:\nSYSTEM_USER()\n\nSYSTEM_USER() is a synonym for USER().\n\n*Note*:\n\nThe SYSTEM_USER() function is distinct from the SYSTEM_USER privilege.\nThe former returns the current MySQL account name. The latter\ndistinguishes the system user and regular user account categories (see\nhttps://dev.mysql.com/doc/refman/8.0/en/account-categories.html).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(283,'USER',18,'Syntax:\nUSER()\n\nReturns the current MySQL user name and host name as a string in the\nutf8 character set.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT USER();\n        -> \'davida@localhost\'\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(284,'VERSION',18,'Syntax:\nVERSION()\n\nReturns a string that indicates the MySQL server version. The string\nuses the utf8 character set. The value might have a suffix in addition\nto the version number. See the description of the version system\nvariable in\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/information-functions.html\n\n','mysql> SELECT VERSION();\n        -> \'8.0.20-standard\'\n','https://dev.mysql.com/doc/refman/8.0/en/information-functions.html'),(285,'ST_GEOMCOLLFROMTEXT',20,'ST_GeomCollFromText(wkt[, srid [, options]]),\nST_GeometryCollectionFromText(wkt[, srid [, options]]),\nST_GeomCollFromTxt(wkt[, srid [, options]])\n\nConstructs a GeometryCollection value using its WKT representation and\nSRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','mysql> SET @g = \"MULTILINESTRING((10 10, 11 11), (9 9, 10 10))\";\nmysql> SELECT ST_AsText(ST_GeomCollFromText(@g));\n+--------------------------------------------+\n| ST_AsText(ST_GeomCollFromText(@g))         |\n+--------------------------------------------+\n| MULTILINESTRING((10 10,11 11),(9 9,10 10)) |\n+--------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(286,'ST_GEOMFROMTEXT',20,'ST_GeomFromText(wkt[, srid [, options]]), ST_GeometryFromText(wkt[,\nsrid [, options]])\n\nConstructs a geometry value of any type using its WKT representation\nand SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(287,'ST_LINEFROMTEXT',20,'ST_LineFromText(wkt[, srid [, options]]), ST_LineStringFromText(wkt[,\nsrid [, options]])\n\nConstructs a LineString value using its WKT representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(288,'ST_MLINEFROMTEXT',20,'ST_MLineFromText(wkt[, srid [, options]]),\nST_MultiLineStringFromText(wkt[, srid [, options]])\n\nConstructs a MultiLineString value using its WKT representation and\nSRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(289,'ST_MPOINTFROMTEXT',20,'ST_MPointFromText(wkt[, srid [, options]]), ST_MultiPointFromText(wkt[,\nsrid [, options]])\n\nConstructs a MultiPoint value using its WKT representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(290,'ST_MPOLYFROMTEXT',20,'ST_MPolyFromText(wkt[, srid [, options]]),\nST_MultiPolygonFromText(wkt[, srid [, options]])\n\nConstructs a MultiPolygon value using its WKT representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(291,'ST_POINTFROMTEXT',20,'ST_PointFromText(wkt[, srid [, options]])\n\nConstructs a Point value using its WKT representation and SRID.\n\nST_PointFromText() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(292,'ST_POLYFROMTEXT',20,'ST_PolyFromText(wkt[, srid [, options]]), ST_PolygonFromText(wkt[, srid\n[, options]])\n\nConstructs a Polygon value using its WKT representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkt-functions.html'),(293,'ST_GEOMCOLLFROMWKB',21,'ST_GeomCollFromWKB(wkb[, srid [, options]]),\nST_GeometryCollectionFromWKB(wkb[, srid [, options]])\n\nConstructs a GeometryCollection value using its WKB representation and\nSRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(294,'ST_GEOMFROMWKB',21,'ST_GeomFromWKB(wkb[, srid [, options]]), ST_GeometryFromWKB(wkb[, srid\n[, options]])\n\nConstructs a geometry value of any type using its WKB representation\nand SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(295,'ST_LINEFROMWKB',21,'ST_LineFromWKB(wkb[, srid [, options]]), ST_LineStringFromWKB(wkb[,\nsrid [, options]])\n\nConstructs a LineString value using its WKB representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(296,'ST_MLINEFROMWKB',21,'ST_MLineFromWKB(wkb[, srid [, options]]),\nST_MultiLineStringFromWKB(wkb[, srid [, options]])\n\nConstructs a MultiLineString value using its WKB representation and\nSRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(297,'ST_MPOINTFROMWKB',21,'ST_MPointFromWKB(wkb[, srid [, options]]), ST_MultiPointFromWKB(wkb[,\nsrid [, options]])\n\nConstructs a MultiPoint value using its WKB representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(298,'ST_MPOLYFROMWKB',21,'ST_MPolyFromWKB(wkb[, srid [, options]]), ST_MultiPolygonFromWKB(wkb[,\nsrid [, options]])\n\nConstructs a MultiPolygon value using its WKB representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(299,'ST_POINTFROMWKB',21,'ST_PointFromWKB(wkb[, srid [, options]])\n\nConstructs a Point value using its WKB representation and SRID.\n\nST_PointFromWKB() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(300,'ST_POLYFROMWKB',21,'ST_PolyFromWKB(wkb[, srid [, options]]), ST_PolygonFromWKB(wkb[, srid\n[, options]])\n\nConstructs a Polygon value using its WKB representation and SRID.\n\nThese functions handle their arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-wkb-functions.html'),(301,'GEOMCOLLECTION',22,'GeomCollection(g [, g] ...)\n\nConstructs a GeomCollection value from the geometry arguments.\n\nGeomCollection() returns all the proper geometries contained in the\narguments even if a nonsupported geometry is present.\n\nGeomCollection() with no arguments is permitted as a way to create an\nempty geometry. Also, functions such as ST_GeomFromText() that accept\nWKT geometry collection arguments understand both OpenGIS\n\'GEOMETRYCOLLECTION EMPTY\' standard syntax and MySQL\n\'GEOMETRYCOLLECTION()\' nonstandard syntax.\n\nGeomCollection() and GeometryCollection() are synonymous, with\nGeomCollection() the preferred function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(302,'GEOMETRYCOLLECTION',22,'GeometryCollection(g [, g] ...)\n\nConstructs a GeomCollection value from the geometry arguments.\n\nGeometryCollection() returns all the proper geometries contained in the\narguments even if a nonsupported geometry is present.\n\nGeometryCollection() with no arguments is permitted as a way to create\nan empty geometry. Also, functions such as ST_GeomFromText() that\naccept WKT geometry collection arguments understand both OpenGIS\n\'GEOMETRYCOLLECTION EMPTY\' standard syntax and MySQL\n\'GEOMETRYCOLLECTION()\' nonstandard syntax.\n\nGeomCollection() and GeometryCollection() are synonymous, with\nGeomCollection() the preferred function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(303,'LINESTRING',22,'LineString(pt [, pt] ...)\n\nConstructs a LineString value from a number of Point or WKB Point\narguments. If the number of arguments is less than two, the return\nvalue is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(304,'MULTILINESTRING',22,'MultiLineString(ls [, ls] ...)\n\nConstructs a MultiLineString value using LineString or WKB LineString\narguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(305,'MULTIPOINT',22,'MultiPoint(pt [, pt2] ...)\n\nConstructs a MultiPoint value using Point or WKB Point arguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(306,'MULTIPOLYGON',22,'MultiPolygon(poly [, poly] ...)\n\nConstructs a MultiPolygon value from a set of Polygon or WKB Polygon\narguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(307,'POINT',22,'Point(x, y)\n\nConstructs a Point using its coordinates.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(308,'POLYGON',22,'Polygon(ls [, ls] ...)\n\nConstructs a Polygon value from a number of LineString or WKB\nLineString arguments. If any argument does not represent a LinearRing\n(that is, not a closed and simple LineString), the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-mysql-specific-functions.html'),(309,'ST_ASBINARY',21,'ST_AsBinary(g [, options]), ST_AsWKB(g [, options])\n\nConverts a value in internal geometry format to its WKB representation\nand returns the binary result.\n\nThe function return value has geographic coordinates (latitude,\nlongitude) in the order specified by the spatial reference system that\napplies to the geometry argument. An optional options argument may be\ngiven to override the default axis order.\n\nST_AsBinary() and ST_AsWKB() handle their arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-format-conversion-functions.html\n\n','mysql> SET @g = ST_LineFromText(\'LINESTRING(0 5,5 10,10 15)\', 4326);\nmysql> SELECT ST_AsText(ST_GeomFromWKB(ST_AsWKB(@g)));\n+-----------------------------------------+\n| ST_AsText(ST_GeomFromWKB(ST_AsWKB(@g))) |\n+-----------------------------------------+\n| LINESTRING(5 0,10 5,15 10)              |\n+-----------------------------------------+\nmysql> SELECT ST_AsText(ST_GeomFromWKB(ST_AsWKB(@g, \'axis-order=long-lat\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_GeomFromWKB(ST_AsWKB(@g, \'axis-order=long-lat\'))) |\n+----------------------------------------------------------------+\n| LINESTRING(0 5,5 10,10 15)                                     |\n+----------------------------------------------------------------+\nmysql> SELECT ST_AsText(ST_GeomFromWKB(ST_AsWKB(@g, \'axis-order=lat-long\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_GeomFromWKB(ST_AsWKB(@g, \'axis-order=lat-long\'))) |\n+----------------------------------------------------------------+\n| LINESTRING(5 0,10 5,15 10)                                     |\n+----------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-format-conversion-functions.html'),(310,'ST_ASTEXT',21,'ST_AsText(g [, options]), ST_AsWKT(g [, options])\n\nConverts a value in internal geometry format to its WKT representation\nand returns the string result.\n\nThe function return value has geographic coordinates (latitude,\nlongitude) in the order specified by the spatial reference system that\napplies to the geometry argument. An optional options argument may be\ngiven to override the default axis order.\n\nST_AsText() and ST_AsWKT() handle their arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-format-conversion-functions.html\n\n','mysql> SET @g = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_GeomFromText(@g));\n+--------------------------------+\n| ST_AsText(ST_GeomFromText(@g)) |\n+--------------------------------+\n| LINESTRING(1 1,2 2,3 3)        |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-format-conversion-functions.html'),(311,'ST_SWAPXY',21,'ST_SwapXY(g)\n\nAccepts an argument in internal geometry format, swaps the X and Y\nvalues of each coordinate pair within the geometry, and returns the\nresult.\n\nST_SwapXY() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-format-conversion-functions.html\n\n','mysql> SET @g = ST_LineFromText(\'LINESTRING(0 5,5 10,10 15)\');\nmysql> SELECT ST_AsText(@g);\n+----------------------------+\n| ST_AsText(@g)              |\n+----------------------------+\n| LINESTRING(0 5,5 10,10 15) |\n+----------------------------+\nmysql> SELECT ST_AsText(ST_SwapXY(@g));\n+----------------------------+\n| ST_AsText(ST_SwapXY(@g))   |\n+----------------------------+\n| LINESTRING(5 0,10 5,15 10) |\n+----------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-format-conversion-functions.html'),(312,'ST_DIMENSION',23,'ST_Dimension(g)\n\nReturns the inherent dimension of the geometry value g. The dimension\ncan be −1, 0, 1, or 2. The meaning of these values is given in\nhttps://dev.mysql.com/doc/refman/8.0/en/gis-class-geometry.html.\n\nST_Dimension() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_Dimension(ST_GeomFromText(\'LineString(1 1,2 2)\'));\n+------------------------------------------------------+\n| ST_Dimension(ST_GeomFromText(\'LineString(1 1,2 2)\')) |\n+------------------------------------------------------+\n|                                                    1 |\n+------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html'),(313,'ST_ENVELOPE',23,'ST_Envelope(g)\n\nReturns the minimum bounding rectangle (MBR) for the geometry value g.\nThe result is returned as a Polygon value that is defined by the corner\npoints of the bounding box:\n\nPOLYGON((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n\nmysql> SELECT ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,2 2)\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,2 2)\'))) |\n+----------------------------------------------------------------+\n| POLYGON((1 1,2 1,2 2,1 2,1 1))                                 |\n+----------------------------------------------------------------+\n\nIf the argument is a point or a vertical or horizontal line segment,\nST_Envelope() returns the point or the line segment as its MBR rather\nthan returning an invalid polygon:\n\nmysql> SELECT ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,1 2)\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,1 2)\'))) |\n+----------------------------------------------------------------+\n| LINESTRING(1 1,1 2)                                            |\n+----------------------------------------------------------------+\n\nST_Envelope() handles its arguments as described in the introduction to\nthis section, with this exception:\n\no If the geometry has an SRID value for a geographic spatial reference\n  system (SRS), an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html'),(314,'ST_GEOMETRYTYPE',23,'ST_GeometryType(g)\n\nReturns a binary string indicating the name of the geometry type of\nwhich the geometry instance g is a member. The name corresponds to one\nof the instantiable Geometry subclasses.\n\nST_GeometryType() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_GeometryType(ST_GeomFromText(\'POINT(1 1)\'));\n+------------------------------------------------+\n| ST_GeometryType(ST_GeomFromText(\'POINT(1 1)\')) |\n+------------------------------------------------+\n| POINT                                          |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html'),(315,'ST_ISEMPTY',23,'ST_IsEmpty(g)\n\nThis function is a placeholder that returns 1 for an empty geometry\ncollection value or 0 otherwise.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. MySQL does not support GIS EMPTY values such\nas POINT EMPTY.\n\nST_IsEmpty() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html'),(316,'ST_ISSIMPLE',23,'ST_IsSimple(g)\n\nReturns 1 if the geometry value g is simple according to the ISO SQL/MM\nPart 3: Spatial standard. ST_IsSimple() returns 0 if the argument is\nnot simple.\n\nThe descriptions of the instantiable geometric classes given under\nhttps://dev.mysql.com/doc/refman/8.0/en/opengis-geometry-model.html\ninclude the specific conditions that cause class instances to be\nclassified as not simple.\n\nST_IsSimple() handles its arguments as described in the introduction to\nthis section, with this exception:\n\no If the geometry has a geographic SRS with a longitude or latitude\n  that is out of range, an error occurs:\n\n  o If any longitude argument is not in the range (−180, 180], an\n    ER_LONGITUDE_OUT_OF_RANGE error occurs.\n\n  o If any latitude argument is not in the range [−90, 90], an\n    ER_LATITUDE_OUT_OF_RANGE error occurs.\n\n  Ranges shown are in degrees. The exact range limits deviate slightly\n  due to floating-point arithmetic.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html'),(317,'ST_SRID',23,'ST_SRID(g[, srid])\n\nWith a single argument representing a valid geometry object g,\nST_SRID() returns an integer indicating the ID of the spatial reference\nsystem (SRS) associated with g.\n\nWith the optional second argument representing a valid SRID value,\nST_SRID() returns an object with the same type as its first argument\nwith an SRID value equal to the second argument. This only sets the\nSRID value of the object; it does not perform any transformation of\ncoordinate values.\n\nST_SRID() handles its arguments as described in the introduction to\nthis section, with this exception:\n\no For the single-argument syntax, ST_SRID() returns the geometry SRID\n  even if it refers to an undefined SRS. An ER_SRS_NOT_FOUND error does\n  not occur.\n\nST_SRID(g, target_srid) and ST_Transform(g, target_srid) differ as\nfollows:\n\no ST_SRID() changes the geometry SRID value without transforming its\n  coordinates.\n\no ST_Transform() transforms the geometry coordinates in addition to\n  changing its SRID value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html\n\n','mysql> SET @g = ST_GeomFromText(\'LineString(1 1,2 2)\', 0);\nmysql> SELECT ST_SRID(@g);\n+-------------+\n| ST_SRID(@g) |\n+-------------+\n|           0 |\n+-------------+\nmysql> SET @g = ST_SRID(@g, 4326);\nmysql> SELECT ST_SRID(@g);\n+-------------+\n| ST_SRID(@g) |\n+-------------+\n|        4326 |\n+-------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-general-property-functions.html'),(318,'ST_LATITUDE',24,'ST_Latitude(p [, new_latitude_val])\n\nWith a single argument representing a valid Point object p that has a\ngeographic spatial reference system (SRS), ST_Latitude() returns the\nlatitude value of p as a double-precision number.\n\nWith the optional second argument representing a valid latitude value,\nST_Latitude() returns a Point object like the first argument with its\nlatitude equal to the second argument.\n\nST_Latitude() handles its arguments as described in the introduction to\nthis section, with the addition that if the Point object is valid but\ndoes not have a geographic SRS, an ER_SRS_NOT_GEOGRAPHIC error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html\n\n','mysql> SET @pt = ST_GeomFromText(\'POINT(45 90)\', 4326);\nmysql> SELECT ST_Latitude(@pt);\n+------------------+\n| ST_Latitude(@pt) |\n+------------------+\n|               45 |\n+------------------+\nmysql> SELECT ST_AsText(ST_Latitude(@pt, 10));\n+---------------------------------+\n| ST_AsText(ST_Latitude(@pt, 10)) |\n+---------------------------------+\n| POINT(10 90)                    |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html'),(319,'ST_LONGITUDE',24,'ST_Longitude(p [, new_longitude_val])\n\nWith a single argument representing a valid Point object p that has a\ngeographic spatial reference system (SRS), ST_Longitude() returns the\nlongitude value of p as a double-precision number.\n\nWith the optional second argument representing a valid longitude value,\nST_Longitude() returns a Point object like the first argument with its\nlongitude equal to the second argument.\n\nST_Longitude() handles its arguments as described in the introduction\nto this section, with the addition that if the Point object is valid\nbut does not have a geographic SRS, an ER_SRS_NOT_GEOGRAPHIC error\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html\n\n','mysql> SET @pt = ST_GeomFromText(\'POINT(45 90)\', 4326);\nmysql> SELECT ST_Longitude(@pt);\n+-------------------+\n| ST_Longitude(@pt) |\n+-------------------+\n|                90 |\n+-------------------+\nmysql> SELECT ST_AsText(ST_Longitude(@pt, 10));\n+----------------------------------+\n| ST_AsText(ST_Longitude(@pt, 10)) |\n+----------------------------------+\n| POINT(45 10)                     |\n+----------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html'),(320,'ST_X',24,'ST_X(p[, new_x_val])\n\nWith a single argument representing a valid Point object p, ST_X()\nreturns the X-coordinate value of p as a double-precision number. As of\nMySQL 8.0.12, the X coordinate is considered to refer to the axis that\nappears first in the Point spatial reference system (SRS) definition.\n\nWith the optional second argument, ST_X() returns a Point object like\nthe first argument with its X coordinate equal to the second argument.\nAs of MySQL 8.0.12, if the Point object has a geographic SRS, the\nsecond argument must be in the proper range for longitude or latitude\nvalues.\n\nST_X() handles its arguments as described in the introduction to this\nsection.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html\n\n','mysql> SELECT ST_X(Point(56.7, 53.34));\n+--------------------------+\n| ST_X(Point(56.7, 53.34)) |\n+--------------------------+\n|                     56.7 |\n+--------------------------+\nmysql> SELECT ST_AsText(ST_X(Point(56.7, 53.34), 10.5));\n+-------------------------------------------+\n| ST_AsText(ST_X(Point(56.7, 53.34), 10.5)) |\n+-------------------------------------------+\n| POINT(10.5 53.34)                         |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html'),(321,'ST_Y',24,'ST_Y(p[, new_y_val])\n\nWith a single argument representing a valid Point object p, ST_Y()\nreturns the Y-coordinate value of p as a double-precision number. As of\nMySQL 8.0.12, the Y coordinate is considered to refer to the axis that\nappears second in the Point spatial reference system (SRS) definition.\n\nWith the optional second argument, ST_Y() returns a Point object like\nthe first argument with its Y coordinate equal to the second argument.\nAs of MySQL 8.0.12, if the Point object has a geographic SRS, the\nsecond argument must be in the proper range for longitude or latitude\nvalues.\n\nST_Y() handles its arguments as described in the introduction to this\nsection.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html\n\n','mysql> SELECT ST_Y(Point(56.7, 53.34));\n+--------------------------+\n| ST_Y(Point(56.7, 53.34)) |\n+--------------------------+\n|                    53.34 |\n+--------------------------+\nmysql> SELECT ST_AsText(ST_Y(Point(56.7, 53.34), 10.5));\n+-------------------------------------------+\n| ST_AsText(ST_Y(Point(56.7, 53.34), 10.5)) |\n+-------------------------------------------+\n| POINT(56.7 10.5)                          |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-point-property-functions.html'),(322,'ST_ENDPOINT',25,'ST_EndPoint(ls)\n\nReturns the Point that is the endpoint of the LineString value ls.\n\nST_EndPoint() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_EndPoint(ST_GeomFromText(@ls)));\n+----------------------------------------------+\n| ST_AsText(ST_EndPoint(ST_GeomFromText(@ls))) |\n+----------------------------------------------+\n| POINT(3 3)                                   |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html'),(323,'ST_ISCLOSED',25,'ST_IsClosed(ls)\n\nFor a LineString value ls, ST_IsClosed() returns 1 if ls is closed\n(that is, its ST_StartPoint() and ST_EndPoint() values are the same).\n\nFor a MultiLineString value ls, ST_IsClosed() returns 1 if ls is closed\n(that is, the ST_StartPoint() and ST_EndPoint() values are the same for\neach LineString in ls).\n\nST_IsClosed() returns 0 if ls is not closed, and NULL if ls is NULL.\n\nST_IsClosed() handles its arguments as described in the introduction to\nthis section, with this exception:\n\no If the geometry has an SRID value for a geographic spatial reference\n  system (SRS), an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls1 = \'LineString(1 1,2 2,3 3,2 2)\';\nmysql> SET @ls2 = \'LineString(1 1,2 2,3 3,1 1)\';\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls1));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls1)) |\n+------------------------------------+\n|                                  0 |\n+------------------------------------+\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls2));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls2)) |\n+------------------------------------+\n|                                  1 |\n+------------------------------------+\n\nmysql> SET @ls3 = \'MultiLineString((1 1,2 2,3 3),(4 4,5 5))\';\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls3));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls3)) |\n+------------------------------------+\n|                                  0 |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html'),(324,'ST_LENGTH',25,'ST_Length(ls [, unit])\n\nReturns a double-precision number indicating the length of the\nLineString or MultiLineString value ls in its associated spatial\nreference system. The length of a MultiLineString value is equal to the\nsum of the lengths of its elements.\n\nST_Length() computes a result as follows:\n\no If the geometry is a valid LineString in a Cartesian SRS, the return\n  value is the Cartesian length of the geometry.\n\no If the geometry is a valid MultiLineString in a Cartesian SRS, the\n  return value is the sum of the Cartesian lengths of its elements.\n\no If the geometry is a valid LineString in a geographic SRS, the return\n  value is the geodetic length of the geometry in that SRS, in meters.\n\no If the geometry is a valid MultiLineString in a geographic SRS, the\n  return value is the sum of the geodetic lengths of its elements in\n  that SRS, in meters.\n\nST_Length() handles its arguments as described in the introduction to\nthis section, with these exceptions:\n\no If the geometry is not a LineString or MultiLineString, the return\n  value is NULL.\n\no If the geometry is geometrically invalid, either the result is an\n  undefined length (that is, it can be any number), or an error occurs.\n\no If the length computation result is +inf, an ER_DATA_OUT_OF_RANGE\n  error occurs.\n\no If the geometry has a geographic SRS with a longitude or latitude\n  that is out of range, an error occurs:\n\n  o If any longitude argument is not in the range (−180, 180], an\n    ER_LONGITUDE_OUT_OF_RANGE error occurs.\n\n  o If any latitude argument is not in the range [−90, 90], an\n    ER_LATITUDE_OUT_OF_RANGE error occurs.\n\n  Ranges shown are in degrees. The exact range limits deviate slightly\n  due to floating-point arithmetic.\n\nAs of MySQL 8.0.16, ST_Length() permits an optional unit argument that\nspecifies the linear unit for the returned length value. These rules\napply:\n\no If a unit is specified but not supported by MySQL, an\n  ER_UNIT_NOT_FOUND error occurs.\n\no If a supported linear unit is specified and the SRID is 0, an\n  ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT error occurs.\n\no If a supported linear unit is specified and the SRID is not 0, the\n  result is in that unit.\n\no If a unit is not specified, the result is in the unit of the SRS of\n  the geometries, whether Cartesian or geographic. Currently, all MySQL\n  SRSs are expressed in meters.\n\nA unit is supported if it is found in the INFORMATION_SCHEMA\nST_UNITS_OF_MEASURE table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/st-units-of-measure-table.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = ST_GeomFromText(\'LineString(1 1,2 2,3 3)\');\nmysql> SELECT ST_Length(@ls);\n+--------------------+\n| ST_Length(@ls)     |\n+--------------------+\n| 2.8284271247461903 |\n+--------------------+\n\nmysql> SET @mls = ST_GeomFromText(\'MultiLineString((1 1,2 2,3 3),(4 4,5 5))\');\nmysql> SELECT ST_Length(@mls);\n+-------------------+\n| ST_Length(@mls)   |\n+-------------------+\n| 4.242640687119286 |\n+-------------------+\n\nmysql> SET @ls = ST_GeomFromText(\'LineString(1 1,2 2,3 3)\', 4326);\nmysql> SELECT ST_Length(@ls);\n+-------------------+\n| ST_Length(@ls)    |\n+-------------------+\n| 313701.9623204328 |\n+-------------------+\nmysql> SELECT ST_Length(@ls, \'metre\');\n+-------------------------+\n| ST_Length(@ls, \'metre\') |\n+-------------------------+\n|       313701.9623204328 |\n+-------------------------+\nmysql> SELECT ST_Length(@ls, \'foot\');\n+------------------------+\n| ST_Length(@ls, \'foot\') |\n+------------------------+\n|     1029205.9131247795 |\n+------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html'),(325,'ST_NUMPOINTS',25,'ST_NumPoints(ls)\n\nReturns the number of Point objects in the LineString value ls.\n\nST_NumPoints() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_NumPoints(ST_GeomFromText(@ls));\n+------------------------------------+\n| ST_NumPoints(ST_GeomFromText(@ls)) |\n+------------------------------------+\n|                                  3 |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html'),(326,'ST_POINTN',25,'ST_PointN(ls, N)\n\nReturns the N-th Point in the Linestring value ls. Points are numbered\nbeginning with 1.\n\nST_PointN() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_PointN(ST_GeomFromText(@ls),2));\n+----------------------------------------------+\n| ST_AsText(ST_PointN(ST_GeomFromText(@ls),2)) |\n+----------------------------------------------+\n| POINT(2 2)                                   |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html'),(327,'ST_STARTPOINT',25,'ST_StartPoint(ls)\n\nReturns the Point that is the start point of the LineString value ls.\n\nST_StartPoint() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_StartPoint(ST_GeomFromText(@ls)));\n+------------------------------------------------+\n| ST_AsText(ST_StartPoint(ST_GeomFromText(@ls))) |\n+------------------------------------------------+\n| POINT(1 1)                                     |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-linestring-property-functions.html'),(328,'ST_AREA',26,'ST_Area({poly|mpoly})\n\nReturns a double-precision number indicating the area of the Polygon or\nMultiPolygon argument, as measured in its spatial reference system.\n\nAs of MySQL 8.0.13, ST_Area() handles its arguments as described in the\nintroduction to this section, with these exceptions:\n\no If the geometry is geometrically invalid, either the result is an\n  undefined area (that is, it can be any number), or an error occurs.\n\no If the geometry is valid but is not a Polygon or MultiPolygon object,\n  an ER_UNEXPECTED_GEOMETRY_TYPE error occurs.\n\no If the geometry is a valid Polygon in a Cartesian SRS, the result is\n  the Cartesian area of the polygon.\n\no If the geometry is a valid MultiPolygon in a Cartesian SRS, the\n  result is the sum of the Cartesian area of the polygons.\n\no If the geometry is a valid Polygon in a geographic SRS, the result is\n  the geodetic area of the polygon in that SRS, in square meters.\n\no If the geometry is a valid MultiPolygon in a geographic SRS, the\n  result is the sum of geodetic area of the polygons in that SRS, in\n  square meters.\n\no If an area computation results in +inf, an ER_DATA_OUT_OF_RANGE error\n  occurs.\n\no If the geometry has a geographic SRS with a longitude or latitude\n  that is out of range, an error occurs:\n\n  o If any longitude argument is not in the range (−180, 180], an\n    ER_LONGITUDE_OUT_OF_RANGE error occurs.\n\n  o If any latitude argument is not in the range [−90, 90], an\n    ER_LATITUDE_OUT_OF_RANGE error occurs.\n\n  Ranges shown are in degrees. The exact range limits deviate slightly\n  due to floating-point arithmetic.\n\nPrior to MySQL 8.0.13, ST_Area() handles its arguments as described in\nthe introduction to this section, with these exceptions:\n\no For arguments of dimension 0 or 1, the result is 0.\n\no If a geometry is empty, the return value is 0 rather than NULL.\n\no For a geometry collection, the result is the sum of the area values\n  of all components. If the geometry collection is empty, its area is\n  returned as 0.\n\no If the geometry has an SRID value for a geographic spatial reference\n  system (SRS), an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 0,0 0),(1 1,1 2,2 1,1 1))\';\nmysql> SELECT ST_Area(ST_GeomFromText(@poly));\n+---------------------------------+\n| ST_Area(ST_GeomFromText(@poly)) |\n+---------------------------------+\n|                               4 |\n+---------------------------------+\n\nmysql> SET @mpoly =\n       \'MultiPolygon(((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1)))\';\nmysql> SELECT ST_Area(ST_GeomFromText(@mpoly));\n+----------------------------------+\n| ST_Area(ST_GeomFromText(@mpoly)) |\n+----------------------------------+\n|                                8 |\n+----------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html'),(329,'ST_CENTROID',26,'ST_Centroid({poly|mpoly})\n\nReturns the mathematical centroid for the Polygon or MultiPolygon\nargument as a Point. The result is not guaranteed to be on the\nMultiPolygon.\n\nThis function processes geometry collections by computing the centroid\npoint for components of highest dimension in the collection. Such\ncomponents are extracted and made into a single MultiPolygon,\nMultiLineString, or MultiPoint for centroid computation.\n\nST_Centroid() handles its arguments as described in the introduction to\nthis section, with these exceptions:\n\no The return value is NULL for the additional condition that the\n  argument is an empty geometry collection.\n\no If the geometry has an SRID value for a geographic spatial reference\n  system (SRS), an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       ST_GeomFromText(\'POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7,5 5))\');\nmysql> SELECT ST_GeometryType(@poly),ST_AsText(ST_Centroid(@poly));\n+------------------------+--------------------------------------------+\n| ST_GeometryType(@poly) | ST_AsText(ST_Centroid(@poly))              |\n+------------------------+--------------------------------------------+\n| POLYGON                | POINT(4.958333333333333 4.958333333333333) |\n+------------------------+--------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html'),(330,'ST_EXTERIORRING',26,'ST_ExteriorRing(poly)\n\nReturns the exterior ring of the Polygon value poly as a LineString.\n\nST_ExteriorRing() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_AsText(ST_ExteriorRing(ST_GeomFromText(@poly)));\n+----------------------------------------------------+\n| ST_AsText(ST_ExteriorRing(ST_GeomFromText(@poly))) |\n+----------------------------------------------------+\n| LINESTRING(0 0,0 3,3 3,3 0,0 0)                    |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html'),(331,'ST_INTERIORRINGN',26,'ST_InteriorRingN(poly, N)\n\nReturns the N-th interior ring for the Polygon value poly as a\nLineString. Rings are numbered beginning with 1.\n\nST_InteriorRingN() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_AsText(ST_InteriorRingN(ST_GeomFromText(@poly),1));\n+-------------------------------------------------------+\n| ST_AsText(ST_InteriorRingN(ST_GeomFromText(@poly),1)) |\n+-------------------------------------------------------+\n| LINESTRING(1 1,1 2,2 2,2 1,1 1)                       |\n+-------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html'),(332,'ST_NUMINTERIORRINGS',26,'ST_NumInteriorRing(poly), ST_NumInteriorRings(poly)\n\nReturns the number of interior rings in the Polygon value poly.\n\nST_NumInteriorRing() and ST_NuminteriorRings() handle their arguments\nas described in the introduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_NumInteriorRings(ST_GeomFromText(@poly));\n+---------------------------------------------+\n| ST_NumInteriorRings(ST_GeomFromText(@poly)) |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-polygon-property-functions.html'),(333,'ST_GEOMETRYN',27,'ST_GeometryN(gc, N)\n\nReturns the N-th geometry in the GeometryCollection value gc.\nGeometries are numbered beginning with 1.\n\nST_GeometryN() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-geometrycollection-property-functions.html\n\n','mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT ST_AsText(ST_GeometryN(ST_GeomFromText(@gc),1));\n+-------------------------------------------------+\n| ST_AsText(ST_GeometryN(ST_GeomFromText(@gc),1)) |\n+-------------------------------------------------+\n| POINT(1 1)                                      |\n+-------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-geometrycollection-property-functions.html'),(334,'ST_NUMGEOMETRIES',27,'ST_NumGeometries(gc)\n\nReturns the number of geometries in the GeometryCollection value gc.\n\nST_NumGeometries() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gis-geometrycollection-property-functions.html\n\n','mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT ST_NumGeometries(ST_GeomFromText(@gc));\n+----------------------------------------+\n| ST_NumGeometries(ST_GeomFromText(@gc)) |\n+----------------------------------------+\n|                                      2 |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/gis-geometrycollection-property-functions.html'),(335,'ST_BUFFER',27,'ST_Buffer(g, d[, strategy1[, strategy2[, strategy3]]])\n\nReturns a geometry that represents all points whose distance from the\ngeometry value g is less than or equal to a distance of d.\n\nIf the geometry argument is empty, ST_Buffer() returns an empty\ngeometry.\n\nIf the distance is 0, ST_Buffer() returns the geometry argument\nunchanged:\n\nmysql> SET @pt = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SELECT ST_AsText(ST_Buffer(@pt, 0));\n+------------------------------+\n| ST_AsText(ST_Buffer(@pt, 0)) |\n+------------------------------+\n| POINT(0 0)                   |\n+------------------------------+\n\nST_Buffer() supports negative distances for Polygon and MultiPolygon\nvalues, and for geometry collections containing Polygon or MultiPolygon\nvalues. The result may be an empty geometry.\n\nST_Buffer() permits up to three optional strategy arguments following\nthe distance argument. Strategies influence buffer computation. These\narguments are byte string values produced by the ST_Buffer_Strategy()\nfunction, to be used for point, join, and end strategies:\n\no Point strategies apply to Point and MultiPoint geometries. If no\n  point strategy is specified, the default is\n  ST_Buffer_Strategy(\'point_circle\', 32).\n\no Join strategies apply to LineString, MultiLineString, Polygon, and\n  MultiPolygon geometries. If no join strategy is specified, the\n  default is ST_Buffer_Strategy(\'join_round\', 32).\n\no End strategies apply to LineString and MultiLineString geometries. If\n  no end strategy is specified, the default is\n  ST_Buffer_Strategy(\'end_round\', 32).\n\nUp to one strategy of each type may be specified, and they may be given\nin any order.\n\nST_Buffer() handles its arguments as described in the introduction to\nthis section, with these exceptions:\n\no For a negative distance for Point, MultiPoint, LineString, and\n  MultiLineString values, and for geometry collections not containing\n  any Polygon or MultiPolygon values, an ER_WRONG_ARGUMENTS error\n  occurs.\n\no If multiple strategies of a given type are specified, an\n  ER_WRONG_ARGUMENTS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @pt = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt_strategy = ST_Buffer_Strategy(\'point_square\');\nmysql> SELECT ST_AsText(ST_Buffer(@pt, 2, @pt_strategy));\n+--------------------------------------------+\n| ST_AsText(ST_Buffer(@pt, 2, @pt_strategy)) |\n+--------------------------------------------+\n| POLYGON((-2 -2,2 -2,2 2,-2 2,-2 -2))       |\n+--------------------------------------------+\n\nmysql> SET @ls = ST_GeomFromText(\'LINESTRING(0 0,0 5,5 5)\');\nmysql> SET @end_strategy = ST_Buffer_Strategy(\'end_flat\');\nmysql> SET @join_strategy = ST_Buffer_Strategy(\'join_round\', 10);\nmysql> SELECT ST_AsText(ST_Buffer(@ls, 5, @end_strategy, @join_strategy))\n+---------------------------------------------------------------+\n| ST_AsText(ST_Buffer(@ls, 5, @end_strategy, @join_strategy))   |\n+---------------------------------------------------------------+\n| POLYGON((5 5,5 10,0 10,-3.5355339059327373 8.535533905932738, |\n| -5 5,-5 0,0 0,5 0,5 5))                                       |\n+---------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(336,'ST_BUFFER_STRATEGY',27,'ST_Buffer_Strategy(strategy[, points_per_circle])\n\nThis function returns a strategy byte string for use with ST_Buffer()\nto influence buffer computation.\n\nInformation about strategies is available at Boost.org\n(http://www.boost.org).\n\nThe first argument must be a string indicating a strategy option:\n\no For point strategies, permitted values are \'point_circle\' and\n  \'point_square\'.\n\no For join strategies, permitted values are \'join_round\' and\n  \'join_miter\'.\n\no For end strategies, permitted values are \'end_round\' and \'end_flat\'.\n\nIf the first argument is \'point_circle\', \'join_round\', \'join_miter\', or\n\'end_round\', the points_per_circle argument must be given as a positive\nnumeric value. The maximum points_per_circle value is the value of the\nmax_points_in_geometry system variable.\n\nFor examples, see the description of ST_Buffer().\n\nST_Buffer_Strategy() handles its arguments as described in the\nintroduction to this section, with these exceptions:\n\no If any argument is invalid, an ER_WRONG_ARGUMENTS error occurs.\n\no If the first argument is \'point_square\' or \'end_flat\', the\n  points_per_circle argument must not be given or an ER_WRONG_ARGUMENTS\n  error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(337,'ST_CONVEXHULL',27,'ST_ConvexHull(g)\n\nReturns a geometry that represents the convex hull of the geometry\nvalue g.\n\nThis function computes a geometry\'s convex hull by first checking\nwhether its vertex points are colinear. The function returns a linear\nhull if so, a polygon hull otherwise. This function processes geometry\ncollections by extracting all vertex points of all components of the\ncollection, creating a MultiPoint value from them, and computing its\nconvex hull.\n\nST_ConvexHull() handles its arguments as described in the introduction\nto this section, with this exception:\n\no The return value is NULL for the additional condition that the\n  argument is an empty geometry collection.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @g = \'MULTIPOINT(5 0,25 0,15 10,15 25)\';\nmysql> SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText(@g)));\n+-----------------------------------------------+\n| ST_AsText(ST_ConvexHull(ST_GeomFromText(@g))) |\n+-----------------------------------------------+\n| POLYGON((5 0,25 0,15 25,5 0))                 |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(338,'ST_DIFFERENCE',27,'ST_Difference(g1, g2)\n\nReturns a geometry that represents the point set difference of the\ngeometry values g1 and g2.\n\nST_Difference() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_AsText(ST_Difference(@g1, @g2));\n+------------------------------------+\n| ST_AsText(ST_Difference(@g1, @g2)) |\n+------------------------------------+\n| POINT(1 1)                         |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(339,'ST_INTERSECTION',27,'ST_Intersection(g1, g2)\n\nReturns a geometry that represents the point set intersection of the\ngeometry values g1 and g2.\n\nST_Intersection() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'LineString(1 1, 3 3)\');\nmysql> SET @g2 = ST_GeomFromText(\'LineString(1 3, 3 1)\');\nmysql> SELECT ST_AsText(ST_Intersection(@g1, @g2));\n+--------------------------------------+\n| ST_AsText(ST_Intersection(@g1, @g2)) |\n+--------------------------------------+\n| POINT(2 2)                           |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(340,'ST_SYMDIFFERENCE',27,'ST_SymDifference(g1, g2)\n\nReturns a geometry that represents the point set symmetric difference\nof the geometry values g1 and g2, which is defined as:\n\ng1 symdifference g2 := (g1 union g2) difference (g1 intersection g2)\n\nOr, in function call notation:\n\nST_SymDifference(g1, g2) = ST_Difference(ST_Union(g1, g2), ST_Intersection(g1, g2))\n\nST_SymDifference() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_AsText(ST_SymDifference(@g1, @g2));\n+---------------------------------------+\n| ST_AsText(ST_SymDifference(@g1, @g2)) |\n+---------------------------------------+\n| MULTIPOINT((1 1),(2 2))               |\n+---------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(341,'ST_TRANSFORM',27,'ST_Transform(g, target_srid)\n\nTransforms a geometry from one spatial reference system (SRS) to\nanother. The return value is a geometry of the same type as the input\ngeometry with all coordinates transformed to the target SRID,\ntarget_srid. Transformation support is limited to geographic SRSs,\nunless the SRID of the geometry argument is the same as the target SRID\nvalue, in which case the return value is the input geometry for any\nvalid SRS.\n\nST_Transform() handles its arguments as described in the introduction\nto this section, with these exceptions:\n\no Geometry arguments that have an SRID value for a geographic SRS do\n  not produce an error.\n\no If the geometry or target SRID argument has an SRID value that refers\n  to an undefined spatial reference system (SRS), an ER_SRS_NOT_FOUND\n  error occurs.\n\no If the geometry is in an SRS that ST_Transform() cannot transform\n  from, an ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED error occurs.\n\no If the target SRID is in an SRS that ST_Transform() cannot transform\n  to, an ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED error occurs.\n\no If the geometry is in an SRS that is not WGS 84 and has no TOWGS84\n  clause, an ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84 error occurs.\n\no If the target SRID is in an SRS that is not WGS 84 and has no TOWGS84\n  clause, an ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84 error occurs.\n\nST_SRID(g, target_srid) and ST_Transform(g, target_srid) differ as\nfollows:\n\no ST_SRID() changes the geometry SRID value without transforming its\n  coordinates.\n\no ST_Transform() transforms the geometry coordinates in addition to\n  changing its SRID value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @p = ST_GeomFromText(\'POINT(52.381389 13.064444)\', 4326);\nmysql> SELECT ST_AsText(@p);\n+----------------------------+\n| ST_AsText(@p)              |\n+----------------------------+\n| POINT(52.381389 13.064444) |\n+----------------------------+\nmysql> SET @p = ST_Transform(@p, 4230);\nmysql> SELECT ST_AsText(@p);\n+---------------------------------------------+\n| ST_AsText(@p)                               |\n+---------------------------------------------+\n| POINT(52.38208611407426 13.065520672345304) |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(342,'ST_UNION',27,'ST_Union(g1, g2)\n\nReturns a geometry that represents the point set union of the geometry\nvalues g1 and g2.\n\nST_Union() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'LineString(1 1, 3 3)\');\nmysql> SET @g2 = ST_GeomFromText(\'LineString(1 3, 3 1)\');\nmysql> SELECT ST_AsText(ST_Union(@g1, @g2));\n+--------------------------------------+\n| ST_AsText(ST_Union(@g1, @g2))        |\n+--------------------------------------+\n| MULTILINESTRING((1 1,3 3),(1 3,3 1)) |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-operator-functions.html'),(343,'ST_CONTAINS',28,'ST_Contains(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 completely contains g2. This\ntests the opposite relationship as ST_Within().\n\nST_Contains() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(344,'ST_CROSSES',28,'ST_Crosses(g1, g2)\n\nTwo geometries spatially cross if their spatial relation has the\nfollowing properties:\n\no Unless g1 and g2 are both of dimension 1: g1 crosses g2 if the\n  interior of g2 has points in common with the interior of g1, but g2\n  does not cover the entire interior of g1.\n\no If both g1 and g2 are of dimension 1: If the lines cross each other\n  in a finite number of points (that is, no common line segments, only\n  single points in common).\n\nThis function returns 1 or 0 to indicate whether g1 spatially crosses\ng2.\n\nST_Crosses() handles its arguments as described in the introduction to\nthis section except that the return value is NULL for these additional\nconditions:\n\no g1 is of dimension 2 (Polygon or MultiPolygon).\n\no g2 is of dimension 1 (Point or MultiPoint).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(345,'ST_DISJOINT',28,'ST_Disjoint(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially disjoint from (does\nnot intersect) g2.\n\nST_Disjoint() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(346,'ST_DISTANCE',28,'ST_Distance(g1, g2 [, unit])\n\nReturns the distance between g1 and g2, measured in the length unit of\nthe spatial reference system (SRS) of the geometry arguments, or in the\nunit of the optional unit argument if that is specified.\n\nThis function processes geometry collections by returning the shortest\ndistance among all combinations of the components of the two geometry\narguments.\n\nST_Distance() handles its geometry arguments as described in the\nintroduction to this section, with these exceptions:\n\no ST_Distance() detects arguments in a geographic (ellipsoidal) spatial\n  reference system and returns the geodetic distance on the ellipsoid.\n  As of MySQL 8.0.18, ST_Distance() supports distance calculations for\n  geographic SRS arguments of all geometry types. Prior to MySQL\n  8.0.18, the only permitted geographic argument types are Point and\n  Point, or Point and MultiPoint (in any argument order). If called\n  with other geometry type argument combinations in a geographic SRS,\n  an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\no If any argument is geometrically invalid, either the result is an\n  undefined distance (that is, it can be any number), or an error\n  occurs.\n\no If an intermediate or final result produces NaN or a negative number,\n  an ER_GIS_INVALID_DATA error occurs.\n\nAs of MySQL 8.0.14, ST_Distance() permits an optional unit argument\nthat specifies the linear unit for the returned distance value. These\nrules apply:\n\no If a unit is specified but not supported by MySQL, an\n  ER_UNIT_NOT_FOUND error occurs.\n\no If a supported linear unit is specified and the SRID is 0, an\n  ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT error occurs.\n\no If a supported linear unit is specified and the SRID is not 0, the\n  result is in that unit.\n\no If a unit is not specified, the result is in the unit of the SRS of\n  the geometries, whether Cartesian or geographic. Currently, all MySQL\n  SRSs are expressed in meters.\n\nA unit is supported if it is found in the INFORMATION_SCHEMA\nST_UNITS_OF_MEASURE table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/st-units-of-measure-table.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','mysql> SET @g1 = Point(1,1);\nmysql> SET @g2 = Point(2,2);\nmysql> SELECT ST_Distance(@g1, @g2);\n+-----------------------+\n| ST_Distance(@g1, @g2) |\n+-----------------------+\n|    1.4142135623730951 |\n+-----------------------+\n\nmysql> SET @g1 = ST_GeomFromText(\'POINT(1 1)\', 4326);\nmysql> SET @g2 = ST_GeomFromText(\'POINT(2 2)\', 4326);\nmysql> SELECT ST_Distance(@g1, @g2);\n+-----------------------+\n| ST_Distance(@g1, @g2) |\n+-----------------------+\n|     156874.3859490455 |\n+-----------------------+\nmysql> SELECT ST_Distance(@g1, @g2, \'metre\');\n+--------------------------------+\n| ST_Distance(@g1, @g2, \'metre\') |\n+--------------------------------+\n|              156874.3859490455 |\n+--------------------------------+\nmysql> SELECT ST_Distance(@g1, @g2, \'foot\');\n+-------------------------------+\n| ST_Distance(@g1, @g2, \'foot\') |\n+-------------------------------+\n|             514679.7439273146 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(347,'ST_EQUALS',28,'ST_Equals(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially equal to g2.\n\nST_Equals() handles its arguments as described in the introduction to\nthis section, except that it does not return NULL for empty geometry\narguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_Equals(@g1, @g1), ST_Equals(@g1, @g2);\n+---------------------+---------------------+\n| ST_Equals(@g1, @g1) | ST_Equals(@g1, @g2) |\n+---------------------+---------------------+\n|                   1 |                   0 |\n+---------------------+---------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(348,'ST_INTERSECTS',28,'ST_Intersects(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 spatially intersects g2.\n\nST_Intersects() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(349,'ST_OVERLAPS',28,'ST_Overlaps(g1, g2)\n\nTwo geometries spatially overlap if they intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nThis function returns 1 or 0 to indicate whether g1 spatially overlaps\ng2.\n\nST_Overlaps() handles its arguments as described in the introduction to\nthis section except that the return value is NULL for the additional\ncondition that the dimensions of the two geometries are not equal.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(350,'ST_TOUCHES',28,'ST_Touches(g1, g2)\n\nTwo geometries spatially touch if their interiors do not intersect, but\nthe boundary of one of the geometries intersects either the boundary or\nthe interior of the other.\n\nThis function returns 1 or 0 to indicate whether g1 spatially touches\ng2.\n\nST_Touches() handles its arguments as described in the introduction to\nthis section except that the return value is NULL for the additional\ncondition that both geometries are of dimension 0 (Point or\nMultiPoint).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(351,'ST_WITHIN',28,'ST_Within(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially within g2. This\ntests the opposite relationship as ST_Contains().\n\nST_Within() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-object-shapes.html'),(352,'MBRCONTAINS',29,'MBRContains(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\ncontains the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRWithin().\n\nMBRContains() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRContains(@g1,@g2), MBRWithin(@g2,@g1);\n+----------------------+--------------------+\n| MBRContains(@g1,@g2) | MBRWithin(@g2,@g1) |\n+----------------------+--------------------+\n|                    1 |                  1 |\n+----------------------+--------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(353,'MBRCOVEREDBY',29,'MBRCoveredBy(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\nis covered by the minimum bounding rectangle of g2. This tests the\nopposite relationship as MBRCovers().\n\nMBRCoveredBy() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRCovers(@g1,@g2), MBRCoveredby(@g1,@g2);\n+--------------------+-----------------------+\n| MBRCovers(@g1,@g2) | MBRCoveredby(@g1,@g2) |\n+--------------------+-----------------------+\n|                  1 |                     0 |\n+--------------------+-----------------------+\nmysql> SELECT MBRCovers(@g2,@g1), MBRCoveredby(@g2,@g1);\n+--------------------+-----------------------+\n| MBRCovers(@g2,@g1) | MBRCoveredby(@g2,@g1) |\n+--------------------+-----------------------+\n|                  0 |                     1 |\n+--------------------+-----------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(354,'MBRCOVERS',29,'MBRCovers(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\ncovers the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRCoveredBy(). See the description of MBRCoveredBy()\nfor examples.\n\nMBRCovers() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(355,'MBRDISJOINT',29,'MBRDisjoint(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are disjoint (do not intersect).\n\nMBRDisjoint() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(356,'MBREQUALS',29,'MBREquals(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are the same.\n\nMBREquals() handles its arguments as described in the introduction to\nthis section, except that it does not return NULL for empty geometry\narguments.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(357,'MBRINTERSECTS',29,'MBRIntersects(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 intersect.\n\nMBRIntersects() handles its arguments as described in the introduction\nto this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(358,'MBROVERLAPS',29,'MBROverlaps(g1, g2)\n\nTwo geometries spatially overlap if they intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nThis function returns 1 or 0 to indicate whether the minimum bounding\nrectangles of the two geometries g1 and g2 overlap.\n\nMBROverlaps() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(359,'MBRTOUCHES',29,'MBRTouches(g1, g2)\n\nTwo geometries spatially touch if their interiors do not intersect, but\nthe boundary of one of the geometries intersects either the boundary or\nthe interior of the other.\n\nThis function returns 1 or 0 to indicate whether the minimum bounding\nrectangles of the two geometries g1 and g2 touch.\n\nMBRTouches() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(360,'MBRWITHIN',29,'MBRWithin(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\nis within the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRContains().\n\nMBRWithin() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Polygon((0 0,0 5,5 5,5 0,0 0))\');\nmysql> SELECT MBRWithin(@g1,@g2), MBRWithin(@g2,@g1);\n+--------------------+--------------------+\n| MBRWithin(@g1,@g2) | MBRWithin(@g2,@g1) |\n+--------------------+--------------------+\n|                  1 |                  0 |\n+--------------------+--------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-relation-functions-mbr.html'),(361,'ST_GEOHASH',29,'ST_GeoHash(longitude, latitude, max_length), ST_GeoHash(point,\nmax_length)\n\nReturns a geohash string in the connection character set and collation.\n\nFor the first syntax, the longitude must be a number in the range\n[−180, 180], and the latitude must be a number in the range [−90,\n90]. For the second syntax, a POINT value is required, where the X and\nY coordinates are in the valid ranges for longitude and latitude,\nrespectively.\n\nThe resulting string is no longer than max_length characters, which has\nan upper limit of 100. The string might be shorter than max_length\ncharacters because the algorithm that creates the geohash value\ncontinues until it has created a string that is either an exact\nrepresentation of the location or max_length characters, whichever\ncomes first.\n\nST_GeoHash() handles its arguments as described in the introduction to\nthis section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_GeoHash(180,0,10), ST_GeoHash(-180,-90,15);\n+----------------------+-------------------------+\n| ST_GeoHash(180,0,10) | ST_GeoHash(-180,-90,15) |\n+----------------------+-------------------------+\n| xbpbpbpbpb           | 000000000000000         |\n+----------------------+-------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html'),(362,'ST_LATFROMGEOHASH',29,'ST_LatFromGeoHash(geohash_str)\n\nReturns the latitude from a geohash string value, as a double-precision\nnumber in the range [−90, 90].\n\nThe ST_LatFromGeoHash() decoding function reads no more than 433\ncharacters from the geohash_str argument. That represents the upper\nlimit on information in the internal representation of coordinate\nvalues. Characters past the 433rd are ignored, even if they are\notherwise illegal and produce an error.\n\nST_LatFromGeoHash() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_LatFromGeoHash(ST_GeoHash(45,-20,10));\n+------------------------------------------+\n| ST_LatFromGeoHash(ST_GeoHash(45,-20,10)) |\n+------------------------------------------+\n|                                      -20 |\n+------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html'),(363,'ST_LONGFROMGEOHASH',29,'ST_LongFromGeoHash(geohash_str)\n\nReturns the longitude from a geohash string value, as a\ndouble-precision number in the range [−180, 180].\n\nThe remarks in the description of ST_LatFromGeoHash() regarding the\nmaximum number of characters processed from the geohash_str argument\nalso apply to ST_LongFromGeoHash().\n\nST_LongFromGeoHash() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_LongFromGeoHash(ST_GeoHash(45,-20,10));\n+-------------------------------------------+\n| ST_LongFromGeoHash(ST_GeoHash(45,-20,10)) |\n+-------------------------------------------+\n|                                        45 |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html'),(364,'ST_POINTFROMGEOHASH',29,'ST_PointFromGeoHash(geohash_str, srid)\n\nReturns a POINT value containing the decoded geohash value, given a\ngeohash string value.\n\nThe X and Y coordinates of the point are the longitude in the range\n[−180, 180] and the latitude in the range [−90, 90], respectively.\n\nThe srid argument is an 32-bit unsigned integer.\n\nThe remarks in the description of ST_LatFromGeoHash() regarding the\nmaximum number of characters processed from the geohash_str argument\nalso apply to ST_PointFromGeoHash().\n\nST_PointFromGeoHash() handles its arguments as described in the\nintroduction to this section.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html\n\n','mysql> SET @gh = ST_GeoHash(45,-20,10);\nmysql> SELECT ST_AsText(ST_PointFromGeoHash(@gh,0));\n+---------------------------------------+\n| ST_AsText(ST_PointFromGeoHash(@gh,0)) |\n+---------------------------------------+\n| POINT(45 -20)                         |\n+---------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-geohash-functions.html'),(365,'ST_ASGEOJSON',29,'ST_AsGeoJSON(g [, max_dec_digits [, options]])\n\nGenerates a GeoJSON object from the geometry g. The object string has\nthe connection character set and collation.\n\nIf any argument is NULL, the return value is NULL. If any non-NULL\nargument is invalid, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-geojson-functions.html\n\n','mysql> SELECT ST_AsGeoJSON(ST_GeomFromText(\'POINT(11.11111 12.22222)\'),2);\n+-------------------------------------------------------------+\n| ST_AsGeoJSON(ST_GeomFromText(\'POINT(11.11111 12.22222)\'),2) |\n+-------------------------------------------------------------+\n| {\"type\": \"Point\", \"coordinates\": [11.11, 12.22]}            |\n+-------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-geojson-functions.html'),(366,'ST_GEOMFROMGEOJSON',29,'ST_GeomFromGeoJSON(str [, options [, srid]])\n\nParses a string str representing a GeoJSON object and returns a\ngeometry.\n\nIf any argument is NULL, the return value is NULL. If any non-NULL\nargument is invalid, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-geojson-functions.html\n\n','mysql> SET @json = \'{ \"type\": \"Point\", \"coordinates\": [102.0, 0.0]}\';\nmysql> SELECT ST_AsText(ST_GeomFromGeoJSON(@json));\n+--------------------------------------+\n| ST_AsText(ST_GeomFromGeoJSON(@json)) |\n+--------------------------------------+\n| POINT(102 0)                         |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-geojson-functions.html'),(367,'ST_DISTANCE_SPHERE',29,'ST_Distance_Sphere(g1, g2 [, radius])\n\nReturns the mimimum spherical distance between Point or MultiPoint\narguments on a sphere, in meters. (For general-purpose distance\ncalculations, see the ST_Distance() function.) The optional radius\nargument should be given in meters.\n\nIf both geometry parameters are valid Cartesian Point or MultiPoint\nvalues in SRID 0, the return value is shortest distance between the two\ngeometries on a sphere with the provided radius. If omitted, the\ndefault radius is 6,370,986 meters, Point X and Y coordinates are\ninterpreted as longitude and latitude, respectively, in degrees.\n\nIf both geometry parameters are valid Point or MultiPoint values in a\ngeographic spatial reference system (SRS), the return value is the\nshortest distance between the two geometries on a sphere with the\nprovided radius. If omitted, the default radius is equal to the mean\nradius, defined as (2a+b)/3, where a is the semi-major axis and b is\nthe semi-minor axis of the SRS.\n\nST_Distance_Sphere() handles its arguments as described in the\nintroduction to this section, with these exceptions:\n\no Supported geometry argument combinations are Point and Point, or\n  Point and MultiPoint (in any argument order). If at least one of the\n  geometries is neither Point nor MultiPoint, and its SRID is 0, an\n  ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS error occurs. If at least one of\n  the geometries is neither Point nor MultiPoint, and its SRID refers\n  to a geographic SRS, an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error\n  occurs. If any geometry refers to a projected SRS, an\n  ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS error occurs.\n\no If any argument has a longitude or latitude that is out of range, an\n  error occurs:\n\n  o If any longitude argument is not in the range (−180, 180], an\n    ER_LONGITUDE_OUT_OF_RANGE error occurs.\n\n  o If any latitude argument is not in the range [−90, 90], an\n    ER_LATITUDE_OUT_OF_RANGE error occurs.\n\n  Ranges shown are in degrees. If an SRS uses another unit, the range\n  uses the corresponding values in its unit. The exact range limits\n  deviate slightly due to floating-point arithmetic.\n\no If the radius argument is present but not positive, an\n  ER_NONPOSITIVE_RADIUS error occurs.\n\no If the distance exceeds the range of a double-precision number, an\n  ER_STD_OVERFLOW_ERROR error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html\n\n','mysql> SET @pt1 = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt2 = ST_GeomFromText(\'POINT(180 0)\');\nmysql> SELECT ST_Distance_Sphere(@pt1, @pt2);\n+--------------------------------+\n| ST_Distance_Sphere(@pt1, @pt2) |\n+--------------------------------+\n|             20015042.813723423 |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html'),(368,'ST_ISVALID',29,'ST_IsValid(g)\n\nReturns 1 if the argument is geometrically valid, 0 if the argument is\nnot geometrically valid. Geometry validity is defined by the OGC\nspecification.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. ST_IsValid() returns 1 in this case. MySQL\ndoes not support GIS EMPTY values such as POINT EMPTY.\n\nST_IsValid() handles its arguments as described in the introduction to\nthis section, with this exception:\n\no If the geometry has a geographic SRS with a longitude or latitude\n  that is out of range, an error occurs:\n\n  o If any longitude argument is not in the range (−180, 180], an\n    ER_LONGITUDE_OUT_OF_RANGE error occurs.\n\n  o If any latitude argument is not in the range [−90, 90], an\n    ER_LATITUDE_OUT_OF_RANGE error occurs.\n\n  Ranges shown are in degrees. If an SRS uses another unit, the range\n  uses the corresponding values in its unit. The exact range limits\n  deviate slightly due to floating-point arithmetic.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html\n\n','mysql> SET @ls1 = ST_GeomFromText(\'LINESTRING(0 0,-0.00 0,0.0 0)\');\nmysql> SET @ls2 = ST_GeomFromText(\'LINESTRING(0 0, 1 1)\');\nmysql> SELECT ST_IsValid(@ls1);\n+------------------+\n| ST_IsValid(@ls1) |\n+------------------+\n|                0 |\n+------------------+\nmysql> SELECT ST_IsValid(@ls2);\n+------------------+\n| ST_IsValid(@ls2) |\n+------------------+\n|                1 |\n+------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html'),(369,'ST_MAKEENVELOPE',29,'ST_MakeEnvelope(pt1, pt2)\n\nReturns the rectangle that forms the envelope around two points, as a\nPoint, LineString, or Polygon.\n\nCalculations are done using the Cartesian coordinate system rather than\non a sphere, spheroid, or on earth.\n\nGiven two points pt1 and pt2, ST_MakeEnvelope() creates the result\ngeometry on an abstract plane like this:\n\no If pt1 and pt2 are equal, the result is the point pt1.\n\no Otherwise, if (pt1, pt2) is a vertical or horizontal line segment,\n  the result is the line segment (pt1, pt2).\n\no Otherwise, the result is a polygon using pt1 and pt2 as diagonal\n  points.\n\nThe result geometry has an SRID of 0.\n\nST_MakeEnvelope() handles its arguments as described in the\nintroduction to this section, with these exceptions:\n\no If the arguments are not Point values, an ER_WRONG_ARGUMENTS error\n  occurs.\n\no An ER_GIS_INVALID_DATA error occurs for the additional condition that\n  any coordinate value of the two points is infinite or NaN.\n\no If any geometry has an SRID value for a geographic spatial reference\n  system (SRS), an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html\n\n','mysql> SET @pt1 = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt2 = ST_GeomFromText(\'POINT(1 1)\');\nmysql> SELECT ST_AsText(ST_MakeEnvelope(@pt1, @pt2));\n+----------------------------------------+\n| ST_AsText(ST_MakeEnvelope(@pt1, @pt2)) |\n+----------------------------------------+\n| POLYGON((0 0,1 0,1 1,0 1,0 0))         |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html'),(370,'ST_SIMPLIFY',29,'ST_Simplify(g, max_distance)\n\nSimplifies a geometry using the Douglas-Peucker algorithm and returns a\nsimplified value of the same type.\n\nThe geometry may be any geometry type, although the Douglas-Peucker\nalgorithm may not actually process every type. A geometry collection is\nprocessed by giving its components one by one to the simplification\nalgorithm, and the returned geometries are put into a geometry\ncollection as result.\n\nThe max_distance argument is the distance (in units of the input\ncoordinates) of a vertex to other segments to be removed. Vertices\nwithin this distance of the simplified linestring are removed.\n\nAccording to Boost.Geometry, geometries might become invalid as a\nresult of the simplification process, and the process might create\nself-intersections. To check the validity of the result, pass it to\nST_IsValid().\n\nST_Simplify() handles its arguments as described in the introduction to\nthis section, with this exception:\n\no If the max_distance argument is not positive, or is NaN, an\n  ER_WRONG_ARGUMENTS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html\n\n','mysql> SET @g = ST_GeomFromText(\'LINESTRING(0 0,0 1,1 1,1 2,2 2,2 3,3 3)\');\nmysql> SELECT ST_AsText(ST_Simplify(@g, 0.5));\n+---------------------------------+\n| ST_AsText(ST_Simplify(@g, 0.5)) |\n+---------------------------------+\n| LINESTRING(0 0,0 1,1 1,2 3,3 3) |\n+---------------------------------+\nmysql> SELECT ST_AsText(ST_Simplify(@g, 1.0));\n+---------------------------------+\n| ST_AsText(ST_Simplify(@g, 1.0)) |\n+---------------------------------+\n| LINESTRING(0 0,3 3)             |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html'),(371,'ST_VALIDATE',29,'ST_Validate(g)\n\nValidates a geometry according to the OGC specification. A geometry can\nbe syntactically well-formed (WKB value plus SRID) but geometrically\ninvalid. For example, this polygon is geometrically invalid: POLYGON((0\n0, 0 0, 0 0, 0 0, 0 0))\n\nST_Validate() returns the geometry if it is syntactically well-formed\nand is geometrically valid, NULL if the argument is not syntactically\nwell-formed or is not geometrically valid or is NULL.\n\nST_Validate() can be used to filter out invalid geometry data, although\nat a cost. For applications that require more precise results not\ntainted by invalid data, this penalty may be worthwhile.\n\nIf the geometry argument is valid, it is returned as is, except that if\nan input Polygon or MultiPolygon has clockwise rings, those rings are\nreversed before checking for validity. If the geometry is valid, the\nvalue with the reversed rings is returned.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. ST_Validate() returns it directly without\nfurther checks in this case.\n\nAs of MySQL 8.0.13, ST_Validate() handles its arguments as described in\nthe introduction to this section, with these exceptions:\n\no If the geometry has a geographic SRS with a longitude or latitude\n  that is out of range, an error occurs:\n\n  o If any longitude argument is not in the range (−180, 180], an\n    ER_LONGITUDE_OUT_OF_RANGE error occurs.\n\n  o If any latitude argument is not in the range [−90, 90], an\n    ER_LATITUDE_OUT_OF_RANGE error occurs.\n\n  Ranges shown are in degrees. The exact range limits deviate slightly\n  due to floating-point arithmetic.\n\nPrior to MySQL 8.0.13, ST_Validate() handles its arguments as described\nin the introduction to this section, with these exceptions:\n\no If the geometry is not syntactically well-formed, the return value is\n  NULL. An ER_GIS_INVALID_DATA error does not occur.\n\no If the geometry has an SRID value for a geographic spatial reference\n  system (SRS), an ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html\n\n','mysql> SET @ls1 = ST_GeomFromText(\'LINESTRING(0 0)\');\nmysql> SET @ls2 = ST_GeomFromText(\'LINESTRING(0 0, 1 1)\');\nmysql> SELECT ST_AsText(ST_Validate(@ls1));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls1)) |\n+------------------------------+\n| NULL                         |\n+------------------------------+\nmysql> SELECT ST_AsText(ST_Validate(@ls2));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls2)) |\n+------------------------------+\n| LINESTRING(0 0,1 1)          |\n+------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html'),(372,'JSON_ARRAY',29,'Syntax:\nJSON_ARRAY([val[, val] ...])\n\nEvaluates a (possibly empty) list of values and returns a JSON array\ncontaining those values.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html\n\n','mysql> SELECT JSON_ARRAY(1, \"abc\", NULL, TRUE, CURTIME());\n+---------------------------------------------+\n| JSON_ARRAY(1, \"abc\", NULL, TRUE, CURTIME()) |\n+---------------------------------------------+\n| [1, \"abc\", null, true, \"11:30:24.000000\"]   |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html'),(373,'JSON_OBJECT',29,'Syntax:\nJSON_OBJECT([key, val[, key, val] ...])\n\nEvaluates a (possibly empty) list of key-value pairs and returns a JSON\nobject containing those pairs. An error occurs if any key name is NULL\nor the number of arguments is odd.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html\n\n','mysql> SELECT JSON_OBJECT(\'id\', 87, \'name\', \'carrot\');\n+-----------------------------------------+\n| JSON_OBJECT(\'id\', 87, \'name\', \'carrot\') |\n+-----------------------------------------+\n| {\"id\": 87, \"name\": \"carrot\"}            |\n+-----------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html'),(374,'JSON_QUOTE',29,'Syntax:\nJSON_QUOTE(string)\n\nQuotes a string as a JSON value by wrapping it with double quote\ncharacters and escaping interior quote and other characters, then\nreturning the result as a utf8mb4 string. Returns NULL if the argument\nis NULL.\n\nThis function is typically used to produce a valid JSON string literal\nfor inclusion within a JSON document.\n\nCertain special characters are escaped with backslashes per the escape\nsequences shown in\nhttps://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.htm\nl#json-unquote-character-escape-sequences.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html\n\n','mysql> SELECT JSON_QUOTE(\'null\'), JSON_QUOTE(\'\"null\"\');\n+--------------------+----------------------+\n| JSON_QUOTE(\'null\') | JSON_QUOTE(\'\"null\"\') |\n+--------------------+----------------------+\n| \"null\"             | \"\\\"null\\\"\"           |\n+--------------------+----------------------+\nmysql> SELECT JSON_QUOTE(\'[1, 2, 3]\');\n+-------------------------+\n| JSON_QUOTE(\'[1, 2, 3]\') |\n+-------------------------+\n| \"[1, 2, 3]\"             |\n+-------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html'),(375,'JSON_CONTAINS',29,'Syntax:\nJSON_CONTAINS(target, candidate[, path])\n\nIndicates by returning 1 or 0 whether a given candidate JSON document\nis contained within a target JSON document, or---if a path argument was\nsupplied---whether the candidate is found at a specific path within the\ntarget. Returns NULL if any argument is NULL, or if the path argument\ndoes not identify a section of the target document. An error occurs if\ntarget or candidate is not a valid JSON document, or if the path\nargument is not a valid path expression or contains a * or ** wildcard.\n\nTo check only whether any data exists at the path, use\nJSON_CONTAINS_PATH() instead.\n\nThe following rules define containment:\n\no A candidate scalar is contained in a target scalar if and only if\n  they are comparable and are equal. Two scalar values are comparable\n  if they have the same JSON_TYPE() types, with the exception that\n  values of types INTEGER and DECIMAL are also comparable to each\n  other.\n\no A candidate array is contained in a target array if and only if every\n  element in the candidate is contained in some element of the target.\n\no A candidate nonarray is contained in a target array if and only if\n  the candidate is contained in some element of the target.\n\no A candidate object is contained in a target object if and only if for\n  each key in the candidate there is a key with the same name in the\n  target and the value associated with the candidate key is contained\n  in the value associated with the target key.\n\nOtherwise, the candidate value is not contained in the target document.\n\nStarting with MySQL 8.0.17, queries using JSON_CONTAINS() on InnoDB\ntables can be optimized using multi-valued indexes; see\nhttps://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-index-\nmulti-valued, for more information.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SET @j = \'{\"a\": 1, \"b\": 2, \"c\": {\"d\": 4}}\';\nmysql> SET @j2 = \'1\';\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.a\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.a\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.b\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.b\') |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\n\nmysql> SET @j2 = \'{\"d\": 4}\';\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.a\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.a\') |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.c\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.c\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(376,'JSON_CONTAINS_PATH',29,'Syntax:\nJSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] ...)\n\nReturns 0 or 1 to indicate whether a JSON document contains data at a\ngiven path or paths. Returns NULL if any argument is NULL. An error\noccurs if the json_doc argument is not a valid JSON document, any path\nargument is not a valid path expression, or one_or_all is not \'one\' or\n\'all\'.\n\nTo check for a specific value at a path, use JSON_CONTAINS() instead.\n\nThe return value is 0 if no specified path exists within the document.\nOtherwise, the return value depends on the one_or_all argument:\n\no \'one\': 1 if at least one path exists within the document, 0\n  otherwise.\n\no \'all\': 1 if all paths exist within the document, 0 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SET @j = \'{\"a\": 1, \"b\": 2, \"c\": {\"d\": 4}}\';\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.a\', \'$.e\');\n+---------------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.a\', \'$.e\') |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'all\', \'$.a\', \'$.e\');\n+---------------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'all\', \'$.a\', \'$.e\') |\n+---------------------------------------------+\n|                                           0 |\n+---------------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.c.d\');\n+----------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.c.d\') |\n+----------------------------------------+\n|                                      1 |\n+----------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.a.d\');\n+----------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.a.d\') |\n+----------------------------------------+\n|                                      0 |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(377,'JSON_EXTRACT',29,'Syntax:\nJSON_EXTRACT(json_doc, path[, path] ...)\n\nReturns data from a JSON document, selected from the parts of the\ndocument matched by the path arguments. Returns NULL if any argument is\nNULL or no paths locate a value in the document. An error occurs if the\njson_doc argument is not a valid JSON document or any path argument is\nnot a valid path expression.\n\nThe return value consists of all values matched by the path arguments.\nIf it is possible that those arguments could return multiple values,\nthe matched values are autowrapped as an array, in the order\ncorresponding to the paths that produced them. Otherwise, the return\nvalue is the single matched value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\');\n+--------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\') |\n+--------------------------------------------+\n| 20                                         |\n+--------------------------------------------+\nmysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\', \'$[0]\');\n+----------------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\', \'$[0]\') |\n+----------------------------------------------------+\n| [20, 10]                                           |\n+----------------------------------------------------+\nmysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[2][*]\');\n+-----------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[2][*]\') |\n+-----------------------------------------------+\n| [30, 40]                                      |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(378,'->',29,'Syntax:\ncolumn->path\n\nThe -> operator serves as an alias for the JSON_EXTRACT() function when\nused with two arguments, a column identifier on the left and a JSON\npath on the right that is evaluated against the JSON document (the\ncolumn value). You can use such expressions in place of column\nidentifiers wherever they occur in SQL statements.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SELECT c, JSON_EXTRACT(c, \"$.id\"), g\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY JSON_EXTRACT(c, \"$.name\");\n+-------------------------------+-----------+------+\n| c                             | c->\"$.id\" | g    |\n+-------------------------------+-----------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT c, c->\"$.id\", g\n     > FROM jemp\n     > WHERE c->\"$.id\" > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+\n| c                             | c->\"$.id\" | g    |\n+-------------------------------+-----------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\nmysql> ALTER TABLE jemp ADD COLUMN n INT;\nQuery OK, 0 rows affected (0.68 sec)\nRecords: 0  Duplicates: 0  Warnings: 0\n\nmysql> UPDATE jemp SET n=1 WHERE c->\"$.id\" = \"4\";\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT c, c->\"$.id\", g, n\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+------+\n| c                             | c->\"$.id\" | g    | n    |\n+-------------------------------+-----------+------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 | NULL |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |    1 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 | NULL |\n+-------------------------------+-----------+------+------+\n3 rows in set (0.00 sec)\n\nmysql> DELETE FROM jemp WHERE c->\"$.id\" = \"4\";\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT c, c->\"$.id\", g, n\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+------+\n| c                             | c->\"$.id\" | g    | n    |\n+-------------------------------+-----------+------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 | NULL |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 | NULL |\n+-------------------------------+-----------+------+------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(379,'->>',29,'Syntax:\ncolumn->>path\n\nThis is an improved, unquoting extraction operator. Whereas the ->\noperator simply extracts a value, the ->> operator in addition unquotes\nthe extracted result. In other words, given a JSON column value column\nand a path expression path, the following three expressions return the\nsame value:\n\no JSON_UNQUOTE( JSON_EXTRACT(column, path) )\n\no JSON_UNQUOTE(column -> path)\n\no column->>path\n\nThe ->> operator can be used wherever JSON_UNQUOTE(JSON_EXTRACT())\nwould be allowed. This includes (but is not limited to) SELECT lists,\nWHERE and HAVING clauses, and ORDER BY and GROUP BY clauses.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SELECT * FROM jemp WHERE g > 2;\n+-------------------------------+------+\n| c                             | g    |\n+-------------------------------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  |    4 |\n+-------------------------------+------+\n2 rows in set (0.01 sec)\n\nmysql> SELECT c->\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2;\n+----------+\n| name     |\n+----------+\n| \"Barney\" |\n| \"Betty\"  |\n+----------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT JSON_UNQUOTE(c->\'$.name\') AS name\n    ->     FROM jemp WHERE g > 2;\n+--------+\n| name   |\n+--------+\n| Barney |\n| Betty  |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT c->>\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2;\n+--------+\n| name   |\n+--------+\n| Barney |\n| Betty  |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql> CREATE TABLE tj10 (a JSON, b INT);\nQuery OK, 0 rows affected (0.26 sec)\n\nmysql> INSERT INTO tj10 VALUES\n    ->     (\'[3,10,5,\"x\",44]\', 33),\n    ->     (\'[3,10,5,17,[22,\"y\",66]]\', 0);\nQuery OK, 2 rows affected (0.04 sec)\nRecords: 2  Duplicates: 0  Warnings: 0\n\nmysql> SELECT a->\"$[3]\", a->\"$[4][1]\" FROM tj10;\n+-----------+--------------+\n| a->\"$[3]\" | a->\"$[4][1]\" |\n+-----------+--------------+\n| \"x\"       | NULL         |\n| 17        | \"y\"          |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT a->>\"$[3]\", a->>\"$[4][1]\" FROM tj10;\n+------------+---------------+\n| a->>\"$[3]\" | a->>\"$[4][1]\" |\n+------------+---------------+\n| x          | NULL          |\n| 17         | y             |\n+------------+---------------+\n2 rows in set (0.00 sec)\n\nmysql> EXPLAIN SELECT c->>\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2\\G\n*************************** 1. row ***************************\n           id: 1\n  select_type: SIMPLE\n        table: jemp\n   partitions: NULL\n         type: range\npossible_keys: i\n          key: i\n      key_len: 5\n          ref: NULL\n         rows: 2\n     filtered: 100.00\n        Extra: Using where\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Note\n   Code: 1003\nMessage: /* select#1 */ select\njson_unquote(json_extract(`jtest`.`jemp`.`c`,\'$.name\')) AS `name` from\n`jtest`.`jemp` where (`jtest`.`jemp`.`g` > 2)\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(380,'JSON_KEYS',29,'Syntax:\nJSON_KEYS(json_doc[, path])\n\nReturns the keys from the top-level value of a JSON object as a JSON\narray, or, if a path argument is given, the top-level keys from the\nselected path. Returns NULL if any argument is NULL, the json_doc\nargument is not an object, or path, if given, does not locate an\nobject. An error occurs if the json_doc argument is not a valid JSON\ndocument or the path argument is not a valid path expression or\ncontains a * or ** wildcard.\n\nThe result array is empty if the selected object is empty. If the\ntop-level value has nested subobjects, the return value does not\ninclude keys from those subobjects.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SELECT JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\');\n+---------------------------------------+\n| JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\') |\n+---------------------------------------+\n| [\"a\", \"b\"]                            |\n+---------------------------------------+\nmysql> SELECT JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\');\n+----------------------------------------------+\n| JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\') |\n+----------------------------------------------+\n| [\"c\"]                                        |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(381,'JSON_OVERLAPS',29,'Syntax:\nJSON_OVERLAPS(json_doc1, json_doc2)\n\nCompares two JSON documents. Returns true (1) if the two document have\nany key-value pairs or array elements in common. If both arguments are\nscalars, the function performs a simple equality test.\n\nThis function serves as counterpart to JSON_CONTAINS(), which requires\nall elements of the array searched for to be present in the array\nsearched in. Thus, JSON_CONTAINS() performs an AND operation on search\nkeys, while JSON_OVERLAPS() performs an OR operation.\n\nQueries on JSON columns of InnoDB tables using JSON_OVERLAPS() in the\nWHERE clause can be optimized using multi-valued indexes.\nhttps://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-index-\nmulti-valued, provides detailed information and examples.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SELECT JSON_OVERLAPS(\"[1,3,5,7]\", \"[2,5,7]\");\n+---------------------------------------+\n| JSON_OVERLAPS(\"[1,3,5,7]\", \"[2,5,7]\") |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\"[1,3,5,7]\", \"[2,6,7]\");\n+---------------------------------------+\n| JSON_OVERLAPS(\"[1,3,5,7]\", \"[2,6,7]\") |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\"[1,3,5,7]\", \"[2,6,8]\");\n+---------------------------------------+\n| JSON_OVERLAPS(\"[1,3,5,7]\", \"[2,6,8]\") |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'[[1,2],[3,4],5]\', \'[1,[2,3],[4,5]]\');\n+-----------------------------------------------------+\n| JSON_OVERLAPS(\'[[1,2],[3,4],5]\', \'[1,[2,3],[4,5]]\') |\n+-----------------------------------------------------+\n|                                                   0 |\n+-----------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'{\"a\":1,\"b\":10,\"d\":10}\', \'{\"c\":1,\"e\":10,\"f\":1,\"d\":10}\');\n+-----------------------------------------------------------------------+\n| JSON_OVERLAPS(\'{\"a\":1,\"b\":10,\"d\":10}\', \'{\"c\":1,\"e\":10,\"f\":1,\"d\":10}\') |\n+-----------------------------------------------------------------------+\n|                                                                     1 |\n+-----------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'{\"a\":1,\"b\":10,\"d\":10}\', \'{\"a\":5,\"e\":10,\"f\":1,\"d\":20}\');\n+-----------------------------------------------------------------------+\n| JSON_OVERLAPS(\'{\"a\":1,\"b\":10,\"d\":10}\', \'{\"a\":5,\"e\":10,\"f\":1,\"d\":20}\') |\n+-----------------------------------------------------------------------+\n|                                                                     0 |\n+-----------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'5\', \'5\');\n+-------------------------+\n| JSON_OVERLAPS(\'5\', \'5\') |\n+-------------------------+\n|                       1 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'5\', \'6\');\n+-------------------------+\n| JSON_OVERLAPS(\'5\', \'6\') |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'[4,5,6,7]\', \'6\');\n+---------------------------------+\n| JSON_OVERLAPS(\'[4,5,6,7]\', \'6\') |\n+---------------------------------+\n|                               1 |\n+---------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'[4,5,\"6\",7]\', \'6\');\n+-----------------------------------+\n| JSON_OVERLAPS(\'[4,5,\"6\",7]\', \'6\') |\n+-----------------------------------+\n|                                 0 |\n+-----------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_OVERLAPS(\'[4,5,6,7]\', \'\"6\"\');\n+-----------------------------------+\n| JSON_OVERLAPS(\'[4,5,6,7]\', \'\"6\"\') |\n+-----------------------------------+\n|                                 0 |\n+-----------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(382,'JSON_SEARCH',29,'Syntax:\nJSON_SEARCH(json_doc, one_or_all, search_str[, escape_char[, path]\n...])\n\nReturns the path to the given string within a JSON document. Returns\nNULL if any of the json_doc, search_str, or path arguments are NULL; no\npath exists within the document; or search_str is not found. An error\noccurs if the json_doc argument is not a valid JSON document, any path\nargument is not a valid path expression, one_or_all is not \'one\' or\n\'all\', or escape_char is not a constant expression.\n\nThe one_or_all argument affects the search as follows:\n\no \'one\': The search terminates after the first match and returns one\n  path string. It is undefined which match is considered first.\n\no \'all\': The search returns all matching path strings such that no\n  duplicate paths are included. If there are multiple strings, they are\n  autowrapped as an array. The order of the array elements is\n  undefined.\n\nWithin the search_str search string argument, the % and _ characters\nwork as for the LIKE operator: % matches any number of characters\n(including zero characters), and _ matches exactly one character.\n\nTo specify a literal % or _ character in the search string, precede it\nby the escape character. The default is \\ if the escape_char argument\nis missing or NULL. Otherwise, escape_char must be a constant that is\nempty or one character.\n\nFor more information about matching and escape character behavior, see\nthe description of LIKE in\nhttps://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.htm\nl. For escape character handling, a difference from the LIKE behavior\nis that the escape character for JSON_SEARCH() must evaluate to a\nconstant at compile time, not just at execution time. For example, if\nJSON_SEARCH() is used in a prepared statement and the escape_char\nargument is supplied using a ? parameter, the parameter value might be\nconstant at execution time, but is not at compile time.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SET @j = \'[\"abc\", [{\"k\": \"10\"}, \"def\"], {\"x\":\"abc\"}, {\"y\":\"bcd\"}]\';\n\nmysql> SELECT JSON_SEARCH(@j, \'one\', \'abc\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'one\', \'abc\') |\n+-------------------------------+\n| \"$[0]\"                        |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'abc\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'abc\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\"]            |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'ghi\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'ghi\') |\n+-------------------------------+\n| NULL                          |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\');\n+------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\') |\n+------------------------------+\n| \"$[1][0].k\"                  |\n+------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$\');\n+-----------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$\') |\n+-----------------------------------------+\n| \"$[1][0].k\"                             |\n+-----------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*]\');\n+--------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*]\') |\n+--------------------------------------------+\n| \"$[1][0].k\"                                |\n+--------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$**.k\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$**.k\') |\n+---------------------------------------------+\n| \"$[1][0].k\"                                 |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*][0].k\');\n+-------------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*][0].k\') |\n+-------------------------------------------------+\n| \"$[1][0].k\"                                     |\n+-------------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1]\');\n+--------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1]\') |\n+--------------------------------------------+\n| \"$[1][0].k\"                                |\n+--------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1][0]\');\n+-----------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1][0]\') |\n+-----------------------------------------------+\n| \"$[1][0].k\"                                   |\n+-----------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'abc\', NULL, \'$[2]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'abc\', NULL, \'$[2]\') |\n+---------------------------------------------+\n| \"$[2].x\"                                    |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%a%\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%a%\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\"]            |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\", \"$[3].y\"]  |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[0]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[0]\') |\n+---------------------------------------------+\n| \"$[0]\"                                      |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[2]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[2]\') |\n+---------------------------------------------+\n| \"$[2].x\"                                    |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[1]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[1]\') |\n+---------------------------------------------+\n| NULL                                        |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[1]\');\n+-------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[1]\') |\n+-------------------------------------------+\n| NULL                                      |\n+-------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[3]\');\n+-------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[3]\') |\n+-------------------------------------------+\n| \"$[3].y\"                                  |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(383,'MEMBER OF',29,'Syntax:\nvalue MEMBER OF(json_array)\n\nReturns true (1) if value is an element of json_array, otherwise\nreturns false (0). value must be a scalar or a JSON document; if it is\na scalar, the operator attempts to treat it as an element of a JSON\narray.\n\nQueries using MEMBER OF() on JSON columns of InnoDB tables in the WHERE\nclause can be optimized using multi-valued indexes. See\nhttps://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-index-\nmulti-valued, for detailed information and examples.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n\n','mysql> SELECT 17 MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\');\n+-------------------------------------------+\n| 17 MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\') |\n+-------------------------------------------+\n|                                         1 |\n+-------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT \'ab\' MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\');\n+---------------------------------------------+\n| \'ab\' MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\') |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT 7 MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\');\n+------------------------------------------+\n| 7 MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\') |\n+------------------------------------------+\n|                                        0 |\n+------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT \'a\' MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\');\n+--------------------------------------------+\n| \'a\' MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\') |\n+--------------------------------------------+\n|                                          0 |\n+--------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT \n    -> 17 MEMBER OF(\'[23, \"abc\", \"17\", \"ab\", 10]\'), \n    -> \"17\" MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\')\\G\n*************************** 1. row ***************************\n17 MEMBER OF(\'[23, \"abc\", \"17\", \"ab\", 10]\'): 0\n\"17\" MEMBER OF(\'[23, \"abc\", 17, \"ab\", 10]\'): 0\n1 row in set (0.00 sec)\n\nmysql> SELECT CAST(\'[4,5]\' AS JSON) MEMBER OF(\'[[3,4],[4,5]]\');\n+--------------------------------------------------+\n| CAST(\'[4,5]\' AS JSON) MEMBER OF(\'[[3,4],[4,5]]\') |\n+--------------------------------------------------+\n|                                                1 |\n+--------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_ARRAY(4,5) MEMBER OF(\'[[3,4],[4,5]]\');\n+--------------------------------------------+\n| JSON_ARRAY(4,5) MEMBER OF(\'[[3,4],[4,5]]\') |\n+--------------------------------------------+\n|                                          1 |\n+--------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET @a = CAST(\'{\"a\":1}\' AS JSON);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SET @b = JSON_OBJECT(\"b\", 2);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SET @c = JSON_ARRAY(17, @b, \"abc\", @a, 23);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a MEMBER OF(@c), @b MEMBER OF(@c);\n+------------------+------------------+\n| @a MEMBER OF(@c) | @b MEMBER OF(@c) |\n+------------------+------------------+\n|                1 |                1 |\n+------------------+------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html'),(384,'JSON_ARRAY_APPEND',29,'Syntax:\nJSON_ARRAY_APPEND(json_doc, path, val[, path, val] ...)\n\nAppends values to the end of the indicated arrays within a JSON\ndocument and returns the result. Returns NULL if any argument is NULL.\nAn error occurs if the json_doc argument is not a valid JSON document\nor any path argument is not a valid path expression or contains a * or\n** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nIf a path selects a scalar or object value, that value is autowrapped\nwithin an array and the new value is added to that array. Pairs for\nwhich the path does not identify any value in the JSON document are\nignored.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", [\"b\", \"c\"], \"d\"]\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[1]\', 1);\n+----------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[1]\', 1) |\n+----------------------------------+\n| [\"a\", [\"b\", \"c\", 1], \"d\"]        |\n+----------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[0]\', 2);\n+----------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[0]\', 2) |\n+----------------------------------+\n| [[\"a\", 2], [\"b\", \"c\"], \"d\"]      |\n+----------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[1][0]\', 3);\n+-------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[1][0]\', 3) |\n+-------------------------------------+\n| [\"a\", [[\"b\", 3], \"c\"], \"d\"]         |\n+-------------------------------------+\n\nmysql> SET @j = \'{\"a\": 1, \"b\": [2, 3], \"c\": 4}\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$.b\', \'x\');\n+------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$.b\', \'x\')  |\n+------------------------------------+\n| {\"a\": 1, \"b\": [2, 3, \"x\"], \"c\": 4} |\n+------------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$.c\', \'y\');\n+--------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$.c\', \'y\')    |\n+--------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [4, \"y\"]} |\n+--------------------------------------+\n\nmysql> SET @j = \'{\"a\": 1}\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$\', \'z\');\n+---------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$\', \'z\') |\n+---------------------------------+\n| [{\"a\": 1}, \"z\"]                 |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(385,'JSON_ARRAY_INSERT',29,'Syntax:\nJSON_ARRAY_INSERT(json_doc, path, val[, path, val] ...)\n\nUpdates a JSON document, inserting into an array within the document\nand returning the modified document. Returns NULL if any argument is\nNULL. An error occurs if the json_doc argument is not a valid JSON\ndocument or any path argument is not a valid path expression or\ncontains a * or ** wildcard or does not end with an array element\nidentifier.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nPairs for which the path does not identify any array in the JSON\ndocument are ignored. If a path identifies an array element, the\ncorresponding value is inserted at that element position, shifting any\nfollowing values to the right. If a path identifies an array position\npast the end of an array, the value is inserted at the end of the\narray.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", {\"b\": [1, 2]}, [3, 4]]\';\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[1]\', \'x\');\n+------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[1]\', \'x\') |\n+------------------------------------+\n| [\"a\", \"x\", {\"b\": [1, 2]}, [3, 4]]  |\n+------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[100]\', \'x\');\n+--------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[100]\', \'x\') |\n+--------------------------------------+\n| [\"a\", {\"b\": [1, 2]}, [3, 4], \"x\"]    |\n+--------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[1].b[0]\', \'x\');\n+-----------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[1].b[0]\', \'x\') |\n+-----------------------------------------+\n| [\"a\", {\"b\": [\"x\", 1, 2]}, [3, 4]]       |\n+-----------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[2][1]\', \'y\');\n+---------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[2][1]\', \'y\') |\n+---------------------------------------+\n| [\"a\", {\"b\": [1, 2]}, [3, \"y\", 4]]     |\n+---------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[0]\', \'x\', \'$[2][1]\', \'y\');\n+----------------------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[0]\', \'x\', \'$[2][1]\', \'y\') |\n+----------------------------------------------------+\n| [\"x\", \"a\", {\"b\": [1, 2]}, [3, 4]]                  |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(386,'JSON_INSERT',29,'Syntax:\nJSON_INSERT(json_doc, path, val[, path, val] ...)\n\nInserts data into a JSON document and returns the result. Returns NULL\nif any argument is NULL. An error occurs if the json_doc argument is\nnot a valid JSON document or any path argument is not a valid path\nexpression or contains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document is ignored and\ndoes not overwrite the existing document value. A path-value pair for a\nnonexisting path in the document adds the value to the document if the\npath identifies one of these types of values:\n\no A member not present in an existing object. The member is added to\n  the object and associated with the new value.\n\no A position past the end of an existing array. The array is extended\n  with the new value. If the existing value is not an array, it is\n  autowrapped as an array, then extended with the new value.\n\nOtherwise, a path-value pair for a nonexisting path in the document is\nignored and has no effect.\n\nFor a comparison of JSON_INSERT(), JSON_REPLACE(), and JSON_SET(), see\nthe discussion of JSON_SET().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+----------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+\n\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', CAST(\'[true, false]\' AS JSON));\n+------------------------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', CAST(\'[true, false]\' AS JSON)) |\n+------------------------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [true, false]}                        |\n+------------------------------------------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(387,'JSON_MERGE',29,'Syntax:\nJSON_MERGE(json_doc, json_doc[, json_doc] ...)\n\nMerges two or more JSON documents. Synonym for JSON_MERGE_PRESERVE();\ndeprecated in MySQL 8.0.3 and subject to removal in a future release.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE(\'[1, 2]\', \'[true, false]\');\n+---------------------------------------+\n| JSON_MERGE(\'[1, 2]\', \'[true, false]\') |\n+---------------------------------------+\n| [1, 2, true, false]                   |\n+---------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1287\nMessage: \'JSON_MERGE\' is deprecated and will be removed in a future release. \\\n Please use JSON_MERGE_PRESERVE/JSON_MERGE_PATCH instead\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(388,'JSON_MERGE_PATCH()',29,'Syntax:\nJSON_MERGE_PATCH(json_doc, json_doc[, json_doc] ...)\n\nPerforms an RFC 7396 (https://tools.ietf.org/html/rfc7396) compliant\nmerge of two or more JSON documents and returns the merged result,\nwithout preserving members having duplicate keys. Raises an error if at\nleast one of the documents passed as arguments to this function is not\nvalid.\n\n*Note*:\n\nFor an explanation and example of the differences between this function\nand JSON_MERGE_PRESERVE(), see\nhttps://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.htm\nl#json-merge-patch-json-merge-preserve-compared.\n\nJSON_MERGE_PATCH() performs a merge as follows:\n\n1. If the first argument is not an object, the result of the merge is\n   the same as if an empty object had been merged with the second\n   argument.\n\n2. If the second argument is not an object, the result of the merge is\n   the second argument.\n\n3. If both arguments are objects, the result of the merge is an object\n   with the following members:\n\n  o All members of the first object which do not have a corresponding\n    member with the same key in the second object.\n\n  o All members of the second object which do not have a corresponding\n    key in the first object, and whose value is not the JSON null\n    literal.\n\n  o All members with a key that exists in both the first and the second\n    object, and whose value in the second object is not the JSON null\n    literal. The values of these members are the results of recursively\n    merging the value in the first object with the value in the second\n    object.\n\nFor additional information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/json.html#json-normalization.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE_PATCH(\'[1, 2]\', \'[true, false]\');\n+---------------------------------------------+\n| JSON_MERGE_PATCH(\'[1, 2]\', \'[true, false]\') |\n+---------------------------------------------+\n| [true, false]                               |\n+---------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"name\": \"x\"}\', \'{\"id\": 47}\');\n+-------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"name\": \"x\"}\', \'{\"id\": 47}\') |\n+-------------------------------------------------+\n| {\"id\": 47, \"name\": \"x\"}                         |\n+-------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'1\', \'true\');\n+-------------------------------+\n| JSON_MERGE_PATCH(\'1\', \'true\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'[1, 2]\', \'{\"id\": 47}\');\n+------------------------------------------+\n| JSON_MERGE_PATCH(\'[1, 2]\', \'{\"id\": 47}\') |\n+------------------------------------------+\n| {\"id\": 47}                               |\n+------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\n     >     \'{ \"a\": 3, \"c\":4 }\');\n+-----------------------------------------------------------+\n| JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\') |\n+-----------------------------------------------------------+\n| {\"a\": 3, \"b\": 2, \"c\": 4}                                  |\n+-----------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\',\n     >     \'{ \"a\": 5, \"d\":6 }\');\n+-------------------------------------------------------------------------------+\n| JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\',\'{ \"a\": 5, \"d\":6 }\') |\n+-------------------------------------------------------------------------------+\n| {\"a\": 5, \"b\": 2, \"c\": 4, \"d\": 6}                                              |\n+-------------------------------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"a\":1, \"b\":2}\', \'{\"b\":null}\');\n+--------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"a\":1, \"b\":2}\', \'{\"b\":null}\') |\n+--------------------------------------------------+\n| {\"a\": 1}                                         |\n+--------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"a\":{\"x\":1}}\', \'{\"a\":{\"y\":2}}\');\n+----------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"a\":{\"x\":1}}\', \'{\"a\":{\"y\":2}}\') |\n+----------------------------------------------------+\n| {\"a\": {\"x\": 1, \"y\": 2}}                            |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(389,'JSON_MERGE_PRESERVE()',29,'Syntax:\nJSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] ...)\n\nMerges two or more JSON documents and returns the merged result.\nReturns NULL if any argument is NULL. An error occurs if any argument\nis not a valid JSON document.\n\nMerging takes place according to the following rules. For additional\ninformation, see\nhttps://dev.mysql.com/doc/refman/8.0/en/json.html#json-normalization.\n\no Adjacent arrays are merged to a single array.\n\no Adjacent objects are merged to a single object.\n\no A scalar value is autowrapped as an array and merged as an array.\n\no An adjacent array and object are merged by autowrapping the object as\n  an array and merging the two arrays.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE_PRESERVE(\'[1, 2]\', \'[true, false]\');\n+------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'[1, 2]\', \'[true, false]\') |\n+------------------------------------------------+\n| [1, 2, true, false]                            |\n+------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{\"name\": \"x\"}\', \'{\"id\": 47}\');\n+----------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{\"name\": \"x\"}\', \'{\"id\": 47}\') |\n+----------------------------------------------------+\n| {\"id\": 47, \"name\": \"x\"}                            |\n+----------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'1\', \'true\');\n+----------------------------------+\n| JSON_MERGE_PRESERVE(\'1\', \'true\') |\n+----------------------------------+\n| [1, true]                        |\n+----------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'[1, 2]\', \'{\"id\": 47}\');\n+---------------------------------------------+\n| JSON_MERGE_PRESERVE(\'[1, 2]\', \'{\"id\": 47}\') |\n+---------------------------------------------+\n| [1, 2, {\"id\": 47}]                          |\n+---------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\n     >    \'{ \"a\": 3, \"c\": 4 }\');\n+--------------------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\":4 }\') |\n+--------------------------------------------------------------+\n| {\"a\": [1, 3], \"b\": 2, \"c\": 4}                                |\n+--------------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\": 4 }\',\n     >    \'{ \"a\": 5, \"d\": 6 }\');\n+----------------------------------------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\": 4 }\',\'{ \"a\": 5, \"d\": 6 }\') |\n+----------------------------------------------------------------------------------+\n| {\"a\": [1, 3, 5], \"b\": 2, \"c\": 4, \"d\": 6}                                         |\n+----------------------------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(390,'JSON_REMOVE',29,'Syntax:\nJSON_REMOVE(json_doc, path[, path] ...)\n\nRemoves data from a JSON document and returns the result. Returns NULL\nif any argument is NULL. An error occurs if the json_doc argument is\nnot a valid JSON document or any path argument is not a valid path\nexpression or is $ or contains a * or ** wildcard.\n\nThe path arguments are evaluated left to right. The document produced\nby evaluating one path becomes the new value against which the next\npath is evaluated.\n\nIt is not an error if the element to be removed does not exist in the\ndocument; in that case, the path does not affect the document.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", [\"b\", \"c\"], \"d\"]\';\nmysql> SELECT JSON_REMOVE(@j, \'$[1]\');\n+-------------------------+\n| JSON_REMOVE(@j, \'$[1]\') |\n+-------------------------+\n| [\"a\", \"d\"]              |\n+-------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(391,'JSON_REPLACE',29,'Syntax:\nJSON_REPLACE(json_doc, path, val[, path, val] ...)\n\nReplaces existing values in a JSON document and returns the result.\nReturns NULL if any argument is NULL. An error occurs if the json_doc\nargument is not a valid JSON document or any path argument is not a\nvalid path expression or contains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document overwrites the\nexisting document value with the new value. A path-value pair for a\nnonexisting path in the document is ignored and has no effect.\n\nIn MySQL 8.0.4, the optimizer can perform a partial, in-place update of\na JSON column instead of removing the old document and writing the new\ndocument in its entirety to the column. This optimization can be\nperformed for an update statement that uses the JSON_REPLACE() function\nand meets the conditions outlined in\nhttps://dev.mysql.com/doc/refman/8.0/en/json.html#json-partial-updates.\n\nFor a comparison of JSON_INSERT(), JSON_REPLACE(), and JSON_SET(), see\nthe discussion of JSON_SET().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-----------------------------------------------------+\n| JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-----------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3]}                              |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(392,'JSON_SET',29,'Syntax:\nJSON_SET(json_doc, path, val[, path, val] ...)\n\nInserts or updates data in a JSON document and returns the result.\nReturns NULL if any argument is NULL or path, if given, does not locate\nan object. An error occurs if the json_doc argument is not a valid JSON\ndocument or any path argument is not a valid path expression or\ncontains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document overwrites the\nexisting document value with the new value. A path-value pair for a\nnonexisting path in the document adds the value to the document if the\npath identifies one of these types of values:\n\no A member not present in an existing object. The member is added to\n  the object and associated with the new value.\n\no A position past the end of an existing array. The array is extended\n  with the new value. If the existing value is not an array, it is\n  autowrapped as an array, then extended with the new value.\n\nOtherwise, a path-value pair for a nonexisting path in the document is\nignored and has no effect.\n\nIn MySQL 8.0.4, the optimizer can perform a partial, in-place update of\na JSON column instead of removing the old document and writing the new\ndocument in its entirety to the column. This optimization can be\nperformed for an update statement that uses the JSON_SET() function and\nmeets the conditions outlined in\nhttps://dev.mysql.com/doc/refman/8.0/en/json.html#json-partial-updates.\n\nThe JSON_SET(), JSON_INSERT(), and JSON_REPLACE() functions are\nrelated:\n\no JSON_SET() replaces existing values and adds nonexisting values.\n\no JSON_INSERT() inserts values without replacing existing values.\n\no JSON_REPLACE() replaces only existing values.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_SET(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-------------------------------------------------+\n| JSON_SET(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3], \"c\": \"[true, false]\"}    |\n+-------------------------------------------------+\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+----------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+\nmysql> SELECT JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-----------------------------------------------------+\n| JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-----------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3]}                              |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(393,'JSON_UNQUOTE',29,'Syntax:\nJSON_UNQUOTE(json_val)\n\nUnquotes JSON value and returns the result as a utf8mb4 string. Returns\nNULL if the argument is NULL. An error occurs if the value starts and\nends with double quotes but is not a valid JSON string literal.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n\n','mysql> SET @j = \'\"abc\"\';\nmysql> SELECT @j, JSON_UNQUOTE(@j);\n+-------+------------------+\n| @j    | JSON_UNQUOTE(@j) |\n+-------+------------------+\n| \"abc\" | abc              |\n+-------+------------------+\nmysql> SET @j = \'[1, 2, 3]\';\nmysql> SELECT @j, JSON_UNQUOTE(@j);\n+-----------+------------------+\n| @j        | JSON_UNQUOTE(@j) |\n+-----------+------------------+\n| [1, 2, 3] | [1, 2, 3]        |\n+-----------+------------------+\n\nmysql> SELECT @@sql_mode;\n+------------+\n| @@sql_mode |\n+------------+\n|            |\n+------------+\n\nmysql> SELECT JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\');\n+------------------------------+\n| JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\') |\n+------------------------------+\n|       2                           |\n+------------------------------+\n\nmysql> SET @@sql_mode = \'NO_BACKSLASH_ESCAPES\';\nmysql> SELECT JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\');\n+------------------------------+\n| JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\') |\n+------------------------------+\n| \\t\\u0032                     |\n+------------------------------+\n\nmysql> SELECT JSON_UNQUOTE(\'\"\\t\\u0032\"\');\n+----------------------------+\n| JSON_UNQUOTE(\'\"\\t\\u0032\"\') |\n+----------------------------+\n|       2                         |\n+----------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html'),(394,'JSON_DEPTH',29,'Syntax:\nJSON_DEPTH(json_doc)\n\nReturns the maximum depth of a JSON document. Returns NULL if the\nargument is NULL. An error occurs if the argument is not a valid JSON\ndocument.\n\nAn empty array, empty object, or scalar value has depth 1. A nonempty\narray containing only elements of depth 1 or nonempty object containing\nonly member values of depth 1 has depth 2. Otherwise, a JSON document\nhas depth greater than 2.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_DEPTH(\'{}\'), JSON_DEPTH(\'[]\'), JSON_DEPTH(\'true\');\n+------------------+------------------+--------------------+\n| JSON_DEPTH(\'{}\') | JSON_DEPTH(\'[]\') | JSON_DEPTH(\'true\') |\n+------------------+------------------+--------------------+\n|                1 |                1 |                  1 |\n+------------------+------------------+--------------------+\nmysql> SELECT JSON_DEPTH(\'[10, 20]\'), JSON_DEPTH(\'[[], {}]\');\n+------------------------+------------------------+\n| JSON_DEPTH(\'[10, 20]\') | JSON_DEPTH(\'[[], {}]\') |\n+------------------------+------------------------+\n|                      2 |                      2 |\n+------------------------+------------------------+\nmysql> SELECT JSON_DEPTH(\'[10, {\"a\": 20}]\');\n+-------------------------------+\n| JSON_DEPTH(\'[10, {\"a\": 20}]\') |\n+-------------------------------+\n|                             3 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html'),(395,'JSON_LENGTH',29,'Syntax:\nJSON_LENGTH(json_doc[, path])\n\nReturns the length of a JSON document, or, if a path argument is given,\nthe length of the value within the document identified by the path.\nReturns NULL if any argument is NULL or the path argument does not\nidentify a value in the document. An error occurs if the json_doc\nargument is not a valid JSON document or the path argument is not a\nvalid path expression or contains a * or ** wildcard.\n\nThe length of a document is determined as follows:\n\no The length of a scalar is 1.\n\no The length of an array is the number of array elements.\n\no The length of an object is the number of object members.\n\no The length does not count the length of nested arrays or objects.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_LENGTH(\'[1, 2, {\"a\": 3}]\');\n+---------------------------------+\n| JSON_LENGTH(\'[1, 2, {\"a\": 3}]\') |\n+---------------------------------+\n|                               3 |\n+---------------------------------+\nmysql> SELECT JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\');\n+-----------------------------------------+\n| JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\') |\n+-----------------------------------------+\n|                                       2 |\n+-----------------------------------------+\nmysql> SELECT JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\');\n+------------------------------------------------+\n| JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\') |\n+------------------------------------------------+\n|                                              1 |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html'),(396,'JSON_TYPE',29,'Syntax:\nJSON_TYPE(json_val)\n\nReturns a utf8mb4 string indicating the type of a JSON value. This can\nbe an object, an array, or a scalar type, as shown here:\n\nmysql> SET @j = \'{\"a\": [10, true]}\';\nmysql> SELECT JSON_TYPE(@j);\n+---------------+\n| JSON_TYPE(@j) |\n+---------------+\n| OBJECT        |\n+---------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a\'));\n+------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a\')) |\n+------------------------------------+\n| ARRAY                              |\n+------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a[0]\'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a[0]\')) |\n+---------------------------------------+\n| INTEGER                               |\n+---------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a[1]\'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a[1]\')) |\n+---------------------------------------+\n| BOOLEAN                               |\n+---------------------------------------+\n\nJSON_TYPE() returns NULL if the argument is NULL:\n\nmysql> SELECT JSON_TYPE(NULL);\n+-----------------+\n| JSON_TYPE(NULL) |\n+-----------------+\n| NULL            |\n+-----------------+\n\nAn error occurs if the argument is not a valid JSON value:\n\nmysql> SELECT JSON_TYPE(1);\nERROR 3146 (22032): Invalid data type for JSON data in argument 1\nto function json_type; a JSON string or JSON type is required.\n\nFor a non-NULL, non-error result, the following list describes the\npossible JSON_TYPE() return values:\n\no Purely JSON types:\n\n  o OBJECT: JSON objects\n\n  o ARRAY: JSON arrays\n\n  o BOOLEAN: The JSON true and false literals\n\n  o NULL: The JSON null literal\n\no Numeric types:\n\n  o INTEGER: MySQL TINYINT, SMALLINT, MEDIUMINT and INT and BIGINT\n    scalars\n\n  o DOUBLE: MySQL DOUBLE FLOAT scalars\n\n  o DECIMAL: MySQL DECIMAL and NUMERIC scalars\n\no Temporal types:\n\n  o DATETIME: MySQL DATETIME and TIMESTAMP scalars\n\n  o DATE: MySQL DATE scalars\n\n  o TIME: MySQL TIME scalars\n\no String types:\n\n  o STRING: MySQL utf8 character type scalars: CHAR, VARCHAR, TEXT,\n    ENUM, and SET\n\no Binary types:\n\n  o BLOB: MySQL binary type scalars including BINARY, VARBINARY, BLOB,\n    and BIT\n\no All other types:\n\n  o OPAQUE (raw bits)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html'),(397,'JSON_VALID',29,'Syntax:\nJSON_VALID(val)\n\nReturns 0 or 1 to indicate whether a value is valid JSON. Returns NULL\nif the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_VALID(\'{\"a\": 1}\');\n+------------------------+\n| JSON_VALID(\'{\"a\": 1}\') |\n+------------------------+\n|                      1 |\n+------------------------+\nmysql> SELECT JSON_VALID(\'hello\'), JSON_VALID(\'\"hello\"\');\n+---------------------+-----------------------+\n| JSON_VALID(\'hello\') | JSON_VALID(\'\"hello\"\') |\n+---------------------+-----------------------+\n|                   0 |                     1 |\n+---------------------+-----------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html'),(398,'JSON_TABLE',29,'Syntax:\nJSON_TABLE(expr, path COLUMNS (column_list) [AS] alias)\n\nExtracts data from a JSON document and returns it as a relational table\nhaving the specified columns. The complete syntax for this function is\nshown here:\n\nJSON_TABLE(\n    expr,\n    path COLUMNS (column_list)\n)   [AS] alias\n\ncolumn_list:\n    column[, column][, ...]\n\ncolumn:\n    name FOR ORDINALITY\n    |  name type PATH string path [on_empty] [on_error]\n    |  name type EXISTS PATH string path\n    |  NESTED [PATH] path COLUMNS (column_list)\n\non_empty:\n    {NULL | ERROR | DEFAULT json_string} ON EMPTY\n\non_error:\n    {NULL | ERROR | DEFAULT json_string} ON ERROR\n\nexpr: This is an expression that returns JSON data. This can be a\nconstant (\'{\"a\":1}\'), a column (t1.json_data, given table t1 specified\nprior to JSON_TABLE() in the FROM clause), or a function call\n(JSON_EXTRACT(t1,jsn_data,\'$.post.comments\')).\n\npath: A JSON path expression, which is applied to the data source. We\nrefer to the JSON value matching the path as the row source; this is\nused to generate a row of relational data. The COLUMNS clause evaluates\nthe row source, finds specific JSON values within the row source, and\nreturns those JSON values as SQL values in individual columns of a row\nof relational data.\n\nThe alias is required. The usual rules for table aliases apply (see\nhttps://dev.mysql.com/doc/refman/8.0/en/identifiers.html).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-table-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/json-table-functions.html'),(399,'JSON_SCHEMA_VALID',29,'JSON_SCHEMA_VALID(schema,document)\n\nValidates a JSON document against a JSON schema. Both schema and\ndocument are required. The schema must be a valid JSON object; the\ndocument must be a valid JSON document. Provided that these conditions\nare met: If the document validates against the schema, the function\nreturns true (1); otherwise, it returns false (0).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-validation-functions.html\n\n','mysql> SET @schema = \'{\n    \'>  \"id\": \"http://json-schema.org/geo\",\n    \'> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \'> \"description\": \"A geographical coordinate\",\n    \'> \"type\": \"object\",\n    \'> \"properties\": {\n    \'>   \"latitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -90,\n    \'>     \"maximum\": 90\n    \'>   },\n    \'>   \"longitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -180,\n    \'>     \"maximum\": 180\n    \'>   }\n    \'> },\n    \'> \"required\": [\"latitude\", \"longitude\"]\n    \'>}\';\nQuery OK, 0 rows affected (0.01 sec)\n\n\nmysql> SET @document = \'{\n    \'> \"latitude\": 63.444697,\n    \'> \"longitude\": 10.445118\n    \'>}\';\nQuery OK, 0 rows affected (0.00 sec)\n\n\nmysql> SELECT JSON_SCHEMA_VALID(@schema, @document);\n+---------------------------------------+\n| JSON_SCHEMA_VALID(@schema, @document) |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET @document = \'{}\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALID(@schema, @document);\n+---------------------------------------+\n| JSON_SCHEMA_VALID(@schema, @document) |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET @schema = \'{\n    \'> \"id\": \"http://json-schema.org/geo\",\n    \'> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \'> \"description\": \"A geographical coordinate\",\n    \'> \"type\": \"object\",\n    \'> \"properties\": {\n    \'>   \"latitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -90,\n    \'>     \"maximum\": 90\n    \'>   },\n    \'>   \"longitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -180,\n    \'>     \"maximum\": 180\n    \'>   }\n    \'> }\n    \'>}\';\nQuery OK, 0 rows affected (0.00 sec)\n\n\nmysql> SELECT JSON_SCHEMA_VALID(@schema, @document);\n+---------------------------------------+\n| JSON_SCHEMA_VALID(@schema, @document) |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALID(\'{\"type\":\"string\",\"pattern\":\"(\"}\', \'\"abc\"\');\n+---------------------------------------------------------------+\n| JSON_SCHEMA_VALID(\'{\"type\":\"string\",\"pattern\":\"(\"}\', \'\"abc\"\') |\n+---------------------------------------------------------------+\n|                                                             1 |\n+---------------------------------------------------------------+\n1 row in set (0.04 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-validation-functions.html'),(400,'JSON_SCHEMA_VALIDATION_REPORT',29,'JSON_SCHEMA_VALIDATION_REPORT(schema,document)\n\nValidates a JSON document against a JSON schema. Both schema and\ndocument are required. As with JSON_VALID_SCHEMA(), the schema must be\na valid JSON object, and the document must be a valid JSON document.\nProvided that these conditions are met, the function returns a report,\nas a JSON document, on the outcome of the validation. If the JSON\ndocument is considered valid according to the JSON Schema, the function\nreturns a JSON object with one property valid having the value \"true\".\nIf the JSON document fails validation, the function returns a JSON\nobject which includes the properties listed here:\n\no valid: Always \"false\" for a failed schema validation\n\no reason: A human-readable string containing the reason for the failure\n\no schema-location: A JSON pointer URI fragment identifier indicating\n  where in the JSON schema the validation failed (see Note following\n  this list)\n\no document-location: A JSON pointer URI fragment identifier indicating\n  where in the JSON document the validation failed (see Note following\n  this list)\n\no schema-failed-keyword: A string containing the name of the keyword or\n  property in the JSON schema that was violated\n\n*Note*:\n\nJSON pointer URI fragment identifiers are defined in RFC 6901 -\nJavaScript Object Notation (JSON) Pointer\n(https://tools.ietf.org/html/rfc6901#page-5). (These are not the same\nas the JSON path notation used by JSON_EXTRACT() and other MySQL JSON\nfunctions.) In this notation, # represents the entire document, and\n#/myprop represents the portion of the document included in the\ntop-level property named myprop. See the specification just cited and\nthe examples shown later in this section for more information.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-validation-functions.html\n\n','mysql> SET @schema = \'{\n    \'>  \"id\": \"http://json-schema.org/geo\",\n    \'> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \'> \"description\": \"A geographical coordinate\",\n    \'> \"type\": \"object\",\n    \'> \"properties\": {\n    \'>   \"latitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -90,\n    \'>     \"maximum\": 90\n    \'>   },\n    \'>   \"longitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -180,\n    \'>     \"maximum\": 180\n    \'>   }\n    \'> },\n    \'> \"required\": [\"latitude\", \"longitude\"]\n    \'>}\';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET @document = \'{\n    \'> \"latitude\": 63.444697,\n    \'> \"longitude\": 10.445118\n    \'>}\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALIDATION_REPORT(@schema, @document);\n+---------------------------------------------------+\n| JSON_SCHEMA_VALIDATION_REPORT(@schema, @document) |\n+---------------------------------------------------+\n| {\"valid\": true}                                   |\n+---------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET @document = \'{\n    \'> \"latitude\": 63.444697,\n    \'> \"longitude\": 310.445118\n    \'> }\';\n\nmysql> SELECT JSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document))\\G\n*************************** 1. row ***************************\nJSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document)): {\n  \"valid\": false,\n  \"reason\": \"The JSON document location \'#/longitude\' failed requirement \'maximum\' at JSON Schema location \'#/properties/longitude\'\",\n  \"schema-location\": \"#/properties/longitude\",\n  \"document-location\": \"#/longitude\",\n  \"schema-failed-keyword\": \"maximum\"\n}\n1 row in set (0.00 sec)\n\nmysql> SET @document = \'{}\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document))\\G\n*************************** 1. row ***************************\nJSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document)): {\n  \"valid\": false,\n  \"reason\": \"The JSON document location \'#\' failed requirement \'required\' at JSON Schema location \'#\'\",\n  \"schema-location\": \"#\",\n  \"document-location\": \"#\",\n  \"schema-failed-keyword\": \"required\"\n}\n1 row in set (0.00 sec)\n\nmysql> SET @schema = \'{\n    \'> \"id\": \"http://json-schema.org/geo\",\n    \'> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \'> \"description\": \"A geographical coordinate\",\n    \'> \"type\": \"object\",\n    \'> \"properties\": {\n    \'>   \"latitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -90,\n    \'>     \"maximum\": 90\n    \'>   },\n    \'>   \"longitude\": {\n    \'>     \"type\": \"number\",\n    \'>     \"minimum\": -180,\n    \'>     \"maximum\": 180\n    \'>   }\n    \'> }\n    \'>}\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALIDATION_REPORT(@schema, @document);\n+---------------------------------------------------+\n| JSON_SCHEMA_VALIDATION_REPORT(@schema, @document) |\n+---------------------------------------------------+\n| {\"valid\": true}                                   |\n+---------------------------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-validation-functions.html'),(401,'JSON_PRETTY',29,'JSON_PRETTY(json_val)\n\nProvides pretty-printing of JSON values similar to that implemented in\nPHP and by other languages and database systems. The value supplied\nmust be a JSON value or a valid string representation of a JSON value.\nExtraneous whitespaces and newlines present in this value have no\neffect on the output. For a NULL value, the function returns NULL. If\nthe value is not a JSON document, or if it cannot be parsed as one, the\nfunction fails with an error.\n\nFormatting of the output from this function adheres to the following\nrules:\n\no Each array element or object member appears on a separate line,\n  indented by one additional level as compared to its parent.\n\no Each level of indentation adds two leading spaces.\n\no A comma separating individual array elements or object members is\n  printed before the newline that separates the two elements or\n  members.\n\no The key and the value of an object member are separated by a colon\n  followed by a space (\': \').\n\no An empty object or array is printed on a single line. No space is\n  printed between the opening and closing brace.\n\no Special characters in string scalars and key names are escaped\n  employing the same rules used by the JSON_QUOTE() function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html\n\n','mysql> SELECT JSON_PRETTY(\'123\'); # scalar\n+--------------------+\n| JSON_PRETTY(\'123\') |\n+--------------------+\n| 123                |\n+--------------------+\n\nmysql> SELECT JSON_PRETTY(\"[1,3,5]\"); # array\n+------------------------+\n| JSON_PRETTY(\"[1,3,5]\") |\n+------------------------+\n| [\n  1,\n  3,\n  5\n]      |\n+------------------------+\n\nmysql> SELECT JSON_PRETTY(\'{\"a\":\"10\",\"b\":\"15\",\"x\":\"25\"}\'); # object\n+---------------------------------------------+\n| JSON_PRETTY(\'{\"a\":\"10\",\"b\":\"15\",\"x\":\"25\"}\') |\n+---------------------------------------------+\n| {\n  \"a\": \"10\",\n  \"b\": \"15\",\n  \"x\": \"25\"\n}   |\n+---------------------------------------------+\n\nmysql> SELECT JSON_PRETTY(\'[\"a\",1,{\"key1\":\n    \'>    \"value1\"},\"5\",     \"77\" ,\n    \'>       {\"key2\":[\"value3\",\"valueX\",\n    \'> \"valueY\"]},\"j\", \"2\"   ]\')\\G  # nested arrays and objects\n*************************** 1. row ***************************\nJSON_PRETTY(\'[\"a\",1,{\"key1\":\n             \"value1\"},\"5\",     \"77\" ,\n                {\"key2\":[\"value3\",\"valuex\",\n          \"valuey\"]},\"j\", \"2\"   ]\'): [\n  \"a\",\n  1,\n  {\n    \"key1\": \"value1\"\n  },\n  \"5\",\n  \"77\",\n  {\n    \"key2\": [\n      \"value3\",\n      \"valuex\",\n      \"valuey\"\n    ]\n  },\n  \"j\",\n  \"2\"\n]\n','https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html'),(402,'JSON_STORAGE_FREE',29,'JSON_STORAGE_FREE(json_val)\n\nFor a JSON column value, this function shows how much storage space was\nfreed in its binary representation after it was updated in place using\nJSON_SET(), JSON_REPLACE(), or JSON_REMOVE(). The argument can also be\na valid JSON document or a string which can be parsed as one---either\nas a literal value or as the value of a user variable---in which case\nthe function returns 0. It returns a positive, nonzero value if the\nargument is a JSON column value which has been updated as described\npreviously, such that its binary representation takes up less space\nthan it did prior to the update. For a JSON column which has been\nupdated such that its binary representation is the same as or larger\nthan before, or if the update was not able to take advantage of a\npartial update, it returns 0; it returns NULL if the argument is NULL.\n\nIf json_val is not NULL, and neither is a valid JSON document nor can\nbe successfully parsed as one, an error results.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html\n\n','mysql> CREATE TABLE jtable (jcol JSON);\nQuery OK, 0 rows affected (0.38 sec)\n\nmysql> INSERT INTO jtable VALUES\n    ->     (\'{\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"}\');\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT * FROM jtable;\n+----------------------------------------------+\n| jcol                                         |\n+----------------------------------------------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"} |\n+----------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable\n    ->     SET jcol = JSON_SET(jcol, \"$.a\", 10, \"$.b\", \"wxyz\", \"$.c\", 1);\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT * FROM jtable;\n+--------------------------------+\n| jcol                           |\n+--------------------------------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": 1} |\n+--------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                      14 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable\n    ->     SET jcol = JSON_SET(jcol, \"$.a\", 10, \"$.b\", \"wx\", \"$.c\", 1);\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                      16 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable SET jcol = \'{\"a\": 10, \"b\": 1}\';\nQuery OK, 1 row affected (0.05 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = \'{\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"}\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$.a\', 10, \'$.b\', \'wxyz\', \'$.c\', \'1\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_FREE(@j) AS Free;\n+----------------------------------+------+\n| @j                               | Free |\n+----------------------------------+------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": \"1\"} |    0 |\n+----------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_STORAGE_FREE(\'{\"a\": 10, \"b\": \"wxyz\", \"c\": \"1\"}\') AS Free;\n+------+\n| Free |\n+------+\n|    0 |\n+------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html'),(403,'JSON_STORAGE_SIZE',29,'JSON_STORAGE_SIZE(json_val)\n\nThis function returns the number of bytes used to store the binary\nrepresentation of a JSON document. When the argument is a JSON column,\nthis is the space used to store the JSON document as it was inserted\ninto the column, prior to any partial updates that may have been\nperformed on it afterwards. json_val must be a valid JSON document or a\nstring which can be parsed as one. In the case where it is string, the\nfunction returns the amount of storage space in the JSON binary\nrepresentation that is created by parsing the string as JSON and\nconverting it to binary. It returns NULL if the argument is NULL.\n\nAn error results when json_val is not NULL, and is not---or cannot be\nsuccessfully parsed as---a JSON document.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html\n\n','mysql> CREATE TABLE jtable (jcol JSON);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO jtable VALUES\n    ->     (\'{\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"}\');\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size,\n    ->     JSON_STORAGE_FREE(jcol) AS Free\n    -> FROM jtable;\n+-----------------------------------------------+------+------+\n| jcol                                          | Size | Free |\n+-----------------------------------------------+------+------+\n| {\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"} |   47 |    0 |\n+-----------------------------------------------+------+------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable SET jcol = \n    ->     JSON_SET(jcol, \"$.b\", \"a\");\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size,\n    ->     JSON_STORAGE_FREE(jcol) AS Free\n    -> FROM jtable;\n+--------------------------------------------+------+------+\n| jcol                                       | Size | Free |\n+--------------------------------------------+------+------+\n| {\"a\": 1000, \"b\": \"a\", \"c\": \"[1, 3, 5, 7]\"} |   47 |    3 |\n+--------------------------------------------+------+------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable\nmysql>     SET jcol = \'{\"a\": 4.55, \"b\": \"wxyz\", \"c\": \"[true, false]\"}\';\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size,\n    ->     JSON_STORAGE_FREE(jcol) AS Free\n    -> FROM jtable;\n+------------------------------------------------+------+------+\n| jcol                                           | Size | Free |\n+------------------------------------------------+------+------+\n| {\"a\": 4.55, \"b\": \"wxyz\", \"c\": \"[true, false]\"} |   56 |    0 |\n+------------------------------------------------+------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = \'[100, \"sakila\", [1, 3, 5], 425.05]\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+------------------------------------+------+\n| @j                                 | Size |\n+------------------------------------+------+\n| [100, \"sakila\", [1, 3, 5], 425.05] |   45 |\n+------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$[1]\', \"json\");\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+----------------------------------+------+\n| @j                               | Size |\n+----------------------------------+------+\n| [100, \"json\", [1, 3, 5], 425.05] |   43 |\n+----------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$[2][0]\', JSON_ARRAY(10, 20, 30));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+---------------------------------------------+------+\n| @j                                          | Size |\n+---------------------------------------------+------+\n| [100, \"json\", [[10, 20, 30], 3, 5], 425.05] |   56 |\n+---------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SELECT\n    ->     JSON_STORAGE_SIZE(\'[100, \"sakila\", [1, 3, 5], 425.05]\') AS A,\n    ->     JSON_STORAGE_SIZE(\'{\"a\": 1000, \"b\": \"a\", \"c\": \"[1, 3, 5, 7]\"}\') AS B,\n    ->     JSON_STORAGE_SIZE(\'{\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"}\') AS C,\n    ->     JSON_STORAGE_SIZE(\'[100, \"json\", [[10, 20, 30], 3, 5], 425.05]\') AS D;\n+----+----+----+----+\n| A  | B  | C  | D  |\n+----+----+----+----+\n| 45 | 44 | 47 | 56 |\n+----+----+----+----+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html'),(404,'GTID_SUBSET',29,'Syntax:\nGTID_SUBSET(set1,set2)\n\nGiven two sets of global transaction identifiers set1 and set2, returns\ntrue if all GTIDs in set1 are also in set2. Returns false otherwise.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html\n\n','mysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 1\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-25\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-25\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 1\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 0\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html'),(405,'GTID_SUBTRACT',29,'Syntax:\nGTID_SUBTRACT(set1,set2)\n\nGiven two sets of global transaction identifiers set1 and set2, returns\nonly those GTIDs from set1 that are not in set2.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html\n\n','mysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:22-57\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:26-57\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-24\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-24\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:21-22:25-57\n1 row in set (0.01 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html'),(406,'WAIT_FOR_EXECUTED_GTID_SET',29,'Syntax:\nWAIT_FOR_EXECUTED_GTID_SET(gtid_set[, timeout])\n\nWait until the server has applied all of the transactions whose global\ntransaction identifiers are contained in gtid_set; that is, until the\ncondition GTID_SUBSET(gtid_subset, @@GLOBAL.gtid_executed) holds. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids-concepts.html\nfor a definition of GTID sets.\n\nIf a timeout is specified, and timeout seconds elapse before all of the\ntransactions in the GTID set have been applied, the function stops\nwaiting. timeout is optional, and the default timeout is 0 seconds, in\nwhich case the function always waits until all of the transactions in\nthe GTID set have been applied.\n\nWAIT_FOR_EXECUTED_GTID_SET() monitors all the GTIDs that are applied on\nthe server, including transactions that arrive from all replication\nchannels and user clients. It does not take into account whether\nreplication channels have been started or stopped.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html\n\n','mysql> SELECT WAIT_FOR_EXECUTED_GTID_SET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:1-5\');\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html'),(407,'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS',29,'Syntax:\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(gtid_set[, timeout][,channel])\n\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() is deprecated. Use\nWAIT_FOR_EXECUTED_GTID_SET() instead, which works regardless of the\nreplication channel or user client through which the specified\ntransactions arrive on the server.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/gtid-functions.html'),(408,'ASYMMETRIC_DECRYPT',29,'Syntax:\nASYMMETRIC_DECRYPT(algorithm, crypt_str, key_str)\n\nDecrypts an encrypted string using the given algorithm and key string,\nand returns the resulting plaintext as a binary string. If decryption\nfails, the result is NULL.\n\nkey_str must be a valid key string in PEM format. For successful\ndecryption, it must be the public or private key string corresponding\nto the private or public key string used with ASYMMETRIC_ENCRYPT() to\nproduce the encrypted string. algorithm indicates the encryption\nalgorithm used to create the key.\n\nSupported algorithm values: \'RSA\'\n\nFor a usage example, see the description of ASYMMETRIC_ENCRYPT().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(409,'ASYMMETRIC_DERIVE',29,'Syntax:\nASYMMETRIC_DERIVE(pub_key_str, priv_key_str)\n\nDerives a symmetric key using the private key of one party and the\npublic key of another, and returns the resulting key as a binary\nstring. If key derivation fails, the result is NULL.\n\npub_key_str and priv_key_str must be valid key strings in PEM format.\nThey must be created using the DH algorithm.\n\nSuppose that you have two pairs of public and private keys:\n\nSET @dhp = CREATE_DH_PARAMETERS(1024);\nSET @priv1 = CREATE_ASYMMETRIC_PRIV_KEY(\'DH\', @dhp);\nSET @pub1 = CREATE_ASYMMETRIC_PUB_KEY(\'DH\', @priv1);\nSET @priv2 = CREATE_ASYMMETRIC_PRIV_KEY(\'DH\', @dhp);\nSET @pub2 = CREATE_ASYMMETRIC_PUB_KEY(\'DH\', @priv2);\n\nSuppose further that you use the private key from one pair and the\npublic key from the other pair to create a symmetric key string. Then\nthis symmetric key identity relationship holds:\n\nASYMMETRIC_DERIVE(@pub1, @priv2) = ASYMMETRIC_DERIVE(@pub2, @priv1)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(410,'ASYMMETRIC_ENCRYPT',29,'Syntax:\nASYMMETRIC_ENCRYPT(algorithm, str, key_str)\n\nEncrypts a string using the given algorithm and key string, and returns\nthe resulting ciphertext as a binary string. If encryption fails, the\nresult is NULL.\n\nThe str length cannot be greater than the key_str length − 11, in\nbytes\n\nkey_str must be a valid key string in PEM format. algorithm indicates\nthe encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\'\n\nTo encrypt a string, pass a private or public key string to\nASYMMETRIC_ENCRYPT(). To recover the original unencrypted string, pass\nthe encrypted string to ASYMMETRIC_DECRYPT(), along with the public or\nprivate key string correponding to the private or public key string\nused for encryption.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','-- Generate private/public key pair\nSET @priv = CREATE_ASYMMETRIC_PRIV_KEY(\'RSA\', 1024);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(\'RSA\', @priv);\n\n-- Encrypt using private key, decrypt using public key\nSET @ciphertext = ASYMMETRIC_ENCRYPT(\'RSA\', \'The quick brown fox\', @priv);\nSET @plaintext = ASYMMETRIC_DECRYPT(\'RSA\', @ciphertext, @pub);\n\n-- Encrypt using public key, decrypt using private key\nSET @ciphertext = ASYMMETRIC_ENCRYPT(\'RSA\', \'The quick brown fox\', @pub);\nSET @plaintext = ASYMMETRIC_DECRYPT(\'RSA\', @ciphertext, @priv);\n','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(411,'ASYMMETRIC_SIGN',29,'Syntax:\nASYMMETRIC_SIGN(algorithm, digest_str, priv_key_str, digest_type)\n\nSigns a digest string using a private key string, and returns the\nsignature as a binary string. If signing fails, the result is NULL.\n\ndigest_str is the digest string. It can be generated by calling\nCREATE_DIGEST(). digest_type indicates the digest algorithm used to\ngenerate the digest string.\n\npriv_key_str is the private key string to use for signing the digest\nstring. It must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\'\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nFor a usage example, see the description of ASYMMETRIC_VERIFY().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(412,'ASYMMETRIC_VERIFY',29,'Syntax:\nASYMMETRIC_VERIFY(algorithm, digest_str, sig_str, pub_key_str,\ndigest_type)\n\nVerifies whether the signature string matches the digest string, and\nreturns 1 or 0 to indicate whether verification succeeded or failed.\n\ndigest_str is the digest string. It can be generated by calling\nCREATE_DIGEST(). digest_type indicates the digest algorithm used to\ngenerate the digest string.\n\nsig_str is the signature string. It can be generated by calling\nASYMMETRIC_SIGN().\n\npub_key_str is the public key string of the signer. It corresponds to\nthe private key passed to ASYMMETRIC_SIGN() to generate the signature\nstring and must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\'\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','-- Set the encryption algorithm and digest type\nSET @algo = \'RSA\';\nSET @dig_type = \'SHA224\';\n\n-- Create private/public key pair\nSET @priv = CREATE_ASYMMETRIC_PRIV_KEY(@algo, 1024);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(@algo, @priv);\n\n-- Generate digest from string\nSET @dig = CREATE_DIGEST(@dig_type, \'The quick brown fox\');\n\n-- Generate signature for digest and verify signature against digest\nSET @sig = ASYMMETRIC_SIGN(@algo, @dig, @priv, @dig_type);\nSET @verf = ASYMMETRIC_VERIFY(@algo, @dig, @sig, @pub, @dig_type);\n','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(413,'CREATE_ASYMMETRIC_PRIV_KEY',29,'Syntax:\nCREATE_ASYMMETRIC_PRIV_KEY(algorithm, {key_len|dh_secret})\n\nCreates a private key using the given algorithm and key length or DH\nsecret, and returns the key as a binary string in PEM format. If key\ngeneration fails, the result is NULL.\n\nSupported algorithm values: \'RSA\', \'DSA\', \'DH\'\n\nSupported key_len values: The minimum key length in bits is 1,024. The\nmaximum key length depends on the algorithm: 16,384 for RSA and 10,000\nfor DSA. These key-length limits are constraints imposed by OpenSSL.\nServer administrators can impose additional limits on maximum key\nlength by setting environment variables. See\nhttps://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-usage.htm\nl.\n\nFor DH keys, pass a shared DH secret instead of a key length. To create\nthe secret, pass the key length to CREATE_DH_PARAMETERS().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','SET @priv = CREATE_ASYMMETRIC_PRIV_KEY(\'DSA\', 2048);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(\'DSA\', @priv);\n','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(414,'CREATE_ASYMMETRIC_PUB_KEY',29,'Syntax:\nCREATE_ASYMMETRIC_PUB_KEY(algorithm, priv_key_str)\n\nDerives a public key from the given private key using the given\nalgorithm, and returns the key as a binary string in PEM format. If key\nderivation fails, the result is NULL.\n\npriv_key_str must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\', \'DH\'\n\nFor a usage example, see the description of\nCREATE_ASYMMETRIC_PRIV_KEY().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(415,'CREATE_DH_PARAMETERS',29,'CREATE_DH_PARAMETERS(key_len)\n\nCreates a shared secret for generating a DH private/public key pair and\nreturns a binary string that can be passed to\nCREATE_ASYMMETRIC_PRIV_KEY(). If secret generation fails, the result is\nnull.\n\nSupported key_len values: The minimum and maximum key lengths in bits\nare 1,024 and 10,000. These key-length limits are constraints imposed\nby OpenSSL. Server administrators can impose additional limits on\nmaximum key length by setting environment variables. See\nhttps://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-usage.htm\nl.\n\nFor an example showing how to use the return value for generating\nsymmetric keys, see the description of ASYMMETRIC_DERIVE().\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','SET @dhp = CREATE_DH_PARAMETERS(1024);\n','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(416,'CREATE_DIGEST',29,'Syntax:\nCREATE_DIGEST(digest_type, str)\n\nCreates a digest from the given string using the given digest type, and\nreturns the digest as a binary string. If digest generation fails, the\nresult is NULL.\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html\n\n','SET @dig = CREATE_DIGEST(\'SHA512\', The quick brown fox\');\n','https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html'),(417,'AVG',30,'Syntax:\nAVG([DISTINCT] expr) [over_clause]\n\nReturns the average value of expr. The DISTINCT option can be used to\nreturn the average of the distinct values of expr.\n\nIf there are no matching rows, AVG() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html; it\ncannot be used with DISTINCT.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT student_name, AVG(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(418,'BIT_AND',30,'Syntax:\nBIT_AND(expr) [over_clause]\n\nReturns the bitwise AND of all bits in expr.\n\nThe result type depends on whether the function argument values are\nevaluated as binary strings or numbers:\n\no Binary-string evaluation occurs when the argument values have a\n  binary string type, and the argument is not a hexadecimal literal,\n  bit literal, or NULL literal. Numeric evaluation occurs otherwise,\n  with argument value conversion to unsigned 64-bit integers as\n  necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the argument values. If argument values have unequal lengths, an\n  ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. If the argument size\n  exceeds 511 bytes, an ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE\n  error occurs. Numeric evaluation produces an unsigned 64-bit integer.\n\nIf there are no matching rows, BIT_AND() returns a neutral value (all\nbits set to 1) having the same length as the argument values.\n\nNULL values do not affect the result unless all values are NULL. In\nthat case, the result is a neutral value having the same length as the\nargument values.\n\nFor more information discussion about argument evaluation and result\ntypes, see the introductory discussion in\nhttps://dev.mysql.com/doc/refman/8.0/en/bit-functions.html.\n\nAs of MySQL 8.0.12, this function executes as a window function if\nover_clause is present. over_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(419,'BIT_OR',30,'Syntax:\nBIT_OR(expr) [over_clause]\n\nReturns the bitwise OR of all bits in expr.\n\nThe result type depends on whether the function argument values are\nevaluated as binary strings or numbers:\n\no Binary-string evaluation occurs when the argument values have a\n  binary string type, and the argument is not a hexadecimal literal,\n  bit literal, or NULL literal. Numeric evaluation occurs otherwise,\n  with argument value conversion to unsigned 64-bit integers as\n  necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the argument values. If argument values have unequal lengths, an\n  ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. If the argument size\n  exceeds 511 bytes, an ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE\n  error occurs. Numeric evaluation produces an unsigned 64-bit integer.\n\nIf there are no matching rows, BIT_OR() returns a neutral value (all\nbits set to 0) having the same length as the argument values.\n\nNULL values do not affect the result unless all values are NULL. In\nthat case, the result is a neutral value having the same length as the\nargument values.\n\nFor more information discussion about argument evaluation and result\ntypes, see the introductory discussion in\nhttps://dev.mysql.com/doc/refman/8.0/en/bit-functions.html.\n\nAs of MySQL 8.0.12, this function executes as a window function if\nover_clause is present. over_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(420,'BIT_XOR',30,'Syntax:\nBIT_XOR(expr) [over_clause]\n\nReturns the bitwise XOR of all bits in expr.\n\nThe result type depends on whether the function argument values are\nevaluated as binary strings or numbers:\n\no Binary-string evaluation occurs when the argument values have a\n  binary string type, and the argument is not a hexadecimal literal,\n  bit literal, or NULL literal. Numeric evaluation occurs otherwise,\n  with argument value conversion to unsigned 64-bit integers as\n  necessary.\n\no Binary-string evaluation produces a binary string of the same length\n  as the argument values. If argument values have unequal lengths, an\n  ER_INVALID_BITWISE_OPERANDS_SIZE error occurs. If the argument size\n  exceeds 511 bytes, an ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE\n  error occurs. Numeric evaluation produces an unsigned 64-bit integer.\n\nIf there are no matching rows, BIT_XOR() returns a neutral value (all\nbits set to 0) having the same length as the argument values.\n\nNULL values do not affect the result unless all values are NULL. In\nthat case, the result is a neutral value having the same length as the\nargument values.\n\nFor more information discussion about argument evaluation and result\ntypes, see the introductory discussion in\nhttps://dev.mysql.com/doc/refman/8.0/en/bit-functions.html.\n\nAs of MySQL 8.0.12, this function executes as a window function if\nover_clause is present. over_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(421,'COUNT',30,'Syntax:\nCOUNT(expr) [over_clause]\n\nReturns a count of the number of non-NULL values of expr in the rows\nretrieved by a SELECT statement. The result is a BIGINT value.\n\nIf there are no matching rows, COUNT() returns 0.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT student.student_name,COUNT(*)\n       FROM student,course\n       WHERE student.student_id=course.student_id\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(422,'COUNT DISTINCT',30,'Syntax:\nCOUNT(DISTINCT expr,[expr...])\n\nReturns a count of the number of rows with different non-NULL expr\nvalues.\n\nIf there are no matching rows, COUNT(DISTINCT) returns 0.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT COUNT(DISTINCT results) FROM student;\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(423,'GROUP_CONCAT',30,'Syntax:\nGROUP_CONCAT(expr)\n\nThis function returns a string result with the concatenated non-NULL\nvalues from a group. It returns NULL if there are no non-NULL values.\nThe full syntax is as follows:\n\nGROUP_CONCAT([DISTINCT] expr [,expr ...]\n             [ORDER BY {unsigned_integer | col_name | expr}\n                 [ASC | DESC] [,col_name ...]]\n             [SEPARATOR str_val])\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT student_name,\n         GROUP_CONCAT(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(424,'JSON_ARRAYAGG',30,'Syntax:\nJSON_ARRAYAGG(col_or_expr) [over_clause]\n\nAggregates a result set as a single JSON array whose elements consist\nof the rows. The order of elements in this array is undefined. The\nfunction acts on a column or an expression that evaluates to a single\nvalue. Returns NULL if the result contains no rows, or in the event of\nan error.\n\nAs of MySQL 8.0.14, this function executes as a window function if\nover_clause is present. over_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT o_id, attribute, value FROM t3;\n+------+-----------+--------+\n| o_id | attribute | value  |\n+------+-----------+--------+\n|    2 | color     | red    |\n|    2 | fabric    | silk   |\n|    3 | color     | green  |\n|    3 | shape     | square |\n+------+-----------+--------+\n4 rows in set (0.00 sec)\n\nmysql> SELECT o_id, JSON_ARRAYAGG(attribute) AS attributes \n       FROM t3 GROUP BY o_id;\n+------+---------------------+\n| o_id | attributes          |\n+------+---------------------+\n|    2 | [\"color\", \"fabric\"] |\n|    3 | [\"color\", \"shape\"]  |\n+------+---------------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(425,'JSON_OBJECTAGG',30,'Syntax:\nJSON_OBJECTAGG(key, value) [over_clause]\n\nTakes two column names or expressions as arguments, the first of these\nbeing used as a key and the second as a value, and returns a JSON\nobject containing key-value pairs. Returns NULL if the result contains\nno rows, or in the event of an error. An error occurs if any key name\nis NULL or the number of arguments is not equal to 2.\n\nAs of MySQL 8.0.14, this function executes as a window function if\nover_clause is present. over_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT o_id, attribute, value FROM t3;\n+------+-----------+--------+\n| o_id | attribute | value  |\n+------+-----------+--------+\n|    2 | color     | red    |\n|    2 | fabric    | silk   |\n|    3 | color     | green  |\n|    3 | shape     | square |\n+------+-----------+--------+\n4 rows in set (0.00 sec)\n\nmysql> SELECT o_id, JSON_OBJECTAGG(attribute, value)\n       FROM t3 GROUP BY o_id;\n+------+---------------------------------------+\n| o_id | JSON_OBJECTAGG(attribute, value)      |\n+------+---------------------------------------+\n|    2 | {\"color\": \"red\", \"fabric\": \"silk\"}    |\n|    3 | {\"color\": \"green\", \"shape\": \"square\"} |\n+------+---------------------------------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(426,'MAX',30,'Syntax:\nMAX([DISTINCT] expr) [over_clause]\n\nReturns the maximum value of expr. MAX() may take a string argument; in\nsuch cases, it returns the maximum string value. See\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-indexes.html. The\nDISTINCT keyword can be used to find the maximum of the distinct values\nof expr, however, this produces the same result as omitting DISTINCT.\n\nIf there are no matching rows, MAX() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html; it\ncannot be used with DISTINCT.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(427,'MIN',30,'Syntax:\nMIN([DISTINCT] expr) [over_clause]\n\nReturns the minimum value of expr. MIN() may take a string argument; in\nsuch cases, it returns the minimum string value. See\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-indexes.html. The\nDISTINCT keyword can be used to find the minimum of the distinct values\nof expr, however, this produces the same result as omitting DISTINCT.\n\nIf there are no matching rows, MIN() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html; it\ncannot be used with DISTINCT.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(428,'STD',30,'Syntax:\nSTD(expr) [over_clause]\n\nReturns the population standard deviation of expr. STD() is a synonym\nfor the standard SQL function STDDEV_POP(), provided as a MySQL\nextension.\n\nIf there are no matching rows, STD() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(429,'STDDEV',30,'Syntax:\nSTDDEV(expr) [over_clause]\n\nReturns the population standard deviation of expr. STDDEV() is a\nsynonym for the standard SQL function STDDEV_POP(), provided for\ncompatibility with Oracle.\n\nIf there are no matching rows, STDDEV() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(430,'STDDEV_POP',30,'Syntax:\nSTDDEV_POP(expr) [over_clause]\n\nReturns the population standard deviation of expr (the square root of\nVAR_POP()). You can also use STD() or STDDEV(), which are equivalent\nbut not standard SQL.\n\nIf there are no matching rows, STDDEV_POP() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(431,'STDDEV_SAMP',30,'Syntax:\nSTDDEV_SAMP(expr) [over_clause]\n\nReturns the sample standard deviation of expr (the square root of\nVAR_SAMP().\n\nIf there are no matching rows, STDDEV_SAMP() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(432,'SUM',30,'Syntax:\nSUM([DISTINCT] expr) [over_clause]\n\nReturns the sum of expr. If the return set has no rows, SUM() returns\nNULL. The DISTINCT keyword can be used to sum only the distinct values\nof expr.\n\nIf there are no matching rows, SUM() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html; it\ncannot be used with DISTINCT.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(433,'VAR_POP',30,'Syntax:\nVAR_POP(expr) [over_clause]\n\nReturns the population standard variance of expr. It considers rows as\nthe whole population, not as a sample, so it has the number of rows as\nthe denominator. You can also use VARIANCE(), which is equivalent but\nis not standard SQL.\n\nIf there are no matching rows, VAR_POP() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(434,'VAR_SAMP',30,'Syntax:\nVAR_SAMP(expr) [over_clause]\n\nReturns the sample variance of expr. That is, the denominator is the\nnumber of rows minus one.\n\nIf there are no matching rows, VAR_SAMP() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(435,'VARIANCE',30,'Syntax:\nVARIANCE(expr) [over_clause]\n\nReturns the population standard variance of expr. VARIANCE() is a\nsynonym for the standard SQL function VAR_POP(), provided as a MySQL\nextension.\n\nIf there are no matching rows, VARIANCE() returns NULL.\n\nThis function executes as a window function if over_clause is present.\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html'),(436,'CUME_DIST',30,'CUME_DIST() over_clause\n\nReturns the cumulative distribution of a value within a group of\nvalues; that is, the percentage of partition values less than or equal\nto the value in the current row. This represents the number of rows\npreceding or peer with the current row in the window ordering of the\nwindow partition divided by the total number of rows in the window\npartition. Return values range from 0 to 1.\n\nThis function should be used with ORDER BY to sort partition rows into\nthe desired order. Without ORDER BY, all rows are peers and have value\nN/N = 1, where N is the partition size.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','mysql> SELECT\n         val,\n         ROW_NUMBER()   OVER w AS \'row_number\',\n         CUME_DIST()    OVER w AS \'cume_dist\',\n         PERCENT_RANK() OVER w AS \'percent_rank\'\n       FROM numbers\n       WINDOW w AS (ORDER BY val);\n+------+------------+--------------------+--------------+\n| val  | row_number | cume_dist          | percent_rank |\n+------+------------+--------------------+--------------+\n|    1 |          1 | 0.2222222222222222 |            0 |\n|    1 |          2 | 0.2222222222222222 |            0 |\n|    2 |          3 | 0.3333333333333333 |         0.25 |\n|    3 |          4 | 0.6666666666666666 |        0.375 |\n|    3 |          5 | 0.6666666666666666 |        0.375 |\n|    3 |          6 | 0.6666666666666666 |        0.375 |\n|    4 |          7 | 0.8888888888888888 |         0.75 |\n|    4 |          8 | 0.8888888888888888 |         0.75 |\n|    5 |          9 |                  1 |            1 |\n+------+------------+--------------------+--------------+\n','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(437,'DENSE_RANK',30,'DENSE_RANK() over_clause\n\nReturns the rank of the current row within its partition, without gaps.\nPeers are considered ties and receive the same rank. This function\nassigns consecutive ranks to peer groups; the result is that groups of\nsize greater than one do not produce noncontiguous rank numbers. For an\nexample, see the RANK() function description.\n\nThis function should be used with ORDER BY to sort partition rows into\nthe desired order. Without ORDER BY, all rows are peers.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(438,'FIRST_VALUE',30,'FIRST_VALUE(expr) [null_treatment] over_clause\n\nReturns the value of expr from the first row of the window frame.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\nnull_treatment is as described in the section introduction.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','mysql> SELECT\n         time, subject, val,\n         FIRST_VALUE(val)  OVER w AS \'first\',\n         LAST_VALUE(val)   OVER w AS \'last\',\n         NTH_VALUE(val, 2) OVER w AS \'second\',\n         NTH_VALUE(val, 4) OVER w AS \'fourth\'\n       FROM observations\n       WINDOW w AS (PARTITION BY subject ORDER BY time\n                    ROWS UNBOUNDED PRECEDING);\n+----------+---------+------+-------+------+--------+--------+\n| time     | subject | val  | first | last | second | fourth |\n+----------+---------+------+-------+------+--------+--------+\n| 07:00:00 | st113   |   10 |    10 |   10 |   NULL |   NULL |\n| 07:15:00 | st113   |    9 |    10 |    9 |      9 |   NULL |\n| 07:30:00 | st113   |   25 |    10 |   25 |      9 |   NULL |\n| 07:45:00 | st113   |   20 |    10 |   20 |      9 |     20 |\n| 07:00:00 | xh458   |    0 |     0 |    0 |   NULL |   NULL |\n| 07:15:00 | xh458   |   10 |     0 |   10 |     10 |   NULL |\n| 07:30:00 | xh458   |    5 |     0 |    5 |     10 |   NULL |\n| 07:45:00 | xh458   |   30 |     0 |   30 |     10 |     30 |\n| 08:00:00 | xh458   |   25 |     0 |   25 |     10 |     30 |\n+----------+---------+------+-------+------+--------+--------+\n','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(439,'LAG',30,'LAG(expr [, N[, default]]) [null_treatment] over_clause\n\nReturns the value of expr from the row that lags (precedes) the current\nrow by N rows within its partition. If there is no such row, the return\nvalue is default. For example, if N is 3, the return value is default\nfor the first two rows. If N or default are missing, the defaults are 1\nand NULL, respectively.\n\nN must be a literal nonnegative integer. If N is 0, expr is evaluated\nfor the current row.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\nnull_treatment is as described in the section introduction.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','mysql> SELECT\n         t, val,\n         LAG(val)        OVER w AS \'lag\',\n         LEAD(val)       OVER w AS \'lead\',\n         val - LAG(val)  OVER w AS \'lag diff\',\n         val - LEAD(val) OVER w AS \'lead diff\'\n       FROM series\n       WINDOW w AS (ORDER BY t);\n+----------+------+------+------+----------+-----------+\n| t        | val  | lag  | lead | lag diff | lead diff |\n+----------+------+------+------+----------+-----------+\n| 12:00:00 |  100 | NULL |  125 |     NULL |       -25 |\n| 13:00:00 |  125 |  100 |  132 |       25 |        -7 |\n| 14:00:00 |  132 |  125 |  145 |        7 |       -13 |\n| 15:00:00 |  145 |  132 |  140 |       13 |         5 |\n| 16:00:00 |  140 |  145 |  150 |       -5 |       -10 |\n| 17:00:00 |  150 |  140 |  200 |       10 |       -50 |\n| 18:00:00 |  200 |  150 | NULL |       50 |      NULL |\n+----------+------+------+------+----------+-----------+\n\nmysql> SELECT n FROM fib ORDER BY n;\n+------+\n| n    |\n+------+\n|    1 |\n|    1 |\n|    2 |\n|    3 |\n|    5 |\n|    8 |\n+------+\n\nmysql> SELECT\n         n,\n         LAG(n, 1, 0)      OVER w AS \'lag\',\n         LEAD(n, 1, 0)     OVER w AS \'lead\',\n         n + LAG(n, 1, 0)  OVER w AS \'next_n\',\n         n + LEAD(n, 1, 0) OVER w AS \'next_next_n\'\n       FROM fib\n       WINDOW w AS (ORDER BY n);\n+------+------+------+--------+-------------+\n| n    | lag  | lead | next_n | next_next_n |\n+------+------+------+--------+-------------+\n|    1 |    0 |    1 |      1 |           2 |\n|    1 |    1 |    2 |      2 |           3 |\n|    2 |    1 |    3 |      3 |           5 |\n|    3 |    2 |    5 |      5 |           8 |\n|    5 |    3 |    8 |      8 |          13 |\n|    8 |    5 |    0 |     13 |           8 |\n+------+------+------+--------+-------------+\n','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(440,'LAST_VALUE',30,'LAST_VALUE(expr) [null_treatment] over_clause\n\nReturns the value of expr from the last row of the window frame.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\nnull_treatment is as described in the section introduction.\n\nFor an example, see the FIRST_VALUE() function description.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(441,'LEAD',30,'LEAD(expr [, N[, default]]) [null_treatment] over_clause\n\nReturns the value of expr from the row that leads (follows) the current\nrow by N rows within its partition. If there is no such row, the return\nvalue is default. For example, if N is 3, the return value is default\nfor the last two rows. If N or default are missing, the defaults are 1\nand NULL, respectively.\n\nN must be a literal nonnegative integer. If N is 0, expr is evaluated\nfor the current row.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\nnull_treatment is as described in the section introduction.\n\nFor an example, see the LAG() function description.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(442,'NTH_VALUE',30,'NTH_VALUE(expr, N) [from_first_last] [null_treatment] over_clause\n\nReturns the value of expr from the N-th row of the window frame. If\nthere is no such row, the return value is NULL.\n\nN must be a literal positive integer.\n\nfrom_first_last is part of the SQL standard, but the MySQL\nimplementation permits only FROM FIRST (which is also the default).\nThis means that calculations begin at the first row of the window. FROM\nLAST is parsed, but produces an error. To obtain the same effect as\nFROM LAST (begin calculations at the last row of the window), use ORDER\nBY to sort in reverse order.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\nnull_treatment is as described in the section introduction.\n\nFor an example, see the FIRST_VALUE() function description.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(443,'NTILE',30,'NTILE(N) over_clause\n\nDivides a partition into N groups (buckets), assigns each row in the\npartition its bucket number, and returns the bucket number of the\ncurrent row within its partition. For example, if N is 4, NTILE()\ndivides rows into four buckets. If N is 100, NTILE() divides rows into\n100 buckets.\n\nN must be a literal positive integer. Bucket number return values range\nfrom 1 to N.\n\nThis function should be used with ORDER BY to sort partition rows into\nthe desired order.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','mysql> SELECT\n         val,\n         ROW_NUMBER() OVER w AS \'row_number\',\n         NTILE(2)     OVER w AS \'ntile2\',\n         NTILE(4)     OVER w AS \'ntile4\'\n       FROM numbers\n       WINDOW w AS (ORDER BY val);\n+------+------------+--------+--------+\n| val  | row_number | ntile2 | ntile4 |\n+------+------------+--------+--------+\n|    1 |          1 |      1 |      1 |\n|    1 |          2 |      1 |      1 |\n|    2 |          3 |      1 |      1 |\n|    3 |          4 |      1 |      2 |\n|    3 |          5 |      1 |      2 |\n|    3 |          6 |      2 |      3 |\n|    4 |          7 |      2 |      3 |\n|    4 |          8 |      2 |      4 |\n|    5 |          9 |      2 |      4 |\n+------+------------+--------+--------+\n','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(444,'PERCENT_RANK',30,'PERCENT_RANK() over_clause\n\nReturns the percentage of partition values less than the value in the\ncurrent row, excluding the highest value. Return values range from 0 to\n1 and represent the row relative rank, calculated as the result of this\nformula, where rank is the row rank and rows is the number of partition\nrows:\n\n(rank - 1) / (rows - 1)\n\nThis function should be used with ORDER BY to sort partition rows into\nthe desired order. Without ORDER BY, all rows are peers.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nFor an example, see the CUME_DIST() function description.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(445,'RANK',30,'RANK() over_clause\n\nReturns the rank of the current row within its partition, with gaps.\nPeers are considered ties and receive the same rank. This function does\nnot assign consecutive ranks to peer groups if groups of size greater\nthan one exist; the result is noncontiguous rank numbers.\n\nThis function should be used with ORDER BY to sort partition rows into\nthe desired order. Without ORDER BY, all rows are peers.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','mysql> SELECT\n         val,\n         ROW_NUMBER() OVER w AS \'row_number\',\n         RANK()       OVER w AS \'rank\',\n         DENSE_RANK() OVER w AS \'dense_rank\'\n       FROM numbers\n       WINDOW w AS (ORDER BY val);\n+------+------------+------+------------+\n| val  | row_number | rank | dense_rank |\n+------+------------+------+------------+\n|    1 |          1 |    1 |          1 |\n|    1 |          2 |    1 |          1 |\n|    2 |          3 |    3 |          2 |\n|    3 |          4 |    4 |          3 |\n|    3 |          5 |    4 |          3 |\n|    3 |          6 |    4 |          3 |\n|    4 |          7 |    7 |          4 |\n|    4 |          8 |    7 |          4 |\n|    5 |          9 |    9 |          5 |\n+------+------------+------+------------+\n','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(446,'ROW_NUMBER',30,'ROW_NUMBER() over_clause\n\nReturns the number of the current row within its partition. Rows\nnumbers range from 1 to the number of partition rows.\n\nORDER BY affects the order in which rows are numbered. Without ORDER\nBY, row numbering is nondeterministic.\n\nROW_NUMBER() assigns peers different row numbers. To assign peers the\nsame value, use RANK() or DENSE_RANK(). For an example, see the RANK()\nfunction description.\n\nover_clause is as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/window-function-descriptions.html'),(447,'FORMAT_BYTES',31,'FORMAT_BYTES(count)\n\nGiven a numeric byte count, converts it to human-readable format and\nreturns a string consisting of a value and a units indicator. The\nstring contains the number of bytes rounded to 2 decimal places and a\nminimum of 3 significant digits. Numbers less than 1024 bytes are\nrepresented as whole numbers and are not rounded.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html\n\n','mysql> SELECT FORMAT_BYTES(512), FORMAT_BYTES(18446644073709551615);\n+-------------------+------------------------------------+\n| FORMAT_BYTES(512) | FORMAT_BYTES(18446644073709551615) |\n+-------------------+------------------------------------+\n|  512 bytes        | 16.00 EiB                          |\n+-------------------+------------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html'),(448,'FORMAT_PICO_TIME',31,'FORMAT_PICO_TIME(time_val)\n\nGiven a numeric Performance Schema latency or wait time in picoseconds,\nconverts it to human-readable format and returns a string consisting of\na value and a units indicator. The string contains the decimal time\nrounded to 2 decimal places and a minimum of 3 significant digits.\nTimes under 1 nanosecond are represented as whole numbers and are not\nrounded.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html\n\n','mysql> SELECT FORMAT_PICO_TIME(3501), FORMAT_PICO_TIME(188732396662000);\n+------------------------+-----------------------------------+\n| FORMAT_PICO_TIME(3501) | FORMAT_PICO_TIME(188732396662000) |\n+------------------------+-----------------------------------+\n| 3.50 ns                | 3.15 min                          |\n+------------------------+-----------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html'),(449,'PS_CURRENT_THREAD_ID',31,'PS_CURRENT_THREAD_ID()\n\nReturns a BIGINT UNSIGNED value representing the Performance Schema\nthread ID assigned to the current connection.\n\nThe thread ID return value is a value of the type given in the\nTHREAD_ID column of Performance Schema tables.\n\nPerformance Schema configuration affects PS_CURRENT_THREAD_ID() the\nsame way as for PS_THREAD_ID(). For details, see the description of\nthat function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html\n\n','mysql> SELECT PS_CURRENT_THREAD_ID();\n+------------------------+\n| PS_CURRENT_THREAD_ID() |\n+------------------------+\n|                     52 |\n+------------------------+\nmysql> SELECT PS_THREAD_ID(CONNECTION_ID());\n+-------------------------------+\n| PS_THREAD_ID(CONNECTION_ID()) |\n+-------------------------------+\n|                            52 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html'),(450,'PS_THREAD_ID',31,'PS_THREAD_ID(connection_id)\n\nGiven a connection ID, returns a BIGINT UNSIGNED value representing the\nPerformance Schema thread ID assigned to the connection ID, or NULL if\nno thread ID exists for the connection ID. The latter can occur for\nthreads that are not instrumented.\n\nThe connection ID argument is a value of the type given in the\nPROCESSLIST_ID column of the Performance Schema threads table or the Id\ncolumn of SHOW PROCESSLIST output.\n\nThe thread ID return value is a value of the type given in the\nTHREAD_ID column of Performance Schema tables.\n\nPerformance Schema configuration affects PS_THREAD_ID() operation as\nfollows. (These remarks also apply to PS_CURRENT_THREAD_ID().)\n\no Disabling the thread_instrumentation consumer disables statistics\n  from being collected and aggregated at the thread level, but has no\n  effect on PS_THREAD_ID().\n\no If performance_schema_max_thread_instances is not 0, the Performance\n  Schema allocates memory for thread statistics and assigns an internal\n  ID to each thread for which instance memory is available. If there\n  are threads for which instance memory is not available,\n  PS_THREAD_ID() returns NULL; in this case,\n  Performance_schema_thread_instances_lost will be nonzero.\n\no If performance_schema_max_thread_instances is 0, the Performance\n  Schema allocates no thread memory and PS_THREAD_ID() returns NULL.\n\no If the Performance Schema itself is disabled, PS_THREAD_ID() produces\n  an error.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html\n\n','mysql> SELECT PS_THREAD_ID(6);\n+-----------------+\n| PS_THREAD_ID(6) |\n+-----------------+\n|              45 |\n+-----------------+\n','https://dev.mysql.com/doc/refman/8.0/en/performance-schema-functions.html'),(451,'CAN_ACCESS_COLUMN',32,'CAN_ACCESS_COLUMN(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(452,'CAN_ACCESS_DATABASE',32,'CAN_ACCESS_DATABASE(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(453,'CAN_ACCESS_TABLE',32,'CAN_ACCESS_TABLE(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(454,'CAN_ACCESS_VIEW',32,'CAN_ACCESS_VIEW(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(455,'GET_DD_COLUMN_PRIVILEGES',32,'GET_DD_COLUMN_PRIVILEGES(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(456,'GET_DD_CREATE_OPTIONS',32,'GET_DD_CREATE_OPTIONS(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(457,'GET_DD_INDEX_SUB_PART_LENGTH',32,'GET_DD_INDEX_SUB_PART_LENGTH(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(458,'INTERNAL_AUTO_INCREMENT',32,'INTERNAL_AUTO_INCREMENT(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(459,'INTERNAL_AVG_ROW_LENGTH',32,'INTERNAL_AVG_ROW_LENGTH(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(460,'INTERNAL_CHECK_TIME',32,'INTERNAL_CHECK_TIME(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(461,'INTERNAL_CHECKSUM',32,'INTERNAL_CHECKSUM(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(462,'INTERNAL_DATA_FREE',32,'INTERNAL_DATA_FREE(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(463,'INTERNAL_DATA_LENGTH',32,'INTERNAL_DATA_LENGTH(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(464,'INTERNAL_DD_CHAR_LENGTH',32,'INTERNAL_DD_CHAR_LENGTH(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(465,'INTERNAL_GET_COMMENT_OR_ERROR',32,'INTERNAL_GET_COMMENT_OR_ERROR(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(466,'INTERNAL_GET_ENABLED_ROLE_JSON',32,'INTERNAL_GET_ENABLED_ROLE_JSON(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(467,'INTERNAL_GET_HOSTNAME',32,'INTERNAL_GET_HOSTNAME(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(468,'INTERNAL_GET_USERNAME',32,'INTERNAL_GET_USERNAME(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(469,'INTERNAL_GET_VIEW_WARNING_OR_ERROR',32,'INTERNAL_GET_VIEW_WARNING_OR_ERROR(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(470,'INTERNAL_INDEX_COLUMN_CARDINALITY',32,'INTERNAL_INDEX_COLUMN_CARDINALITY(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(471,'INTERNAL_INDEX_LENGTH',32,'INTERNAL_INDEX_LENGTH(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(472,'INTERNAL_IS_ENABLED_ROLE',32,'INTERNAL_IS_ENABLED_ROLE(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(473,'INTERNAL_IS_MANDATORY_ROLE',32,'INTERNAL_IS_MANDATORY_ROLE(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(474,'INTERNAL_KEYS_DISABLED',32,'INTERNAL_KEYS_DISABLED(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(475,'INTERNAL_MAX_DATA_LENGTH',32,'INTERNAL_MAX_DATA_LENGTH(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(476,'INTERNAL_TABLE_ROWS',32,'INTERNAL_TABLE_ROWS(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(477,'INTERNAL_UPDATE_TIME',32,'INTERNAL_UPDATE_TIME(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(478,'IS_VISIBLE_DD_OBJECT',32,'IS_VISIBLE_DD_OBJECT(ARGS)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/internal-functions.html'),(479,'ANY_VALUE',32,'ANY_VALUE(arg)\n\nThis function is useful for GROUP BY queries when the\nONLY_FULL_GROUP_BY SQL mode is enabled, for cases when MySQL rejects a\nquery that you know is valid for reasons that MySQL cannot determine.\nThe function return value and type are the same as the return value and\ntype of its argument, but the function result is not checked for the\nONLY_FULL_GROUP_BY SQL mode.\n\nFor example, if name is a nonindexed column, the following query fails\nwith ONLY_FULL_GROUP_BY enabled:\n\nmysql> SELECT name, address, MAX(age) FROM t GROUP BY name;\nERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP\nBY clause and contains nonaggregated column \'mydb.t.address\' which\nis not functionally dependent on columns in GROUP BY clause; this\nis incompatible with sql_mode=only_full_group_by\n\nThe failure occurs because address is a nonaggregated column that is\nneither named among GROUP BY columns nor functionally dependent on\nthem. As a result, the address value for rows within each name group is\nnondeterministic. There are multiple ways to cause MySQL to accept the\nquery:\n\no Alter the table to make name a primary key or a unique NOT NULL\n  column. This enables MySQL to determine that address is functionally\n  dependent on name; that is, address is uniquely determined by name.\n  (This technique is inapplicable if NULL must be permitted as a valid\n  name value.)\n\no Use ANY_VALUE() to refer to address:\n\nSELECT name, ANY_VALUE(address), MAX(age) FROM t GROUP BY name;\n\n  In this case, MySQL ignores the nondeterminism of address values\n  within each name group and accepts the query. This may be useful if\n  you simply do not care which value of a nonaggregated column is\n  chosen for each group. ANY_VALUE() is not an aggregate function,\n  unlike functions such as SUM() or COUNT(). It simply acts to suppress\n  the test for nondeterminism.\n\no Disable ONLY_FULL_GROUP_BY. This is equivalent to using ANY_VALUE()\n  with ONLY_FULL_GROUP_BY enabled, as described in the previous item.\n\nANY_VALUE() is also useful if functional dependence exists between\ncolumns but MySQL cannot determine it. The following query is valid\nbecause age is functionally dependent on the grouping column age-1, but\nMySQL cannot tell that and rejects the query with ONLY_FULL_GROUP_BY\nenabled:\n\nSELECT age FROM t GROUP BY age-1;\n\nTo cause MySQL to accept the query, use ANY_VALUE():\n\nSELECT ANY_VALUE(age) FROM t GROUP BY age-1;\n\nANY_VALUE() can be used for queries that refer to aggregate functions\nin the absence of a GROUP BY clause:\n\nmysql> SELECT name, MAX(age) FROM t;\nERROR 1140 (42000): In aggregated query without GROUP BY, expression\n#1 of SELECT list contains nonaggregated column \'mydb.t.name\'; this\nis incompatible with sql_mode=only_full_group_by\n\nWithout GROUP BY, there is a single group and it is nondeterministic\nwhich name value to choose for the group. ANY_VALUE() tells MySQL to\naccept the query:\n\nSELECT ANY_VALUE(name), MAX(age) FROM t;\n\nIt may be that, due to some property of a given data set, you know that\na selected nonaggregated column is effectively functionally dependent\non a GROUP BY column. For example, an application may enforce\nuniqueness of one column with respect to another. In this case, using\nANY_VALUE() for the effectively functionally dependent column may make\nsense.\n\nFor additional discussion, see\nhttps://dev.mysql.com/doc/refman/8.0/en/group-by-handling.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(480,'BIN_TO_UUID',32,'BIN_TO_UUID(binary_uuid), BIN_TO_UUID(binary_uuid, swap_flag)\n\nBIN_TO_UUID() is the inverse of UUID_TO_BIN(). It converts a binary\nUUID to a string UUID and returns the result. The binary value should\nbe a UUID as a VARBINARY(16) value. The return value is a utf8 string\nof five hexadecimal numbers separated by dashes. (For details about\nthis format, see the UUID() function description.) If the UUID argument\nis NULL, the return value is NULL. If any argument is invalid, an error\noccurs.\n\nBIN_TO_UUID() takes one or two arguments:\n\no The one-argument form takes a binary UUID value. The UUID value is\n  assumed not to have its time-low and time-high parts swapped. The\n  string result is in the same order as the binary argument.\n\no The two-argument form takes a binary UUID value and a swap-flag\n  value:\n\n  o If swap_flag is 0, the two-argument form is equivalent to the\n    one-argument form. The string result is in the same order as the\n    binary argument.\n\n  o If swap_flag is 1, the UUID value is assumed to have its time-low\n    and time-high parts swapped. These parts are swapped back to their\n    original position in the result value.\n\nFor usage examples and information about time-part swapping, see the\nUUID_TO_BIN() function description.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(481,'DEFAULT',32,'Syntax:\nDEFAULT(col_name)\n\nReturns the default value for a table column. An error results if the\ncolumn has no default value.\n\nThe use of DEFAULT(col_name) to specify the default value for a named\ncolumn is permitted only for columns that have a literal default value,\nnot for columns that have an expression default value.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> UPDATE t SET i = DEFAULT(i)+1 WHERE id < 100;\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(482,'GROUPING',32,'GROUPING(expr [, expr] ...)\n\nFor GROUP BY queries that include a WITH ROLLUP modifier, the ROLLUP\noperation produces super-aggregate output rows where NULL represents\nthe set of all values. The GROUPING() function enables you to\ndistinguish NULL values for super-aggregate rows from NULL values in\nregular grouped rows.\n\nGROUPING() is permitted only in the select list or HAVING clause.\n\nEach argument to GROUPING() must be an expression that exactly matches\nan expression in the GROUP BY clause. The expression cannot be a\npositional specifier. For each expression, GROUPING() produces 1 if the\nexpression value in the current row is a NULL representing a\nsuper-aggregate value. Otherwise, GROUPING() produces 0, indicating\nthat the expression value is a NULL for a regular result row or is not\nNULL.\n\nSuppose that table t1 contains these rows, where NULL indicates\nsomething like \"other\" or \"unknown\":\n\nmysql> SELECT * FROM t1;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | small |       10 |\n| ball | large |       20 |\n| ball | NULL  |        5 |\n| hoop | small |       15 |\n| hoop | large |        5 |\n| hoop | NULL  |        3 |\n+------+-------+----------+\n\nA summary of the table without WITH ROLLUP looks like this:\n\nmysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | small |       10 |\n| ball | large |       20 |\n| ball | NULL  |        5 |\n| hoop | small |       15 |\n| hoop | large |        5 |\n| hoop | NULL  |        3 |\n+------+-------+----------+\n\nThe result contains NULL values, but those do not represent\nsuper-aggregate rows because the query does not include WITH ROLLUP.\n\nAdding WITH ROLLUP produces super-aggregate summary rows containing\nadditional NULL values. However, without comparing this result to the\nprevious one, it is not easy to see which NULL values occur in\nsuper-aggregate rows and which occur in regular grouped rows:\n\nmysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | NULL  |        5 |\n| ball | large |       20 |\n| ball | small |       10 |\n| ball | NULL  |       35 |\n| hoop | NULL  |        3 |\n| hoop | large |        5 |\n| hoop | small |       15 |\n| hoop | NULL  |       23 |\n| NULL | NULL  |       58 |\n+------+-------+----------+\n\nTo distinguish NULL values in super-aggregate rows from those in\nregular grouped rows, use GROUPING(), which returns 1 only for\nsuper-aggregate NULL values:\n\nmysql> SELECT\n         name, size, SUM(quantity) AS quantity,\n         GROUPING(name) AS grp_name,\n         GROUPING(size) AS grp_size\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+----------+----------+\n| name | size  | quantity | grp_name | grp_size |\n+------+-------+----------+----------+----------+\n| ball | NULL  |        5 |        0 |        0 |\n| ball | large |       20 |        0 |        0 |\n| ball | small |       10 |        0 |        0 |\n| ball | NULL  |       35 |        0 |        1 |\n| hoop | NULL  |        3 |        0 |        0 |\n| hoop | large |        5 |        0 |        0 |\n| hoop | small |       15 |        0 |        0 |\n| hoop | NULL  |       23 |        0 |        1 |\n| NULL | NULL  |       58 |        1 |        1 |\n+------+-------+----------+----------+----------+\n\nCommon uses for GROUPING():\n\no Substitute a label for super-aggregate NULL values:\n\nmysql> SELECT\n         IF(GROUPING(name) = 1, \'All items\', name) AS name,\n         IF(GROUPING(size) = 1, \'All sizes\', size) AS size,\n         SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+-----------+-----------+----------+\n| name      | size      | quantity |\n+-----------+-----------+----------+\n| ball      | NULL      |        5 |\n| ball      | large     |       20 |\n| ball      | small     |       10 |\n| ball      | All sizes |       35 |\n| hoop      | NULL      |        3 |\n| hoop      | large     |        5 |\n| hoop      | small     |       15 |\n| hoop      | All sizes |       23 |\n| All items | All sizes |       58 |\n+-----------+-----------+----------+\n\no Return only super-aggregate lines by filtering out the regular\n  grouped lines:\n\nmysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP\n       HAVING GROUPING(name) = 1 OR GROUPING(size) = 1;\n+------+------+----------+\n| name | size | quantity |\n+------+------+----------+\n| ball | NULL |       35 |\n| hoop | NULL |       23 |\n| NULL | NULL |       58 |\n+------+------+----------+\n\nGROUPING() permits multiple expression arguments. In this case, the\nGROUPING() return value represents a bitmask combined from the results\nfor each expression, where the lowest-order bit corresponds to the\nresult for the rightmost expression. For example, with three expression\narguments, GROUPING(expr1, expr2, expr3) is evaluated like this:\n\n  result for GROUPING(expr3)\n+ result for GROUPING(expr2) << 1\n+ result for GROUPING(expr1) << 2\n\nThe following query shows how GROUPING() results for single arguments\ncombine for a multiple-argument call to produce a bitmask value:\n\nmysql> SELECT\n         name, size, SUM(quantity) AS quantity,\n         GROUPING(name) AS grp_name,\n         GROUPING(size) AS grp_size,\n       GROUPING(name, size) AS grp_all\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+----------+----------+---------+\n| name | size  | quantity | grp_name | grp_size | grp_all |\n+------+-------+----------+----------+----------+---------+\n| ball | NULL  |        5 |        0 |        0 |       0 |\n| ball | large |       20 |        0 |        0 |       0 |\n| ball | small |       10 |        0 |        0 |       0 |\n| ball | NULL  |       35 |        0 |        1 |       1 |\n| hoop | NULL  |        3 |        0 |        0 |       0 |\n| hoop | large |        5 |        0 |        0 |       0 |\n| hoop | small |       15 |        0 |        0 |       0 |\n| hoop | NULL  |       23 |        0 |        1 |       1 |\n| NULL | NULL  |       58 |        1 |        1 |       3 |\n+------+-------+----------+----------+----------+---------+\n\nWith multiple expression arguments, the GROUPING() return value is\nnonzero if any expression represents a super-aggregate value.\nMultiple-argument GROUPING() syntax thus provides a simpler way to\nwrite the earlier query that returned only super-aggregate rows, by\nusing a single multiple-argument GROUPING() call rather than multiple\nsingle-argument calls:\n\nmysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP\n       HAVING GROUPING(name, size) <> 0;\n+------+------+----------+\n| name | size | quantity |\n+------+------+----------+\n| ball | NULL |       35 |\n| hoop | NULL |       23 |\n| NULL | NULL |       58 |\n+------+------+----------+\n\nUse of GROUPING() is subject to these limitations:\n\no Do not use subquery GROUP BY expressions as GROUPING() arguments\n  because matching might fail. For example, matching fails for this\n  query:\n\nmysql> SELECT GROUPING((SELECT MAX(name) FROM t1))\n       FROM t1\n       GROUP BY (SELECT MAX(name) FROM t1) WITH ROLLUP;\nERROR 3580 (HY000): Argument #1 of GROUPING function is not in GROUP BY\n\no GROUP BY literal expressions should not be used within a HAVING\n  clause as GROUPING() arguments. Due to differences between when the\n  optimizer evaluates GROUP BY and HAVING, matching may succeed but\n  GROUPING() evaluation does not produce the expected result. Consider\n  this query:\n\nSELECT a AS f1, \'w\' AS f2\nFROM t\nGROUP BY f1, f2 WITH ROLLUP\nHAVING GROUPING(f2) = 1;\n\n  GROUPING() is evaluated earlier for the literal constant expression\n  than for the HAVING clause as a whole and returns 0. To check whether\n  a query such as this is affected, use EXPLAIN and look for Impossible\n  having in the Extra column.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(483,'INET_ATON',32,'Syntax:\nINET_ATON(expr)\n\nGiven the dotted-quad representation of an IPv4 network address as a\nstring, returns an integer that represents the numeric value of the\naddress in network byte order (big endian). INET_ATON() returns NULL if\nit does not understand its argument.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT INET_ATON(\'10.0.5.9\');\n        -> 167773449\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(484,'INET_NTOA',32,'Syntax:\nINET_NTOA(expr)\n\nGiven a numeric IPv4 network address in network byte order, returns the\ndotted-quad string representation of the address as a string in the\nconnection character set. INET_NTOA() returns NULL if it does not\nunderstand its argument.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT INET_NTOA(167773449);\n        -> \'10.0.5.9\'\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(485,'INET6_ATON',32,'Syntax:\nINET6_ATON(expr)\n\nGiven an IPv6 or IPv4 network address as a string, returns a binary\nstring that represents the numeric value of the address in network byte\norder (big endian). Because numeric-format IPv6 addresses require more\nbytes than the largest integer type, the representation returned by\nthis function has the VARBINARY data type: VARBINARY(16) for IPv6\naddresses and VARBINARY(4) for IPv4 addresses. If the argument is not a\nvalid address, INET6_ATON() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT HEX(INET6_ATON(\'fdfe::5a55:caff:fefa:9089\'));\n        -> \'FDFE0000000000005A55CAFFFEFA9089\'\nmysql> SELECT HEX(INET6_ATON(\'10.0.5.9\'));\n        -> \'0A000509\'\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(486,'INET6_NTOA',32,'Syntax:\nINET6_NTOA(expr)\n\nGiven an IPv6 or IPv4 network address represented in numeric form as a\nbinary string, returns the string representation of the address as a\nstring in the connection character set. If the argument is not a valid\naddress, INET6_NTOA() returns NULL.\n\nINET6_NTOA() has these properties:\n\no It does not use operating system functions to perform conversions,\n  thus the output string is platform independent.\n\no The return string has a maximum length of 39 (4 x 8 + 7). Given this\n  statement:\n\nCREATE TABLE t AS SELECT INET6_NTOA(expr) AS c1;\n\n  The resulting table would have this definition:\n\nCREATE TABLE t (c1 VARCHAR(39) CHARACTER SET utf8 DEFAULT NULL);\n\no The return string uses lowercase letters for IPv6 addresses.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT INET6_NTOA(INET6_ATON(\'fdfe::5a55:caff:fefa:9089\'));\n        -> \'fdfe::5a55:caff:fefa:9089\'\nmysql> SELECT INET6_NTOA(INET6_ATON(\'10.0.5.9\'));\n        -> \'10.0.5.9\'\n\nmysql> SELECT INET6_NTOA(UNHEX(\'FDFE0000000000005A55CAFFFEFA9089\'));\n        -> \'fdfe::5a55:caff:fefa:9089\'\nmysql> SELECT INET6_NTOA(UNHEX(\'0A000509\'));\n        -> \'10.0.5.9\'\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(487,'IS_IPV4',32,'Syntax:\nIS_IPV4(expr)\n\nReturns 1 if the argument is a valid IPv4 address specified as a\nstring, 0 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4(\'10.0.5.9\'), IS_IPV4(\'10.0.5.256\');\n        -> 1, 0\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(488,'IS_IPV4_COMPAT',32,'Syntax:\nIS_IPV4_COMPAT(expr)\n\nThis function takes an IPv6 address represented in numeric form as a\nbinary string, as returned by INET6_ATON(). It returns 1 if the\nargument is a valid IPv4-compatible IPv6 address, 0 otherwise.\nIPv4-compatible addresses have the form ::ipv4_address.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4_COMPAT(INET6_ATON(\'::10.0.5.9\'));\n        -> 1\nmysql> SELECT IS_IPV4_COMPAT(INET6_ATON(\'::ffff:10.0.5.9\'));\n        -> 0\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(489,'IS_IPV4_MAPPED',32,'Syntax:\nIS_IPV4_MAPPED(expr)\n\nThis function takes an IPv6 address represented in numeric form as a\nbinary string, as returned by INET6_ATON(). It returns 1 if the\nargument is a valid IPv4-mapped IPv6 address, 0 otherwise. IPv4-mapped\naddresses have the form ::ffff:ipv4_address.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4_MAPPED(INET6_ATON(\'::10.0.5.9\'));\n        -> 0\nmysql> SELECT IS_IPV4_MAPPED(INET6_ATON(\'::ffff:10.0.5.9\'));\n        -> 1\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(490,'IS_IPV6',32,'Syntax:\nIS_IPV6(expr)\n\nReturns 1 if the argument is a valid IPv6 address specified as a\nstring, 0 otherwise. This function does not consider IPv4 addresses to\nbe valid IPv6 addresses.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV6(\'10.0.5.9\'), IS_IPV6(\'::1\');\n        -> 0, 1\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(491,'IS_UUID',32,'IS_UUID(string_uuid)\n\nReturns 1 if the argument is a valid string-format UUID, 0 if the\nargument is not a valid UUID, and NULL if the argument is NULL.\n\n\"Valid\" means that the value is in a format that can be parsed. That\nis, it has the correct length and contains only the permitted\ncharacters (hexadecimal digits in any lettercase and, optionally,\ndashes and curly braces). This format is most common:\n\naaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\n\nThese other formats are also permitted:\n\naaaaaaaabbbbccccddddeeeeeeeeeeee\n{aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee}\n\nFor the meanings of fields within the value, see the UUID() function\ndescription.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_UUID(\'6ccd780c-baba-1026-9564-5b8c656024db\');\n+-------------------------------------------------+\n| IS_UUID(\'6ccd780c-baba-1026-9564-5b8c656024db\') |\n+-------------------------------------------------+\n|                                               1 |\n+-------------------------------------------------+\nmysql> SELECT IS_UUID(\'6CCD780C-BABA-1026-9564-5B8C656024DB\');\n+-------------------------------------------------+\n| IS_UUID(\'6CCD780C-BABA-1026-9564-5B8C656024DB\') |\n+-------------------------------------------------+\n|                                               1 |\n+-------------------------------------------------+\nmysql> SELECT IS_UUID(\'6ccd780cbaba102695645b8c656024db\');\n+---------------------------------------------+\n| IS_UUID(\'6ccd780cbaba102695645b8c656024db\') |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\nmysql> SELECT IS_UUID(\'{6ccd780c-baba-1026-9564-5b8c656024db}\');\n+---------------------------------------------------+\n| IS_UUID(\'{6ccd780c-baba-1026-9564-5b8c656024db}\') |\n+---------------------------------------------------+\n|                                                 1 |\n+---------------------------------------------------+\nmysql> SELECT IS_UUID(\'6ccd780c-baba-1026-9564-5b8c6560\');\n+---------------------------------------------+\n| IS_UUID(\'6ccd780c-baba-1026-9564-5b8c6560\') |\n+---------------------------------------------+\n|                                           0 |\n+---------------------------------------------+\nmysql> SELECT IS_UUID(RAND());\n+-----------------+\n| IS_UUID(RAND()) |\n+-----------------+\n|               0 |\n+-----------------+\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(492,'MASTER_POS_WAIT',32,'Syntax:\nMASTER_POS_WAIT(log_name,log_pos[,timeout][,channel])\n\nThis function is useful for control of master/slave synchronization. It\nblocks until the slave has read and applied all updates up to the\nspecified position in the master log. The return value is the number of\nlog events the slave had to wait for to advance to the specified\nposition. The function returns NULL if the slave SQL thread is not\nstarted, the slave\'s master information is not initialized, the\narguments are incorrect, or an error occurs. It returns -1 if the\ntimeout has been exceeded. If the slave SQL thread stops while\nMASTER_POS_WAIT() is waiting, the function returns NULL. If the slave\nis past the specified position, the function returns immediately.\n\nOn a multithreaded slave, the function waits until expiry of the limit\nset by the slave_checkpoint_group or slave_checkpoint_period system\nvariable, when the checkpoint operation is called to update the status\nof the slave. Depending on the setting for the system variables, the\nfunction might therefore return some time after the specified position\nwas reached.\n\nIf a timeout value is specified, MASTER_POS_WAIT() stops waiting when\ntimeout seconds have elapsed. timeout must be greater than 0; a zero or\nnegative timeout means no timeout.\n\nThe optional channel value enables you to name which replication\nchannel the function applies to. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-channels.html for\nmore information.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(493,'NAME_CONST',32,'Syntax:\nNAME_CONST(name,value)\n\nReturns the given value. When used to produce a result set column,\nNAME_CONST() causes the column to have the given name. The arguments\nshould be constants.\n\nmysql> SELECT NAME_CONST(\'myname\', 14);\n+--------+\n| myname |\n+--------+\n|     14 |\n+--------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(494,'SLEEP',32,'Syntax:\nSLEEP(duration)\n\nSleeps (pauses) for the number of seconds given by the duration\nargument, then returns 0. The duration may have a fractional part. If\nthe argument is NULL or negative, SLEEP() produces a warning, or an\nerror in strict SQL mode.\n\nWhen sleep returns normally (without interruption), it returns 0:\n\nmysql> SELECT SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           0 |\n+-------------+\n\nWhen SLEEP() is the only thing invoked by a query that is interrupted,\nit returns 1 and the query itself returns no error. This is true\nwhether the query is killed or times out:\n\no This statement is interrupted using KILL QUERY from another session:\n\nmysql> SELECT SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           1 |\n+-------------+\n\no This statement is interrupted by timing out:\n\nmysql> SELECT /*+ MAX_EXECUTION_TIME(1) */ SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           1 |\n+-------------+\n\nWhen SLEEP() is only part of a query that is interrupted, the query\nreturns an error:\n\no This statement is interrupted using KILL QUERY from another session:\n\nmysql> SELECT 1 FROM t1 WHERE SLEEP(1000);\nERROR 1317 (70100): Query execution was interrupted\n\no This statement is interrupted by timing out:\n\nmysql> SELECT /*+ MAX_EXECUTION_TIME(1000) */ 1 FROM t1 WHERE SLEEP(1000);\nERROR 3024 (HY000): Query execution was interrupted, maximum statement\nexecution time exceeded\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(495,'UUID',32,'Syntax:\nUUID()\n\nReturns a Universal Unique Identifier (UUID) generated according to RFC\n4122, \"A Universally Unique IDentifier (UUID) URN Namespace\"\n(http://www.ietf.org/rfc/rfc4122.txt).\n\nA UUID is designed as a number that is globally unique in space and\ntime. Two calls to UUID() are expected to generate two different\nvalues, even if these calls are performed on two separate devices not\nconnected to each other.\n\n*Warning*:\n\nAlthough UUID() values are intended to be unique, they are not\nnecessarily unguessable or unpredictable. If unpredictability is\nrequired, UUID values should be generated some other way.\n\nUUID() returns a value that conforms to UUID version 1 as described in\nRFC 4122. The value is a 128-bit number represented as a utf8 string of\nfive hexadecimal numbers in aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\nformat:\n\no The first three numbers are generated from the low, middle, and high\n  parts of a timestamp. The high part also includes the UUID version\n  number.\n\no The fourth number preserves temporal uniqueness in case the timestamp\n  value loses monotonicity (for example, due to daylight saving time).\n\no The fifth number is an IEEE 802 node number that provides spatial\n  uniqueness. A random number is substituted if the latter is not\n  available (for example, because the host device has no Ethernet card,\n  or it is unknown how to find the hardware address of an interface on\n  the host operating system). In this case, spatial uniqueness cannot\n  be guaranteed. Nevertheless, a collision should have very low\n  probability.\n\n  The MAC address of an interface is taken into account only on\n  FreeBSD, Linux, and Windows. On other operating systems, MySQL uses a\n  randomly generated 48-bit number.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT UUID();\n        -> \'6ccd780c-baba-1026-9564-5b8c656024db\'\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(496,'UUID_SHORT',32,'Syntax:\nUUID_SHORT()\n\nReturns a \"short\" universal identifier as a 64-bit unsigned integer.\nValues returned by UUID_SHORT() differ from the string-format 128-bit\nidentifiers returned by the UUID() function and have different\nuniqueness properties. The value of UUID_SHORT() is guaranteed to be\nunique if the following conditions hold:\n\no The server_id value of the current server is between 0 and 255 and is\n  unique among your set of master and slave servers\n\no You do not set back the system time for your server host between\n  mysqld restarts\n\no You invoke UUID_SHORT() on average fewer than 16 million times per\n  second between mysqld restarts\n\nThe UUID_SHORT() return value is constructed this way:\n\n  (server_id & 255) << 56\n+ (server_startup_time_in_seconds << 24)\n+ incremented_variable++;\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> SELECT UUID_SHORT();\n        -> 92395783831158784\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(497,'UUID_TO_BIN',32,'UUID_TO_BIN(string_uuid), UUID_TO_BIN(string_uuid, swap_flag)\n\nConverts a string UUID to a binary UUID and returns the result. (The\nIS_UUID() function description lists the permitted string UUID\nformats.) The return binary UUID is a VARBINARY(16) value. If the UUID\nargument is NULL, the return value is NULL. If any argument is invalid,\nan error occurs.\n\nUUID_TO_BIN() takes one or two arguments:\n\no The one-argument form takes a string UUID value. The binary result is\n  in the same order as the string argument.\n\no The two-argument form takes a string UUID value and a flag value:\n\n  o If swap_flag is 0, the two-argument form is equivalent to the\n    one-argument form. The binary result is in the same order as the\n    string argument.\n\n  o If swap_flag is 1, the format of the return value differs: The\n    time-low and time-high parts (the first and third groups of\n    hexadecimal digits, respectively) are swapped. This moves the more\n    rapidly varying part to the right and can improve indexing\n    efficiency if the result is stored in an indexed column.\n\nTime-part swapping assumes the use of UUID version 1 values, such as\nare generated by the UUID() function. For UUID values produced by other\nmeans that do not follow version 1 format, time-part swapping provides\nno benefit. For details about version 1 format, see the UUID() function\ndescription.\n\nSuppose that you have the following string UUID value:\n\nmysql> SET @uuid = \'6ccd780c-baba-1026-9564-5b8c656024db\';\n\nTo convert the string UUID to binary with or without time-part\nswapping, use UUID_TO_BIN():\n\nmysql> SELECT HEX(UUID_TO_BIN(@uuid));\n+----------------------------------+\n| HEX(UUID_TO_BIN(@uuid))          |\n+----------------------------------+\n| 6CCD780CBABA102695645B8C656024DB |\n+----------------------------------+\nmysql> SELECT HEX(UUID_TO_BIN(@uuid, 0));\n+----------------------------------+\n| HEX(UUID_TO_BIN(@uuid, 0))       |\n+----------------------------------+\n| 6CCD780CBABA102695645B8C656024DB |\n+----------------------------------+\nmysql> SELECT HEX(UUID_TO_BIN(@uuid, 1));\n+----------------------------------+\n| HEX(UUID_TO_BIN(@uuid, 1))       |\n+----------------------------------+\n| 1026BABA6CCD780C95645B8C656024DB |\n+----------------------------------+\n\nTo convert a binary UUID returned by UUID_TO_BIN() to a string UUID,\nuse BIN_TO_UUID(). If you produce a binary UUID by calling\nUUID_TO_BIN() with a second argument of 1 to swap time parts, you\nshould also pass a second argument of 1 to BIN_TO_UUID() to unswap the\ntime parts when converting the binary UUID back to a string UUID:\n\nmysql> SELECT BIN_TO_UUID(UUID_TO_BIN(@uuid));\n+--------------------------------------+\n| BIN_TO_UUID(UUID_TO_BIN(@uuid))      |\n+--------------------------------------+\n| 6ccd780c-baba-1026-9564-5b8c656024db |\n+--------------------------------------+\nmysql> SELECT BIN_TO_UUID(UUID_TO_BIN(@uuid,0),0);\n+--------------------------------------+\n| BIN_TO_UUID(UUID_TO_BIN(@uuid,0),0)  |\n+--------------------------------------+\n| 6ccd780c-baba-1026-9564-5b8c656024db |\n+--------------------------------------+\nmysql> SELECT BIN_TO_UUID(UUID_TO_BIN(@uuid,1),1);\n+--------------------------------------+\n| BIN_TO_UUID(UUID_TO_BIN(@uuid,1),1)  |\n+--------------------------------------+\n| 6ccd780c-baba-1026-9564-5b8c656024db |\n+--------------------------------------+\n\nIf the use of time-part swapping is not the same for the conversion in\nboth directions, the original UUID will not be recovered properly:\n\nmysql> SELECT BIN_TO_UUID(UUID_TO_BIN(@uuid,0),1);\n+--------------------------------------+\n| BIN_TO_UUID(UUID_TO_BIN(@uuid,0),1)  |\n+--------------------------------------+\n| baba1026-780c-6ccd-9564-5b8c656024db |\n+--------------------------------------+\nmysql> SELECT BIN_TO_UUID(UUID_TO_BIN(@uuid,1),0);\n+--------------------------------------+\n| BIN_TO_UUID(UUID_TO_BIN(@uuid,1),0)  |\n+--------------------------------------+\n| 1026baba-6ccd-780c-9564-5b8c656024db |\n+--------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(498,'VALUES',32,'Syntax:\nVALUES(col_name)\n\nIn an INSERT ... ON DUPLICATE KEY UPDATE statement, you can use the\nVALUES(col_name) function in the UPDATE clause to refer to column\nvalues from the INSERT portion of the statement. In other words,\nVALUES(col_name) in the UPDATE clause refers to the value of col_name\nthat would be inserted, had no duplicate-key conflict occurred. This\nfunction is especially useful in multiple-row inserts. The VALUES()\nfunction is meaningful only in the ON DUPLICATE KEY UPDATE clause of\nINSERT statements and returns NULL otherwise. See\nhttps://dev.mysql.com/doc/refman/8.0/en/insert-on-duplicate.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html\n\n','mysql> INSERT INTO table (a,b,c) VALUES (1,2,3),(4,5,6)\n    -> ON DUPLICATE KEY UPDATE c=VALUES(a)+VALUES(b);\n','https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html'),(499,'ALTER DATABASE',33,'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n  | DEFAULT ENCRYPTION [=] {\'Y\' | \'N\'}\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the data dictionary. To\nuse ALTER DATABASE, you need the ALTER privilege on the database. ALTER\nSCHEMA is a synonym for ALTER DATABASE.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nNational Language Characteristics\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttps://dev.mysql.com/doc/refman/8.0/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nIf you change the default character set or collation for a database,\nstored routines that use the database defaults must be dropped and\nrecreated so that they use the new defaults. (In a stored routine,\nvariables with character data types use the database defaults if the\ncharacter set or collation are not specified explicitly. See [HELP\nCREATE PROCEDURE].)\n\nEncryption\n\nThe DEFAULT ENCRYPTION clause, introduced in MySQL 8.0.16, defines the\ndefault database encryption, which is inherited by tables created in\nthe database. Changing the default encryption of the database does not\nalter the encryption of existing tables associated with the schema.\nOnly newly-created tables inherit the default database encryption. An\nALTER DATABASE statement executed without a DEFAULT ENCRYPTION clause\nretains the existing default database encryption. If the\ntable_encryption_privilege_check variable is enabled, the\nTABLE_ENCRYPTION_ADMIN privilege is required to specify a default\nencryption setting that differs from the default_table_encryption\nsetting. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html#inn\nodb-schema-tablespace-encryption-default.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-database.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-database.html'),(500,'ALTER SCHEMA',33,'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n  | DEFAULT ENCRYPTION [=] {\'Y\' | \'N\'}\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the data dictionary. To\nuse ALTER DATABASE, you need the ALTER privilege on the database. ALTER\nSCHEMA is a synonym for ALTER DATABASE.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nNational Language Characteristics\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttps://dev.mysql.com/doc/refman/8.0/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nIf you change the default character set or collation for a database,\nstored routines that use the database defaults must be dropped and\nrecreated so that they use the new defaults. (In a stored routine,\nvariables with character data types use the database defaults if the\ncharacter set or collation are not specified explicitly. See [HELP\nCREATE PROCEDURE].)\n\nEncryption\n\nThe DEFAULT ENCRYPTION clause, introduced in MySQL 8.0.16, defines the\ndefault database encryption, which is inherited by tables created in\nthe database. Changing the default encryption of the database does not\nalter the encryption of existing tables associated with the schema.\nOnly newly-created tables inherit the default database encryption. An\nALTER DATABASE statement executed without a DEFAULT ENCRYPTION clause\nretains the existing default database encryption. If the\ntable_encryption_privilege_check variable is enabled, the\nTABLE_ENCRYPTION_ADMIN privilege is required to specify a default\nencryption setting that differs from the default_table_encryption\nsetting. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html#inn\nodb-schema-tablespace-encryption-default.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-database.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-database.html'),(501,'ALTER EVENT',33,'Syntax:\nALTER\n    [DEFINER = user]\n    EVENT event_name\n    [ON SCHEDULE schedule]\n    [ON COMPLETION [NOT] PRESERVE]\n    [RENAME TO new_event_name]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'string\']\n    [DO event_body]\n\nThe ALTER EVENT statement changes one or more of the characteristics of\nan existing event without the need to drop and recreate it. The syntax\nfor each of the DEFINER, ON SCHEDULE, ON COMPLETION, COMMENT, ENABLE /\nDISABLE, and DO clauses is exactly the same as when used with CREATE\nEVENT. (See [HELP CREATE EVENT].)\n\nAny user can alter an event defined on a database for which that user\nhas the EVENT privilege. When a user executes a successful ALTER EVENT\nstatement, that user becomes the definer for the affected event.\n\nALTER EVENT works only with an existing event:\n\nmysql> ALTER EVENT no_such_event \n     >     ON SCHEDULE \n     >       EVERY \'2:3\' DAY_HOUR;\nERROR 1517 (HY000): Unknown event \'no_such_event\'\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-event.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-event.html'),(502,'ALTER FUNCTION',33,'Syntax:\nALTER FUNCTION func_name [characteristic ...]\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nThis statement can be used to change the characteristics of a stored\nfunction. More than one change may be specified in an ALTER FUNCTION\nstatement. However, you cannot change the parameters or body of a\nstored function using this statement; to make such changes, you must\ndrop and re-create the function using DROP FUNCTION and CREATE\nFUNCTION.\n\nYou must have the ALTER ROUTINE privilege for the function. (That\nprivilege is granted automatically to the function creator.) If binary\nlogging is enabled, the ALTER FUNCTION statement might also require the\nSUPER privilege, as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-logging.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-function.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-function.html'),(503,'ALTER INSTANCE',33,'Syntax:\nALTER INSTANCE instance_action\n\ninstance_action: {\n    ROTATE INNODB MASTER KEY\n  | ROTATE BINLOG MASTER KEY\n  | RELOAD TLS [NO ROLLBACK ON ERROR]\n}\n\nALTER INSTANCE defines actions applicable to a MySQL server instance.\nThe statement supports these actions:\n\no ALTER INSTANCE ROTATE INNODB MASTER KEY\n\n  This action rotates the master encryption key used for InnoDB\n  tablespace encryption. Key rotation requires the ENCRYPTION_KEY_ADMIN\n  or SUPER privilege. To perform this action, a keyring plugin must be\n  installed and configured. For instructions, see\n  https://dev.mysql.com/doc/refman/8.0/en/keyring.html.\n\n  ALTER INSTANCE ROTATE INNODB MASTER KEY supports concurrent DML.\n  However, it cannot be run concurrently with CREATE TABLE ...\n  ENCRYPTION or ALTER TABLE ... ENCRYPTION operations, and locks are\n  taken to prevent conflicts that could arise from concurrent execution\n  of these statements. If one of the conflicting statements is running,\n  it must complete before another can proceed.\n\n  ALTER INSTANCE ROTATE INNODB MASTER KEY statements are written to the\n  binary log so that they can be executed on replicated servers.\n\n  For additional ALTER INSTANCE ROTATE INNODB MASTER KEY usage\n  information, see\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html.\n\no ALTER INSTANCE ROTATE BINLOG MASTER KEY\n\n  This action rotates the binary log master key used for binary log\n  encryption. Key rotation for the binary log master key requires the\n  BINLOG_ENCRYPTION_ADMIN or SUPER privilege. The statement cannot be\n  used if the binlog_encryption system variable is set to OFF. To\n  perform this action, a keyring plugin must be installed and\n  configured. For instructions, see\n  https://dev.mysql.com/doc/refman/8.0/en/keyring.html.\n\n  ALTER INSTANCE ROTATE BINLOG MASTER KEY actions are not written to\n  the binary log and are not executed on replication slaves. Binary log\n  master key rotation can therefore be carried out in replication\n  environments including a mix of MySQL versions. To schedule regular\n  rotation of the binary log master key on all applicable master and\n  slave servers, you can enable the MySQL Event Scheduler on each\n  server and issue the ALTER INSTANCE ROTATE BINLOG MASTER KEY\n  statement using a CREATE EVENT statement. If you rotate the binary\n  log master key because you suspect that the current or any of the\n  previous binary log master keys might have been compromised, issue\n  the statement on every applicable master and slave server, which\n  enables you to verify immediate compliance.\n\n  For additional ALTER INSTANCE ROTATE BINLOG MASTER KEY usage\n  information, including what to do if the process does not complete\n  correctly or is interrupted by an unexpected server halt, see\n  https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption\n  .html.\n\no ALTER INSTANCE RELOAD TLS\n\n  This action reconfigures the SSL context from the current values of\n  the system variables that define the context. It also updates the\n  status variables that reflect the active context values. This action\n  requires the CONNECTION_ADMIN privilege.\n\n  By default, the RELOAD TLS action rolls back with an error and has no\n  effect if the configuration values do not permit creation of a new\n  SSL context. The previous context values continue to be used for new\n  connections.\n\n  If the optional NO ROLLBACK ON ERROR clause is given and a new\n  context cannot be created, rollback does not occur. Instead, a\n  warning is generated and SSL is disabled for new connections.\n\n  ALTER INSTANCE RELOAD TLS statements are not written to the binary\n  log (and thus are not replicated). SSL configuration is local and\n  depends on local files not necessarily present on all servers\n  involved.\n\n  For additional information about reconfiguring the SSL context,\n  including which system and status variables are context-related, see\n  https://dev.mysql.com/doc/refman/8.0/en/using-encrypted-connections.h\n  tml#using-encrypted-connections-server-side-runtime-configuration.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-instance.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-instance.html'),(504,'ALTER LOGFILE GROUP',33,'Syntax:\nALTER LOGFILE GROUP logfile_group\n    ADD UNDOFILE \'file_name\'\n    [INITIAL_SIZE [=] size]\n    [WAIT]\n    ENGINE [=] engine_name\n\nThis statement adds an UNDO file named \'file_name\' to an existing log\nfile group logfile_group. An ALTER LOGFILE GROUP statement has one and\nonly one ADD UNDOFILE clause. No DROP UNDOFILE clause is currently\nsupported.\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and an undo log file with the same name, or an undo log file\nand a data file with the same name.\n\nThe optional INITIAL_SIZE parameter sets the UNDO file\'s initial size\nin bytes; if not specified, the initial size defaults to 134217728 (128\nMB). You may optionally follow size with a one-letter abbreviation for\nan order of magnitude, similar to those used in my.cnf. Generally, this\nis one of the letters M (megabytes) or G (gigabytes). (Bug #13116514,\nBug #16104705, Bug #62858)\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nThe minimum allowed value for INITIAL_SIZE is 1048576 (1 MB). (Bug\n#29574)\n\n*Note*:\n\nWAIT is parsed but otherwise ignored. This keyword currently has no\neffect, and is intended for future expansion.\n\nThe ENGINE parameter (required) determines the storage engine which is\nused by this log file group, with engine_name being the name of the\nstorage engine. Currently, the only accepted values for engine_name are\n\"NDBCLUSTER\" and \"NDB\". The two values are equivalent.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-logfile-group.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-logfile-group.html'),(505,'ALTER PROCEDURE',33,'Syntax:\nALTER PROCEDURE proc_name [characteristic ...]\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nThis statement can be used to change the characteristics of a stored\nprocedure. More than one change may be specified in an ALTER PROCEDURE\nstatement. However, you cannot change the parameters or body of a\nstored procedure using this statement; to make such changes, you must\ndrop and re-create the procedure using DROP PROCEDURE and CREATE\nPROCEDURE.\n\nYou must have the ALTER ROUTINE privilege for the procedure. By\ndefault, that privilege is granted automatically to the procedure\ncreator. This behavior can be changed by disabling the\nautomatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-routines-privileges.html\n.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-procedure.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-procedure.html'),(506,'ALTER SERVER',33,'Syntax:\nALTER SERVER  server_name\n    OPTIONS (option [, option] ...)\n\nAlters the server information for server_name, adjusting any of the\noptions permitted in the CREATE SERVER statement. The corresponding\nfields in the mysql.servers table are updated accordingly. This\nstatement requires the SUPER privilege.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-server.html\n\n','ALTER SERVER s OPTIONS (USER \'sally\');\n','https://dev.mysql.com/doc/refman/8.0/en/alter-server.html'),(507,'ALTER TABLE',33,'Syntax:\nALTER TABLE tbl_name\n    [alter_specification [, alter_specification] ...]\n    [partition_options]\n\nalter_specification:\n    table_options\n  | ADD [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ADD [COLUMN] (col_name column_definition,...)\n  | ADD {INDEX|KEY} [index_name]\n        [index_type] (key_part,...) [index_option] ...\n  | ADD {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name]\n        (key_part,...) [index_option] ...\n  | ADD [CONSTRAINT [symbol]] PRIMARY KEY\n        [index_type] (key_part,...)\n        [index_option] ...\n  | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n        [index_name] [index_type] (key_part,...)\n        [index_option] ...\n  | ADD [CONSTRAINT [symbol]] FOREIGN KEY\n        [index_name] (col_name,...)\n        reference_definition\n  | ADD [CONSTRAINT [symbol]] CHECK (expr) [[NOT] ENFORCED]\n  | DROP {CHECK|CONSTRAINT} symbol\n  | ALTER {CHECK|CONSTRAINT} symbol [NOT] ENFORCED\n  | ALGORITHM [=] {DEFAULT|INSTANT|INPLACE|COPY}\n  | ALTER [COLUMN] col_name\n        {SET DEFAULT {literal | (expr)} | DROP DEFAULT}\n  | ALTER INDEX index_name {VISIBLE | INVISIBLE}\n  | CHANGE [COLUMN] old_col_name new_col_name column_definition\n        [FIRST|AFTER col_name]\n  | [DEFAULT] CHARACTER SET [=] charset_name [COLLATE [=] collation_name]\n  | CONVERT TO CHARACTER SET charset_name [COLLATE collation_name]\n  | {DISABLE|ENABLE} KEYS\n  | {DISCARD|IMPORT} TABLESPACE\n  | DROP [COLUMN] col_name\n  | DROP {INDEX|KEY} index_name\n  | DROP PRIMARY KEY\n  | DROP FOREIGN KEY fk_symbol\n  | FORCE\n  | LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n  | MODIFY [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ORDER BY col_name [, col_name] ...\n  | RENAME COLUMN old_col_name TO new_col_name\n  | RENAME {INDEX|KEY} old_index_name TO new_index_name\n  | RENAME [TO|AS] new_tbl_name\n  | {WITHOUT|WITH} VALIDATION\n\npartition_options:\n    partition_option [partition_option] ...\n\npartition_option:\n    ADD PARTITION (partition_definition)\n  | DROP PARTITION partition_names\n  | DISCARD PARTITION {partition_names | ALL} TABLESPACE\n  | IMPORT PARTITION {partition_names | ALL} TABLESPACE\n  | TRUNCATE PARTITION {partition_names | ALL}\n  | COALESCE PARTITION number\n  | REORGANIZE PARTITION partition_names INTO (partition_definitions)\n  | EXCHANGE PARTITION partition_name WITH TABLE tbl_name [{WITH|WITHOUT} VALIDATION]\n  | ANALYZE PARTITION {partition_names | ALL}\n  | CHECK PARTITION {partition_names | ALL}\n  | OPTIMIZE PARTITION {partition_names | ALL}\n  | REBUILD PARTITION {partition_names | ALL}\n  | REPAIR PARTITION {partition_names | ALL}\n  | REMOVE PARTITIONING\n\nkey_part: {col_name [(length)] | (expr)} [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n  | {VISIBLE | INVISIBLE}\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option:\n    AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | COMPRESSION [=] {\'ZLIB\'|\'LZ4\'|\'NONE\'}\n  | CONNECTION [=] \'connect_string\'\n  | {DATA|INDEX} DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | ENCRYPTION [=] {\'Y\' | \'N\'}\n  | ENGINE [=] engine_name\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | STATS_AUTO_RECALC [=] {DEFAULT|0|1}\n  | STATS_PERSISTENT [=] {DEFAULT|0|1}\n  | STATS_SAMPLE_PAGES [=] value\n  | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY}]\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    (see CREATE TABLE options)\n\nALTER TABLE changes the structure of a table. For example, you can add\nor delete columns, create or destroy indexes, change the type of\nexisting columns, or rename columns or the table itself. You can also\nchange characteristics such as the storage engine used for the table or\nthe table comment.\n\no To use ALTER TABLE, you need ALTER, CREATE, and INSERT privileges for\n  the table. Renaming a table requires ALTER and DROP on the old table,\n  ALTER, CREATE, and INSERT on the new table.\n\no Following the table name, specify the alterations to be made. If none\n  are given, ALTER TABLE does nothing.\n\no The syntax for many of the permissible alterations is similar to\n  clauses of the CREATE TABLE statement. column_definition clauses use\n  the same syntax for ADD and CHANGE as for CREATE TABLE. For more\n  information, see [HELP CREATE TABLE].\n\no The word COLUMN is optional and can be omitted, except for RENAME\n  COLUMN (to distinguish a column-renaming operation from the RENAME\n  table-renaming operation).\n\no Multiple ADD, ALTER, DROP, and CHANGE clauses are permitted in a\n  single ALTER TABLE statement, separated by commas. This is a MySQL\n  extension to standard SQL, which permits only one of each clause per\n  ALTER TABLE statement. For example, to drop multiple columns in a\n  single statement, do this:\n\nALTER TABLE t2 DROP COLUMN c, DROP COLUMN d;\n\no If a storage engine does not support an attempted ALTER TABLE\n  operation, a warning may result. Such warnings can be displayed with\n  SHOW WARNINGS. See [HELP SHOW WARNINGS]. For information on\n  troubleshooting ALTER TABLE, see\n  https://dev.mysql.com/doc/refman/8.0/en/alter-table-problems.html.\n\no For information about generated columns, see\n  https://dev.mysql.com/doc/refman/8.0/en/alter-table-generated-columns\n  .html.\n\no For usage examples, see\n  https://dev.mysql.com/doc/refman/8.0/en/alter-table-examples.html.\n\no InnoDB in MySQL 8.0.17 and later supports addition of multi-valued\n  indexes on JSON columns using a key_part specification can take the\n  form (CAST json_path AS type ARRAY). See\n  https://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-inde\n  x-multi-valued, for detailed information regarding multi-valued index\n  creation and usage of, as well as restrictions and limitations on\n  multi-valued indexes.\n\no With the mysql_info() C API function, you can find out how many rows\n  were copied by ALTER TABLE. See\n  https://dev.mysql.com/doc/refman/8.0/en/mysql-info.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-table.html'),(508,'ALTER TABLESPACE',33,'Syntax:\nALTER [UNDO] TABLESPACE tablespace_name\n  NDB only:  \n    {ADD|DROP} DATAFILE \'file_name\'\n    [INITIAL_SIZE [=] size]\n    [WAIT]\n  InnoDB and NDB:\n    [RENAME TO tablespace_name] \n  InnoDB only:\n    [SET {ACTIVE|INACTIVE}]\n    [ENCRYPTION [=] {\'Y\' | \'N\'}]\n  InnoDB and NDB:\n    [ENGINE [=] engine_name]\n\nThis statement is used with NDB and InnoDB tablespaces. It can be used\nto add a new data file to, or to drop a data file from an NDB\ntablespace. It can also be used to rename an NDB Cluster Disk Data\ntablespace, rename an InnoDB general tablespace, encrypt an InnoDB\ngeneral tablespace, or mark an InnoDB undo tablespace as active or\ninactive.\n\nThe UNDO keyword, introduced in MySQL 8.0.14, is used with the SET\n{ACTIVE|INACTIVE} clause to mark an InnoDB undo tablespace as active or\ninactive. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html.\n\nThe ADD DATAFILE variant enables you to specify an initial size for an\nNDB Disk Data tablespace using an INITIAL_SIZE clause, where size is\nmeasured in bytes; the default value is 134217728 (128 MB). You may\noptionally follow size with a one-letter abbreviation for an order of\nmagnitude, similar to those used in my.cnf. Generally, this is one of\nthe letters M (megabytes) or G (gigabytes).\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nINITIAL_SIZE is rounded, explicitly, as for CREATE TABLESPACE.\n\nOnce a data file has been created, its size cannot be changed; however,\nyou can add more data files to an NDB tablespace using additional ALTER\nTABLESPACE ... ADD DATAFILE statements.\n\nWhen ALTER TABLESPACE ... ADD DATAFILE is used with ENGINE = NDB, a\ndata file is created on each Cluster data node, but only one row is\ngenerated in the INFORMATION_SCHEMA.FILES table. See the description of\nthis table, as well as\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-disk-data-objects\n.html, for more information. ADD DATAFILE is not supported with InnoDB\ntablespaces.\n\nUsing DROP DATAFILE with ALTER TABLESPACE drops the data file\n\'file_name\' from an NDB tablespace. You cannot drop a data file from a\ntablespace which is in use by any table; in other words, the data file\nmust be empty (no extents used). See\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-disk-data-objects\n.html. In addition, any data file to be dropped must previously have\nbeen added to the tablespace with CREATE TABLESPACE or ALTER\nTABLESPACE. DROP DATAFILE is not supported with InnoDB tablespaces.\n\nWAIT is parsed but otherwise ignored. It is intended for future\nexpansion.\n\nThe ENGINE clause, which specifies the storage engine used by the\ntablespace, is deprecated and will be removed in a future release. The\ntablespace storage engine is known by the data dictionary, making the\nENGINE clause obsolete. If the storage engine is specified, it must\nmatch the tablespace storage engine defined in the data dictionary. The\nonly values for engine_name compatible with NDB tablespaces are NDB and\nNDBCLUSTER.\n\nRENAME TO operations are implicitly performed in autocommit mode,\nregardless of the autocommit setting.\n\nA RENAME TO operation cannot be performed while LOCK TABLES or FLUSH\nTABLES WITH READ LOCK is in effect for tables that reside in the\ntablespace.\n\nExclusive metadata locks are taken on tables that reside in a general\ntablespace while the tablespace is renamed, which prevents concurrent\nDDL. Concurrent DML is supported.\n\nThe CREATE TABLESPACE privilege is required to rename an InnoDB general\ntablespace.\n\nThe ENCRYPTION clause enables or disables page-level data encryption\nfor an InnoDB general tablespace or the mysql system tablespace.\nEncryption support for general tablespaces was introduced in MySQL\n8.0.13. Encryption support for the mysql system tablespace was\nintroduced in MySQL 8.0.16.\n\nA keyring plugin must be installed and configured before encryption can\nbe enabled.\n\nAs of MySQL 8.0.16, if the table_encryption_privilege_check variable is\nenabled, the TABLE_ENCRYPTION_ADMIN privilege is required to alter a\ngeneral tablespace with an ENCRYPTION clause setting that differs from\nthe default_table_encryption setting.\n\nEnabling encryption for a general tablespace fails if any table in the\ntablespace belongs to a schema defined with DEFAULT ENCRYPTION=\'N\'.\nSimilarly, disabling encryption fails if any table in the general\ntablespace belongs to a schema defined with DEFAULT ENCRYPTION=\'Y\'. The\nDEFAULT ENCRYPTION schema option was introduced in MySQL 8.0.16.\n\nIf an ALTER TABLESPACE statement executed on a general tablespace does\nnot include an ENCRYPTION clause, the tablespace retains its current\nencryption status, regardless of the default_table_encryption setting.\n\nWhen a general tablespace or the mysql system tablespace is encrypted,\nall tables residing in the tablespace are encrypted. Likewise, a table\ncreated in an encrypted tablespace is encrypted.\n\nThe INPLACE algorithm is used when altering the ENCRYPTION attribute of\na general tablespace or the mysql system tablespace. The INPLACE\nalgorithm permits concurrent DML on tables that reside in the\ntablespace. Concurrent DDL is blocked.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html'),(509,'ALTER VIEW',33,'Syntax:\nALTER\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = user]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThis statement changes the definition of a view, which must exist. The\nsyntax is similar to that for CREATE VIEW see [HELP CREATE VIEW]). This\nstatement requires the CREATE VIEW and DROP privileges for the view,\nand some privilege for each column referred to in the SELECT statement.\nALTER VIEW is permitted only to the definer or users with the\nSET_USER_ID or SUPER privilege.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-view.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-view.html'),(510,'CREATE DATABASE',33,'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n  | DEFAULT ENCRYPTION [=] {\'Y\' | \'N\'}\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-database.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-database.html'),(511,'CREATE SCHEMA',33,'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n  | DEFAULT ENCRYPTION [=] {\'Y\' | \'N\'}\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-database.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-database.html'),(512,'CREATE EVENT',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    EVENT\n    [IF NOT EXISTS]\n    event_name\n    ON SCHEDULE schedule\n    [ON COMPLETION [NOT] PRESERVE]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'string\']\n    DO event_body;\n\nschedule:\n    AT timestamp [+ INTERVAL interval] ...\n  | EVERY interval\n    [STARTS timestamp [+ INTERVAL interval] ...]\n    [ENDS timestamp [+ INTERVAL interval] ...]\n\ninterval:\n    quantity {YEAR | QUARTER | MONTH | DAY | HOUR | MINUTE |\n              WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE |\n              DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND}\n\nThis statement creates and schedules a new event. The event will not\nrun unless the Event Scheduler is enabled. For information about\nchecking Event Scheduler status and enabling it if necessary, see\nhttps://dev.mysql.com/doc/refman/8.0/en/events-configuration.html.\n\nCREATE EVENT requires the EVENT privilege for the schema in which the\nevent is to be created. If the DEFINER clause is present, the\nprivileges required depend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.\n\nThe minimum requirements for a valid CREATE EVENT statement are as\nfollows:\n\no The keywords CREATE EVENT plus an event name, which uniquely\n  identifies the event in a database schema.\n\no An ON SCHEDULE clause, which determines when and how often the event\n  executes.\n\no A DO clause, which contains the SQL statement to be executed by an\n  event.\n\nThis is an example of a minimal CREATE EVENT statement:\n\nCREATE EVENT myevent\n    ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n    DO\n      UPDATE myschema.mytable SET mycol = mycol + 1;\n\nThe previous statement creates an event named myevent. This event\nexecutes once---one hour following its creation---by running an SQL\nstatement that increments the value of the myschema.mytable table\'s\nmycol column by 1.\n\nThe event_name must be a valid MySQL identifier with a maximum length\nof 64 characters. Event names are not case-sensitive, so you cannot\nhave two events named myevent and MyEvent in the same schema. In\ngeneral, the rules governing event names are the same as those for\nnames of stored routines. See\nhttps://dev.mysql.com/doc/refman/8.0/en/identifiers.html.\n\nAn event is associated with a schema. If no schema is indicated as part\nof event_name, the default (current) schema is assumed. To create an\nevent in a specific schema, qualify the event name with a schema using\nschema_name.event_name syntax.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-event.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-event.html'),(513,'CREATE INDEX',33,'Syntax:\nCREATE [UNIQUE | FULLTEXT | SPATIAL] INDEX index_name\n    [index_type]\n    ON tbl_name (key_part,...)\n    [index_option]\n    [algorithm_option | lock_option] ...\n\nkey_part: {col_name [(length)] | (expr)} [ASC | DESC]\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n  | {VISIBLE | INVISIBLE}\n\nindex_type:\n    USING {BTREE | HASH}\n\nalgorithm_option:\n    ALGORITHM [=] {DEFAULT | INPLACE | COPY}\n\nlock_option:\n    LOCK [=] {DEFAULT | NONE | SHARED | EXCLUSIVE}\n\nNormally, you create all indexes on a table at the time the table\nitself is created with CREATE TABLE. See [HELP CREATE TABLE]. This\nguideline is especially important for InnoDB tables, where the primary\nkey determines the physical layout of rows in the data file. CREATE\nINDEX enables you to add indexes to existing tables.\n\nCREATE INDEX is mapped to an ALTER TABLE statement to create indexes.\nSee [HELP ALTER TABLE]. CREATE INDEX cannot be used to create a PRIMARY\nKEY; use ALTER TABLE instead. For more information about indexes, see\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-indexes.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-index.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-index.html'),(514,'CREATE LOGFILE GROUP',33,'Syntax:\nCREATE LOGFILE GROUP logfile_group\n    ADD UNDOFILE \'undo_file\'\n    [INITIAL_SIZE [=] initial_size]\n    [UNDO_BUFFER_SIZE [=] undo_buffer_size]\n    [REDO_BUFFER_SIZE [=] redo_buffer_size]\n    [NODEGROUP [=] nodegroup_id]\n    [WAIT]\n    [COMMENT [=] \'string\']\n    ENGINE [=] engine_name\n\nThis statement creates a new log file group named logfile_group having\na single UNDO file named \'undo_file\'. A CREATE LOGFILE GROUP statement\nhas one and only one ADD UNDOFILE clause. For rules covering the naming\nof log file groups, see\nhttps://dev.mysql.com/doc/refman/8.0/en/identifiers.html.\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a log file group with the same name, or a tablespace and\na data file with the same name.\n\nThere can be only one log file group per NDB Cluster instance at any\ngiven time.\n\nThe optional INITIAL_SIZE parameter sets the UNDO file\'s initial size;\nif not specified, it defaults to 128M (128 megabytes). The optional\nUNDO_BUFFER_SIZE parameter sets the size used by the UNDO buffer for\nthe log file group; The default value for UNDO_BUFFER_SIZE is 8M (eight\nmegabytes); this value cannot exceed the amount of system memory\navailable. Both of these parameters are specified in bytes. You may\noptionally follow either or both of these with a one-letter\nabbreviation for an order of magnitude, similar to those used in\nmy.cnf. Generally, this is one of the letters M (for megabytes) or G\n(for gigabytes).\n\nMemory used for UNDO_BUFFER_SIZE comes from the global pool whose size\nis determined by the value of the SharedGlobalMemory data node\nconfiguration parameter. This includes any default value implied for\nthis option by the setting of the InitialLogFileGroup data node\nconfiguration parameter.\n\nThe maximum permitted for UNDO_BUFFER_SIZE is 629145600 (600 MB).\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nThe minimum allowed value for INITIAL_SIZE is 1048576 (1 MB).\n\nThe ENGINE option determines the storage engine to be used by this log\nfile group, with engine_name being the name of the storage engine. In\nMySQL 8.0, this must be NDB (or NDBCLUSTER). If ENGINE is not set,\nMySQL tries to use the engine specified by the default_storage_engine\nserver system variable (formerly storage_engine\n(https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#s\nysvar_storage_engine)). In any case, if the engine is not specified as\nNDB or NDBCLUSTER, the CREATE LOGFILE GROUP statement appears to\nsucceed but actually fails to create the log file group, as shown here:\n\nmysql> CREATE LOGFILE GROUP lg1\n    ->     ADD UNDOFILE \'undo.dat\' INITIAL_SIZE = 10M;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+-------+------+------------------------------------------------------------------------------------------------+\n| Level | Code | Message                                                                                        |\n+-------+------+------------------------------------------------------------------------------------------------+\n| Error | 1478 | Table storage engine \'InnoDB\' does not support the create option \'TABLESPACE or LOGFILE GROUP\' |\n+-------+------+------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> DROP LOGFILE GROUP lg1 ENGINE = NDB;            \nERROR 1529 (HY000): Failed to drop LOGFILE GROUP\n\nmysql> CREATE LOGFILE GROUP lg1\n    ->     ADD UNDOFILE \'undo.dat\' INITIAL_SIZE = 10M\n    ->     ENGINE = NDB;\nQuery OK, 0 rows affected (2.97 sec)\n\nThe fact that the CREATE LOGFILE GROUP statement does not actually\nreturn an error when a non-NDB storage engine is named, but rather\nappears to succeed, is a known issue which we hope to address in a\nfuture release of NDB Cluster.\n\nREDO_BUFFER_SIZE, NODEGROUP, WAIT, and COMMENT are parsed but ignored,\nand so have no effect in MySQL 8.0. These options are intended for\nfuture expansion.\n\nWhen used with ENGINE [=] NDB, a log file group and associated UNDO log\nfile are created on each Cluster data node. You can verify that the\nUNDO files were created and obtain information about them by querying\nthe INFORMATION_SCHEMA.FILES table. For example:\n\nmysql> SELECT LOGFILE_GROUP_NAME, LOGFILE_GROUP_NUMBER, EXTRA\n    -> FROM INFORMATION_SCHEMA.FILES\n    -> WHERE FILE_NAME = \'undo_10.dat\';\n+--------------------+----------------------+----------------+\n| LOGFILE_GROUP_NAME | LOGFILE_GROUP_NUMBER | EXTRA          |\n+--------------------+----------------------+----------------+\n| lg_3               |                   11 | CLUSTER_NODE=3 |\n| lg_3               |                   11 | CLUSTER_NODE=4 |\n+--------------------+----------------------+----------------+\n2 rows in set (0.06 sec)\n\nCREATE LOGFILE GROUP is useful only with Disk Data storage for NDB\nCluster. See\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-disk-data.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-logfile-group.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-logfile-group.html'),(515,'CREATE PROCEDURE',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = user]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n\nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n\nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nroutine_body:\n    Valid SQL routine statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttps://dev.mysql.com/doc/refman/8.0/en/adding-functions.html. A UDF\ncan be regarded as an external stored function. Stored functions share\ntheir namespace with UDFs. See\nhttps://dev.mysql.com/doc/refman/8.0/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nTo invoke a stored procedure, use the CALL statement (see [HELP CALL]).\nTo invoke a stored function, refer to it in an expression. The function\nreturns a value during expression evaluation.\n\nCREATE PROCEDURE and CREATE FUNCTION require the CREATE ROUTINE\nprivilege. If the DEFINER clause is present, the privileges required\ndepend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE FUNCTION might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-logging.html.\n\nBy default, MySQL automatically grants the ALTER ROUTINE and EXECUTE\nprivileges to the routine creator. This behavior can be changed by\ndisabling the automatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-routines-privileges.html\n.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later in this section.\n\nIf the routine name is the same as the name of a built-in SQL function,\na syntax error occurs unless you use a space between the name and the\nfollowing parenthesis when defining the routine or invoking it later.\nFor this reason, avoid using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always permissible to have spaces after a stored\nroutine name, regardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*:\n\nSpecifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. For a FUNCTION, parameters are always regarded as IN\nparameters.\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an OUT or INOUT\nparameter. If you are calling the procedure from within a trigger, you\ncan also pass NEW.col_name as an OUT or INOUT parameter.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/8.0/en/conditions-and-parameters.html.\n\nRoutine parameters cannot be referenced in statements prepared within\nthe routine; see\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-program-restrictions.htm\nl.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis enables the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-defining.html.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nParameter types and function return types can be declared to use any\nvalid data type. The COLLATE attribute can be used if preceded by a\nCHARACTER SET specification.\n\nThe routine_body consists of a valid SQL routine statement. This can be\na simple statement such as SELECT or INSERT, or a compound statement\nwritten using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttps://dev.mysql.com/doc/refman/8.0/en/sql-compound-statements.html.\nIn practice, stored functions tend to use compound statements, unless\nthe body consists of a single RETURN statement.\n\nMySQL permits routines to contain DDL statements, such as CREATE and\nDROP. MySQL also permits stored procedures (but not stored functions)\nto contain SQL transaction statements such as COMMIT. Stored functions\nmay not contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\npermit them.\n\nStatements that return a result set can be used within a stored\nprocedure but not within a stored function. This prohibition includes\nSELECT statements that do not have an INTO var_list clause and other\nstatements such as SHOW, EXPLAIN, and CHECK TABLE. For statements that\ncan be determined at function definition time to return a result set, a\nNot allowed to return a result set from a function error occurs\n(ER_SP_NO_RETSET). For statements that can be determined only at\nruntime to return a result set, a PROCEDURE %s can\'t return a result\nset in the given context error occurs (ER_SP_BADSELECT).\n\nUSE statements within stored routines are not permitted. When a routine\nis invoked, an implicit USE db_name is performed (and undone when the\nroutine terminates). The causes the routine to have the given default\ndatabase while it executes. References to objects in databases other\nthan the routine default database should be qualified with the\nappropriate database name.\n\nFor additional information about statements that are not permitted in\nstored routines, see\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-program-restrictions.htm\nl.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nMySQL stores the sql_mode system variable setting in effect when a\nroutine is created or altered, and always executes the routine with\nthis setting in force, regardless of the current server SQL mode when\nthe routine begins executing.\n\nThe switch from the SQL mode of the invoker to that of the routine\noccurs after evaluation of arguments and assignment of the resulting\nvalues to routine parameters. If you define a routine in strict SQL\nmode but invoke it in nonstrict mode, assignment of arguments to\nroutine parameters does not take place in strict mode. If you require\nthat expressions passed to a routine be assigned in strict SQL mode,\nyou should invoke the routine with strict mode in effect.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-procedure.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-procedure.html'),(516,'CREATE FUNCTION',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = user]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n\nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n\nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nroutine_body:\n    Valid SQL routine statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttps://dev.mysql.com/doc/refman/8.0/en/adding-functions.html. A UDF\ncan be regarded as an external stored function. Stored functions share\ntheir namespace with UDFs. See\nhttps://dev.mysql.com/doc/refman/8.0/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nTo invoke a stored procedure, use the CALL statement (see [HELP CALL]).\nTo invoke a stored function, refer to it in an expression. The function\nreturns a value during expression evaluation.\n\nCREATE PROCEDURE and CREATE FUNCTION require the CREATE ROUTINE\nprivilege. If the DEFINER clause is present, the privileges required\ndepend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE FUNCTION might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-logging.html.\n\nBy default, MySQL automatically grants the ALTER ROUTINE and EXECUTE\nprivileges to the routine creator. This behavior can be changed by\ndisabling the automatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-routines-privileges.html\n.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later in this section.\n\nIf the routine name is the same as the name of a built-in SQL function,\na syntax error occurs unless you use a space between the name and the\nfollowing parenthesis when defining the routine or invoking it later.\nFor this reason, avoid using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always permissible to have spaces after a stored\nroutine name, regardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*:\n\nSpecifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. For a FUNCTION, parameters are always regarded as IN\nparameters.\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an OUT or INOUT\nparameter. If you are calling the procedure from within a trigger, you\ncan also pass NEW.col_name as an OUT or INOUT parameter.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/8.0/en/conditions-and-parameters.html.\n\nRoutine parameters cannot be referenced in statements prepared within\nthe routine; see\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-program-restrictions.htm\nl.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis enables the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-defining.html.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nParameter types and function return types can be declared to use any\nvalid data type. The COLLATE attribute can be used if preceded by a\nCHARACTER SET specification.\n\nThe routine_body consists of a valid SQL routine statement. This can be\na simple statement such as SELECT or INSERT, or a compound statement\nwritten using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttps://dev.mysql.com/doc/refman/8.0/en/sql-compound-statements.html.\nIn practice, stored functions tend to use compound statements, unless\nthe body consists of a single RETURN statement.\n\nMySQL permits routines to contain DDL statements, such as CREATE and\nDROP. MySQL also permits stored procedures (but not stored functions)\nto contain SQL transaction statements such as COMMIT. Stored functions\nmay not contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\npermit them.\n\nStatements that return a result set can be used within a stored\nprocedure but not within a stored function. This prohibition includes\nSELECT statements that do not have an INTO var_list clause and other\nstatements such as SHOW, EXPLAIN, and CHECK TABLE. For statements that\ncan be determined at function definition time to return a result set, a\nNot allowed to return a result set from a function error occurs\n(ER_SP_NO_RETSET). For statements that can be determined only at\nruntime to return a result set, a PROCEDURE %s can\'t return a result\nset in the given context error occurs (ER_SP_BADSELECT).\n\nUSE statements within stored routines are not permitted. When a routine\nis invoked, an implicit USE db_name is performed (and undone when the\nroutine terminates). The causes the routine to have the given default\ndatabase while it executes. References to objects in databases other\nthan the routine default database should be qualified with the\nappropriate database name.\n\nFor additional information about statements that are not permitted in\nstored routines, see\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-program-restrictions.htm\nl.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nMySQL stores the sql_mode system variable setting in effect when a\nroutine is created or altered, and always executes the routine with\nthis setting in force, regardless of the current server SQL mode when\nthe routine begins executing.\n\nThe switch from the SQL mode of the invoker to that of the routine\noccurs after evaluation of arguments and assignment of the resulting\nvalues to routine parameters. If you define a routine in strict SQL\nmode but invoke it in nonstrict mode, assignment of arguments to\nroutine parameters does not take place in strict mode. If you require\nthat expressions passed to a routine be assigned in strict SQL mode,\nyou should invoke the routine with strict mode in effect.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-procedure.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-procedure.html'),(517,'CREATE SERVER',33,'Syntax:\nCREATE SERVER server_name\n    FOREIGN DATA WRAPPER wrapper_name\n    OPTIONS (option [, option] ...)\n\noption:\n  { HOST character-literal\n  | DATABASE character-literal\n  | USER character-literal\n  | PASSWORD character-literal\n  | SOCKET character-literal\n  | OWNER character-literal\n  | PORT numeric-literal }\n\nThis statement creates the definition of a server for use with the\nFEDERATED storage engine. The CREATE SERVER statement creates a new row\nin the servers table in the mysql database. This statement requires the\nSUPER privilege.\n\nThe server_name should be a unique reference to the server. Server\ndefinitions are global within the scope of the server, it is not\npossible to qualify the server definition to a specific database.\nserver_name has a maximum length of 64 characters (names longer than 64\ncharacters are silently truncated), and is case insensitive. You may\nspecify the name as a quoted string.\n\nThe wrapper_name is an identifier and may be quoted with single\nquotation marks.\n\nFor each option you must specify either a character literal or numeric\nliteral. Character literals are UTF-8, support a maximum length of 64\ncharacters and default to a blank (empty) string. String literals are\nsilently truncated to 64 characters. Numeric literals must be a number\nbetween 0 and 9999, default value is 0.\n\n*Note*:\n\nThe OWNER option is currently not applied, and has no effect on the\nownership or operation of the server connection that is created.\n\nThe CREATE SERVER statement creates an entry in the mysql.servers table\nthat can later be used with the CREATE TABLE statement when creating a\nFEDERATED table. The options that you specify will be used to populate\nthe columns in the mysql.servers table. The table columns are\nServer_name, Host, Db, Username, Password, Port and Socket.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-server.html\n\n','CREATE SERVER s\nFOREIGN DATA WRAPPER mysql\nOPTIONS (USER \'Remote\', HOST \'198.51.100.106\', DATABASE \'test\');\n','https://dev.mysql.com/doc/refman/8.0/en/create-server.html'),(518,'CREATE SPATIAL REFERENCE SYSTEM',33,'Syntax:\nCREATE OR REPLACE SPATIAL REFERENCE SYSTEM\n    srid srs_attribute ...\n\nCREATE SPATIAL REFERENCE SYSTEM\n    [IF NOT EXISTS]\n    srid srs_attribute ...\n\nsrs_attribute: {\n    NAME \'srs_name\'\n  | DEFINITION \'definition\'\n  | ORGANIZATION \'org_name\' IDENTIFIED BY org_id\n  | DESCRIPTION \'description\'\n}\n\nsrid, org_id: 32-bit unsigned integer\n\nThis statement creates a spatial reference system (SRS) definition and\nstores it in the data dictionary. The definition can be inspected using\nthe INFORMATION_SCHEMA ST_SPATIAL_REFERENCE_SYSTEMS table. This\nstatement requires the SUPER privilege.\n\nIf neither OR REPLACE nor IF NOT EXISTS is specified, an error occurs\nif an SRS definition with the SRID value already exists.\n\nWith CREATE OR REPLACE syntax, any existing SRS definition with the\nsame SRID value is replaced, unless the SRID value is used by some\ncolumn in an existing table. In that case, an error occurs. For\nexample:\n\nmysql> CREATE OR REPLACE SPATIAL REFERENCE SYSTEM 4326 ...;\nERROR 3716 (SR005): Can\'t modify SRID 4326. There is at\nleast one column depending on it.\n\nTo identify which column or columns use the SRID, use this query:\n\nSELECT * FROM INFORMATION_SCHEMA.ST_GEOMETRY_COLUMNS WHERE SRS_ID=4326;\n\nWith CREATE ... IF NOT EXISTS syntax, any existing SRS definition with\nthe same SRID value causes the new definition to be ignored and a\nwarning occurs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-spatial-reference-system.html\n\n','CREATE SPATIAL REFERENCE SYSTEM 4120\nNAME \'Greek\'\nORGANIZATION \'EPSG\' IDENTIFIED BY 4120\nDEFINITION\n  \'GEOGCS[\"Greek\",DATUM[\"Greek\",SPHEROID[\"Bessel 1841\",\n  6377397.155,299.1528128,AUTHORITY[\"EPSG\",\"7004\"]],\n  AUTHORITY[\"EPSG\",\"6120\"]],PRIMEM[\"Greenwich\",0,\n  AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.017453292519943278,\n  AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Lat\",NORTH],AXIS[\"Lon\",EAST],\n  AUTHORITY[\"EPSG\",\"4120\"]]\';\n','https://dev.mysql.com/doc/refman/8.0/en/create-spatial-reference-system.html'),(519,'CREATE TABLE',33,'Syntax:\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    (create_definition,...)\n    [table_options]\n    [partition_options]\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    [(create_definition,...)]\n    [table_options]\n    [partition_options]\n    [IGNORE | REPLACE]\n    [AS] query_expression\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    { LIKE old_tbl_name | (LIKE old_tbl_name) }\n\ncreate_definition:\n    col_name column_definition\n  | {INDEX|KEY} [index_name] [index_type] (key_part,...)\n      [index_option] ...\n  | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] PRIMARY KEY\n      [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n      [index_name] [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] FOREIGN KEY\n      [index_name] (col_name,...)\n      reference_definition\n  | check_constraint_definition\n\ncolumn_definition:\n    data_type [NOT NULL | NULL] [DEFAULT {literal | (expr)} ]\n      [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT \'string\']\n      [COLLATE collation_name]\n      [COLUMN_FORMAT {FIXED|DYNAMIC|DEFAULT}]\n      [STORAGE {DISK|MEMORY}]\n      [reference_definition]\n      [check_constraint_definition]\n  | data_type\n      [COLLATE collation_name]\n      [GENERATED ALWAYS] AS (expr)\n      [VIRTUAL | STORED] [NOT NULL | NULL]\n      [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT \'string\']\n      [reference_definition]\n      [check_constraint_definition]\n\ndata_type:\n    (see https://dev.mysql.com/doc/refman/8.0/en/data-types.html)\n\nkey_part: {col_name [(length)] | (expr)} [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n  | {VISIBLE | INVISIBLE}\n\ncheck_constraint_definition:\n    [CONSTRAINT [symbol]] CHECK (expr) [[NOT] ENFORCED]\n\nreference_definition:\n    REFERENCES tbl_name (key_part,...)\n      [MATCH FULL | MATCH PARTIAL | MATCH SIMPLE]\n      [ON DELETE reference_option]\n      [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option:\n    AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | COMPRESSION [=] {\'ZLIB\'|\'LZ4\'|\'NONE\'}\n  | CONNECTION [=] \'connect_string\'\n  | {DATA|INDEX} DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | ENCRYPTION [=] {\'Y\' | \'N\'}\n  | ENGINE [=] engine_name\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | STATS_AUTO_RECALC [=] {DEFAULT|0|1}\n  | STATS_PERSISTENT [=] {DEFAULT|0|1}\n  | STATS_SAMPLE_PAGES [=] value\n  | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY}]\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    PARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1|2}] (column_list)\n        | RANGE{(expr) | COLUMNS(column_list)}\n        | LIST{(expr) | COLUMNS(column_list)} }\n    [PARTITIONS num]\n    [SUBPARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) }\n      [SUBPARTITIONS num]\n    ]\n    [(partition_definition [, partition_definition] ...)]\n\npartition_definition:\n    PARTITION partition_name\n        [VALUES\n            {LESS THAN {(expr | value_list) | MAXVALUE}\n            |\n            IN (value_list)}]\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'string\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n        [(subpartition_definition [, subpartition_definition] ...)]\n\nsubpartition_definition:\n    SUBPARTITION logical_name\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'string\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n\nquery_expression:\n    SELECT ...   (Some valid select or union statement)\n\nCREATE TABLE creates a table with the given name. You must have the\nCREATE privilege for the table.\n\nBy default, tables are created in the default database, using the\nInnoDB storage engine. An error occurs if the table exists, if there is\nno default database, or if the database does not exist.\n\nMySQL has no limit on the number of tables. The underlying file system\nmay have a limit on the number of files that represent tables.\nIndividual storage engines may impose engine-specific constraints.\nInnoDB permits up to 4 billion tables.\n\nFor information about the physical representation of a table, see\nhttps://dev.mysql.com/doc/refman/8.0/en/create-table-files.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-table.html'),(520,'FOREIGN KEY',33,'MySQL supports foreign keys, which permit cross-referencing related\ndata across tables, and foreign key constraints, which help keep the\nrelated data consistent.\n\nA foreign key relationship involves a parent table that holds the\ninitial column values, and a child table with column values that\nreference the parent column values. A foreign key constraint is defined\non the child table.\n\nThe essential syntax for a defining a foreign key constraint in a\nCREATE TABLE or ALTER TABLE statement includes the following:\n\n[CONSTRAINT [symbol]] FOREIGN KEY\n    [index_name] (col_name, ...)\n    REFERENCES tbl_name (col_name,...)\n    [ON DELETE reference_option]\n    [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html\n\n','CREATE TABLE product (\n    category INT NOT NULL, id INT NOT NULL,\n    price DECIMAL,\n    PRIMARY KEY(category, id)\n)   ENGINE=INNODB;\n\nCREATE TABLE customer (\n    id INT NOT NULL,\n    PRIMARY KEY (id)\n)   ENGINE=INNODB;\n\nCREATE TABLE product_order (\n    no INT NOT NULL AUTO_INCREMENT,\n    product_category INT NOT NULL,\n    product_id INT NOT NULL,\n    customer_id INT NOT NULL,\n\n    PRIMARY KEY(no),\n    INDEX (product_category, product_id),\n    INDEX (customer_id),\n\n    FOREIGN KEY (product_category, product_id)\n      REFERENCES product(category, id)\n      ON UPDATE CASCADE ON DELETE RESTRICT,\n\n    FOREIGN KEY (customer_id)\n      REFERENCES customer(id)\n)   ENGINE=INNODB;\n','https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html'),(521,'CREATE TABLESPACE',33,'Syntax:\nCREATE [UNDO] TABLESPACE tablespace_name\n\n  InnoDB and NDB:\n    [ADD DATAFILE \'file_name\']\n\n  InnoDB only:\n    [FILE_BLOCK_SIZE = value]\n    [ENCRYPTION [=] {\'Y\' | \'N\'}]\n\n  NDB only:\n    USE LOGFILE GROUP logfile_group\n    [EXTENT_SIZE [=] extent_size]\n    [INITIAL_SIZE [=] initial_size]\n    [AUTOEXTEND_SIZE [=] autoextend_size]\n    [MAX_SIZE [=] max_size]\n    [NODEGROUP [=] nodegroup_id]\n    [WAIT]\n    [COMMENT [=] \'string\']\n\n  InnoDB and NDB:\n    [ENGINE [=] engine_name]\n\nThis statement is used to create a tablespace. The precise syntax and\nsemantics depend on the storage engine used. In standard MySQL\nreleases, this is always an InnoDB tablespace. MySQL NDB Cluster also\nsupports tablespaces using the NDB storage engine.\n\no https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html#create\n  -tablespace-innodb\n\no https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html#create\n  -tablespace-ndb\n\no https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html#create\n  -tablespace-options\n\no https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html#create\n  -tablespace-notes\n\no https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html#create\n  -tablespace-innodb-examples\n\no https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html#create\n  -tablespace-ndb-examples\n\nConsiderations for InnoDB\n\nCREATE TABLESPACE syntax is used to create general tablespaces or undo\ntablespaces. The UNDO keyword, introduced in MySQL 8.0.14, must be\nspecified to create an undo tablespace.\n\nA general tablespace is a shared tablespace. It can hold multiple\ntables, and supports all table row formats. General tablespaces can be\ncreated in a location relative to or independent of the data directory.\n\nAfter creating an InnoDB general tablespace, use CREATE TABLE tbl_name\n... TABLESPACE [=] tablespace_name or ALTER TABLE tbl_name TABLESPACE\n[=] tablespace_name to add tables to the tablespace. For more\ninformation, see\nhttps://dev.mysql.com/doc/refman/8.0/en/general-tablespaces.html.\n\nUndo tablespaces contain undo logs. Undo tablespaces can be created in\na chosen location by specifying a fully qualified data file path. For\nmore information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html.\n\nConsiderations for NDB Cluster\n\nThis statement is used to create a tablespace, which can contain one or\nmore data files, providing storage space for NDB Cluster Disk Data\ntables (see\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-disk-data.html).\nOne data file is created and added to the tablespace using this\nstatement. Additional data files may be added to the tablespace by\nusing the ALTER TABLESPACE statement (see [HELP ALTER TABLESPACE]).\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a log file group with the same name, or a tablespace and\na data file with the same name.\n\nA log file group of one or more UNDO log files must be assigned to the\ntablespace to be created with the USE LOGFILE GROUP clause.\nlogfile_group must be an existing log file group created with CREATE\nLOGFILE GROUP (see [HELP CREATE LOGFILE GROUP]). Multiple tablespaces\nmay use the same log file group for UNDO logging.\n\nWhen setting EXTENT_SIZE or INITIAL_SIZE, you may optionally follow the\nnumber with a one-letter abbreviation for an order of magnitude,\nsimilar to those used in my.cnf. Generally, this is one of the letters\nM (for megabytes) or G (for gigabytes).\n\nINITIAL_SIZE and EXTENT_SIZE are subject to rounding as follows:\n\no EXTENT_SIZE is rounded up to the nearest whole multiple of 32K.\n\no INITIAL_SIZE is rounded down to the nearest whole multiple of 32K;\n  this result is rounded up to the nearest whole multiple of\n  EXTENT_SIZE (after any rounding).\n\nThe rounding just described is done explicitly, and a warning is issued\nby the MySQL Server when any such rounding is performed. The rounded\nvalues are also used by the NDB kernel for calculating\nINFORMATION_SCHEMA.FILES column values and other purposes. However, to\navoid an unexpected result, we suggest that you always use whole\nmultiples of 32K in specifying these options.\n\nWhen CREATE TABLESPACE is used with ENGINE [=] NDB, a tablespace and\nassociated data file are created on each Cluster data node. You can\nverify that the data files were created and obtain information about\nthem by querying the INFORMATION_SCHEMA.FILES table. (See the example\nlater in this section.)\n\n(See https://dev.mysql.com/doc/refman/8.0/en/files-table.html.)\n\nOptions\n\no ADD DATAFILE: Defines the name of a tablespace data file. The ADD\n  DATAFILE clause is required when creating undo tablespaces.\n  Otherwise, it is optional as of MySQL 8.0.14.\n\n  An InnoDB tablespace supports only a single data file, whose name\n  must include a .ibd extension. An NDB Cluster tablespace supports\n  multiple data files which can have any legal file names; more data\n  files can be added to an NDB Cluster tablespace following its\n  creation by using an ALTER TABLESPACE statement.\n\n  To place a general tablespace data file in a location outside of the\n  data directory, include a fully qualified path or a path relative to\n  the data directory. Only a fully qualified path is permitted for undo\n  tablespaces. If you do not specify a path, a general tablespace is\n  created in the data directory. An undo tablespace created without\n  specifying a path is created in the directory defined by the\n  innodb_undo_directory variable. If the innodb_undo_directory variable\n  is undefined, undo tablespaces are created in the data directory.\n\n  Creating a general tablespace in a subdirectory under the data\n  directory is not supported to avoid conflicts with implicitly created\n  file-per-table tablespaces. When creating a general tablespace or\n  undo tablespace outside of the data directory, the directory must\n  exist and must be known to InnoDB prior to creating the tablespace.\n  To make a directory known to InnoDB, add it to the innodb_directories\n  value or to one of the variables whose values are appended to the\n  innodb_directories value. innodb_directories is a read-only variable.\n  Configuring it requires restarting the server.\n\n  The file_name, including any specified path, must be quoted with\n  single or double quotations marks. File names (not counting the file\n  extension) and directory names must be at least one byte in length.\n  Zero length file names and directory names are not supported.\n\n  If the ADD DATAFILE clause is not specified when creating a\n  tablespace, a tablespace data file with a unique file name is created\n  implicitly. The unique file name is a 128 bit UUID formatted into\n  five groups of hexadecimal numbers separated by dashes\n  (aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee). A file extension is added if\n  required by the storage engine. An .ibd file extension is added for\n  InnoDB general tablespace data files. In a replication environment,\n  the data file name created on the master is not the same as the data\n  file name created on the slave.\n\n  As of MySQL 8.0.17, the ADD DATAFILE clause does not permit circular\n  directory references when creating an InnoDB tablespace. For example,\n  the circular directory reference (/../) in the following statement is\n  not permitted:\n\nCREATE TABLESPACE ts1 ADD DATAFILE ts1.ibd \'any_directory/../ts1.ibd\';\n\n  An exception to this restriction exists on Linux, where a circular\n  directory reference is permitted if the preceding directory is a\n  symbolic link. For example, the data file path in the example above\n  is permitted if any_directory is a symbolic link. (It is still\n  permitted for data file paths to begin with \'../\'.)\n\no FILE_BLOCK_SIZE: This option---which is specific to InnoDB general\n  tablespaces, and is ignored by NDB---defines the block size for the\n  tablespace data file. Values can be specified in bytes or kilobytes.\n  For example, an 8 kilobyte file block size can be specified as 8192\n  or 8K. If you do not specify this option, FILE_BLOCK_SIZE defaults to\n  the innodb_page_size value. FILE_BLOCK_SIZE is required when you\n  intend to use the tablespace for storing compressed InnoDB tables\n  (ROW_FORMAT=COMPRESSED). In this case, you must define the tablespace\n  FILE_BLOCK_SIZE when creating the tablespace.\n\n  If FILE_BLOCK_SIZE is equal the innodb_page_size value, the\n  tablespace can contain only tables having an uncompressed row format\n  (COMPACT, REDUNDANT, and DYNAMIC). Tables with a COMPRESSED row\n  format have a different physical page size than uncompressed tables.\n  Therefore, compressed tables cannot coexist in the same tablespace as\n  uncompressed tables.\n\n  For a general tablespace to contain compressed tables,\n  FILE_BLOCK_SIZE must be specified, and the FILE_BLOCK_SIZE value must\n  be a valid compressed page size in relation to the innodb_page_size\n  value. Also, the physical page size of the compressed table\n  (KEY_BLOCK_SIZE) must be equal to FILE_BLOCK_SIZE/1024. For example,\n  if innodb_page_size=16K, and FILE_BLOCK_SIZE=8K, the KEY_BLOCK_SIZE\n  of the table must be 8. For more information, see\n  https://dev.mysql.com/doc/refman/8.0/en/general-tablespaces.html.\n\no USE LOGFILE GROUP: Required for NDB, this is the name of a log file\n  group previously created using CREATE LOGFILE GROUP. Not supported\n  for InnoDB, where it fails with an error.\n\no EXTENT_SIZE: This option is specific to NDB, and is not supported by\n  InnoDB, where it fails with an error. EXTENT_SIZE sets the size, in\n  bytes, of the extents used by any files belonging to the tablespace.\n  The default value is 1M. The minimum size is 32K, and theoretical\n  maximum is 2G, although the practical maximum size depends on a\n  number of factors. In most cases, changing the extent size does not\n  have any measurable effect on performance, and the default value is\n  recommended for all but the most unusual situations.\n\n  An extent is a unit of disk space allocation. One extent is filled\n  with as much data as that extent can contain before another extent is\n  used. In theory, up to 65,535 (64K) extents may used per data file;\n  however, the recommended maximum is 32,768 (32K). The recommended\n  maximum size for a single data file is 32G---that is, 32K extents x 1\n  MB per extent. In addition, once an extent is allocated to a given\n  partition, it cannot be used to store data from a different\n  partition; an extent cannot store data from more than one partition.\n  This means, for example that a tablespace having a single datafile\n  whose INITIAL_SIZE (described in the following item) is 256 MB and\n  whose EXTENT_SIZE is 128M has just two extents, and so can be used to\n  store data from at most two different disk data table partitions.\n\n  You can see how many extents remain free in a given data file by\n  querying the INFORMATION_SCHEMA.FILES table, and so derive an\n  estimate for how much space remains free in the file. For further\n  discussion and examples, see\n  https://dev.mysql.com/doc/refman/8.0/en/files-table.html.\n\no INITIAL_SIZE: This option is specific to NDB, and is not supported by\n  InnoDB, where it fails with an error.\n\n  The INITIAL_SIZE parameter sets the total size in bytes of the data\n  file that was specific using ADD DATATFILE. Once this file has been\n  created, its size cannot be changed; however, you can add more data\n  files to the tablespace using ALTER TABLESPACE ... ADD DATAFILE.\n\n  INITIAL_SIZE is optional; its default value is 134217728 (128 MB).\n\n  On 32-bit systems, the maximum supported value for INITIAL_SIZE is\n  4294967296 (4 GB).\n\no AUTOEXTEND_SIZE: Currently ignored by MySQL; reserved for possible\n  future use. Has no effect in any release of MySQL 8.0 or MySQL NDB\n  Cluster 8.0, regardless of the storage engine used.\n\no MAX_SIZE: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 8.0 or MySQL NDB Cluster\n  8.0, regardless of the storage engine used.\n\no NODEGROUP: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 8.0 or MySQL NDB Cluster\n  8.0, regardless of the storage engine used.\n\no WAIT: Currently ignored by MySQL; reserved for possible future use.\n  Has no effect in any release of MySQL 8.0 or MySQL NDB Cluster 8.0,\n  regardless of the storage engine used.\n\no COMMENT: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 8.0 or MySQL NDB Cluster\n  8.0, regardless of the storage engine used.\n\no The ENCRYPTION clause enables or disables page-level data encryption\n  for an InnoDB general tablespace. Encryption support for general\n  tablespaces was introduced in MySQL 8.0.13.\n\n  As of MySQL 8.0.16, if the ENCRYPTION clause is not specified, the\n  default_table_encryption setting controls whether encryption is\n  enabled. The ENCRYPTION clause overrides the default_table_encryption\n  setting. However, if the table_encryption_privilege_check variable is\n  enabled, the TABLE_ENCRYPTION_ADMIN privilege is required to use an\n  ENCRYPTION clause setting that differs from the\n  default_table_encryption setting.\n\n  A keyring plugin must be installed and configured before an\n  encryption-enabled tablespace can be created.\n\n  When a general tablespace is encrypted, all tables residing in the\n  tablespace are encrypted. Likewise, a table created in an encrypted\n  tablespace is encrypted.\n\n  For more information, see\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html\n\no ENGINE: Defines the storage engine which uses the tablespace, where\n  engine_name is the name of the storage engine. Currently, only the\n  InnoDB storage engine is supported by standard MySQL 8.0 releases.\n  MySQL NDB Cluster supports both NDB and InnoDB tablespaces. The value\n  of the default_storage_engine system variable is used for ENGINE if\n  the option is not specified.\n\nNotes\n\no For the rules covering the naming of MySQL tablespaces, see\n  https://dev.mysql.com/doc/refman/8.0/en/identifiers.html. In addition\n  to these rules, the slash character (\"/\") is not permitted, nor can\n  you use names beginning with innodb_, as this prefix is reserved for\n  system use.\n\no Creation of temporary general tablespaces is not supported.\n\no General tablespaces do not support temporary tables.\n\no The TABLESPACE option may be used with CREATE TABLE or ALTER TABLE to\n  assign an InnoDB table partition or subpartition to a file-per-table\n  tablespace. All partitions must belong to the same storage engine.\n  Assigning table partitions to shared InnoDB tablespaces is not\n  supported. Shared tablespaces include the InnoDB system tablespace\n  and general tablespaces.\n\no General tablespaces support the addition of tables of any row format\n  using CREATE TABLE ... TABLESPACE. innodb_file_per_table does not\n  need to be enabled.\n\no innodb_strict_mode is not applicable to general tablespaces.\n  Tablespace management rules are strictly enforced independently of\n  innodb_strict_mode. If CREATE TABLESPACE parameters are incorrect or\n  incompatible, the operation fails regardless of the\n  innodb_strict_mode setting. When a table is added to a general\n  tablespace using CREATE TABLE ... TABLESPACE or ALTER TABLE ...\n  TABLESPACE, innodb_strict_mode is ignored but the statement is\n  evaluated as if innodb_strict_mode is enabled.\n\no Use DROP TABLESPACE to remove a tablespace. All tables must be\n  dropped from a tablespace using DROP TABLE prior to dropping the\n  tablespace. Before dropping an NDB Cluster tablespace you must also\n  remove all its data files using one or more ALTER TABLESPACE ... DROP\n  DATATFILE statements. See\n  https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-disk-data-objec\n  ts.html.\n\no All parts of an InnoDB table added to an InnoDB general tablespace\n  reside in the general tablespace, including indexes and BLOB pages.\n\n  For an NDB table assigned to a tablespace, only those columns which\n  are not indexed are stored on disk, and actually use the tablespace\n  data files. Indexes and indexed columns for all NDB tables are always\n  kept in memory.\n\no Similar to the system tablespace, truncating or dropping tables\n  stored in a general tablespace creates free space internally in the\n  general tablespace .ibd data file which can only be used for new\n  InnoDB data. Space is not released back to the operating system as it\n  is for file-per-table tablespaces.\n\no A general tablespace is not associated with any database or schema.\n\no ALTER TABLE ... DISCARD TABLESPACE and ALTER TABLE ...IMPORT\n  TABLESPACE are not supported for tables that belong to a general\n  tablespace.\n\no The server uses tablespace-level metadata locking for DDL that\n  references general tablespaces. By comparison, the server uses\n  table-level metadata locking for DDL that references file-per-table\n  tablespaces.\n\no A generated or existing tablespace cannot be changed to a general\n  tablespace.\n\no There is no conflict between general tablespace names and\n  file-per-table tablespace names. The \"/\" character, which is present\n  in file-per-table tablespace names, is not permitted in general\n  tablespace names.\n\no mysqldump and mysqlpump do not dump InnoDB CREATE TABLESPACE\n  statements.\n\nInnoDB Examples\n\nThis example demonstrates creating a general tablespace and adding\nthree uncompressed tables of different row formats.\n\nmysql> CREATE TABLESPACE `ts1` ADD DATAFILE \'ts1.ibd\' ENGINE=INNODB;\n\nmysql> CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=REDUNDANT;\n\nmysql> CREATE TABLE t2 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=COMPACT;\n\nmysql> CREATE TABLE t3 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=DYNAMIC;\n\nThis example demonstrates creating a general tablespace and adding a\ncompressed table. The example assumes a default innodb_page_size value\nof 16K. The FILE_BLOCK_SIZE of 8192 requires that the compressed table\nhave a KEY_BLOCK_SIZE of 8.\n\nmysql> CREATE TABLESPACE `ts2` ADD DATAFILE \'ts2.ibd\' FILE_BLOCK_SIZE = 8192 Engine=InnoDB;\n\nmysql> CREATE TABLE t4 (c1 INT PRIMARY KEY) TABLESPACE ts2 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;\n\nThis example demonstrates creating a general tablespace without\nspecifying the ADD DATAFILE clause, which is optional as of MySQL\n8.0.14.\n\nmysql> CREATE TABLESPACE `ts3` ENGINE=INNODB;\n\nThis example demonstrates creating an undo tablespace.\n\nmysql> CREATE UNDO TABLESPACE undo_003 ADD DATAFILE \'undo_003.ibu\';\n\nNDB Example\n\nSuppose that you wish to create an NDB Cluster Disk Data tablespace\nnamed myts using a datafile named mydata-1.dat. An NDB tablespace\nalways requires the use of a log file group consisting of one or more\nundo log files. For this example, we first create a log file group\nnamed mylg that contains one undo long file named myundo-1.dat, using\nthe CREATE LOGFILE GROUP statement shown here:\n\nmysql> CREATE LOGFILE GROUP myg1\n    ->     ADD UNDOFILE \'myundo-1.dat\'\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (3.29 sec)\n\nNow you can create the tablespace previously described using the\nfollowing statement:\n\nmysql> CREATE TABLESPACE myts\n    ->     ADD DATAFILE \'mydata-1.dat\'\n    ->     USE LOGFILE GROUP mylg\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (2.98 sec)\n\nYou can now create a Disk Data table using a CREATE TABLE statement\nwith the TABLESPACE and STORAGE DISK options, similar to what is shown\nhere:\n\nmysql> CREATE TABLE mytable (\n    ->     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->     lname VARCHAR(50) NOT NULL,\n    ->     fname VARCHAR(50) NOT NULL,\n    ->     dob DATE NOT NULL,\n    ->     joined DATE NOT NULL,\n    ->     INDEX(last_name, first_name)\n    -> )\n    ->     TABLESPACE myts STORAGE DISK\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (1.41 sec)\n\nIt is important to note that only the dob and joined columns from\nmytable are actually stored on disk, due to the fact that the id,\nlname, and fname columns are all indexed.\n\nAs mentioned previously, when CREATE TABLESPACE is used with ENGINE [=]\nNDB, a tablespace and associated data file are created on each NDB\nCluster data node. You can verify that the data files were created and\nobtain information about them by querying the INFORMATION_SCHEMA.FILES\ntable, as shown here:\n\nmysql> SELECT FILE_NAME, FILE_TYPE, LOGFILE_GROUP_NAME, STATUS, EXTRA\n    ->     FROM INFORMATION_SCHEMA.FILES\n    ->     WHERE TABLESPACE_NAME = \'myts\';\n\n+--------------+------------+--------------------+--------+----------------+\n| file_name    | file_type  | logfile_group_name | status | extra          |\n+--------------+------------+--------------------+--------+----------------+\n| mydata-1.dat | DATAFILE   | mylg               | NORMAL | CLUSTER_NODE=5 |\n| mydata-1.dat | DATAFILE   | mylg               | NORMAL | CLUSTER_NODE=6 |\n| NULL         | TABLESPACE | mylg               | NORMAL | NULL           |\n+--------------+------------+--------------------+--------+----------------+\n3 rows in set (0.01 sec)\n\nFor additional information and examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-disk-data-objects\n.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-tablespace.html'),(522,'CREATE TRIGGER',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    TRIGGER trigger_name\n    trigger_time trigger_event\n    ON tbl_name FOR EACH ROW\n    [trigger_order]\n    trigger_body\n\ntrigger_time: { BEFORE | AFTER }\n\ntrigger_event: { INSERT | UPDATE | DELETE }\n\ntrigger_order: { FOLLOWS | PRECEDES } other_trigger_name\n\nThis statement creates a new trigger. A trigger is a named database\nobject that is associated with a table, and that activates when a\nparticular event occurs for the table. The trigger becomes associated\nwith the table named tbl_name, which must refer to a permanent table.\nYou cannot associate a trigger with a TEMPORARY table or a view.\n\nTrigger names exist in the schema namespace, meaning that all triggers\nmust have unique names within a schema. Triggers in different schemas\ncan have the same name.\n\nThis section describes CREATE TRIGGER syntax. For additional\ndiscussion, see\nhttps://dev.mysql.com/doc/refman/8.0/en/trigger-syntax.html.\n\nCREATE TRIGGER requires the TRIGGER privilege for the table associated\nwith the trigger. If the DEFINER clause is present, the privileges\nrequired depend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE TRIGGER might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-logging.html.\n\nThe DEFINER clause determines the security context to be used when\nchecking access privileges at trigger activation time, as described\nlater in this section.\n\ntrigger_time is the trigger action time. It can be BEFORE or AFTER to\nindicate that the trigger activates before or after each row to be\nmodified.\n\nBasic column value checks occur prior to trigger activation, so you\ncannot use BEFORE triggers to convert values inappropriate for the\ncolumn type to valid values.\n\ntrigger_event indicates the kind of operation that activates the\ntrigger. These trigger_event values are permitted:\n\no INSERT: The trigger activates whenever a new row is inserted into the\n  table (for example, through INSERT, LOAD DATA, and REPLACE\n  statements).\n\no UPDATE: The trigger activates whenever a row is modified (for\n  example, through UPDATE statements).\n\no DELETE: The trigger activates whenever a row is deleted from the\n  table (for example, through DELETE and REPLACE statements). DROP\n  TABLE and TRUNCATE TABLE statements on the table do not activate this\n  trigger, because they do not use DELETE. Dropping a partition does\n  not activate DELETE triggers, either.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-trigger.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-trigger.html'),(523,'CREATE VIEW',33,'Syntax:\nCREATE\n    [OR REPLACE]\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = user]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThe CREATE VIEW statement creates a new view, or replaces an existing\nview if the OR REPLACE clause is given. If the view does not exist,\nCREATE OR REPLACE VIEW is the same as CREATE VIEW. If the view does\nexist, CREATE OR REPLACE VIEW replaces it.\n\nFor information about restrictions on view use, see\nhttps://dev.mysql.com/doc/refman/8.0/en/view-restrictions.html.\n\nThe select_statement is a SELECT statement that provides the definition\nof the view. (Selecting from the view selects, in effect, using the\nSELECT statement.) The select_statement can select from base tables or\nother views.\n\nThe view definition is \"frozen\" at creation time and is not affected by\nsubsequent changes to the definitions of the underlying tables. For\nexample, if a view is defined as SELECT * on a table, new columns added\nto the table later do not become part of the view, and columns dropped\nfrom the table will result in an error when selecting from the view.\n\nThe ALGORITHM clause affects how MySQL processes the view. The DEFINER\nand SQL SECURITY clauses specify the security context to be used when\nchecking access privileges at view invocation time. The WITH CHECK\nOPTION clause can be given to constrain inserts or updates to rows in\ntables referenced by the view. These clauses are described later in\nthis section.\n\nThe CREATE VIEW statement requires the CREATE VIEW privilege for the\nview, and some privilege for each column selected by the SELECT\nstatement. For columns used elsewhere in the SELECT statement, you must\nhave the SELECT privilege. If the OR REPLACE clause is present, you\nmust also have the DROP privilege for the view. If the DEFINER clause\nis present, the privileges required depend on the user value, as\ndiscussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.\n\nWhen a view is referenced, privilege checking occurs as described later\nin this section.\n\nA view belongs to a database. By default, a new view is created in the\ndefault database. To create the view explicitly in a given database,\nuse db_name.view_name syntax to qualify the view name with the database\nname:\n\nCREATE VIEW test.v AS SELECT * FROM t;\n\nUnqualified table or view names in the SELECT statement are also\ninterpreted with respect to the default database. A view can refer to\ntables or views in other databases by qualifying the table or view name\nwith the appropriate database name.\n\nWithin a database, base tables and views share the same namespace, so a\nbase table and a view cannot have the same name.\n\nColumns retrieved by the SELECT statement can be simple references to\ntable columns, or expressions that use functions, constant values,\noperators, and so forth.\n\nA view must have unique column names with no duplicates, just like a\nbase table. By default, the names of the columns retrieved by the\nSELECT statement are used for the view column names. To define explicit\nnames for the view columns, specify the optional column_list clause as\na list of comma-separated identifiers. The number of names in\ncolumn_list must be the same as the number of columns retrieved by the\nSELECT statement.\n\nA view can be created from many kinds of SELECT statements. It can\nrefer to base tables or other views. It can use joins, UNION, and\nsubqueries. The SELECT need not even refer to any tables:\n\nCREATE VIEW v_today (today) AS SELECT CURRENT_DATE;\n\nThe following example defines a view that selects two columns from\nanother table as well as an expression calculated from those columns:\n\nmysql> CREATE TABLE t (qty INT, price INT);\nmysql> INSERT INTO t VALUES(3, 50);\nmysql> CREATE VIEW v AS SELECT qty, price, qty*price AS value FROM t;\nmysql> SELECT * FROM v;\n+------+-------+-------+\n| qty  | price | value |\n+------+-------+-------+\n|    3 |    50 |   150 |\n+------+-------+-------+\n\nA view definition is subject to the following restrictions:\n\no The SELECT statement cannot refer to system variables or user-defined\n  variables.\n\no Within a stored program, the SELECT statement cannot refer to program\n  parameters or local variables.\n\no The SELECT statement cannot refer to prepared statement parameters.\n\no Any table or view referred to in the definition must exist. If, after\n  the view has been created, a table or view that the definition refers\n  to is dropped, use of the view results in an error. To check a view\n  definition for problems of this kind, use the CHECK TABLE statement.\n\no The definition cannot refer to a TEMPORARY table, and you cannot\n  create a TEMPORARY view.\n\no You cannot associate a trigger with a view.\n\no Aliases for column names in the SELECT statement are checked against\n  the maximum column length of 64 characters (not the maximum alias\n  length of 256 characters).\n\nORDER BY is permitted in a view definition, but it is ignored if you\nselect from a view using a statement that has its own ORDER BY.\n\nFor other options or clauses in the definition, they are added to the\noptions or clauses of the statement that references the view, but the\neffect is undefined. For example, if a view definition includes a LIMIT\nclause, and you select from the view using a statement that has its own\nLIMIT clause, it is undefined which limit applies. This same principle\napplies to options such as ALL, DISTINCT, or SQL_SMALL_RESULT that\nfollow the SELECT keyword, and to clauses such as INTO, FOR UPDATE, FOR\nSHARE, LOCK IN SHARE MODE, and PROCEDURE.\n\nThe results obtained from a view may be affected if you change the\nquery processing environment by changing system variables:\n\nmysql> CREATE VIEW v (mycol) AS SELECT \'abc\';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET sql_mode = \'\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT \"mycol\" FROM v;\n+-------+\n| mycol |\n+-------+\n| mycol |\n+-------+\n1 row in set (0.01 sec)\n\nmysql> SET sql_mode = \'ANSI_QUOTES\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT \"mycol\" FROM v;\n+-------+\n| mycol |\n+-------+\n| abc   |\n+-------+\n1 row in set (0.00 sec)\n\nThe DEFINER and SQL SECURITY clauses determine which MySQL account to\nuse when checking access privileges for the view when a statement is\nexecuted that references the view. The valid SQL SECURITY\ncharacteristic values are DEFINER (the default) and INVOKER. These\nindicate that the required privileges must be held by the user who\ndefined or invoked the view, respectively.\n\nIf the DEFINER clause is present, the user value should be a MySQL\naccount specified as \'user_name\'@\'host_name\', CURRENT_USER, or\nCURRENT_USER(). The permitted user values depend on the privileges you\nhold, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.\nAlso see that section for additional information about view security.\n\nIf the DEFINER clause is omitted, the default definer is the user who\nexecutes the CREATE VIEW statement. This is the same as specifying\nDEFINER = CURRENT_USER explicitly.\n\nWithin a view definition, the CURRENT_USER function returns the view\'s\nDEFINER value by default. For views defined with the SQL SECURITY\nINVOKER characteristic, CURRENT_USER returns the account for the view\'s\ninvoker. For information about user auditing within views, see\nhttps://dev.mysql.com/doc/refman/8.0/en/account-activity-auditing.html.\n\nWithin a stored routine that is defined with the SQL SECURITY DEFINER\ncharacteristic, CURRENT_USER returns the routine\'s DEFINER value. This\nalso affects a view defined within such a routine, if the view\ndefinition contains a DEFINER value of CURRENT_USER.\n\nMySQL checks view privileges like this:\n\no At view definition time, the view creator must have the privileges\n  needed to use the top-level objects accessed by the view. For\n  example, if the view definition refers to table columns, the creator\n  must have some privilege for each column in the select list of the\n  definition, and the SELECT privilege for each column used elsewhere\n  in the definition. If the definition refers to a stored function,\n  only the privileges needed to invoke the function can be checked. The\n  privileges required at function invocation time can be checked only\n  as it executes: For different invocations, different execution paths\n  within the function might be taken.\n\no The user who references a view must have appropriate privileges to\n  access it (SELECT to select from it, INSERT to insert into it, and so\n  forth.)\n\no When a view has been referenced, privileges for objects accessed by\n  the view are checked against the privileges held by the view DEFINER\n  account or invoker, depending on whether the SQL SECURITY\n  characteristic is DEFINER or INVOKER, respectively.\n\no If reference to a view causes execution of a stored function,\n  privilege checking for statements executed within the function depend\n  on whether the function SQL SECURITY characteristic is DEFINER or\n  INVOKER. If the security characteristic is DEFINER, the function runs\n  with the privileges of the DEFINER account. If the characteristic is\n  INVOKER, the function runs with the privileges determined by the\n  view\'s SQL SECURITY characteristic.\n\nExample: A view might depend on a stored function, and that function\nmight invoke other stored routines. For example, the following view\ninvokes a stored function f():\n\nCREATE VIEW v AS SELECT * FROM t WHERE t.id = f(t.name);\n\nSuppose that f() contains a statement such as this:\n\nIF name IS NULL then\n  CALL p1();\nELSE\n  CALL p2();\nEND IF;\n\nThe privileges required for executing statements within f() need to be\nchecked when f() executes. This might mean that privileges are needed\nfor p1() or p2(), depending on the execution path within f(). Those\nprivileges must be checked at runtime, and the user who must possess\nthe privileges is determined by the SQL SECURITY values of the view v\nand the function f().\n\nThe DEFINER and SQL SECURITY clauses for views are extensions to\nstandard SQL. In standard SQL, views are handled using the rules for\nSQL SECURITY DEFINER. The standard says that the definer of the view,\nwhich is the same as the owner of the view\'s schema, gets applicable\nprivileges on the view (for example, SELECT) and may grant them. MySQL\nhas no concept of a schema \"owner\", so MySQL adds a clause to identify\nthe definer. The DEFINER clause is an extension where the intent is to\nhave what the standard has; that is, a permanent record of who defined\nthe view. This is why the default DEFINER value is the account of the\nview creator.\n\nThe optional ALGORITHM clause is a MySQL extension to standard SQL. It\naffects how MySQL processes the view. ALGORITHM takes three values:\nMERGE, TEMPTABLE, or UNDEFINED. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/view-algorithms.html, as well\nas\nhttps://dev.mysql.com/doc/refman/8.0/en/derived-table-optimization.html\n.\n\nSome views are updatable. That is, you can use them in statements such\nas UPDATE, DELETE, or INSERT to update the contents of the underlying\ntable. For a view to be updatable, there must be a one-to-one\nrelationship between the rows in the view and the rows in the\nunderlying table. There are also certain other constructs that make a\nview nonupdatable.\n\nA generated column in a view is considered updatable because it is\npossible to assign to it. However, if such a column is updated\nexplicitly, the only permitted value is DEFAULT. For information about\ngenerated columns, see\nhttps://dev.mysql.com/doc/refman/8.0/en/create-table-generated-columns.\nhtml.\n\nThe WITH CHECK OPTION clause can be given for an updatable view to\nprevent inserts or updates to rows except those for which the WHERE\nclause in the select_statement is true.\n\nIn a WITH CHECK OPTION clause for an updatable view, the LOCAL and\nCASCADED keywords determine the scope of check testing when the view is\ndefined in terms of another view. The LOCAL keyword restricts the CHECK\nOPTION only to the view being defined. CASCADED causes the checks for\nunderlying views to be evaluated as well. When neither keyword is\ngiven, the default is CASCADED.\n\nFor more information about updatable views and the WITH CHECK OPTION\nclause, see\nhttps://dev.mysql.com/doc/refman/8.0/en/view-updatability.html, and\nhttps://dev.mysql.com/doc/refman/8.0/en/view-check-option.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-view.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-view.html'),(524,'DROP DATABASE',33,'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*:\n\nWhen a database is dropped, privileges granted specifically for the\ndatabase are not automatically dropped. They must be dropped manually.\nSee [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-database.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-database.html'),(525,'DROP SCHEMA',33,'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*:\n\nWhen a database is dropped, privileges granted specifically for the\ndatabase are not automatically dropped. They must be dropped manually.\nSee [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-database.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-database.html'),(526,'DROP EVENT',33,'Syntax:\nDROP EVENT [IF EXISTS] event_name\n\nThis statement drops the event named event_name. The event immediately\nceases being active, and is deleted completely from the server.\n\nIf the event does not exist, the error ERROR 1517 (HY000): Unknown\nevent \'event_name\' results. You can override this and cause the\nstatement to generate a warning for nonexistent events instead using IF\nEXISTS.\n\nThis statement requires the EVENT privilege for the schema to which the\nevent to be dropped belongs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-event.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-event.html'),(527,'DROP INDEX',33,'Syntax:\nDROP INDEX index_name ON tbl_name\n    [algorithm_option | lock_option] ...\n\nalgorithm_option:\n    ALGORITHM [=] {DEFAULT|INPLACE|COPY}\n\nlock_option:\n    LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n\nDROP INDEX drops the index named index_name from the table tbl_name.\nThis statement is mapped to an ALTER TABLE statement to drop the index.\nSee [HELP ALTER TABLE].\n\nTo drop a primary key, the index name is always PRIMARY, which must be\nspecified as a quoted identifier because PRIMARY is a reserved word:\n\nDROP INDEX `PRIMARY` ON t;\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-index.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-index.html'),(528,'DROP PROCEDURE',33,'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (If the\nautomatic_sp_privileges system variable is enabled, that privilege and\nEXECUTE are granted automatically to the routine creator when the\nroutine is created and dropped from the creator when the routine is\ndropped. See\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-routines-privileges.html\n.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-procedure.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-procedure.html'),(529,'DROP FUNCTION',33,'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (If the\nautomatic_sp_privileges system variable is enabled, that privilege and\nEXECUTE are granted automatically to the routine creator when the\nroutine is created and dropped from the creator when the routine is\ndropped. See\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-routines-privileges.html\n.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-procedure.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-procedure.html'),(530,'DROP SERVER',33,'Syntax:\nDROP SERVER [ IF EXISTS ] server_name\n\nDrops the server definition for the server named server_name. The\ncorresponding row in the mysql.servers table is deleted. This statement\nrequires the SUPER privilege.\n\nDropping a server for a table does not affect any FEDERATED tables that\nused this connection information when they were created. See [HELP\nCREATE SERVER].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-server.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-server.html'),(531,'DROP SPATIAL REFERENCE SYSTEM',33,'Syntax:\nDROP SPATIAL REFERENCE SYSTEM\n    [IF EXISTS]\n    srid\n\nsrid: 32-bit unsigned integer\n\nThis statement removes a spatial reference system (SRS) definition from\nthe data dictionary. It requires the SUPER privilege.\n\nExample:\n\nDROP SPATIAL REFERENCE SYSTEM 4120;\n\nIf no SRS definition with the SRID value exists, an error occurs unless\nIF EXISTS is specified. In that case, a warning occurs rather than an\nerror.\n\nIf the SRID value is used by some column in an existing table, an error\noccurs. For example:\n\nmysql> DROP SPATIAL REFERENCE SYSTEM 4326;\nERROR 3716 (SR005): Can\'t modify SRID 4326. There is at\nleast one column depending on it.\n\nTo identify which column or columns use the SRID, use this query:\n\nSELECT * FROM INFORMATION_SCHEMA.ST_GEOMETRY_COLUMNS WHERE SRS_ID=4326;\n\nSRID values must be in the range of 32-bit unsigned integers, with\nthese restrictions:\n\no SRID 0 is a valid SRID but cannot be used with DROP SPATIAL REFERENCE\n  SYSTEM.\n\no If the value is in a reserved SRID range, a warning occurs. Reserved\n  ranges are [0, 32767] (reserved by EPSG), [60,000,000, 69,999,999]\n  (reserved by EPSG), and [2,000,000,000, 2,147,483,647] (reserved by\n  MySQL). EPSG stands for the European Petroleum Survey Group\n  (http://epsg.org).\n\no Users should not drop SRSs with SRIDs in the reserved ranges. If\n  system-installed SRSs are dropped, the SRS definitions may be\n  recreated for MySQL upgrades.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-spatial-reference-system.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-spatial-reference-system.html'),(532,'DROP TABLE',33,'Syntax:\nDROP [TEMPORARY] TABLE [IF EXISTS]\n    tbl_name [, tbl_name] ...\n    [RESTRICT | CASCADE]\n\nDROP TABLE removes one or more tables. You must have the DROP privilege\nfor each table.\n\nBe careful with this statement! For each table, it removes the table\ndefinition and all table data. If the table is partitioned, the\nstatement removes the table definition, all its partitions, all data\nstored in those partitions, and all partition definitions associated\nwith the dropped table.\n\nDropping a table also drops any triggers for the table.\n\nDROP TABLE causes an implicit commit, except when used with the\nTEMPORARY keyword. See\nhttps://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\n*Important*:\n\nWhen a table is dropped, privileges granted specifically for the table\nare not automatically dropped. They must be dropped manually. See [HELP\nGRANT].\n\nIf any tables named in the argument list do not exist, DROP TABLE\nbehavior depends on whether the IF EXISTS clause is given:\n\no Without IF EXISTS, the statement fails with an error indicating which\n  nonexisting tables it was unable to drop, and no changes are made.\n\no With IF EXISTS, no error occurs for nonexisting tables. The statement\n  drops all named tables that do exist, and generates a NOTE diagnostic\n  for each nonexistent table. These notes can be displayed with SHOW\n  WARNINGS. See [HELP SHOW WARNINGS].\n\nIF EXISTS can also be useful for dropping tables in unusual\ncircumstances under which there is an entry in the data dictionary but\nno table managed by the storage engine. (For example, if an abnormal\nserver exit occurs after removal of the table from the storage engine\nbut before removal of the data dictionary entry.)\n\nThe TEMPORARY keyword has the following effects:\n\no The statement drops only TEMPORARY tables.\n\no The statement does not cause an implicit commit.\n\no No access rights are checked. A TEMPORARY table is visible only with\n  the session that created it, so no check is necessary.\n\nIncluding the TEMPORARY keyword is a good way to prevent accidentally\ndropping non-TEMPORARY tables.\n\nThe RESTRICT and CASCADE keywords do nothing. They are permitted to\nmake porting easier from other database systems.\n\nDROP TABLE is not supported with all innodb_force_recovery settings.\nSee\nhttps://dev.mysql.com/doc/refman/8.0/en/forcing-innodb-recovery.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-table.html'),(533,'DROP TABLESPACE',33,'Syntax:\nDROP [UNDO] TABLESPACE tablespace_name\n    [ENGINE [=] engine_name]\n\nThis statement drops a tablespace that was previously created using\nCREATE TABLESPACE. It is supported by the NDB and InnoDB storage\nengines.\n\nThe UNDO keyword, introduced in MySQL 8.0.14, must be specified to drop\nan undo tablespace. Only undo tablespaces created using CREATE UNDO\nTABLESPACE syntax can be dropped. An undo tablespace must be in an\nempty state before it can be dropped. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html.\n\nENGINE sets the storage engine that uses the tablespace, where\nengine_name is the name of the storage engine. Currently, the values\nInnoDB and NDB are supported. If not set, the value of\ndefault_storage_engine is used. If it is not the same as the storage\nengine used to create the tablespace, the DROP TABLESPACE statement\nfails.\n\ntablespace_name is a case-sensitive identifier in MySQL.\n\nFor an InnoDB general tablespace, all tables must be dropped from the\ntablespace prior to a DROP TABLESPACE operation. If the tablespace is\nnot empty, DROP TABLESPACE returns an error.\n\nAn NDB tablespace to be dropped must not contain any data files; in\nother words, before you can drop an NDB tablespace, you must first drop\neach of its data files using ALTER TABLESPACE ... DROP DATAFILE.\n\nNotes\n\no A general InnoDB tablespace is not deleted automatically when the\n  last table in the tablespace is dropped. The tablespace must be\n  dropped explicitly using DROP TABLESPACE tablespace_name.\n\no A DROP DATABASE operation can drop tables that belong to a general\n  tablespace but it cannot drop the tablespace, even if the operation\n  drops all tables that belong to the tablespace. The tablespace must\n  be dropped explicitly using DROP TABLESPACE tablespace_name.\n\no Similar to the system tablespace, truncating or dropping tables\n  stored in a general tablespace creates free space internally in the\n  general tablespace .ibd data file which can only be used for new\n  InnoDB data. Space is not released back to the operating system as it\n  is for file-per-table tablespaces.\n\nInnoDB Examples\n\nThis example demonstrates how to drop an InnoDB general tablespace. The\ngeneral tablespace ts1 is created with a single table. Before dropping\nthe tablespace, the table must be dropped.\n\nmysql> CREATE TABLESPACE `ts1` ADD DATAFILE \'ts1.ibd\' Engine=InnoDB;     \n\nmysql> CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts1 Engine=InnoDB;     \n\nmysql> DROP TABLE t1;\n\nmysql> DROP TABLESPACE ts1;\n\nThis example demonstrates dropping an undo tablespace. An undo\ntablespace must be in an empty state before it can be dropped. For more\ninformation, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html.\n\nmysql> DROP UNDO TABLESPACE undo_003;\n\nNDB Example\n\nThis example shows how to drop an NDB tablespace myts having a data\nfile named mydata-1.dat after first creating the tablespace, and\nassumes the existence of a log file group named mylg (see [HELP CREATE\nLOGFILE GROUP]).\n\nmysql> CREATE TABLESPACE myts\n    ->     ADD DATAFILE \'mydata-1.dat\'\n    ->     USE LOGFILE GROUP mylg\n    ->     ENGINE=NDB;\n\nYou must remove all data files from the tablespace using ALTER\nTABLESPACE, as shown here, before it can be dropped:\n\nmysql> ALTER TABLESPACE myts\n    ->     DROP DATAFILE \'mydata-1.dat\'\n    ->     ENGINE=NDB;\n\nmysql> DROP TABLESPACE myts;\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-tablespace.html'),(534,'DROP TRIGGER',33,'Syntax:\nDROP TRIGGER [IF EXISTS] [schema_name.]trigger_name\n\nThis statement drops a trigger. The schema (database) name is optional.\nIf the schema is omitted, the trigger is dropped from the default\nschema. DROP TRIGGER requires the TRIGGER privilege for the table\nassociated with the trigger.\n\nUse IF EXISTS to prevent an error from occurring for a trigger that\ndoes not exist. A NOTE is generated for a nonexistent trigger when\nusing IF EXISTS. See [HELP SHOW WARNINGS].\n\nTriggers for a table are also dropped if you drop the table.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-trigger.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-trigger.html'),(535,'DROP VIEW',33,'Syntax:\nDROP VIEW [IF EXISTS]\n    view_name [, view_name] ...\n    [RESTRICT | CASCADE]\n\nDROP VIEW removes one or more views. You must have the DROP privilege\nfor each view.\n\nIf any views named in the argument list do not exist, the statement\nfails with an error indicating by name which nonexisting views it was\nunable to drop, and no changes are made.\n\n*Note*:\n\nIn MySQL 5.7 and earlier, DROP VIEW returns an error if any views named\nin the argument list do not exist, but also drops all views in the list\nthat do exist. Due to the change in behavior in MySQL 8.0, a partially\ncompleted DROP VIEW operation on a MySQL 5.7 master fails when\nreplicated on a MySQL 8.0 slave. To avoid this failure scenario, use IF\nEXISTS syntax in DROP VIEW statements to prevent an error from\noccurring for views that do not exist. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html.\n\nThe IF EXISTS clause prevents an error from occurring for views that\ndon\'t exist. When this clause is given, a NOTE is generated for each\nnonexistent view. See [HELP SHOW WARNINGS].\n\nRESTRICT and CASCADE, if given, are parsed and ignored.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-view.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-view.html'),(536,'RENAME TABLE',33,'Syntax:\nRENAME TABLE\n    tbl_name TO new_tbl_name\n    [, tbl_name2 TO new_tbl_name2] ...\n\nRENAME TABLE renames one or more tables. You must have ALTER and DROP\nprivileges for the original table, and CREATE and INSERT privileges for\nthe new table.\n\nFor example, to rename a table named old_table to new_table, use this\nstatement:\n\nRENAME TABLE old_table TO new_table;\n\nThat statement is equivalent to the following ALTER TABLE statement:\n\nALTER TABLE old_table RENAME new_table;\n\nRENAME TABLE, unlike ALTER TABLE, can rename multiple tables within a\nsingle statement:\n\nRENAME TABLE old_table1 TO new_table1,\n             old_table2 TO new_table2,\n             old_table3 TO new_table3;\n\nRenaming operations are performed left to right. Thus, to swap two\ntable names, do this (assuming that a table with the intermediary name\ntmp_table does not already exist):\n\nRENAME TABLE old_table TO tmp_table,\n             new_table TO old_table,\n             tmp_table TO new_table;\n\nMetadata locks on tables are acquired in name order, which in some\ncases can make a difference in operation outcome when multiple\ntransactions execute concurrently. See\nhttps://dev.mysql.com/doc/refman/8.0/en/metadata-locking.html.\n\nAs of MySQL 8.0.13, you can rename tables locked with a LOCK TABLES\nstatement, provided that they are locked with a WRITE lock or are the\nproduct of renaming WRITE-locked tables from earlier steps in a\nmultiple-table rename operation. For example, this is permitted:\n\nLOCK TABLE old_table1 WRITE;\nRENAME TABLE old_table1 TO new_table1,\n             new_table1 TO new_table2;\n\nThis is not permitted:\n\nLOCK TABLE old_table1 READ;\nRENAME TABLE old_table1 TO new_table1,\n             new_table1 TO new_table2;\n\nPrior to MySQL 8.0.13, to execute RENAME TABLE, there must be no tables\nlocked with LOCK TABLES.\n\nWith the transaction table locking conditions satisfied, the rename\noperation is done atomically; no other session can access any of the\ntables while the rename is in progress.\n\nIf any errors occur during a RENAME TABLE, the statement fails and no\nchanges are made.\n\nYou can use RENAME TABLE to move a table from one database to another:\n\nRENAME TABLE current_db.tbl_name TO other_db.tbl_name;\n\nUsing this method to move all tables from one database to a different\none in effect renames the database (an operation for which MySQL has no\nsingle statement), except that the original database continues to\nexist, albeit with no tables.\n\nLike RENAME TABLE, ALTER TABLE ... RENAME can also be used to move a\ntable to a different database. Regardless of the statement used, if the\nrename operation would move the table to a database located on a\ndifferent file system, the success of the outcome is platform specific\nand depends on the underlying operating system calls used to move table\nfiles.\n\nIf a table has triggers, attempts to rename the table into a different\ndatabase fail with a Trigger in wrong schema (ER_TRG_IN_WRONG_SCHEMA)\nerror.\n\nAn unencrypted table can be moved to an encryption-enabled database and\nvice versa. However, if the table_encryption_privilege_check variable\nis enabled, the TABLE_ENCRYPTION_ADMIN privilege is required if the\ntable encryption setting differs from the default database encryption.\n\nTo rename TEMPORARY tables, RENAME TABLE does not work. Use ALTER TABLE\ninstead.\n\nRENAME TABLE works for views, except that views cannot be renamed into\na different database.\n\nAny privileges granted specifically for a renamed table or view are not\nmigrated to the new name. They must be changed manually.\n\nRENAME TABLE tbl_name TO new_tbl_name changes internally generated\nforeign key constraint names and user-defined foreign key constraint\nnames that begin with the string \"tbl_name_ibfk_\" to reflect the new\ntable name. InnoDB interprets foreign key constraint names that begin\nwith the string \"tbl_name_ibfk_\" as internally generated names.\n\nForeign key constraint names that point to the renamed table are\nautomatically updated unless there is a conflict, in which case the\nstatement fails with an error. A conflict occurs if the renamed\nconstraint name already exists. In such cases, you must drop and\nre-create the foreign keys for them to function properly.\n\nRENAME TABLE tbl_name TO new_tbl_name changes internally generated and\nuser-defined CHECK constraint names that begin with the string\n\"tbl_name_chk_\" to reflect the new table name. MySQL interprets CHECK\nconstraint names that begin with the string \"tbl_name_chk_\" as\ninternally generated names. Example:\n\nmysql> SHOW CREATE TABLE t1\\G\n*************************** 1. row ***************************\n       Table: t1\nCreate Table: CREATE TABLE `t1` (\n  `i1` int(11) DEFAULT NULL,\n  `i2` int(11) DEFAULT NULL,\n  CONSTRAINT `t1_chk_1` CHECK ((`i1` > 0)),\n  CONSTRAINT `t1_chk_2` CHECK ((`i2` < 0))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\n1 row in set (0.02 sec)\n\nmysql> RENAME TABLE t1 TO t3;\nQuery OK, 0 rows affected (0.03 sec)\n\nmysql> SHOW CREATE TABLE t3\\G\n*************************** 1. row ***************************\n       Table: t3\nCreate Table: CREATE TABLE `t3` (\n  `i1` int(11) DEFAULT NULL,\n  `i2` int(11) DEFAULT NULL,\n  CONSTRAINT `t3_chk_1` CHECK ((`i1` > 0)),\n  CONSTRAINT `t3_chk_2` CHECK ((`i2` < 0))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\n1 row in set (0.01 sec)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/rename-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/rename-table.html'),(537,'TRUNCATE TABLE',33,'Syntax:\nTRUNCATE [TABLE] tbl_name\n\nTRUNCATE TABLE empties a table completely. It requires the DROP\nprivilege. Logically, TRUNCATE TABLE is similar to a DELETE statement\nthat deletes all rows, or a sequence of DROP TABLE and CREATE TABLE\nstatements.\n\nTo achieve high performance, TRUNCATE TABLE bypasses the DML method of\ndeleting data. Thus, it does not cause ON DELETE triggers to fire, it\ncannot be performed for InnoDB tables with parent-child foreign key\nrelationships, and it cannot be rolled back like a DML operation.\nHowever, TRUNCATE TABLE operations on tables that use an atomic\nDDL-supported storage engine are either fully committed or rolled back\nif the server halts during their operation. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html.\n\nAlthough TRUNCATE TABLE is similar to DELETE, it is classified as a DDL\nstatement rather than a DML statement. It differs from DELETE in the\nfollowing ways:\n\no Truncate operations drop and re-create the table, which is much\n  faster than deleting rows one by one, particularly for large tables.\n\no Truncate operations cause an implicit commit, and so cannot be rolled\n  back. See\n  https://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\no Truncation operations cannot be performed if the session holds an\n  active table lock.\n\no TRUNCATE TABLE fails for an InnoDB table or NDB table if there are\n  any FOREIGN KEY constraints from other tables that reference the\n  table. Foreign key constraints between columns of the same table are\n  permitted.\n\no Truncation operations do not return a meaningful value for the number\n  of deleted rows. The usual result is \"0 rows affected,\" which should\n  be interpreted as \"no information.\"\n\no As long as the table definition is valid, the table can be re-created\n  as an empty table with TRUNCATE TABLE, even if the data or index\n  files have become corrupted.\n\no Any AUTO_INCREMENT value is reset to its start value. This is true\n  even for MyISAM and InnoDB, which normally do not reuse sequence\n  values.\n\no When used with partitioned tables, TRUNCATE TABLE preserves the\n  partitioning; that is, the data and index files are dropped and\n  re-created, while the partition definitions are unaffected.\n\no The TRUNCATE TABLE statement does not invoke ON DELETE triggers.\n\no Truncating a corrupted InnoDB table is supported.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/truncate-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/truncate-table.html'),(538,'CALL',34,'Syntax:\nCALL sp_name([parameter[,...]])\nCALL sp_name[()]\n\nThe CALL statement invokes a stored procedure that was defined\npreviously with CREATE PROCEDURE.\n\nStored procedures that take no arguments can be invoked without\nparentheses. That is, CALL p() and CALL p are equivalent.\n\nCALL can pass back values to its caller using parameters that are\ndeclared as OUT or INOUT parameters. When the procedure returns, a\nclient program can also obtain the number of rows affected for the\nfinal statement executed within the routine: At the SQL level, call the\nROW_COUNT() function; from the C API, call the mysql_affected_rows()\nfunction.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/8.0/en/conditions-and-parameters.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/call.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/call.html'),(539,'DELETE',34,'Syntax:\nDELETE is a DML statement that removes rows from a table.\n\nA DELETE statement can start with a WITH clause to define common table\nexpressions accessible within the DELETE. See\nhttps://dev.mysql.com/doc/refman/8.0/en/with.html.\n\nSingle-Table Syntax\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name [[AS] tbl_alias]\n    [PARTITION (partition_name [, partition_name] ...)]\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nThe DELETE statement deletes rows from tbl_name and returns the number\nof deleted rows. To check the number of deleted rows, call the\nROW_COUNT() function described in\nhttps://dev.mysql.com/doc/refman/8.0/en/information-functions.html.\n\nMain Clauses\n\nThe conditions in the optional WHERE clause identify which rows to\ndelete. With no WHERE clause, all rows are deleted.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe deleted. It is specified as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/select.html.\n\nIf the ORDER BY clause is specified, the rows are deleted in the order\nthat is specified. The LIMIT clause places a limit on the number of\nrows that can be deleted. These clauses apply to single-table deletes,\nbut not multi-table deletes.\n\nMultiple-Table Syntax\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    tbl_name[.*] [, tbl_name[.*]] ...\n    FROM table_references\n    [WHERE where_condition]\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    FROM tbl_name[.*] [, tbl_name[.*]] ...\n    USING table_references\n    [WHERE where_condition]\n\nPrivileges\n\nYou need the DELETE privilege on a table to delete rows from it. You\nneed only the SELECT privilege for any columns that are only read, such\nas those named in the WHERE clause.\n\nPerformance\n\nWhen you do not need to know the number of deleted rows, the TRUNCATE\nTABLE statement is a faster way to empty a table than a DELETE\nstatement with no WHERE clause. Unlike DELETE, TRUNCATE TABLE cannot be\nused within a transaction or if you have a lock on the table. See [HELP\nTRUNCATE TABLE] and [HELP LOCK TABLES].\n\nThe speed of delete operations may also be affected by factors\ndiscussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/delete-optimization.html.\n\nTo ensure that a given DELETE statement does not take too much time,\nthe MySQL-specific LIMIT row_count clause for DELETE specifies the\nmaximum number of rows to be deleted. If the number of rows to delete\nis larger than the limit, repeat the DELETE statement until the number\nof affected rows is less than the LIMIT value.\n\nSubqueries\n\nYou cannot delete from a table and select from the same table in a\nsubquery.\n\nPartitioned Table Support\n\nDELETE supports explicit partition selection using the PARTITION\noption, which takes a list of the comma-separated names of one or more\npartitions or subpartitions (or both) from which to select rows to be\ndropped. Partitions not included in the list are ignored. Given a\npartitioned table t with a partition named p0, executing the statement\nDELETE FROM t PARTITION (p0) has the same effect on the table as\nexecuting ALTER TABLE t TRUNCATE PARTITION (p0); in both cases, all\nrows in partition p0 are dropped.\n\nPARTITION can be used along with a WHERE condition, in which case the\ncondition is tested only on rows in the listed partitions. For example,\nDELETE FROM t PARTITION (p0) WHERE c < 5 deletes rows only from\npartition p0 for which the condition c < 5 is true; rows in any other\npartitions are not checked and thus not affected by the DELETE.\n\nThe PARTITION option can also be used in multiple-table DELETE\nstatements. You can use up to one such option per table named in the\nFROM option.\n\nFor more information and examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/delete.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/delete.html'),(540,'DO',34,'Syntax:\nDO expr [, expr] ...\n\nDO executes the expressions but does not return any results. In most\nrespects, DO is shorthand for SELECT expr, ..., but has the advantage\nthat it is slightly faster when you do not care about the result.\n\nDO is useful primarily with functions that have side effects, such as\nRELEASE_LOCK().\n\nExample: This SELECT statement pauses, but also produces a result set:\n\nmysql> SELECT SLEEP(5);\n+----------+\n| SLEEP(5) |\n+----------+\n|        0 |\n+----------+\n1 row in set (5.02 sec)\n\nDO, on the other hand, pauses without producing a result set.:\n\nmysql> DO SLEEP(5);\nQuery OK, 0 rows affected (4.99 sec)\n\nThis could be useful, for example in a stored function or trigger,\nwhich prohibit statements that produce result sets.\n\nDO only executes expressions. It cannot be used in all cases where\nSELECT can be used. For example, DO id FROM t1 is invalid because it\nreferences a table.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/do.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/do.html'),(541,'HANDLER',34,'Syntax:\nHANDLER tbl_name OPEN [ [AS] alias]\n\nHANDLER tbl_name READ index_name { = | <= | >= | < | > } (value1,value2,...)\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ index_name { FIRST | NEXT | PREV | LAST }\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ { FIRST | NEXT }\n    [ WHERE where_condition ] [LIMIT ... ]\n\nHANDLER tbl_name CLOSE\n\nThe HANDLER statement provides direct access to table storage engine\ninterfaces. It is available for InnoDB and MyISAM tables.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/handler.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/handler.html'),(542,'IMPORT TABLE',34,'Syntax:\nIMPORT TABLE FROM sdi_file [, sdi_file] ...\n\nThe IMPORT TABLE statement imports MyISAM tables based on information\ncontained in .sdi (serialized dictionary information) metadata files.\nIMPORT TABLE requires the FILE privilege to read the .sdi and table\ncontent files, and the CREATE privilege for the table to be created.\n\nTables can be exported from one server using mysqldump to write a file\nof SQL statements and imported into another server using mysql to\nprocess the dump file. IMPORT TABLE provides a faster alternative using\nthe \"raw\" table files.\n\nPrior to import, the files that provide the table content must be\nplaced in the appropriate schema directory for the import server, and\nthe .sdi file must be located in a directory accessible to the server.\nFor example, the .sdi file can be placed in the directory named by the\nsecure_file_priv system variable, or (if secure_file_priv is empty) in\na directory under the server data directory.\n\nThe following example describes how to export MyISAM tables named\nemployees and managers from the hr schema of one server and import them\ninto the hr schema of another server. The example uses these\nassumptions (to perform a similar operation on your own system, modify\nthe path names as appropriate):\n\no For the export server, export_basedir represents its base directory,\n  and its data directory is export_basedir/data.\n\no For the import server, import_basedir represents its base directory,\n  and its data directory is import_basedir/data.\n\no Table files are exported from the export server into the /tmp/export\n  directory and this directory is secure (not accessible to other\n  users).\n\no The import server uses /tmp/mysql-files as the directory named by its\n  secure_file_priv system variable.\n\nTo export tables from the export server, use this procedure:\n\n1. Ensure a consistent snapshot by executing this statement to lock the\n   tables so that they cannot be modified during export:\n\nmysql> FLUSH TABLES hr.employees, hr.managers WITH READ LOCK;\n\n   While the lock is in effect, the tables can still be used, but only\n   for read access.\n\n2. At the file system level, copy the .sdi and table content files from\n   the hr schema directory to the secure export directory:\n\n  o The .sdi file is located in the hr schema directory, but might not\n    have exactly the same basename as the table name. For example, the\n    .sdi files for the employees and managers tables might be named\n    employees_125.sdi and managers_238.sdi.\n\n  o For a MyISAM table, the content files are its .MYD data file and\n    .MYI index file.\n\n   Given those file names, the copy commands look like this:\n\nshell> cd export_basedir/data/hr\nshell> cp employees_125.sdi /tmp/export\nshell> cp managers_238.sdi /tmp/export\nshell> cp employees.{MYD,MYI} /tmp/export\nshell> cp managers.{MYD,MYI} /tmp/export\n\n3. Unlock the tables:\n\nmysql> UNLOCK TABLES;\n\nTo import tables into the import server, use this procedure:\n\n1. The import schema must exist. If necessary, execute this statement\n   to create it:\n\nmysql> CREATE SCHEMA hr;\n\n2. At the file system level, copy the .sdi files to the import server\n   secure_file_priv directory, /tmp/mysql-files. Also, copy the table\n   content files to the hr schema directory:\n\nshell> cd /tmp/export\nshell> cp employees_125.sdi /tmp/mysql-files\nshell> cp managers_238.sdi /tmp/mysql-files\nshell> cp employees.{MYD,MYI} import_basedir/data/hr\nshell> cp managers.{MYD,MYI} import_basedir/data/hr\n\n3. Import the tables by executing an IMPORT TABLE statement that names\n   the .sdi files:\n\nmysql> IMPORT TABLE FROM\n       \'/tmp/mysql-files/employees.sdi\',\n       \'/tmp/mysql-files/managers.sdi\';\n\nThe .sdi file need not be placed in the import server directory named\nby the secure_file_priv system variable if that variable is empty; it\ncan be in any directory accessible to the server, including the schema\ndirectory for the imported table. If the .sdi file is placed in that\ndirectory, however, it may be rewritten; the import operation creates a\nnew .sdi file for the table, which will overwrite the old .sdi file if\nthe operation uses the same file name for the new file.\n\nEach sdi_file value must be a string literal that names the .sdi file\nfor a table or is a pattern that matches .sdi files. If the string is a\npattern, any leading directory path and the .sdi file name suffix must\nbe given literally. Pattern characters are permitted only in the base\nname part of the file name:\n\no ? matches any single character\n\no * matches any sequence of characters, including no characters\n\nUsing a pattern, the previous IMPORT TABLE statement could have been\nwritten like this (assuming that the /tmp/mysql-files directory\ncontains no other .sdi files matching the pattern):\n\nIMPORT TABLE FROM \'/tmp/mysql-files/*.sdi\';\n\nTo interpret the location of .sdi file path names, the server uses the\nsame rules for IMPORT TABLE as the server-side rules for LOAD DATA\n(that is, the non-LOCAL rules). See [HELP LOAD DATA], paying particular\nattention to the rules used to interpret relative path names.\n\nIMPORT TABLE fails if the .sdi or table files cannot be located. After\nimporting a table, the server attempts to open it and reports as\nwarnings any problems detected. To attempt a repair to correct any\nreported issues, use REPAIR TABLE.\n\nIMPORT TABLE is not written to the binary log.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/import-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/import-table.html'),(543,'INSERT',34,'Syntax:\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    {VALUES | VALUE} (value_list) [, (value_list)] ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    SET assignment_list\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nINSERT inserts new rows into an existing table. The INSERT ... VALUES\nand INSERT ... SET forms of the statement insert rows based on\nexplicitly specified values. The INSERT ... SELECT form inserts rows\nselected from another table or tables. INSERT with an ON DUPLICATE KEY\nUPDATE clause enables existing rows to be updated if a row to be\ninserted would cause a duplicate value in a UNIQUE index or PRIMARY\nKEY.\n\nFor additional information about INSERT ... SELECT and INSERT ... ON\nDUPLICATE KEY UPDATE, see [HELP INSERT SELECT], and\nhttps://dev.mysql.com/doc/refman/8.0/en/insert-on-duplicate.html.\n\nIn MySQL 8.0, the DELAYED keyword is accepted but ignored by the\nserver. For the reasons for this, see [HELP INSERT DELAYED],\n\nInserting into a table requires the INSERT privilege for the table. If\nthe ON DUPLICATE KEY UPDATE clause is used and a duplicate key causes\nan UPDATE to be performed instead, the statement requires the UPDATE\nprivilege for the columns to be updated. For columns that are read but\nnot modified you need only the SELECT privilege (such as for a column\nreferenced only on the right hand side of an col_name=expr assignment\nin an ON DUPLICATE KEY UPDATE clause).\n\nWhen inserting into a partitioned table, you can control which\npartitions and subpartitions accept new rows. The PARTITION option\ntakes a list of the comma-separated names of one or more partitions or\nsubpartitions (or both) of the table. If any of the rows to be inserted\nby a given INSERT statement do not match one of the partitions listed,\nthe INSERT statement fails with the error Found a row not matching the\ngiven partition set. For more information and examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/insert.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/insert.html'),(544,'INSERT SELECT',34,'Syntax:\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nWith INSERT ... SELECT, you can quickly insert many rows into a table\nfrom the result of a SELECT statement, which can select from one or\nmany tables. For example:\n\nINSERT INTO tbl_temp2 (fld_id)\n  SELECT tbl_temp1.fld_order_id\n  FROM tbl_temp1 WHERE tbl_temp1.fld_order_id > 100;\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/insert-select.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/insert-select.html'),(545,'INSERT DELAYED',34,'Syntax:\nINSERT DELAYED ...\n\nThe DELAYED option for the INSERT statement is a MySQL extension to\nstandard SQL. In previous versions of MySQL, it can be used for certain\nkinds of tables (such as MyISAM), such that when a client uses INSERT\nDELAYED, it gets an okay from the server at once, and the row is queued\nto be inserted when the table is not in use by any other thread.\n\nDELAYED inserts and replaces were deprecated in MySQL 5.6. In MySQL\n8.0, DELAYED is not supported. The server recognizes but ignores the\nDELAYED keyword, handles the insert as a nondelayed insert, and\ngenerates an ER_WARN_LEGACY_SYNTAX_CONVERTED warning (\"INSERT DELAYED\nis no longer supported. The statement was converted to INSERT\"). The\nDELAYED keyword is scheduled for removal in a future release.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/insert-delayed.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/insert-delayed.html'),(546,'LOAD DATA',34,'Syntax:\nLOAD DATA\n    [LOW_PRIORITY | CONCURRENT] [LOCAL]\n    INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [CHARACTER SET charset_name]\n    [{FIELDS | COLUMNS}\n        [TERMINATED BY \'string\']\n        [[OPTIONALLY] ENCLOSED BY \'char\']\n        [ESCAPED BY \'char\']\n    ]\n    [LINES\n        [STARTING BY \'string\']\n        [TERMINATED BY \'string\']\n    ]\n    [IGNORE number {LINES | ROWS}]\n    [(col_name_or_user_var\n        [, col_name_or_user_var] ...)]\n    [SET col_name={expr | DEFAULT},\n        [, col_name={expr | DEFAULT}] ...]\n\nThe LOAD DATA statement reads rows from a text file into a table at a\nvery high speed. LOAD DATA is the complement of SELECT ... INTO\nOUTFILE. (See\nhttps://dev.mysql.com/doc/refman/8.0/en/select-into.html.) To write\ndata from a table to a file, use SELECT ... INTO OUTFILE. To read the\nfile back into a table, use LOAD DATA. The syntax of the FIELDS and\nLINES clauses is the same for both statements.\n\nYou can also load data files by using the mysqlimport utility; see\nhttps://dev.mysql.com/doc/refman/8.0/en/mysqlimport.html. mysqlimport\noperates by sending a LOAD DATA statement to the server.\n\nFor more information about the efficiency of INSERT versus LOAD DATA\nand speeding up LOAD DATA, see\nhttps://dev.mysql.com/doc/refman/8.0/en/insert-optimization.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/load-data.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/load-data.html'),(547,'LOAD XML',34,'Syntax:\nLOAD XML\n    [LOW_PRIORITY | CONCURRENT] [LOCAL]\n    INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE [db_name.]tbl_name\n    [CHARACTER SET charset_name]\n    [ROWS IDENTIFIED BY \'<tagname>\']\n    [IGNORE number {LINES | ROWS}]\n    [(field_name_or_user_var\n        [, field_name_or_user_var] ...)]\n    [SET col_name={expr | DEFAULT},\n        [, col_name={expr | DEFAULT}] ...]\n\nThe LOAD XML statement reads data from an XML file into a table. The\nfile_name must be given as a literal string. The tagname in the\noptional ROWS IDENTIFIED BY clause must also be given as a literal\nstring, and must be surrounded by angle brackets (< and >).\n\nLOAD XML acts as the complement of running the mysql client in XML\noutput mode (that is, starting the client with the --xml option). To\nwrite data from a table to an XML file, you can invoke the mysql client\nwith the --xml and -e options from the system shell, as shown here:\n\nshell> mysql --xml -e \'SELECT * FROM mydb.mytable\' > file.xml\n\nTo read the file back into a table, use LOAD XML. By default, the <row>\nelement is considered to be the equivalent of a database table row;\nthis can be changed using the ROWS IDENTIFIED BY clause.\n\nThis statement supports three different XML formats:\n\no Column names as attributes and column values as attribute values:\n\n<row column1=\"value1\" column2=\"value2\" .../>\n\no Column names as tags and column values as the content of these tags:\n\n<row>\n  <column1>value1</column1>\n  <column2>value2</column2>\n</row>\n\no Column names are the name attributes of <field> tags, and values are\n  the contents of these tags:\n\n<row>\n  <field name=\'column1\'>value1</field>\n  <field name=\'column2\'>value2</field>\n</row>\n\n  This is the format used by other MySQL tools, such as mysqldump.\n\nAll three formats can be used in the same XML file; the import routine\nautomatically detects the format for each row and interprets it\ncorrectly. Tags are matched based on the tag or attribute name and the\ncolumn name.\n\nThe following clauses work essentially the same way for LOAD XML as\nthey do for LOAD DATA:\n\no LOW_PRIORITY or CONCURRENT\n\no LOCAL\n\no REPLACE or IGNORE\n\no CHARACTER SET\n\no SET\n\nSee [HELP LOAD DATA], for more information about these clauses.\n\n(field_name_or_user_var, ...) is a list of one or more comma-separated\nXML fields or user variables. The name of a user variable used for this\npurpose must match the name of a field from the XML file, prefixed with\n@. You can use field names to select only desired fields. User\nvariables can be employed to store the corresponding field values for\nsubsequent re-use.\n\nThe IGNORE number LINES or IGNORE number ROWS clause causes the first\nnumber rows in the XML file to be skipped. It is analogous to the LOAD\nDATA statement\'s IGNORE ... LINES clause.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/load-xml.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/load-xml.html'),(548,'REPLACE',34,'Syntax:\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    {VALUES | VALUE} (value_list) [, (value_list)] ...\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    SET assignment_list\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nREPLACE works exactly like INSERT, except that if an old row in the\ntable has the same value as a new row for a PRIMARY KEY or a UNIQUE\nindex, the old row is deleted before the new row is inserted. See [HELP\nINSERT].\n\nREPLACE is a MySQL extension to the SQL standard. It either inserts, or\ndeletes and inserts. For another MySQL extension to standard SQL---that\neither inserts or updates---see\nhttps://dev.mysql.com/doc/refman/8.0/en/insert-on-duplicate.html.\n\nDELAYED inserts and replaces were deprecated in MySQL 5.6. In MySQL\n8.0, DELAYED is not supported. The server recognizes but ignores the\nDELAYED keyword, handles the replace as a nondelayed replace, and\ngenerates an ER_WARN_LEGACY_SYNTAX_CONVERTED warning. (\"REPLACE DELAYED\nis no longer supported. The statement was converted to REPLACE.\") The\nDELAYED keyword will be removed in a future release.\n\n*Note*:\n\nREPLACE makes sense only if a table has a PRIMARY KEY or UNIQUE index.\nOtherwise, it becomes equivalent to INSERT, because there is no index\nto be used to determine whether a new row duplicates another.\n\nValues for all columns are taken from the values specified in the\nREPLACE statement. Any missing columns are set to their default values,\njust as happens for INSERT. You cannot refer to values from the current\nrow and use them in the new row. If you use an assignment such as SET\ncol_name = col_name + 1, the reference to the column name on the right\nhand side is treated as DEFAULT(col_name), so the assignment is\nequivalent to SET col_name = DEFAULT(col_name) + 1.\n\nTo use REPLACE, you must have both the INSERT and DELETE privileges for\nthe table.\n\nIf a generated column is replaced explicitly, the only permitted value\nis DEFAULT. For information about generated columns, see\nhttps://dev.mysql.com/doc/refman/8.0/en/create-table-generated-columns.\nhtml.\n\nREPLACE supports explicit partition selection using the PARTITION\nkeyword with a list of comma-separated names of partitions,\nsubpartitions, or both. As with INSERT, if it is not possible to insert\nthe new row into any of these partitions or subpartitions, the REPLACE\nstatement fails with the error Found a row not matching the given\npartition set. For more information and examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/replace.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/replace.html'),(549,'SELECT',34,'Syntax:\nSELECT\n    [ALL | DISTINCT | DISTINCTROW ]\n      [HIGH_PRIORITY]\n      [STRAIGHT_JOIN]\n      [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]\n      [SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS]\n    select_expr [, select_expr ...]\n    [FROM table_references\n      [PARTITION partition_list]\n    [WHERE where_condition]\n    [GROUP BY {col_name | expr | position}, ... [WITH ROLLUP]]\n    [HAVING where_condition]\n    [WINDOW window_name AS (window_spec)\n        [, window_name AS (window_spec)] ...]\n    [ORDER BY {col_name | expr | position}\n      [ASC | DESC], ... [WITH ROLLUP]]\n    [LIMIT {[offset,] row_count | row_count OFFSET offset}]\n    [INTO OUTFILE \'file_name\'\n        [CHARACTER SET charset_name]\n        export_options\n      | INTO DUMPFILE \'file_name\'\n      | INTO var_name [, var_name]]\n    [FOR {UPDATE | SHARE} [OF tbl_name [, tbl_name] ...] [NOWAIT | SKIP LOCKED] \n      | LOCK IN SHARE MODE]]\n\nSELECT is used to retrieve rows selected from one or more tables, and\ncan include UNION statements and subqueries. See [HELP UNION], and\nhttps://dev.mysql.com/doc/refman/8.0/en/subqueries.html. A SELECT\nstatement can start with a WITH clause to define common table\nexpressions accessible within the SELECT. See\nhttps://dev.mysql.com/doc/refman/8.0/en/with.html.\n\nThe most commonly used clauses of SELECT statements are these:\n\no Each select_expr indicates a column that you want to retrieve. There\n  must be at least one select_expr.\n\no table_references indicates the table or tables from which to retrieve\n  rows. Its syntax is described in [HELP JOIN].\n\no SELECT supports explicit partition selection using the PARTITION with\n  a list of partitions or subpartitions (or both) following the name of\n  the table in a table_reference (see [HELP JOIN]). In this case, rows\n  are selected only from the partitions listed, and any other\n  partitions of the table are ignored. For more information and\n  examples, see\n  https://dev.mysql.com/doc/refman/8.0/en/partitioning-selection.html.\n\n  SELECT ... PARTITION from tables using storage engines such as MyISAM\n  that perform table-level locks (and thus partition locks) lock only\n  the partitions or subpartitions named by the PARTITION option.\n\n  For more information, see Partitioning and Locking\n  (https://dev.mysql.com/doc/refman/5.7/en/partitioning-limitations-loc\n  king.html).\n\no The WHERE clause, if given, indicates the condition or conditions\n  that rows must satisfy to be selected. where_condition is an\n  expression that evaluates to true for each row to be selected. The\n  statement selects all rows if there is no WHERE clause.\n\n  In the WHERE expression, you can use any of the functions and\n  operators that MySQL supports, except for aggregate (summary)\n  functions. See\n  https://dev.mysql.com/doc/refman/8.0/en/expressions.html, and\n  https://dev.mysql.com/doc/refman/8.0/en/functions.html.\n\nSELECT can also be used to retrieve rows computed without reference to\nany table.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/select.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/select.html'),(550,'DUAL',34,'You are permitted to specify DUAL as a dummy table name in situations\nwhere no tables are referenced:\n\nmysql> SELECT 1 + 1 FROM DUAL;\n        -> 2\n\nDUAL is purely for the convenience of people who require that all\nSELECT statements should have FROM and possibly other clauses. MySQL\nmay ignore the clauses. MySQL does not require FROM DUAL if no tables\nare referenced.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/select.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/select.html'),(551,'JOIN',34,'MySQL supports the following JOIN syntax for the table_references part\nof SELECT statements and multiple-table DELETE and UPDATE statements:\n\ntable_references:\n    escaped_table_reference [, escaped_table_reference] ...\n\nescaped_table_reference:\n    table_reference\n  | { OJ table_reference }\n\ntable_reference:\n    table_factor\n  | joined_table\n\ntable_factor:\n    tbl_name [PARTITION (partition_names)]\n        [[AS] alias] [index_hint_list]\n  | table_subquery [AS] alias [(col_list)]\n  | ( table_references )\n\njoined_table:\n    table_reference {[INNER | CROSS] JOIN | STRAIGHT_JOIN} table_factor [join_specification]\n  | table_reference {LEFT|RIGHT} [OUTER] JOIN table_reference join_specification\n  | table_reference NATURAL [INNER | {LEFT|RIGHT} [OUTER]] JOIN table_factor\n\njoin_specification:\n    ON search_condition\n  | USING (join_column_list)\n\njoin_column_list:\n    column_name [, column_name] ...\n\nindex_hint_list:\n    index_hint [, index_hint] ...\n\nindex_hint:\n    USE {INDEX|KEY}\n      [FOR {JOIN|ORDER BY|GROUP BY}] ([index_list])\n  | {IGNORE|FORCE} {INDEX|KEY}\n      [FOR {JOIN|ORDER BY|GROUP BY}] (index_list)\n\nindex_list:\n    index_name [, index_name] ...\n\nA table reference is also known as a join expression.\n\nA table reference (when it refers to a partitioned table) may contain a\nPARTITION option, including a list of comma-separated partitions,\nsubpartitions, or both. This option follows the name of the table and\nprecedes any alias declaration. The effect of this option is that rows\nare selected only from the listed partitions or subpartitions. Any\npartitions or subpartitions not named in the list are ignored. For more\ninformation and examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-selection.html.\n\nThe syntax of table_factor is extended in MySQL in comparison with\nstandard SQL. The standard accepts only table_reference, not a list of\nthem inside a pair of parentheses.\n\nThis is a conservative extension if each comma in a list of\ntable_reference items is considered as equivalent to an inner join. For\nexample:\n\nSELECT * FROM t1 LEFT JOIN (t2, t3, t4)\n                 ON (t2.a = t1.a AND t3.b = t1.b AND t4.c = t1.c)\n\nis equivalent to:\n\nSELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4)\n                 ON (t2.a = t1.a AND t3.b = t1.b AND t4.c = t1.c)\n\nIn MySQL, JOIN, CROSS JOIN, and INNER JOIN are syntactic equivalents\n(they can replace each other). In standard SQL, they are not\nequivalent. INNER JOIN is used with an ON clause, CROSS JOIN is used\notherwise.\n\nIn general, parentheses can be ignored in join expressions containing\nonly inner join operations. MySQL also supports nested joins. See\nhttps://dev.mysql.com/doc/refman/8.0/en/nested-join-optimization.html.\n\nIndex hints can be specified to affect how the MySQL optimizer makes\nuse of indexes. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/index-hints.html. Optimizer\nhints and the optimizer_switch system variable are other ways to\ninfluence optimizer use of indexes. See\nhttps://dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html, and\nhttps://dev.mysql.com/doc/refman/8.0/en/switchable-optimizations.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/join.html\n\n','SELECT left_tbl.*\n  FROM left_tbl LEFT JOIN right_tbl ON left_tbl.id = right_tbl.id\n  WHERE right_tbl.id IS NULL;\n','https://dev.mysql.com/doc/refman/8.0/en/join.html'),(552,'UNION',34,'Syntax:\nSELECT ...\nUNION [ALL | DISTINCT] SELECT ...\n[UNION [ALL | DISTINCT] SELECT ...]\n\nUNION is used to combine the result from multiple SELECT statements\ninto a single result set.\n\nThe column names from the first SELECT statement are used as the column\nnames for the results returned. Selected columns listed in\ncorresponding positions of each SELECT statement should have the same\ndata type. (For example, the first column selected by the first\nstatement should have the same type as the first column selected by the\nother statements.)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/union.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/union.html'),(553,'UPDATE',34,'Syntax:\nUPDATE is a DML statement that modifies rows in a table.\n\nAn UPDATE statement can start with a WITH clause to define common table\nexpressions accessible within the UPDATE. See\nhttps://dev.mysql.com/doc/refman/8.0/en/with.html.\n\nSingle-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference\n    SET assignment_list\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nMultiple-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_references\n    SET assignment_list\n    [WHERE where_condition]\n\nFor the single-table syntax, the UPDATE statement updates columns of\nexisting rows in the named table with new values. The SET clause\nindicates which columns to modify and the values they should be given.\nEach value can be given as an expression, or the keyword DEFAULT to set\na column explicitly to its default value. The WHERE clause, if given,\nspecifies the conditions that identify which rows to update. With no\nWHERE clause, all rows are updated. If the ORDER BY clause is\nspecified, the rows are updated in the order that is specified. The\nLIMIT clause places a limit on the number of rows that can be updated.\n\nFor the multiple-table syntax, UPDATE updates rows in each table named\nin table_references that satisfy the conditions. Each matching row is\nupdated once, even if it matches the conditions multiple times. For\nmultiple-table syntax, ORDER BY and LIMIT cannot be used.\n\nFor partitioned tables, both the single-single and multiple-table forms\nof this statement support the use of a PARTITION option as part of a\ntable reference. This option takes a list of one or more partitions or\nsubpartitions (or both). Only the partitions (or subpartitions) listed\nare checked for matches, and a row that is not in any of these\npartitions or subpartitions is not updated, whether it satisfies the\nwhere_condition or not.\n\n*Note*:\n\nUnlike the case when using PARTITION with an INSERT or REPLACE\nstatement, an otherwise valid UPDATE ... PARTITION statement is\nconsidered successful even if no rows in the listed partitions (or\nsubpartitions) match the where_condition.\n\nFor more information and examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-selection.html.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe updated. For expression syntax, see\nhttps://dev.mysql.com/doc/refman/8.0/en/expressions.html.\n\ntable_references and where_condition are specified as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/select.html.\n\nYou need the UPDATE privilege only for columns referenced in an UPDATE\nthat are actually updated. You need only the SELECT privilege for any\ncolumns that are read but not modified.\n\nThe UPDATE statement supports the following modifiers:\n\no With the LOW_PRIORITY modifier, execution of the UPDATE is delayed\n  until no other clients are reading from the table. This affects only\n  storage engines that use only table-level locking (such as MyISAM,\n  MEMORY, and MERGE).\n\no With the IGNORE modifier, the update statement does not abort even if\n  errors occur during the update. Rows for which duplicate-key\n  conflicts occur on a unique key value are not updated. Rows updated\n  to values that would cause data conversion errors are updated to the\n  closest valid values instead. For more information, see\n  https://dev.mysql.com/doc/refman/8.0/en/sql-mode.html#ignore-strict-c\n  omparison.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/update.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/update.html'),(554,'START TRANSACTION',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that,\nwhen not otherwise inside a transaction, each statement is atomic, as\nif it were surrounded by START TRANSACTION and COMMIT. You cannot use\nROLLBACK to undo the effect; however, if an error occurs during\nstatement execution, the statement is rolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. A warning is generated when the WITH\n  CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the\n  CONNECTION_ADMIN or SUPER privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/commit.html'),(555,'BEGIN',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that,\nwhen not otherwise inside a transaction, each statement is atomic, as\nif it were surrounded by START TRANSACTION and COMMIT. You cannot use\nROLLBACK to undo the effect; however, if an error occurs during\nstatement execution, the statement is rolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. A warning is generated when the WITH\n  CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the\n  CONNECTION_ADMIN or SUPER privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/commit.html'),(556,'COMMIT',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that,\nwhen not otherwise inside a transaction, each statement is atomic, as\nif it were surrounded by START TRANSACTION and COMMIT. You cannot use\nROLLBACK to undo the effect; however, if an error occurs during\nstatement execution, the statement is rolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. A warning is generated when the WITH\n  CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the\n  CONNECTION_ADMIN or SUPER privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/commit.html'),(557,'ROLLBACK',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that,\nwhen not otherwise inside a transaction, each statement is atomic, as\nif it were surrounded by START TRANSACTION and COMMIT. You cannot use\nROLLBACK to undo the effect; however, if an error occurs during\nstatement execution, the statement is rolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. A warning is generated when the WITH\n  CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the\n  CONNECTION_ADMIN or SUPER privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/commit.html'),(558,'SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/savepoint.html'),(559,'ROLLBACK TO SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/savepoint.html'),(560,'RELEASE SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/savepoint.html'),(561,'LOCK INSTANCE FOR BACKUP',35,'Syntax:\nLOCK INSTANCE FOR BACKUP\n\nUNLOCK INSTANCE\n\nLOCK INSTANCE FOR BACKUP acquires an instance-level backup lock that\npermits DML during an online backup while preventing operations that\ncould result in an inconsistent snapshot.\n\nExecuting the LOCK INSTANCE FOR BACKUP statement requires the\nBACKUP_ADMIN privilege. The BACKUP_ADMIN privilege is automatically\ngranted to users with the RELOAD privilege when performing an in-place\nupgrade to MySQL 8.0 from an earlier version.\n\nMultiple sessions can hold a backup lock simultaneously.\n\nUNLOCK INSTANCE releases a backup lock held by the current session. A\nbackup lock held by a session is also released if the session is\nterminated.\n\nLOCK INSTANCE FOR BACKUP prevents files from being created, renamed, or\nremoved. REPAIR TABLE TRUNCATE TABLE, OPTIMIZE TABLE, and account\nmanagement statements are blocked. See\nhttps://dev.mysql.com/doc/refman/8.0/en/account-management-statements.h\ntml. Operations that modify InnoDB files that are not recorded in the\nInnoDB redo log are also blocked.\n\nLOCK INSTANCE FOR BACKUP permits DDL operations that only affect\nuser-created temporary tables. In effect, files that belong to\nuser-created temporary tables can be created, renamed, or removed while\na backup lock is held. Creation of binary log files is also permitted.\n\nA backup lock acquired by LOCK INSTANCE FOR BACKUP is independent of\ntransactional locks and locks taken by FLUSH TABLES tbl_name [,\ntbl_name] ... WITH READ LOCK, and the following sequences of statements\nare permitted:\n\nLOCK INSTANCE FOR BACKUP;\nFLUSH TABLES tbl_name [, tbl_name] ... WITH READ LOCK;\nUNLOCK TABLES;\nUNLOCK INSTANCE;\n\nFLUSH TABLES tbl_name [, tbl_name] ... WITH READ LOCK;\nLOCK INSTANCE FOR BACKUP;\nUNLOCK INSTANCE;\nUNLOCK TABLES;\n\nThe lock_wait_timeout setting defines the amount of time that a LOCK\nINSTANCE FOR BACKUP statement waits to acquire a lock before giving up.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/lock-instance-for-backup.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/lock-instance-for-backup.html'),(562,'LOCK TABLES',35,'Syntax:\nLOCK TABLES\n    tbl_name [[AS] alias] lock_type\n    [, tbl_name [[AS] alias] lock_type] ...\n\nlock_type: {\n    READ [LOCAL]\n  | [LOW_PRIORITY] WRITE\n}\n\nUNLOCK TABLES\n\nMySQL enables client sessions to acquire table locks explicitly for the\npurpose of cooperating with other sessions for access to tables, or to\nprevent other sessions from modifying tables during periods when a\nsession requires exclusive access to them. A session can acquire or\nrelease locks only for itself. One session cannot acquire locks for\nanother session or release locks held by another session.\n\nLocks may be used to emulate transactions or to get more speed when\nupdating tables. This is explained in more detail in\nhttps://dev.mysql.com/doc/refman/8.0/en/lock-tables.html#lock-tables-re\nstrictions.\n\nLOCK TABLES explicitly acquires table locks for the current client\nsession. Table locks can be acquired for base tables or views. You must\nhave the LOCK TABLES privilege, and the SELECT privilege for each\nobject to be locked.\n\nFor view locking, LOCK TABLES adds all base tables used in the view to\nthe set of tables to be locked and locks them automatically. If you\nlock a table explicitly with LOCK TABLES, any tables used in triggers\nare also locked implicitly, as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/lock-tables.html#lock-tables-an\nd-triggers.\n\nIf you lock a table explicitly with LOCK TABLES, any tables related by\na foreign key constraint are opened and locked implicitly. For foreign\nkey checks, a shared read-only lock (LOCK TABLES READ) is taken on\nrelated tables. For cascading updates, a shared-nothing write lock\n(LOCK TABLES WRITE) is taken on related tables that are involved in the\noperation.\n\nUNLOCK TABLES explicitly releases any table locks held by the current\nsession. LOCK TABLES implicitly releases any table locks held by the\ncurrent session before acquiring new locks.\n\nAnother use for UNLOCK TABLES is to release the global read lock\nacquired with the FLUSH TABLES WITH READ LOCK statement, which enables\nyou to lock all tables in all databases. See [HELP FLUSH]. (This is a\nvery convenient way to get backups if you have a file system such as\nVeritas that can take snapshots in time.)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/lock-tables.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/lock-tables.html'),(563,'SET TRANSACTION',35,'Syntax:\nSET [GLOBAL | SESSION] TRANSACTION\n    transaction_characteristic [, transaction_characteristic] ...\n\ntransaction_characteristic: {\n    ISOLATION LEVEL level\n  | access_mode\n}\n\nlevel: {\n     REPEATABLE READ\n   | READ COMMITTED\n   | READ UNCOMMITTED\n   | SERIALIZABLE\n}\n\naccess_mode: {\n     READ WRITE\n   | READ ONLY\n}\n\nThis statement specifies transaction characteristics. It takes a list\nof one or more characteristic values separated by commas. Each\ncharacteristic value sets the transaction isolation level or access\nmode. The isolation level is used for operations on InnoDB tables. The\naccess mode specifies whether transactions operate in read/write or\nread-only mode.\n\nIn addition, SET TRANSACTION can include an optional GLOBAL or SESSION\nkeyword to indicate the scope of the statement.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-transaction.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-transaction.html'),(564,'XA',35,'Syntax:\nXA {START|BEGIN} xid [JOIN|RESUME]\n\nXA END xid [SUSPEND [FOR MIGRATE]]\n\nXA PREPARE xid\n\nXA COMMIT xid [ONE PHASE]\n\nXA ROLLBACK xid\n\nXA RECOVER [CONVERT XID]\n\nFor XA START, the JOIN and RESUME clauses are recognized but have no\neffect.\n\nFor XA END the SUSPEND [FOR MIGRATE] clause is recognized but has no\neffect.\n\nEach XA statement begins with the XA keyword, and most of them require\nan xid value. An xid is an XA transaction identifier. It indicates\nwhich transaction the statement applies to. xid values are supplied by\nthe client, or generated by the MySQL server. An xid value has from one\nto three parts:\n\nxid: gtrid [, bqual [, formatID ]]\n\ngtrid is a global transaction identifier, bqual is a branch qualifier,\nand formatID is a number that identifies the format used by the gtrid\nand bqual values. As indicated by the syntax, bqual and formatID are\noptional. The default bqual value is \'\' if not given. The default\nformatID value is 1 if not given.\n\ngtrid and bqual must be string literals, each up to 64 bytes (not\ncharacters) long. gtrid and bqual can be specified in several ways. You\ncan use a quoted string (\'ab\'), hex string (X\'6162\', 0x6162), or bit\nvalue (b\'nnnn\').\n\nformatID is an unsigned integer.\n\nThe gtrid and bqual values are interpreted in bytes by the MySQL\nserver\'s underlying XA support routines. However, while an SQL\nstatement containing an XA statement is being parsed, the server works\nwith some specific character set. To be safe, write gtrid and bqual as\nhex strings.\n\nxid values typically are generated by the Transaction Manager. Values\ngenerated by one TM must be different from values generated by other\nTMs. A given TM must be able to recognize its own xid values in a list\nof values returned by the XA RECOVER statement.\n\nXA START xid starts an XA transaction with the given xid value. Each XA\ntransaction must have a unique xid value, so the value must not\ncurrently be used by another XA transaction. Uniqueness is assessed\nusing the gtrid and bqual values. All following XA statements for the\nXA transaction must be specified using the same xid value as that given\nin the XA START statement. If you use any of those statements but\nspecify an xid value that does not correspond to some existing XA\ntransaction, an error occurs.\n\nOne or more XA transactions can be part of the same global transaction.\nAll XA transactions within a given global transaction must use the same\ngtrid value in the xid value. For this reason, gtrid values must be\nglobally unique so that there is no ambiguity about which global\ntransaction a given XA transaction is part of. The bqual part of the\nxid value must be different for each XA transaction within a global\ntransaction. (The requirement that bqual values be different is a\nlimitation of the current MySQL XA implementation. It is not part of\nthe XA specification.)\n\nThe XA RECOVER statement returns information for those XA transactions\non the MySQL server that are in the PREPARED state. (See\nhttps://dev.mysql.com/doc/refman/8.0/en/xa-states.html.) The output\nincludes a row for each such XA transaction on the server, regardless\nof which client started it.\n\nXA RECOVER requires the XA_RECOVER_ADMIN privilege. This privilege\nrequirement prevents users from discovering the XID values for\noutstanding prepared XA transactions other than their own. It does not\naffect normal commit or rollback of an XA transaction because the user\nwho started it knows its XID.\n\nXA RECOVER output rows look like this (for an example xid value\nconsisting of the parts \'abc\', \'def\', and 7):\n\nmysql> XA RECOVER;\n+----------+--------------+--------------+--------+\n| formatID | gtrid_length | bqual_length | data   |\n+----------+--------------+--------------+--------+\n|        7 |            3 |            3 | abcdef |\n+----------+--------------+--------------+--------+\n\nThe output columns have the following meanings:\n\no formatID is the formatID part of the transaction xid\n\no gtrid_length is the length in bytes of the gtrid part of the xid\n\no bqual_length is the length in bytes of the bqual part of the xid\n\no data is the concatenation of the gtrid and bqual parts of the xid\n\nXID values may contain nonprintable characters. XA RECOVER permits an\noptional CONVERT XID clause so that clients can request XID values in\nhexadecimal.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/xa-statements.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/xa-statements.html'),(565,'PURGE BINARY LOGS',35,'Syntax:\nPURGE { BINARY | MASTER } LOGS {\n    TO \'log_name\'\n  | BEFORE datetime_expr\n}\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file (see\nhttps://dev.mysql.com/doc/refman/8.0/en/binary-log.html).\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date.\nBINARY and MASTER are synonyms. Deleted log files also are removed from\nthe list recorded in the index file, so that the given log file becomes\nthe first in the list.\n\nPURGE BINARY LOGS requires the BINLOG_ADMIN privilege. This statement\nhas no effect if the server was not started with the --log-bin option\nto enable binary logging.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/purge-binary-logs.html\n\n','PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2019-04-02 22:46:26\';\n','https://dev.mysql.com/doc/refman/8.0/en/purge-binary-logs.html'),(566,'PURGE MASTER LOGS',35,'Syntax:\nPURGE { BINARY | MASTER } LOGS {\n    TO \'log_name\'\n  | BEFORE datetime_expr\n}\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file (see\nhttps://dev.mysql.com/doc/refman/8.0/en/binary-log.html).\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date.\nBINARY and MASTER are synonyms. Deleted log files also are removed from\nthe list recorded in the index file, so that the given log file becomes\nthe first in the list.\n\nPURGE BINARY LOGS requires the BINLOG_ADMIN privilege. This statement\nhas no effect if the server was not started with the --log-bin option\nto enable binary logging.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/purge-binary-logs.html\n\n','PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2019-04-02 22:46:26\';\n','https://dev.mysql.com/doc/refman/8.0/en/purge-binary-logs.html'),(567,'RESET MASTER',35,'Syntax:\nRESET MASTER [TO binary_log_file_index_number]\n\n*Warning*:\n\nUse this statement with caution to ensure you do not lose any wanted\nbinary log file data and GTID execution history.\n\nRESET MASTER requires the RELOAD privilege.\n\nFor a server where binary logging is enabled (log_bin is ON), RESET\nMASTER deletes all existing binary log files and resets the binary log\nindex file, resetting the server to its state before binary logging was\nstarted. A new empty binary log file is created so that binary logging\ncan be restarted.\n\nFor a server where GTIDs are in use (gtid_mode is ON), issuing RESET\nMASTER resets the GTID execution history. The value of the gtid_purged\nsystem variable is set to an empty string (\'\'), the global value (but\nnot the session value) of the gtid_executed system variable is set to\nan empty string, and the mysql.gtid_executed table is cleared (see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids-concepts.html\n#replication-gtids-gtid-executed-table). If the GTID-enabled server has\nbinary logging enabled, RESET MASTER also resets the binary log as\ndescribed above. Note that RESET MASTER is the method to reset the GTID\nexecution history even if the GTID-enabled server is a replication\nslave where binary logging is disabled; RESET SLAVE has no effect on\nthe GTID execution history. For more information on resetting the GTID\nexecution history, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids-lifecycle.htm\nl#replication-gtids-execution-history.\n\nIssuing RESET MASTER without the optional TO clause deletes all binary\nlog files listed in the index file, resets the binary log index file to\nbe empty, and creates a new binary log file starting at 1. Use the\noptional TO clause to start the binary log file index from a number\nother than 1 after the reset.\n\nUsing RESET MASTER with the TO clause to specify a binary log file\nindex number to start from simplifies failover by providing a single\nstatement alternative to the FLUSH BINARY LOGS and PURGE BINARY LOGS TO\nstatements. Check that you are using a reasonable value for the index\nnumber. If you enter an incorrect value, you can correct this by\nissuing another RESET MASTER statement with or without the TO clause.\nIf you do not correct a value that is out of range, the server cannot\nbe restarted.\n\nThe following example demonstrates TO clause usage:\n\nRESET MASTER TO 1234;\n\nSHOW BINARY LOGS;\n+-------------------+-----------+-----------+\n| Log_name          | File_size | Encrypted |\n+-------------------+-----------+-----------+\n| master-bin.001234 |       154 | No        |\n+-------------------+-----------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/reset-master.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/reset-master.html'),(568,'SET SQL_LOG_BIN',35,'Syntax:\nSET sql_log_bin = {OFF|ON}\n\nThe sql_log_bin variable controls whether logging to the binary log is\nenabled for the current session (assuming that the binary log itself is\nenabled). The default value is ON. To disable or enable binary logging\nfor the current session, set the session sql_log_bin variable to OFF or\nON.\n\nSet this variable to OFF for a session to temporarily disable binary\nlogging while making changes to the master you do not want replicated\nto the slave.\n\nSetting the session value of this system variable is a restricted\noperation. The session user must have privileges sufficient to set\nrestricted session variables. See\nhttps://dev.mysql.com/doc/refman/8.0/en/system-variable-privileges.html\n.\n\nIt is not possible to set the session value of sql_log_bin within a\ntransaction or subquery.\n\nSetting this variable to OFF prevents new GTIDs from being assigned to\ntransactions in the binary log. If you are using GTIDs for replication,\nthis means that even when binary logging is later enabled again, the\nGTIDs written into the log from this point do not account for any\ntransactions that occurred in the meantime, so in effect those\ntransactions are lost.\n\nmysqldump adds a SET @@SESSION.sql_log_bin=0 statement to a dump file\nfrom a server where GTIDs are in use, which disables binary logging\nwhile the dump file is being reloaded. The statement prevents new GTIDs\nfrom being generated and assigned to the transactions in the dump file\nas they are executed, so that the original GTIDs for the transactions\nare used.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-sql-log-bin.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-sql-log-bin.html'),(569,'CHANGE MASTER TO',35,'Syntax:\nCHANGE MASTER TO option [, option] ... [ channel_option ]\n\noption:\n    MASTER_BIND = \'interface_name\'\n  | MASTER_HOST = \'host_name\'\n  | MASTER_USER = \'user_name\'\n  | MASTER_PASSWORD = \'password\'\n  | MASTER_PORT = port_num\n  | PRIVILEGE_CHECKS_USER = {\'account\' | NULL}\n  | MASTER_CONNECT_RETRY = interval\n  | MASTER_RETRY_COUNT = count\n  | MASTER_DELAY = interval\n  | MASTER_HEARTBEAT_PERIOD = interval\n  | MASTER_LOG_FILE = \'master_log_name\'\n  | MASTER_LOG_POS = master_log_pos\n  | MASTER_AUTO_POSITION = {0|1}\n  | RELAY_LOG_FILE = \'relay_log_name\'\n  | RELAY_LOG_POS = relay_log_pos\n  | MASTER_COMPRESSION_ALGORITHMS = \'value\'\n  | MASTER_ZSTD_COMPRESSION_LEVEL = level\n  | MASTER_SSL = {0|1}\n  | MASTER_SSL_CA = \'ca_file_name\'\n  | MASTER_SSL_CAPATH = \'ca_directory_name\'\n  | MASTER_SSL_CERT = \'cert_file_name\'\n  | MASTER_SSL_CRL = \'crl_file_name\'\n  | MASTER_SSL_CRLPATH = \'crl_directory_name\'\n  | MASTER_SSL_KEY = \'key_file_name\'\n  | MASTER_SSL_CIPHER = \'cipher_list\'\n  | MASTER_SSL_VERIFY_SERVER_CERT = {0|1}\n  | MASTER_TLS_VERSION = \'protocol_list\'\n  | MASTER_PUBLIC_KEY_PATH = \'key_file_name\'\n  | GET_MASTER_PUBLIC_KEY = {0|1}\n  | IGNORE_SERVER_IDS = (server_id_list)\n\nchannel_option:\n    FOR CHANNEL channel\n\nserver_id_list:\n    [server_id [, server_id] ... ]\n\nCHANGE MASTER TO changes the parameters that the slave server uses for\nconnecting to the master server, for reading the master binary log, and\nreading the slave relay log. It also updates the contents of the master\ninfo and relay log info repositories (see\nhttps://dev.mysql.com/doc/refman/8.0/en/slave-logs.html). CHANGE MASTER\nTO requires the REPLICATION_SLAVE_ADMIN or SUPER privilege.\n\nYou can issue CHANGE MASTER TO statements on a running slave without\nfirst stopping it, depending on the states of the slave SQL thread and\nslave I/O thread. The rules governing such use are provided later in\nthis section.\n\nWhen using a multithreaded slave (in other words slave_parallel_workers\nis greater than 0), stopping the slave can cause \"gaps\" in the sequence\nof transactions that have been executed from the relay log, regardless\nof whether the slave was stopped intentionally or otherwise. When such\ngaps exist, issuing CHANGE MASTER TO fails. The solution in this\nsituation is to issue START SLAVE UNTIL SQL_AFTER_MTS_GAPS which\nensures that the gaps are closed.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the CHANGE MASTER TO statement to a specific\nreplication channel, and is used to add a new channel or modify an\nexisting channel. For example, to add a new channel called channel2:\n\nCHANGE MASTER TO MASTER_HOST=host1, MASTER_PORT=3002 FOR CHANNEL \'channel2\'\n\nIf no clause is named and no extra channels exist, the statement\napplies to the default channel.\n\nWhen using multiple replication channels, if a CHANGE MASTER TO\nstatement does not name a channel using a FOR CHANNEL channel clause,\nan error occurs. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-channels.html for\nmore information.\n\nOptions not specified retain their value, except as indicated in the\nfollowing discussion. Thus, in most cases, there is no need to specify\noptions that do not change.\n\nMASTER_HOST, MASTER_USER, MASTER_PASSWORD, and MASTER_PORT provide\ninformation to the slave about how to connect to its master:\n\no MASTER_HOST and MASTER_PORT are the host name (or IP address) of the\n  master host and its TCP/IP port.\n\n  *Note*:\n\n  Replication cannot use Unix socket files. You must be able to connect\n  to the master MySQL server using TCP/IP.\n\n  If you specify the MASTER_HOST or MASTER_PORT option, the slave\n  assumes that the master server is different from before (even if the\n  option value is the same as its current value.) In this case, the old\n  values for the master binary log file name and position are\n  considered no longer applicable, so if you do not specify\n  MASTER_LOG_FILE and MASTER_LOG_POS in the statement,\n  MASTER_LOG_FILE=\'\' and MASTER_LOG_POS=4 are silently appended to it.\n\n  Setting MASTER_HOST=\'\' (that is, setting its value explicitly to an\n  empty string) is not the same as not setting MASTER_HOST at all.\n  Trying to set MASTER_HOST to an empty string fails with an error.\n\n  Values used for MASTER_HOST and other CHANGE MASTER TO options are\n  checked for linefeed (\\n or 0x0A) characters; the presence of such\n  characters in these values causes the statement to fail with\n  ER_MASTER_INFO. (Bug #11758581, Bug #50801)\n\no MASTER_USER and MASTER_PASSWORD are the user name and password of the\n  account to use for connecting to the master.\n\n  MASTER_USER cannot be made empty; setting MASTER_USER = \'\' or leaving\n  it unset when setting a value for MASTER_PASSWORD causes an error\n  (Bug #13427949).\n\n  The password used for a MySQL Replication slave account in a CHANGE\n  MASTER TO statement is limited to 32 characters in length; trying to\n  use a password of more than 32 characters causes CHANGE MASTER TO to\n  fail.\n\n  The text of a running CHANGE MASTER TO statement, including values\n  for MASTER_USER and MASTER_PASSWORD, can be seen in the output of a\n  concurrent SHOW PROCESSLIST statement. (The complete text of a START\n  SLAVE statement is also visible to SHOW PROCESSLIST.)\n\nPRIVILEGE_CHECKS_USER (available as of MySQL 8.0.18) names a user\naccount that supplies a security context for the specified channel.\nNULL, which is the default, means no security context is used. If you\ndo not specify a channel and no other channels exist, the statement is\napplied to the default channel. For example, to start privilege checks\non the channel channel_1 on a running replication slave, issue the\nfollowing statements:\n\nmysql> STOP SLAVE FOR CHANNEL \'channel_1\';\nmysql> CHANGE MASTER TO PRIVILEGE_CHECKS_USER = \'priv_repl\'@\'%.example.com\' FOR CHANNEL \'channel_1\'; \nmysql> START SLAVE FOR CHANNEL \'channel_1\';\n\nThe user name and host name for the user account must follow the syntax\ndescribed in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html, and the\nuser must not be an anonymous user (with a blank user name) or the\nCURRENT_USER. The account must have the REPLICATION_APPLIER privilege,\nplus the required privileges to execute the transactions replicated on\nthe channel. When you restart the replication channel, the privilege\nchecks are applied from that point on. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-privilege-checks.ht\nml.\n\nMASTER_COMPRESSION_ALGORITHMS and MASTER_ZSTD_COMPRESSION_LEVEL\n(available as of MySQL 8.0.18) enable control over the use of\ncompression for connections to the master:\n\no MASTER_COMPRESSION_ALGORITHMS specifies the permitted compression\n  algorithms. The available algorithms are the same as for the\n  protocol_compression_algorithms system variable. The default value is\n  uncompressed.\n\n  The value of MASTER_COMPRESSION_ALGORITHMS applies only if the\n  slave_compressed_protocol system variable is disabled. If\n  slave_compressed_protocol is enabled, it takes precedence over\n  MASTER_COMPRESSION_ALGORITHMS and connections to the master use zlib\n  compression if both master and slave support that algorithm.\n\no MASTER_ZSTD_COMPRESSION_LEVEL is the compression level to use for\n  connections that use the zstd compression algorithm. The permitted\n  levels are from 1 to 22, with larger values indicating increasing\n  levels of compression. The default zstd compression level is 3. The\n  compression level setting has no effect on connections that do not\n  use zstd compression.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/connection-compression-control.\nhtml.\n\nThe MASTER_SSL_xxx options and the MASTER_TLS_VERSION option specify\nhow the slave uses encryption and ciphers to secure the replication\nconnection. These options can be changed even on slaves that are\ncompiled without SSL support. They are saved to the master info\nrepository, but are ignored if the slave does not have SSL support\nenabled. The MASTER_SSL_xxx and MASTER_TLS_VERSION options perform the\nsame functions as the --ssl-xxx and --tls-version client options\ndescribed in\nhttps://dev.mysql.com/doc/refman/8.0/en/connection-options.html#encrypt\ned-connection-options. The correspondence between the two sets of\noptions, and the use of the MASTER_SSL_xxx and MASTER_TLS_VERSION\noptions to set up a secure connection, is explained in\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-solutions-encrypted\n-connections.html.\n\n*Important*:\n\nTo connect to the replication master using a user account that\nauthenticates with the caching_sha2_password plugin, you must either\nset up a secure connection as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-solutions-encrypted\n-connections.html, or enable the unencrypted connection to support\npassword exchange using an RSA key pair. The caching_sha2_password\nauthentication plugin is the default for new users created from MySQL\n8.0 (for details, see\nhttps://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authenti\ncation.html). If the user account that you create or use for\nreplication (as specified by the MASTER_USER option) uses this\nauthentication plugin, and you are not using a secure connection, you\nmust enable RSA key pair-based password exchange for a successful\nconnection.\n\nTo enable RSA key pair-based password exchange, specify either the\nMASTER_PUBLIC_KEY_PATH or the GET_MASTER_PUBLIC_KEY=1 option. Either of\nthese options provides the RSA public key to the slave:\n\no MASTER_PUBLIC_KEY_PATH indicates the path name to a file containing a\n  slave-side copy of the public key required by the master for RSA key\n  pair-based password exchange. The file must be in PEM format. This\n  option applies to slaves that authenticate with the sha256_password\n  or caching_sha2_password authentication plugin. (For sha256_password,\n  MASTER_PUBLIC_KEY_PATH can be used only if MySQL was built using\n  OpenSSL.)\n\no GET_MASTER_PUBLIC_KEY indicates whether to request from the master\n  the public key required for RSA key pair-based password exchange.\n  This option applies to slaves that authenticate with the\n  caching_sha2_password authentication plugin. For connections by\n  accounts that authenticate using this plugin, the master does not\n  send the public key unless requested, so it must be requested or\n  specified in the client. If MASTER_PUBLIC_KEY_PATH is given and\n  specifies a valid public key file, it takes precedence over\n  GET_MASTER_PUBLIC_KEY.\n\nThe MASTER_HEARTBEAT_PERIOD, MASTER_CONNECT_RETRY, and\nMASTER_RETRY_COUNT options control how the slave recognizes that the\nconnection to the master has been lost and makes attempts to reconnect.\n\no The slave_net_timeout system variable specifies the number of seconds\n  that the slave waits for either more data or a heartbeat signal from\n  the master, before the slave considers the connection broken, aborts\n  the read, and tries to reconnect. The default value is 60 seconds\n  (one minute).\n\no The heartbeat interval, which stops the connection timeout occurring\n  in the absence of data if the connection is still good, is controlled\n  by the MASTER_HEARTBEAT_PERIOD option. A heartbeat signal is sent to\n  the slave after that number of seconds, and the waiting period is\n  reset whenever the master\'s binary log is updated with an event.\n  Heartbeats are therefore sent by the master only if there are no\n  unsent events in the binary log file for a period longer than this.\n  The heartbeat interval interval is a decimal value having the range 0\n  to 4294967 seconds and a resolution in milliseconds; the smallest\n  nonzero value is 0.001. Setting interval to 0 disables heartbeats\n  altogether. The heartbeat interval defaults to half the value of the\n  slave_net_timeout system variable. It is recorded in the master info\n  log and shown in the replication_connection_configuration Performance\n  Schema table. Issuing RESET SLAVE resets the heartbeat interval to\n  the default value.\n\n  Note that a change to the value or default setting of\n  slave_net_timeout does not automatically change the heartbeat\n  interval, whether that has been set explicitly or is using a\n  previously calculated default. A warning is issued if you set\n  @@GLOBAL.slave_net_timeout to a value less than that of the current\n  heartbeat interval. If slave_net_timeout is changed, you must also\n  issue CHANGE MASTER TO to adjust the heartbeat interval to an\n  appropriate value so that the heartbeat signal occurs before the\n  connection timeout. If you do not do this, the heartbeat signal has\n  no effect, and if no data is received from the master, the slave can\n  make repeated reconnection attempts, creating zombie dump threads.\n\no If the slave does need to reconnect, the first retry occurs\n  immediately after the timeout. MASTER_CONNECT_RETRY specifies the\n  interval between reconnection attempts, and MASTER_RETRY_COUNT limits\n  the number of reconnection attempts. If both the default settings are\n  used, the slave waits 60 seconds between reconnection attempts\n  (MASTER_CONNECT_RETRY=60), and keeps attempting to reconnect at this\n  rate for 60 days (MASTER_RETRY_COUNT=86400). These values are\n  recorded in the master info log and shown in the\n  replication_connection_configuration Performance Schema table.\n  MASTER_RETRY_COUNT supersedes the --master-retry-count server startup\n  option.\n\nMASTER_DELAY specifies how many seconds behind the master the slave\nmust lag. An event received from the master is not executed until at\nleast interval seconds later than its execution on the master. The\ndefault is 0. An error occurs if interval is not a nonnegative integer\nin the range from 0 to 231−1. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-delayed.html.\n\nA CHANGE MASTER TO statement employing the MASTER_DELAY option can be\nexecuted on a running slave when the slave SQL thread is stopped.\n\nMASTER_BIND is for use on replication slaves having multiple network\ninterfaces, and determines which of the slave\'s network interfaces is\nchosen for connecting to the master.\n\nThe address configured with this option, if any, can be seen in the\nMaster_Bind column of the output from SHOW SLAVE STATUS. In the master\ninfo repository table mysql.slave_master_info, the value can be seen as\nthe Master_bind column.\n\nThe ability to bind a replication slave to a specific network interface\nis also supported by NDB Cluster.\n\nMASTER_LOG_FILE and MASTER_LOG_POS are the coordinates at which the\nslave I/O thread should begin reading from the master the next time the\nthread starts. RELAY_LOG_FILE and RELAY_LOG_POS are the coordinates at\nwhich the slave SQL thread should begin reading from the relay log the\nnext time the thread starts. If you specify either of MASTER_LOG_FILE\nor MASTER_LOG_POS, you cannot specify RELAY_LOG_FILE or RELAY_LOG_POS.\nIf you specify either of MASTER_LOG_FILE or MASTER_LOG_POS, you also\ncannot specify MASTER_AUTO_POSITION = 1 (described later in this\nsection). If neither of MASTER_LOG_FILE or MASTER_LOG_POS is specified,\nthe slave uses the last coordinates of the slave SQL thread before\nCHANGE MASTER TO was issued. This ensures that there is no\ndiscontinuity in replication, even if the slave SQL thread was late\ncompared to the slave I/O thread, when you merely want to change, say,\nthe password to use.\n\nRELAY_LOG_FILE can use either an absolute or relative path, and uses\nthe same base name as MASTER_LOG_FILE. A CHANGE MASTER TO statement\nemploying RELAY_LOG_FILE, RELAY_LOG_POS, or both options can be\nexecuted on a running slave when the slave SQL thread is stopped. Relay\nlogs are preserved if at least one of the slave SQL thread and the\nslave I/O thread is running. If both threads are stopped, all relay log\nfiles are deleted unless at least one of RELAY_LOG_FILE or\nRELAY_LOG_POS is specified. Note that the Group Replication applier\nchannel (group_replication_applier) has no I/O thread, only a SQL\nthread. For this channel, the relay logs are not preserved when the SQL\nthread is stopped.\n\nWhen MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave\nattempts to connect to the master using the GTID-based replication\nprotocol. This option can be used with CHANGE MASTER TO only if both\nthe slave SQL and slave I/O threads are stopped. Both the slave and the\nmaster must have GTIDs enabled (GTID_MODE=ON, ON_PERMISSIVE, or\nOFF_PERMISSIVE on the slave, and GTID_MODE=ON on the master).\nAuto-positioning is used for the connection, so the coordinates\nrepresented by MASTER_LOG_FILE and MASTER_LOG_POS are not used, and the\nuse of either or both of these options together with\nMASTER_AUTO_POSITION = 1 causes an error. If multi-source replication\nis enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1\noption for each applicable replication channel.\n\nWith MASTER_AUTO_POSITION = 1 set, in the initial connection handshake,\nthe slave sends a GTID set containing the transactions that it has\nalready received, committed, or both. The master responds by sending\nall transactions recorded in its binary log whose GTID is not included\nin the GTID set sent by the slave. This exchange ensures that the\nmaster only sends the transactions with a GTID that the slave has not\nalready recorded or committed. If the slave receives transactions from\nmore than one master, as in the case of a diamond topology, the\nauto-skip function ensures that the transactions are not applied twice.\nFor details of how the GTID set sent by the slave is computed, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids-auto-position\ning.html.\n\nIf any of the transactions that should be sent by the master have been\npurged from the master\'s binary log, or added to the set of GTIDs in\nthe gtid_purged system variable by another method, the master sends the\nerror ER_MASTER_HAS_PURGED_REQUIRED_GTIDS to the slave, and replication\ndoes not start. The GTIDs of the missing purged transactions are\nidentified and listed in the master\'s error log in the warning message\nER_FOUND_MISSING_GTIDS. Also, if during the exchange of transactions it\nis found that the slave has recorded or committed transactions with the\nmaster\'s UUID in the GTID, but the master itself has not committed\nthem, the master sends the error ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER to\nthe slave and replication does not start. For information on how to\nhandle these situations, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids-auto-position\ning.html.\n\nYou can see whether replication is running with auto-positioning\nenabled by checking the Performance Schema\nreplication_connection_status table or the output of SHOW SLAVE STATUS.\nDisabling the MASTER_AUTO_POSITION option again makes the slave revert\nto file-based replication, in which case you must also specify one or\nboth of the MASTER_LOG_FILE or MASTER_LOG_POS options.\n\nIGNORE_SERVER_IDS takes a comma-separated list of 0 or more server IDs.\nEvents originating from the corresponding servers are ignored, with the\nexception of log rotation and deletion events, which are still recorded\nin the relay log.\n\nIn circular replication, the originating server normally acts as the\nterminator of its own events, so that they are not applied more than\nonce. Thus, this option is useful in circular replication when one of\nthe servers in the circle is removed. Suppose that you have a circular\nreplication setup with 4 servers, having server IDs 1, 2, 3, and 4, and\nserver 3 fails. When bridging the gap by starting replication from\nserver 2 to server 4, you can include IGNORE_SERVER_IDS = (3) in the\nCHANGE MASTER TO statement that you issue on server 4 to tell it to use\nserver 2 as its master instead of server 3. Doing so causes it to\nignore and not to propagate any statements that originated with the\nserver that is no longer in use.\n\nIf IGNORE_SERVER_IDS contains the server\'s own ID and the server was\nstarted with the --replicate-same-server-id option enabled, an error\nresults.\n\n*Note*:\n\nWhen global transaction identifiers (GTIDs) are used for replication,\ntransactions that have already been applied are automatically ignored,\nso the IGNORE_SERVER_IDS function is not required and is deprecated. If\ngtid_mode=ON is set for the server, a deprecation warning is issued if\nyou include the IGNORE_SERVER_IDS option in a CHANGE MASTER TO\nstatement.\n\nThe master info repository and the output of SHOW SLAVE STATUS provide\nthe list of servers that are currently ignored. For more information,\nsee https://dev.mysql.com/doc/refman/8.0/en/slave-logs-status.html, and\n[HELP SHOW SLAVE STATUS].\n\nIf a CHANGE MASTER TO statement is issued without any IGNORE_SERVER_IDS\noption, any existing list is preserved. To clear the list of ignored\nservers, it is necessary to use the option with an empty list:\n\nCHANGE MASTER TO IGNORE_SERVER_IDS = ();\n\nRESET SLAVE ALL clears IGNORE_SERVER_IDS.\n\n*Note*:\n\nA deprecation warning is issued if SET GTID_MODE=ON is issued when any\nchannel has existing server IDs set with IGNORE_SERVER_IDS. Before\nstarting GTID-based replication, check for and clear all ignored server\nID lists on the servers involved. The SHOW_SLAVE_STATUS statement\ndisplays the list of ignored IDs, if there is one. If you do receive\nthe deprecation warning, you can still clear a list after gtid_mode=ON\nis set by issuing a CHANGE MASTER TO statement containing the\nIGNORE_SERVER_IDS option with an empty list.\n\nInvoking CHANGE MASTER TO causes the previous values for MASTER_HOST,\nMASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS to be written to the\nerror log, along with other information about the slave\'s state prior\nto execution.\n\nCHANGE MASTER TO causes an implicit commit of an ongoing transaction.\nSee https://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\nFrom MySQL 5.7, the strict requirement to execute STOP SLAVE prior to\nissuing any CHANGE MASTER TO statement (and START SLAVE afterward) is\nremoved. Instead of depending on whether the slave is stopped, the\nbehavior of CHANGE MASTER TO depends on the states of the slave SQL\nthread and slave I/O threads; which of these threads is stopped or\nrunning now determines the options that can or cannot be used with a\nCHANGE MASTER TO statement at a given point in time. The rules for\nmaking this determination are listed here:\n\no If the SQL thread is stopped, you can execute CHANGE MASTER TO using\n  any combination that is otherwise allowed of RELAY_LOG_FILE,\n  RELAY_LOG_POS, and MASTER_DELAY options, even if the slave I/O thread\n  is running. No other options may be used with this statement when the\n  I/O thread is running.\n\no If the I/O thread is stopped, you can execute CHANGE MASTER TO using\n  any of the options for this statement (in any allowed combination)\n  except RELAY_LOG_FILE, RELAY_LOG_POS, MASTER_DELAY, or\n  MASTER_AUTO_POSITION = 1 even when the SQL thread is running.\n\no Both the SQL thread and the I/O thread must be stopped before issuing\n  a CHANGE MASTER TO statement that employs MASTER_AUTO_POSITION = 1.\n\nYou can check the current state of the slave SQL and I/O threads using\nSHOW SLAVE STATUS. Note that the Group Replication applier channel\n(group_replication_applier) has no I/O thread, only a SQL thread.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-solutions-switch.ht\nml.\n\nIf you are using statement-based replication and temporary tables, it\nis possible for a CHANGE MASTER TO statement following a STOP SLAVE\nstatement to leave behind temporary tables on the slave. A warning\n(ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO) is now issued whenever this\noccurs. You can avoid this in such cases by making sure that the value\nof the Slave_open_temp_tables system status variable is equal to 0\nprior to executing such a CHANGE MASTER TO statement.\n\nCHANGE MASTER TO is useful for setting up a slave when you have the\nsnapshot of the master and have recorded the master binary log\ncoordinates corresponding to the time of the snapshot. After loading\nthe snapshot into the slave to synchronize it with the master, you can\nrun CHANGE MASTER TO MASTER_LOG_FILE=\'log_name\', MASTER_LOG_POS=log_pos\non the slave to specify the coordinates at which the slave should begin\nreading the master binary log.\n\nThe following example changes the master server the slave uses and\nestablishes the master binary log coordinates from which the slave\nbegins reading. This is used when you want to set up the slave to\nreplicate the master:\n\nCHANGE MASTER TO\n  MASTER_HOST=\'master2.example.com\',\n  MASTER_USER=\'replication\',\n  MASTER_PASSWORD=\'password\',\n  MASTER_PORT=3306,\n  MASTER_LOG_FILE=\'master2-bin.001\',\n  MASTER_LOG_POS=4,\n  MASTER_CONNECT_RETRY=10;\n\nThe next example shows an operation that is less frequently employed.\nIt is used when the slave has relay log files that you want it to\nexecute again for some reason. To do this, the master need not be\nreachable. You need only use CHANGE MASTER TO and start the SQL thread\n(START SLAVE SQL_THREAD):\n\nCHANGE MASTER TO\n  RELAY_LOG_FILE=\'slave-relay-bin.006\',\n  RELAY_LOG_POS=4025;\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html'),(570,'CHANGE REPLICATION FILTER',35,'Syntax:\nCHANGE REPLICATION FILTER filter[, filter]\n	[, ...] [FOR CHANNEL channel]\n\nfilter:\n    REPLICATE_DO_DB = (db_list)\n  | REPLICATE_IGNORE_DB = (db_list)\n  | REPLICATE_DO_TABLE = (tbl_list)\n  | REPLICATE_IGNORE_TABLE = (tbl_list)\n  | REPLICATE_WILD_DO_TABLE = (wild_tbl_list)\n  | REPLICATE_WILD_IGNORE_TABLE = (wild_tbl_list)\n  | REPLICATE_REWRITE_DB = (db_pair_list)\n\ndb_list:\n    db_name[, db_name][, ...]\n\ntbl_list:\n    db_name.table_name[, db_name.table_name][, ...]\nwild_tbl_list:\n    \'db_pattern.table_pattern\'[, \'db_pattern.table_pattern\'][, ...]\n\ndb_pair_list:\n    (db_pair)[, (db_pair)][, ...]\n\ndb_pair:\n    from_db, to_db\n\nCHANGE REPLICATION FILTER sets one or more replication filtering rules\non the slave in the same way as starting the slave mysqld with\nreplication filtering options such as --replicate-do-db or\n--replicate-wild-ignore-table. Unlike the case with the server options,\nthis statement does not require restarting the server to take effect,\nonly that the slave SQL thread be stopped using STOP SLAVE SQL_THREAD\nfirst (and restarted with START SLAVE SQL_THREAD afterwards). CHANGE\nREPLICATION FILTER requires the REPLICATION_SLAVE_ADMIN or SUPER\nprivilege. Use the FOR CHANNEL channel clause to make a replication\nfilter specific to a replication channel, for example on a multi-source\nreplication slave. Filters applied without a specific FOR CHANNEL\nclause are considered global filters, meaning that they are applied to\nall replication channels.\n\nGlobal replication filters cannot be set on a MySQL server instance\nthat is configured for Group Replication, because filtering\ntransactions on some servers would make the group unable to reach\nagreement on a consistent state. Channel specific replication filters\ncan be set on replication channels that are not directly involved with\nGroup Replication, such as where a group member also acts as a\nreplication slave to a master that is outside the group. They cannot be\nset on the group_replication_applier or group_replication_recovery\nchannels.\n\nThe following list shows the CHANGE REPLICATION FILTER options and how\nthey relate to --replicate-* server options:\n\no REPLICATE_DO_DB: Include updates based on database name. Equivalent\n  to --replicate-do-db.\n\no REPLICATE_IGNORE_DB: Exclude updates based on database name.\n  Equivalent to --replicate-ignore-db.\n\no REPLICATE_DO_TABLE: Include updates based on table name. Equivalent\n  to --replicate-do-table.\n\no REPLICATE_IGNORE_TABLE: Exclude updates based on table name.\n  Equivalent to --replicate-ignore-table.\n\no REPLICATE_WILD_DO_TABLE: Include updates based on wildcard pattern\n  matching table name. Equivalent to --replicate-wild-do-table.\n\no REPLICATE_WILD_IGNORE_TABLE: Exclude updates based on wildcard\n  pattern matching table name. Equivalent to\n  --replicate-wild-ignore-table.\n\no REPLICATE_REWRITE_DB: Perform updates on slave after substituting new\n  name on slave for specified database on master. Equivalent to\n  --replicate-rewrite-db.\n\nThe precise effects of REPLICATE_DO_DB and REPLICATE_IGNORE_DB filters\nare dependent on whether statement-based or row-based replication is in\neffect. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-rules.html, for\nmore information.\n\nMultiple replication filtering rules can be created in a single CHANGE\nREPLICATION FILTER statement by separating the rules with commas, as\nshown here:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (d1), REPLICATE_IGNORE_DB = (d2);\n\nIssuing the statement just shown is equivalent to starting the slave\nmysqld with the options --replicate-do-db=d1 --replicate-ignore-db=d2.\n\nOn a multi-source replication slave, which uses multiple replication\nchannels to process transaction from different sources, use the FOR\nCHANNEL channel clause to set a replication filter on a replication\nchannel:\n\nCHANGE REPLICATION FILTER REPLICATE_DO_DB = (d1) FOR CHANNEL channel_1;\n\nThis enables you to create a channel specific replication filter to\nfilter out selected data from a source. When a FOR CHANNEL clause is\nprovided, the replication filter statement acts on that slave\nreplication channel removing any existing replication filter which has\nthe same filter type as the specified replication filters, and\nreplacing them with the specified filter. Filter types not explicitly\nlisted in the statement are not modified. If issued against a slave\nreplication channel which is not configured, the statement fails with\nan ER_SLAVE_CONFIGURATION error. If issued against Group Replication\nchannels, the statement fails with an\nER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED error.\n\nOn a replication slave with multiple replication channels configured,\nissuing CHANGE REPLICATION FILTER with no FOR CHANNEL clause configures\nthe replication filter for every configured slave replication channel,\nand for the global replication filters. For every filter type, if the\nfilter type is listed in the statement, then any existing filter rules\nof that type are replaced by the filter rules specified in the most\nrecently issued statement, otherwise the old value of the filter type\nis retained. For more information see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-rules-channel-based\n-filters.html.\n\nIf the same filtering rule is specified multiple times, only the last\nsuch rule is actually used. For example, the two statements shown here\nhave exactly the same effect, because the first REPLICATE_DO_DB rule in\nthe first statement is ignored:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (db1, db2), REPLICATE_DO_DB = (db3, db4);\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (db3, db4);\n\n*Caution*:\n\nThis behavior differs from that of the --replicate-* filter options\nwhere specifying the same option multiple times causes the creation of\nmultiple filter rules.\n\nNames of tables and database not containing any special characters need\nnot be quoted. Values used with REPLICATION_WILD_TABLE and\nREPLICATION_WILD_IGNORE_TABLE are string expressions, possibly\ncontaining (special) wildcard characters, and so must be quoted. This\nis shown in the following example statements:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_WILD_DO_TABLE = (\'db1.old%\');\n\nCHANGE REPLICATION FILTER\n    REPLICATE_WILD_IGNORE_TABLE = (\'db1.new%\', \'db2.new%\');\n\nValues used with REPLICATE_REWRITE_DB represent pairs of database\nnames; each such value must be enclosed in parentheses. The following\nstatement rewrites statements occurring on database db1 on the master\nto database db2 on the slave:\n\nCHANGE REPLICATION FILTER REPLICATE_REWRITE_DB = ((db1, db2));\n\nThe statement just shown contains two sets of parentheses, one\nenclosing the pair of database names, and the other enclosing the\nentire list. This is perhaps more easily seen in the following example,\nwhich creates two rewrite-db rules, one rewriting database dbA to dbB,\nand one rewriting database dbC to dbD:\n\nCHANGE REPLICATION FILTER\n  REPLICATE_REWRITE_DB = ((dbA, dbB), (dbC, dbD));\n\nThe CHANGE REPLICATION FILTER statement replaces replication filtering\nrules only for the filter types and replication channels affected by\nthe statement, and leaves other rules and channels unchanged. If you\nwant to unset all filters of a given type, set the filter\'s value to an\nexplicitly empty list, as shown in this example, which removes all\nexisting REPLICATE_DO_DB and REPLICATE_IGNORE_DB rules:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (), REPLICATE_IGNORE_DB = ();\n\nSetting a filter to empty in this way removes all existing rules, does\nnot create any new ones, and does not restore any rules set at mysqld\nstartup using --replicate-* options on the command line or in the\nconfiguration file.\n\nThe RESET SLAVE ALL statement removes channel specific replication\nfilters that were set on channels deleted by the statement. When the\ndeleted channel or channels are recreated, any global replication\nfilters specified for the slave are copied to them, and no channel\nspecific replication filters are applied.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-rules.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/change-replication-filter.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/change-replication-filter.html'),(571,'RESET SLAVE',35,'Syntax:\nRESET SLAVE [ALL] [channel_option]\n\nchannel_option:\n    FOR CHANNEL channel\n\nRESET SLAVE makes the slave forget its replication position in the\nmaster\'s binary log. This statement is meant to be used for a clean\nstart: It clears the master info and relay log info repositories,\ndeletes all the relay log files, and starts a new relay log file. It\nalso resets to 0 the replication delay specified with the MASTER_DELAY\noption to CHANGE MASTER TO.\n\n*Note*:\n\nAll relay log files are deleted, even if they have not been completely\nexecuted by the slave SQL thread. (This is a condition likely to exist\non a replication slave if you have issued a STOP SLAVE statement or if\nthe slave is highly loaded.)\n\nFor a server where GTIDs are in use (gtid_mode is ON), issuing RESET\nSLAVE has no effect on the GTID execution history. The statement does\nnot change the values of gtid_executed or gtid_purged, or the\nmysql.gtid_executed table. If you need to reset the GTID execution\nhistory, use RESET MASTER, even if the GTID-enabled server is a\nreplication slave where binary logging is disabled.\n\nRESET SLAVE requires the RELOAD privilege.\n\nTo use RESET SLAVE, the slave replication threads must be stopped, so\non a running slave use STOP SLAVE before issuing RESET SLAVE. To use\nRESET SLAVE on a Group Replication group member, the member status must\nbe OFFLINE, meaning that the plugin is loaded but the member does not\ncurrently belong to any group. A group member can be taken offline by\nusing a STOP GROUP REPLICATION statement.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the RESET SLAVE statement to a specific\nreplication channel. Combining a FOR CHANNEL channel clause with the\nALL option deletes the specified channel. If no channel is named and no\nextra channels exist, the statement applies to the default channel.\nIssuing a RESET SLAVE ALL statement without a FOR CHANNEL channel\nclause when multiple replication channels exist deletes all replication\nchannels and recreates only the default channel. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-channels.html for\nmore information.\n\nRESET SLAVE does not change any replication connection parameters such\nas the master host, master port, master user, or master password. RESET\nSLAVE also does not affect the PRIVILEGE_CHECKS_USER account. If you\nwant to reset the connection parameters intentionally, you need to use\nRESET SLAVE ALL, which clears the connection parameters, including the\nMASTER_USER and PRIVILEGE_CHECKS_USER accounts. RESET SLAVE ALL also\nclears the IGNORE_SERVER_IDS list set by CHANGE MASTER TO. When you\nhave used RESET SLAVE ALL, you must issue a CHANGE MASTER TO statement\nafter the server start to specify new connection parameters.\n\nIn the event of a server crash or deliberate restart after issuing\nRESET SLAVE but before issuing START SLAVE, retention of the\nreplication connection parameters depends on the repository used for\nthe master info log:\n\no From MySQL 8.0.13, when master_info_repository=TABLE is set on the\n  server (which is the default from MySQL 8.0), replication connection\n  parameters are preserved in the crash-safe InnoDB table\n  mysql.slave_master_info as part of the RESET SLAVE operation. They\n  are also retained in memory. In the event of a server crash or\n  deliberate restart after issuing RESET SLAVE but before issuing START\n  SLAVE, the replication connection parameters are retrieved from the\n  table and reused for the new connection.\n\no When master_info_repository=FILE is set on the server, replication\n  connection parameters are only retained in memory. If the slave\n  mysqld is restarted immediately after issuing RESET SLAVE due to a\n  server crash or deliberate restart, the connection parameters are\n  lost. In that case, you must issue a CHANGE MASTER TO statement after\n  the server start to respecify the connection parameters before\n  issuing START SLAVE.\n\nRESET SLAVE does not change any replication filter settings (such as\n--replicate-ignore-table) for channels affected by the statement.\nHowever, RESET SLAVE ALL removes the replication filters that were set\non the channels deleted by the statement. When the deleted channel or\nchannels are recreated, any global replication filters specified for\nthe slave are copied to them, and no channel specific replication\nfilters are applied. For more information see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-rules-channel-based\n-filters.html.\n\nRESET SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\nIf the slave SQL thread was in the middle of replicating temporary\ntables when it was stopped, and RESET SLAVE is issued, these replicated\ntemporary tables are deleted on the slave.\n\nRESET SLAVE does not reset the heartbeat period\n(Slave_heartbeat_period) or SSL_VERIFY_SERVER_CERT.\n\n*Note*:\n\nWhen used on an NDB Cluster replication slave SQL node, RESET SLAVE\nclears the mysql.ndb_apply_status table. You should keep in mind when\nusing this statement that ndb_apply_status uses the NDB storage engine\nand so is shared by all SQL nodes attached to the slave cluster.\n\nYou can override this behavior by issuing SET GLOBAL\n@@ndb_clear_apply_status=OFF prior to executing RESET SLAVE, which\nkeeps the slave from purging the ndb_apply_status table in such cases.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/reset-slave.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/reset-slave.html'),(572,'SET GLOBAL SQL_SLAVE_SKIP_COUNTER',35,'Syntax:\nSET GLOBAL sql_slave_skip_counter = N\n\nThis statement skips the next N events from the master. This is useful\nfor recovering from replication stops caused by a statement.\n\nThis statement is valid only when the slave threads are not running.\nOtherwise, it produces an error.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-global-sql-slave-skip-counter.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-global-sql-slave-skip-counter.html'),(573,'START SLAVE',35,'Syntax:\nSTART SLAVE [thread_types] [until_option] [connection_options] [channel_option]\n\nthread_types:\n    [thread_type [, thread_type] ... ]\n\nthread_type:\n    IO_THREAD | SQL_THREAD\n\nuntil_option:\n    UNTIL {   {SQL_BEFORE_GTIDS | SQL_AFTER_GTIDS} = gtid_set\n          |   MASTER_LOG_FILE = \'log_name\', MASTER_LOG_POS = log_pos\n          |   RELAY_LOG_FILE = \'log_name\', RELAY_LOG_POS = log_pos\n          |   SQL_AFTER_MTS_GAPS  }\n\nconnection_options:\n    [USER=\'user_name\'] [PASSWORD=\'user_pass\'] [DEFAULT_AUTH=\'plugin_name\'] [PLUGIN_DIR=\'plugin_dir\']\n\n\nchannel_option:\n    FOR CHANNEL channel\n\ngtid_set:\n    uuid_set [, uuid_set] ...\n    | \'\'\n\nuuid_set:\n    uuid:interval[:interval]...\n\nuuid:\n    hhhhhhhh-hhhh-hhhh-hhhh-hhhhhhhhhhhh\n\nh:\n    [0-9,A-F]\n\ninterval:\n    n[-n]\n\n    (n >= 1)\n\nSTART SLAVE with no thread_type options starts both of the slave\nthreads. The I/O thread reads events from the master server and stores\nthem in the relay log. The SQL thread reads events from the relay log\nand executes them. START SLAVE requires the REPLICATION_SLAVE_ADMIN or\nSUPER privilege.\n\nIf START SLAVE succeeds in starting the slave threads, it returns\nwithout any error. However, even in that case, it might be that the\nslave threads start and then later stop (for example, because they do\nnot manage to connect to the master or read its binary log, or some\nother problem). START SLAVE does not warn you about this. You must\ncheck the slave\'s error log for error messages generated by the slave\nthreads, or check that they are running satisfactorily with SHOW SLAVE\nSTATUS.\n\nSTART SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\ngtid_next must be set to AUTOMATIC before issuing this statement.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the START SLAVE statement to a specific\nreplication channel. If no clause is named and no extra channels exist,\nthe statement applies to the default channel. If a START SLAVE\nstatement does not have a channel defined when using multiple channels,\nthis statement starts the specified threads for all channels. This\nstatement is disallowed for the group_replication_recovery channel. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-channels.html for\nmore information.\n\nYou can add IO_THREAD and SQL_THREAD options to the statement to name\nwhich of the threads to start. Note that the Group Replication applier\nchannel (group_replication_applier) has no I/O thread, only a SQL\nthread. Specifying the IO_THREAD or SQL_THREAD options when you start\nthis channel has no benefit.\n\nMySQL supports pluggable user-password authentication with START SLAVE\nwith the USER, PASSWORD, DEFAULT_AUTH and PLUGIN_DIR options, as\ndescribed in the following list:\n\no USER: User name. Cannot be set to an empty or null string, or left\n  unset if PASSWORD is used.\n\no PASSWORD: Password.\n\no DEFAULT_AUTH: Name of plugin; default is MySQL native authentication.\n\no PLUGIN_DIR: Location of plugin.\n\nYou cannot use the SQL_THREAD option when specifying any of USER,\nPASSWORD, DEFAULT_AUTH, or PLUGIN_DIR, unless the IO_THREAD option is\nalso provided.\n\nSee\nhttps://dev.mysql.com/doc/refman/8.0/en/pluggable-authentication.html,\nfor more information.\n\nIf an insecure connection is used with any these options, the server\nissues the warning Sending passwords in plain text without SSL/TLS is\nextremely insecure.\n\nSTART SLAVE ... UNTIL supports two additional options for use with\nglobal transaction identifiers (GTIDs) (see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids.html). Each\nof these takes a set of one or more global transaction identifiers\ngtid_set as an argument (see\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-gtids-concepts.html\n#replication-gtids-concepts-gtid-sets, for more information).\n\nWhen no thread_type is specified, START SLAVE UNTIL SQL_BEFORE_GTIDS\ncauses the slave SQL thread to process transactions until it has\nreached the first transaction whose GTID is listed in the gtid_set.\nSTART SLAVE UNTIL SQL_AFTER_GTIDS causes the slave threads to process\nall transactions until the last transaction in the gtid_set has been\nprocessed by both threads. In other words, START SLAVE UNTIL\nSQL_BEFORE_GTIDS causes the slave SQL thread to process all\ntransactions occurring before the first GTID in the gtid_set is\nreached, and START SLAVE UNTIL SQL_AFTER_GTIDS causes the slave threads\nto handle all transactions, including those whose GTIDs are found in\ngtid_set, until each has encountered a transaction whose GTID is not\npart of the set. SQL_BEFORE_GTIDS and SQL_AFTER_GTIDS each support the\nSQL_THREAD and IO_THREAD options, although using IO_THREAD with them\ncurrently has no effect.\n\nFor example, START SLAVE SQL_THREAD UNTIL SQL_BEFORE_GTIDS =\n3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56 causes the slave SQL thread\nto process all transactions originating from the master whose\nserver_uuid is 3E11FA47-71CA-11E1-9E33-C80AA9429562 until it encounters\nthe transaction having sequence number 11; it then stops without\nprocessing this transaction. In other words, all transactions up to and\nincluding the transaction with sequence number 10 are processed.\nExecuting START SLAVE SQL_THREAD UNTIL SQL_AFTER_GTIDS =\n3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56, on the other hand, would\ncause the slave SQL thread to obtain all transactions just mentioned\nfrom the master, including all of the transactions having the sequence\nnumbers 11 through 56, and then to stop without processing any\nadditional transactions; that is, the transaction having sequence\nnumber 56 would be the last transaction fetched by the slave SQL\nthread.\n\nWhen using a multithreaded slave with slave_preserve_commit_order=0\nset, there is a chance of gaps in the sequence of transactions that\nhave been executed from the relay log in the following cases:\n\no killing the coordinator thread\n\no after an error occurs in the applier threads\n\no mysqld shuts down unexpectedly\n\nUse the START SLAVE UNTIL SQL_AFTER_MTS_GAPS statement to cause a\nmultithreaded slave\'s worker threads to only run until no more gaps are\nfound in the relay log, and then to stop. This statement can take an\nSQL_THREAD option, but the effects of the statement remain unchanged.\nIt has no effect on the slave I/O thread (and cannot be used with the\nIO_THREAD option).\n\nIssuing START SLAVE on a multithreaded slave with gaps in the sequence\nof transactions executed from the relay log generates a warning. In\nsuch a situation, the solution is to use START SLAVE UNTIL\nSQL_AFTER_MTS_GAPS, then issue RESET SLAVE to remove any remaining\nrelay logs. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-features-transactio\nn-inconsistencies.html for more information.\n\nTo change a failed multithreaded slave to single-threaded mode, you can\nissue the following series of statements, in the order shown:\n\nSTART SLAVE UNTIL SQL_AFTER_MTS_GAPS;\n\nSET @@GLOBAL.slave_parallel_workers = 0;\n\nSTART SLAVE SQL_THREAD;\n\n*Note*:\n\nIt is possible to view the entire text of a running START SLAVE ...\nstatement, including any USER or PASSWORD values used, in the output of\nSHOW PROCESSLIST. This is also true for the text of a running CHANGE\nMASTER TO statement, including any values it employs for MASTER_USER or\nMASTER_PASSWORD.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/start-slave.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/start-slave.html'),(574,'STOP SLAVE',35,'Syntax:\nSTOP SLAVE [thread_types] [channel_option]\n\nthread_types:\n    [thread_type [, thread_type] ... ]\n\nthread_type: IO_THREAD | SQL_THREAD\n\nchannel_option:\n    FOR CHANNEL channel\n\nStops the slave threads. STOP SLAVE requires the\nREPLICATION_SLAVE_ADMIN or SUPER privilege. Recommended best practice\nis to execute STOP SLAVE on the slave before stopping the slave server\n(see https://dev.mysql.com/doc/refman/8.0/en/server-shutdown.html, for\nmore information).\n\nWhen using the row-based logging format: You should execute STOP SLAVE\nor STOP SLAVE SQL_THREAD on the slave prior to shutting down the slave\nserver if you are replicating any tables that use a nontransactional\nstorage engine (see the Note later in this section).\n\nLike START SLAVE, this statement may be used with the IO_THREAD and\nSQL_THREAD options to name the thread or threads to be stopped. Note\nthat the Group Replication applier channel (group_replication_applier)\nhas no I/O thread, only a SQL thread. Using the SQL_THREAD option\ntherefore stops this channel completely.\n\nSTOP SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\ngtid_next must be set to AUTOMATIC before issuing this statement.\n\nYou can control how long STOP SLAVE waits before timing out by setting\nthe rpl_stop_slave_timeout system variable. This can be used to avoid\ndeadlocks between STOP SLAVE and other slave SQL statements using\ndifferent client connections to the slave. When the timeout value is\nreached, the issuing client returns an error message and stops waiting,\nbut the STOP SLAVE instruction remains in effect. Once the slave\nthreads are no longer busy, the STOP SLAVE statement is executed and\nthe slave stops.\n\nSome CHANGE MASTER TO statements are allowed while the slave is\nrunning, depending on the states of the slave SQL and I/O threads.\nHowever, using STOP SLAVE prior to executing CHANGE MASTER TO in such\ncases is still supported. See [HELP CHANGE MASTER TO], and\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-solutions-switch.ht\nml, for more information.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the STOP SLAVE statement to a specific\nreplication channel. If no channel is named and no extra channels\nexist, the statement applies to the default channel. If a STOP SLAVE\nstatement does not name a channel when using multiple channels, this\nstatement stops the specified threads for all channels. This statement\ncannot be used with the group_replication_recovery channel. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-channels.html for\nmore information.\n\nWhen using statement-based replication: changing the master while it\nhas open temporary tables is potentially unsafe. This is one of the\nreasons why statement-based replication of temporary tables is not\nrecommended. You can find out whether there are any temporary tables on\nthe slave by checking the value of Slave_open_temp_tables; when using\nstatement-based replication, this value should be 0 before executing\nCHANGE MASTER TO. If there are any temporary tables open on the slave,\nissuing a CHANGE MASTER TO statement after issuing a STOP SLAVE causes\nan ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO warning.\n\nWhen using a multithreaded slave (slave_parallel_workers is a nonzero\nvalue), any gaps in the sequence of transactions executed from the\nrelay log are closed as part of stopping the worker threads. If the\nslave is stopped unexpectedly (for example due to an error in a worker\nthread, or another thread issuing KILL) while a STOP SLAVE statement is\nexecuting, the sequence of executed transactions from the relay log may\nbecome inconsistent. See\nhttps://dev.mysql.com/doc/refman/8.0/en/replication-features-transactio\nn-inconsistencies.html for more information.\n\nIf the current replication event group has modified one or more\nnontransactional tables, STOP SLAVE waits for up to 60 seconds for the\nevent group to complete, unless you issue a KILL QUERY or KILL\nCONNECTION statement for the slave SQL thread. If the event group\nremains incomplete after the timeout, an error message is logged.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/stop-slave.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/stop-slave.html'),(575,'PREPARE',35,'Syntax:\nPREPARE stmt_name FROM preparable_stmt\n\nThe PREPARE statement prepares a SQL statement and assigns it a name,\nstmt_name, by which to refer to the statement later. The prepared\nstatement is executed with EXECUTE and released with DEALLOCATE\nPREPARE. For examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html.\n\nStatement names are not case-sensitive. preparable_stmt is either a\nstring literal or a user variable that contains the text of the SQL\nstatement. The text must represent a single statement, not multiple\nstatements. Within the statement, ? characters can be used as parameter\nmarkers to indicate where data values are to be bound to the query\nlater when you execute it. The ? characters should not be enclosed\nwithin quotation marks, even if you intend to bind them to string\nvalues. Parameter markers can be used only where data values should\nappear, not for SQL keywords, identifiers, and so forth.\n\nIf a prepared statement with the given name already exists, it is\ndeallocated implicitly before the new statement is prepared. This means\nthat if the new statement contains an error and cannot be prepared, an\nerror is returned and no statement with the given name exists.\n\nThe scope of a prepared statement is the session within which it is\ncreated, which as several implications:\n\no A prepared statement created in one session is not available to other\n  sessions.\n\no When a session ends, whether normally or abnormally, its prepared\n  statements no longer exist. If auto-reconnect is enabled, the client\n  is not notified that the connection was lost. For this reason,\n  clients may wish to disable auto-reconnect. See\n  https://dev.mysql.com/doc/refman/8.0/en/c-api-auto-reconnect.html.\n\no A prepared statement created within a stored program continues to\n  exist after the program finishes executing and can be executed\n  outside the program later.\n\no A statement prepared in stored program context cannot refer to stored\n  procedure or function parameters or local variables because they go\n  out of scope when the program ends and would be unavailable were the\n  statement to be executed later outside the program. As a workaround,\n  refer instead to user-defined variables, which also have session\n  scope; see\n  https://dev.mysql.com/doc/refman/8.0/en/user-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/prepare.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/prepare.html'),(576,'EXECUTE STATEMENT',35,'Syntax:\nEXECUTE stmt_name\n    [USING @var_name [, @var_name] ...]\n\nAfter preparing a statement with PREPARE, you execute it with an\nEXECUTE statement that refers to the prepared statement name. If the\nprepared statement contains any parameter markers, you must supply a\nUSING clause that lists user variables containing the values to be\nbound to the parameters. Parameter values can be supplied only by user\nvariables, and the USING clause must name exactly as many variables as\nthe number of parameter markers in the statement.\n\nYou can execute a given prepared statement multiple times, passing\ndifferent variables to it or setting the variables to different values\nbefore each execution.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/execute.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/execute.html'),(577,'DEALLOCATE PREPARE',35,'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error. If too many prepared statements are created and\nnot deallocated by either the DEALLOCATE PREPARE statement or the end\nof the session, you might encounter the upper limit enforced by the\nmax_prepared_stmt_count system variable.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/deallocate-prepare.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/deallocate-prepare.html'),(578,'DROP PREPARE',35,'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error. If too many prepared statements are created and\nnot deallocated by either the DEALLOCATE PREPARE statement or the end\nof the session, you might encounter the upper limit enforced by the\nmax_prepared_stmt_count system variable.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/deallocate-prepare.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/deallocate-prepare.html'),(579,'BEGIN END',36,'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\nBEGIN ... END syntax is used for writing compound statements, which can\nappear within stored programs (stored procedures and functions,\ntriggers, and events). A compound statement can contain multiple\nstatements, enclosed by the BEGIN and END keywords. statement_list\nrepresents a list of one or more statements, each terminated by a\nsemicolon (;) statement delimiter. The statement_list itself is\noptional, so the empty compound statement (BEGIN END) is legal.\n\nBEGIN ... END blocks can be nested.\n\nUse of multiple statements requires that a client is able to send\nstatement strings containing the ; statement delimiter. In the mysql\ncommand-line client, this is handled with the delimiter command.\nChanging the ; end-of-statement delimiter (for example, to //) permit ;\nto be used in a program body. For an example, see\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-programs-defining.html.\n\nA BEGIN ... END block can be labeled. See [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/begin-end.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/begin-end.html'),(580,'LABELS',36,'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nLabels are permitted for BEGIN ... END blocks and for the LOOP, REPEAT,\nand WHILE statements. Label use for those statements follows these\nrules:\n\no begin_label must be followed by a colon.\n\no begin_label can be given without end_label. If end_label is present,\n  it must be the same as begin_label.\n\no end_label cannot be given without begin_label.\n\no Labels at the same nesting level must be distinct.\n\no Labels can be up to 16 characters long.\n\nTo refer to a label within the labeled construct, use an ITERATE or\nLEAVE statement. The following example uses those statements to\ncontinue iterating or terminate the loop:\n\nCREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN ITERATE label1; END IF;\n    LEAVE label1;\n  END LOOP label1;\nEND;\n\nThe scope of a block label does not include the code for handlers\ndeclared within the block. For details, see [HELP DECLARE HANDLER].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/statement-labels.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/statement-labels.html'),(581,'DECLARE VARIABLE',36,'Syntax:\nDECLARE var_name [, var_name] ... type [DEFAULT value]\n\nThis statement declares local variables within stored programs. To\nprovide a default value for a variable, include a DEFAULT clause. The\nvalue can be specified as an expression; it need not be a constant. If\nthe DEFAULT clause is missing, the initial value is NULL.\n\nLocal variables are treated like stored routine parameters with respect\nto data type and overflow checking. See [HELP CREATE PROCEDURE].\n\nVariable declarations must appear before cursor or handler\ndeclarations.\n\nLocal variable names are not case-sensitive. Permissible characters and\nquoting rules are the same as for other identifiers, as described in\nhttps://dev.mysql.com/doc/refman/8.0/en/identifiers.html.\n\nThe scope of a local variable is the BEGIN ... END block within which\nit is declared. The variable can be referred to in blocks nested within\nthe declaring block, except those blocks that declare a variable with\nthe same name.\n\nFor examples of variable declarations, see\nhttps://dev.mysql.com/doc/refman/8.0/en/local-variable-scope.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/declare-local-variable.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/declare-local-variable.html'),(582,'CASE STATEMENT',36,'Syntax:\nCASE case_value\n    WHEN when_value THEN statement_list\n    [WHEN when_value THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nOr:\n\nCASE\n    WHEN search_condition THEN statement_list\n    [WHEN search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nThe CASE statement for stored programs implements a complex conditional\nconstruct.\n\n*Note*:\n\nThere is also a CASE expr, which differs from the CASE statement\ndescribed here. See\nhttps://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html.\nThe CASE statement cannot have an ELSE NULL clause, and it is\nterminated with END CASE instead of END.\n\nFor the first syntax, case_value is an expression. This value is\ncompared to the when_value expression in each WHEN clause until one of\nthem is equal. When an equal when_value is found, the corresponding\nTHEN clause statement_list executes. If no when_value is equal, the\nELSE clause statement_list executes, if there is one.\n\nThis syntax cannot be used to test for equality with NULL because NULL\n= NULL is false. See\nhttps://dev.mysql.com/doc/refman/8.0/en/working-with-null.html.\n\nFor the second syntax, each WHEN clause search_condition expression is\nevaluated until one is true, at which point its corresponding THEN\nclause statement_list executes. If no search_condition is equal, the\nELSE clause statement_list executes, if there is one.\n\nIf no when_value or search_condition matches the value tested and the\nCASE statement contains no ELSE clause, a Case not found for CASE\nstatement error results.\n\nEach statement_list consists of one or more SQL statements; an empty\nstatement_list is not permitted.\n\nTo handle situations where no value is matched by any WHEN clause, use\nan ELSE containing an empty BEGIN ... END block, as shown in this\nexample. (The indentation used here in the ELSE clause is for purposes\nof clarity only, and is not otherwise significant.)\n\nDELIMITER |\n\nCREATE PROCEDURE p()\n  BEGIN\n    DECLARE v INT DEFAULT 1;\n\n    CASE v\n      WHEN 2 THEN SELECT v;\n      WHEN 3 THEN SELECT 0;\n      ELSE\n        BEGIN\n        END;\n    END CASE;\n  END;\n  |\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/case.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/case.html'),(583,'IF STATEMENT',36,'Syntax:\nIF search_condition THEN statement_list\n    [ELSEIF search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND IF\n\nThe IF statement for stored programs implements a basic conditional\nconstruct.\n\n*Note*:\n\nThere is also an IF() function, which differs from the IF statement\ndescribed here. See\nhttps://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html.\nThe IF statement can have THEN, ELSE, and ELSEIF clauses, and it is\nterminated with END IF.\n\nIf a given search_condition evaluates to true, the corresponding THEN\nor ELSEIF clause statement_list executes. If no search_condition\nmatches, the ELSE clause statement_list executes.\n\nEach statement_list consists of one or more SQL statements; an empty\nstatement_list is not permitted.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/if.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/if.html'),(584,'ITERATE',36,'Syntax:\nITERATE label\n\nITERATE can appear only within LOOP, REPEAT, and WHILE statements.\nITERATE means \"start the loop again.\"\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/iterate.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/iterate.html'),(585,'LEAVE',36,'Syntax:\nLEAVE label\n\nThis statement is used to exit the flow control construct that has the\ngiven label. If the label is for the outermost stored program block,\nLEAVE exits the program.\n\nLEAVE can be used within BEGIN ... END or loop constructs (LOOP,\nREPEAT, WHILE).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/leave.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/leave.html'),(586,'LOOP',36,'Syntax:\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\nLOOP implements a simple loop construct, enabling repeated execution of\nthe statement list, which consists of one or more statements, each\nterminated by a semicolon (;) statement delimiter. The statements\nwithin the loop are repeated until the loop is terminated. Usually,\nthis is accomplished with a LEAVE statement. Within a stored function,\nRETURN can also be used, which exits the function entirely.\n\nNeglecting to include a loop-termination statement results in an\ninfinite loop.\n\nA LOOP statement can be labeled. For the rules regarding label use, see\n[HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/loop.html\n\n','CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN\n      ITERATE label1;\n    END IF;\n    LEAVE label1;\n  END LOOP label1;\n  SET @x = p1;\nEND;\n','https://dev.mysql.com/doc/refman/8.0/en/loop.html'),(587,'REPEAT LOOP',36,'Syntax:\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\nThe statement list within a REPEAT statement is repeated until the\nsearch_condition expression is true. Thus, a REPEAT always enters the\nloop at least once. statement_list consists of one or more statements,\neach terminated by a semicolon (;) statement delimiter.\n\nA REPEAT statement can be labeled. For the rules regarding label use,\nsee [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/repeat.html\n\n','mysql> delimiter //\n\nmysql> CREATE PROCEDURE dorepeat(p1 INT)\n       BEGIN\n         SET @x = 0;\n         REPEAT\n           SET @x = @x + 1;\n         UNTIL @x > p1 END REPEAT;\n       END\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL dorepeat(1000)//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n+------+\n| @x   |\n+------+\n| 1001 |\n+------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/repeat.html'),(588,'RETURN',36,'Syntax:\nRETURN expr\n\nThe RETURN statement terminates execution of a stored function and\nreturns the value expr to the function caller. There must be at least\none RETURN statement in a stored function. There may be more than one\nif the function has multiple exit points.\n\nThis statement is not used in stored procedures, triggers, or events.\nThe LEAVE statement can be used to exit a stored program of those\ntypes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/return.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/return.html'),(589,'WHILE',36,'Syntax:\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nThe statement list within a WHILE statement is repeated as long as the\nsearch_condition expression is true. statement_list consists of one or\nmore SQL statements, each terminated by a semicolon (;) statement\ndelimiter.\n\nA WHILE statement can be labeled. For the rules regarding label use,\nsee [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/while.html\n\n','CREATE PROCEDURE dowhile()\nBEGIN\n  DECLARE v1 INT DEFAULT 5;\n\n  WHILE v1 > 0 DO\n    ...\n    SET v1 = v1 - 1;\n  END WHILE;\nEND;\n','https://dev.mysql.com/doc/refman/8.0/en/while.html'),(590,'CLOSE',36,'Syntax:\nCLOSE cursor_name\n\nThis statement closes a previously opened cursor. For an example, see\nhttps://dev.mysql.com/doc/refman/8.0/en/cursors.html.\n\nAn error occurs if the cursor is not open.\n\nIf not closed explicitly, a cursor is closed at the end of the BEGIN\n... END block in which it was declared.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/close.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/close.html'),(591,'DECLARE CURSOR',36,'Syntax:\nDECLARE cursor_name CURSOR FOR select_statement\n\nThis statement declares a cursor and associates it with a SELECT\nstatement that retrieves the rows to be traversed by the cursor. To\nfetch the rows later, use a FETCH statement. The number of columns\nretrieved by the SELECT statement must match the number of output\nvariables specified in the FETCH statement.\n\nThe SELECT statement cannot have an INTO clause.\n\nCursor declarations must appear before handler declarations and after\nvariable and condition declarations.\n\nA stored program may contain multiple cursor declarations, but each\ncursor declared in a given block must have a unique name. For an\nexample, see https://dev.mysql.com/doc/refman/8.0/en/cursors.html.\n\nFor information available through SHOW statements, it is possible in\nmany cases to obtain equivalent information by using a cursor with an\nINFORMATION_SCHEMA table.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/declare-cursor.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/declare-cursor.html'),(592,'FETCH',36,'Syntax:\nFETCH [[NEXT] FROM] cursor_name INTO var_name [, var_name] ...\n\nThis statement fetches the next row for the SELECT statement associated\nwith the specified cursor (which must be open), and advances the cursor\npointer. If a row exists, the fetched columns are stored in the named\nvariables. The number of columns retrieved by the SELECT statement must\nmatch the number of output variables specified in the FETCH statement.\n\nIf no more rows are available, a No Data condition occurs with SQLSTATE\nvalue \'02000\'. To detect this condition, you can set up a handler for\nit (or for a NOT FOUND condition). For an example, see\nhttps://dev.mysql.com/doc/refman/8.0/en/cursors.html.\n\nBe aware that another operation, such as a SELECT or another FETCH, may\nalso cause the handler to execute by raising the same condition. If it\nis necessary to distinguish which operation raised the condition, place\nthe operation within its own BEGIN ... END block so that it can be\nassociated with its own handler.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/fetch.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/fetch.html'),(593,'OPEN',36,'Syntax:\nOPEN cursor_name\n\nThis statement opens a previously declared cursor. For an example, see\nhttps://dev.mysql.com/doc/refman/8.0/en/cursors.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/open.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/open.html'),(594,'DECLARE CONDITION',36,'Syntax:\nDECLARE condition_name CONDITION FOR condition_value\n\ncondition_value: {\n    mysql_error_code\n  | SQLSTATE [VALUE] sqlstate_value\n}\n\nThe DECLARE ... CONDITION statement declares a named error condition,\nassociating a name with a condition that needs specific handling. The\nname can be referred to in a subsequent DECLARE ... HANDLER statement\n(see [HELP DECLARE HANDLER]).\n\nCondition declarations must appear before cursor or handler\ndeclarations.\n\nThe condition_value for DECLARE ... CONDITION indicates the specific\ncondition or class of conditions to associate with the condition name.\nIt can take the following forms:\n\no mysql_error_code: An integer literal indicating a MySQL error code.\n\n  Do not use MySQL error code 0 because that indicates success rather\n  than an error condition. For a list of MySQL error codes, see\n  https://dev.mysql.com/doc/refman/8.0/en/server-error-reference.html.\n\no SQLSTATE [VALUE] sqlstate_value: A 5-character string literal\n  indicating an SQLSTATE value.\n\n  Do not use SQLSTATE values that begin with \'00\' because those\n  indicate success rather than an error condition. For a list of\n  SQLSTATE values, see\n  https://dev.mysql.com/doc/refman/8.0/en/server-error-reference.html.\n\nCondition names referred to in SIGNAL or use RESIGNAL statements must\nbe associated with SQLSTATE values, not MySQL error codes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/declare-condition.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/declare-condition.html'),(595,'DECLARE HANDLER',36,'Syntax:\nDECLARE handler_action HANDLER\n    FOR condition_value [, condition_value] ...\n    statement\n\nhandler_action: {\n    CONTINUE\n  | EXIT\n  | UNDO\n}\n\ncondition_value: {\n    mysql_error_code\n  | SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n  | SQLWARNING\n  | NOT FOUND\n  | SQLEXCEPTION\n}\n\nThe DECLARE ... HANDLER statement specifies a handler that deals with\none or more conditions. If one of these conditions occurs, the\nspecified statement executes. statement can be a simple statement such\nas SET var_name = value, or a compound statement written using BEGIN\nand END (see [HELP BEGIN END]).\n\nHandler declarations must appear after variable or condition\ndeclarations.\n\nThe handler_action value indicates what action the handler takes after\nexecution of the handler statement:\n\no CONTINUE: Execution of the current program continues.\n\no EXIT: Execution terminates for the BEGIN ... END compound statement\n  in which the handler is declared. This is true even if the condition\n  occurs in an inner block.\n\no UNDO: Not supported.\n\nThe condition_value for DECLARE ... HANDLER indicates the specific\ncondition or class of conditions that activates the handler. It can\ntake the following forms:\n\no mysql_error_code: An integer literal indicating a MySQL error code,\n  such as 1051 to specify \"unknown table\":\n\nDECLARE CONTINUE HANDLER FOR 1051\n  BEGIN\n    -- body of handler\n  END;\n\n  Do not use MySQL error code 0 because that indicates success rather\n  than an error condition. For a list of MySQL error codes, see\n  https://dev.mysql.com/doc/refman/8.0/en/server-error-reference.html.\n\no SQLSTATE [VALUE] sqlstate_value: A 5-character string literal\n  indicating an SQLSTATE value, such as \'42S01\' to specify \"unknown\n  table\":\n\nDECLARE CONTINUE HANDLER FOR SQLSTATE \'42S02\'\n  BEGIN\n    -- body of handler\n  END;\n\n  Do not use SQLSTATE values that begin with \'00\' because those\n  indicate success rather than an error condition. For a list of\n  SQLSTATE values, see\n  https://dev.mysql.com/doc/refman/8.0/en/server-error-reference.html.\n\no condition_name: A condition name previously specified with DECLARE\n  ... CONDITION. A condition name can be associated with a MySQL error\n  code or SQLSTATE value. See [HELP DECLARE CONDITION].\n\no SQLWARNING: Shorthand for the class of SQLSTATE values that begin\n  with \'01\'.\n\nDECLARE CONTINUE HANDLER FOR SQLWARNING\n  BEGIN\n    -- body of handler\n  END;\n\no NOT FOUND: Shorthand for the class of SQLSTATE values that begin with\n  \'02\'. This is relevant within the context of cursors and is used to\n  control what happens when a cursor reaches the end of a data set. If\n  no more rows are available, a No Data condition occurs with SQLSTATE\n  value \'02000\'. To detect this condition, you can set up a handler for\n  it or for a NOT FOUND condition.\n\nDECLARE CONTINUE HANDLER FOR NOT FOUND\n  BEGIN\n    -- body of handler\n  END;\n\n  For another example, see\n  https://dev.mysql.com/doc/refman/8.0/en/cursors.html. The NOT FOUND\n  condition also occurs for SELECT ... INTO var_list statements that\n  retrieve no rows.\n\no SQLEXCEPTION: Shorthand for the class of SQLSTATE values that do not\n  begin with \'00\', \'01\', or \'02\'.\n\nDECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n  BEGIN\n    -- body of handler\n  END;\n\nFor information about how the server chooses handlers when a condition\noccurs, see https://dev.mysql.com/doc/refman/8.0/en/handler-scope.html.\n\nIf a condition occurs for which no handler has been declared, the\naction taken depends on the condition class:\n\no For SQLEXCEPTION conditions, the stored program terminates at the\n  statement that raised the condition, as if there were an EXIT\n  handler. If the program was called by another stored program, the\n  calling program handles the condition using the handler selection\n  rules applied to its own handlers.\n\no For SQLWARNING conditions, the program continues executing, as if\n  there were a CONTINUE handler.\n\no For NOT FOUND conditions, if the condition was raised normally, the\n  action is CONTINUE. If it was raised by SIGNAL or RESIGNAL, the\n  action is EXIT.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/declare-handler.html\n\n','mysql> CREATE TABLE test.t (s1 INT, PRIMARY KEY (s1));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE handlerdemo ()\n       BEGIN\n         DECLARE CONTINUE HANDLER FOR SQLSTATE \'23000\' SET @x2 = 1;\n         SET @x = 1;\n         INSERT INTO test.t VALUES (1);\n         SET @x = 2;\n         INSERT INTO test.t VALUES (1);\n         SET @x = 3;\n       END;\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL handlerdemo()//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n    +------+\n    | @x   |\n    +------+\n    | 3    |\n    +------+\n    1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/declare-handler.html'),(596,'GET DIAGNOSTICS',36,'Syntax:\nGET [CURRENT | STACKED] DIAGNOSTICS\n{\n    statement_information_item\n    [, statement_information_item] ...\n  | CONDITION condition_number\n    condition_information_item\n    [, condition_information_item] ...\n}\n\nstatement_information_item:\n    target = statement_information_item_name\n\ncondition_information_item:\n    target = condition_information_item_name\n\nstatement_information_item_name:\n    NUMBER\n  | ROW_COUNT\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | RETURNED_SQLSTATE\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_number, target:\n    (see following discussion)\n\nSQL statements produce diagnostic information that populates the\ndiagnostics area. The GET DIAGNOSTICS statement enables applications to\ninspect this information. (You can also use SHOW WARNINGS or SHOW\nERRORS to see conditions or errors.)\n\nNo special privileges are required to execute GET DIAGNOSTICS.\n\nThe keyword CURRENT means to retrieve information from the current\ndiagnostics area. The keyword STACKED means to retrieve information\nfrom the second diagnostics area, which is available only if the\ncurrent context is a condition handler. If neither keyword is given,\nthe default is to use the current diagnostics area.\n\nThe GET DIAGNOSTICS statement is typically used in a handler within a\nstored program. It is a MySQL extension that GET [CURRENT] DIAGNOSTICS\nis permitted outside handler context to check the execution of any SQL\nstatement. For example, if you invoke the mysql client program, you can\nenter these statements at the prompt:\n\nmysql> DROP TABLE test.no_such_table;\nERROR 1051 (42S02): Unknown table \'test.no_such_table\'\nmysql> GET DIAGNOSTICS CONDITION 1\n         @p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;\nmysql> SELECT @p1, @p2;\n+-------+------------------------------------+\n| @p1   | @p2                                |\n+-------+------------------------------------+\n| 42S02 | Unknown table \'test.no_such_table\' |\n+-------+------------------------------------+\n\nThis extension applies only to the current diagnostics area. It does\nnot apply to the second diagnostics area because GET STACKED\nDIAGNOSTICS is permitted only if the current context is a condition\nhandler. If that is not the case, a GET STACKED DIAGNOSTICS when\nhandler not active error occurs.\n\nFor a description of the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/8.0/en/diagnostics-area.html. Briefly,\nit contains two kinds of information:\n\no Statement information, such as the number of conditions that occurred\n  or the affected-rows count.\n\no Condition information, such as the error code and message. If a\n  statement raises multiple conditions, this part of the diagnostics\n  area has a condition area for each one. If a statement raises no\n  conditions, this part of the diagnostics area is empty.\n\nFor a statement that produces three conditions, the diagnostics area\ncontains statement and condition information like this:\n\nStatement information:\n  row count\n  ... other statement information items ...\nCondition area list:\n  Condition area 1:\n    error code for condition 1\n    error message for condition 1\n    ... other condition information items ...\n  Condition area 2:\n    error code for condition 2:\n    error message for condition 2\n    ... other condition information items ...\n  Condition area 3:\n    error code for condition 3\n    error message for condition 3\n    ... other condition information items ...\n\nGET DIAGNOSTICS can obtain either statement or condition information,\nbut not both in the same statement:\n\no To obtain statement information, retrieve the desired statement items\n  into target variables. This instance of GET DIAGNOSTICS assigns the\n  number of available conditions and the rows-affected count to the\n  user variables @p1 and @p2:\n\nGET DIAGNOSTICS @p1 = NUMBER, @p2 = ROW_COUNT;\n\no To obtain condition information, specify the condition number and\n  retrieve the desired condition items into target variables. This\n  instance of GET DIAGNOSTICS assigns the SQLSTATE value and error\n  message to the user variables @p3 and @p4:\n\nGET DIAGNOSTICS CONDITION 1\n  @p3 = RETURNED_SQLSTATE, @p4 = MESSAGE_TEXT;\n\nThe retrieval list specifies one or more target = item_name\nassignments, separated by commas. Each assignment names a target\nvariable and either a statement_information_item_name or\ncondition_information_item_name designator, depending on whether the\nstatement retrieves statement or condition information.\n\nValid target designators for storing item information can be stored\nprocedure or function parameters, stored program local variables\ndeclared with DECLARE, or user-defined variables.\n\nValid condition_number designators can be stored procedure or function\nparameters, stored program local variables declared with DECLARE,\nuser-defined variables, system variables, or literals. A character\nliteral may include a _charset introducer. A warning occurs if the\ncondition number is not in the range from 1 to the number of condition\nareas that have information. In this case, the warning is added to the\ndiagnostics area without clearing it.\n\nWhen a condition occurs, MySQL does not populate all condition items\nrecognized by GET DIAGNOSTICS. For example:\n\nmysql> GET DIAGNOSTICS CONDITION 1\n         @p5 = SCHEMA_NAME, @p6 = TABLE_NAME;\nmysql> SELECT @p5, @p6;\n+------+------+\n| @p5  | @p6  |\n+------+------+\n|      |      |\n+------+------+\n\nIn standard SQL, if there are multiple conditions, the first condition\nrelates to the SQLSTATE value returned for the previous SQL statement.\nIn MySQL, this is not guaranteed. To get the main error, you cannot do\nthis:\n\nGET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO;\n\nInstead, retrieve the condition count first, then use it to specify\nwhich condition number to inspect:\n\nGET DIAGNOSTICS @cno = NUMBER;\nGET DIAGNOSTICS CONDITION @cno @errno = MYSQL_ERRNO;\n\nFor information about permissible statement and condition information\nitems, and which ones are populated when a condition occurs, see\nhttps://dev.mysql.com/doc/refman/8.0/en/diagnostics-area.html#diagnosti\ncs-area-information-items.\n\nHere is an example that uses GET DIAGNOSTICS and an exception handler\nin stored procedure context to assess the outcome of an insert\noperation. If the insert was successful, the procedure uses GET\nDIAGNOSTICS to get the rows-affected count. This shows that you can use\nGET DIAGNOSTICS multiple times to retrieve information about a\nstatement as long as the current diagnostics area has not been cleared.\n\nCREATE PROCEDURE do_insert(value INT)\nBEGIN\n  -- Declare variables to hold diagnostics area information\n  DECLARE code CHAR(5) DEFAULT \'00000\';\n  DECLARE msg TEXT;\n  DECLARE rows INT;\n  DECLARE result TEXT;\n  -- Declare exception handler for failed insert\n  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n    BEGIN\n      GET DIAGNOSTICS CONDITION 1\n        code = RETURNED_SQLSTATE, msg = MESSAGE_TEXT;\n    END;\n\n  -- Perform the insert\n  INSERT INTO t1 (int_col) VALUES(value);\n  -- Check whether the insert was successful\n  IF code = \'00000\' THEN\n    GET DIAGNOSTICS rows = ROW_COUNT;\n    SET result = CONCAT(\'insert succeeded, row count = \',rows);\n  ELSE\n    SET result = CONCAT(\'insert failed, error = \',code,\', message = \',msg);\n  END IF;\n  -- Say what happened\n  SELECT result;\nEND;\n\nSuppose that t1.int_col is an integer column that is declared as NOT\nNULL. The procedure produces these results when invoked to insert\nnon-NULL and NULL values, respectively:\n\nmysql> CALL do_insert(1);\n+---------------------------------+\n| result                          |\n+---------------------------------+\n| insert succeeded, row count = 1 |\n+---------------------------------+\n\nmysql> CALL do_insert(NULL);\n+-------------------------------------------------------------------------+\n| result                                                                  |\n+-------------------------------------------------------------------------+\n| insert failed, error = 23000, message = Column \'int_col\' cannot be null |\n+-------------------------------------------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/get-diagnostics.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/get-diagnostics.html'),(597,'RESIGNAL',36,'Syntax:\nRESIGNAL [condition_value]\n    [SET signal_information_item\n    [, signal_information_item] ...]\n\ncondition_value: {\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n}\n\nsignal_information_item:\n    condition_information_item_name = simple_value_specification\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_name, simple_value_specification:\n    (see following discussion)\n\nRESIGNAL passes on the error condition information that is available\nduring execution of a condition handler within a compound statement\ninside a stored procedure or function, trigger, or event. RESIGNAL may\nchange some or all information before passing it on. RESIGNAL is\nrelated to SIGNAL, but instead of originating a condition as SIGNAL\ndoes, RESIGNAL relays existing condition information, possibly after\nmodifying it.\n\nRESIGNAL makes it possible to both handle an error and return the error\ninformation. Otherwise, by executing an SQL statement within the\nhandler, information that caused the handler\'s activation is destroyed.\nRESIGNAL also can make some procedures shorter if a given handler can\nhandle part of a situation, then pass the condition \"up the line\" to\nanother handler.\n\nNo privileges are required to execute the RESIGNAL statement.\n\nAll forms of RESIGNAL require that the current context be a condition\nhandler. Otherwise, RESIGNAL is illegal and a RESIGNAL when handler not\nactive error occurs.\n\nTo retrieve information from the diagnostics area, use the GET\nDIAGNOSTICS statement (see [HELP GET DIAGNOSTICS]). For information\nabout the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/8.0/en/diagnostics-area.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/resignal.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/resignal.html'),(598,'SIGNAL',36,'Syntax:\nSIGNAL condition_value\n    [SET signal_information_item\n    [, signal_information_item] ...]\n\ncondition_value: {\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n}\n\nsignal_information_item:\n    condition_information_item_name = simple_value_specification\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_name, simple_value_specification:\n    (see following discussion)\n\nSIGNAL is the way to \"return\" an error. SIGNAL provides error\ninformation to a handler, to an outer portion of the application, or to\nthe client. Also, it provides control over the error\'s characteristics\n(error number, SQLSTATE value, message). Without SIGNAL, it is\nnecessary to resort to workarounds such as deliberately referring to a\nnonexistent table to cause a routine to return an error.\n\nNo privileges are required to execute the SIGNAL statement.\n\nTo retrieve information from the diagnostics area, use the GET\nDIAGNOSTICS statement (see [HELP GET DIAGNOSTICS]). For information\nabout the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/8.0/en/diagnostics-area.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/signal.html\n\n','CREATE PROCEDURE p (pval INT)\nBEGIN\n  DECLARE specialty CONDITION FOR SQLSTATE \'45000\';\n  IF pval = 0 THEN\n    SIGNAL SQLSTATE \'01000\';\n  ELSEIF pval = 1 THEN\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSEIF pval = 2 THEN\n    SIGNAL specialty\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSE\n    SIGNAL SQLSTATE \'01000\'\n      SET MESSAGE_TEXT = \'A warning occurred\', MYSQL_ERRNO = 1000;\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\', MYSQL_ERRNO = 1001;\n  END IF;\nEND;\n','https://dev.mysql.com/doc/refman/8.0/en/signal.html'),(599,'ALTER USER',37,'Syntax:\nALTER USER [IF EXISTS]\n    user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH resource_option [resource_option] ...]\n    [password_option | lock_option] ...\n\nALTER USER [IF EXISTS] USER() user_func_auth_option\n\nALTER USER [IF EXISTS]\n    user DEFAULT ROLE\n    {NONE | ALL | role [, role ] ...}\n\nuser:\n    (see )\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n        [REPLACE \'current_auth_string\']\n        [RETAIN CURRENT PASSWORD]\n  | IDENTIFIED BY RANDOM PASSWORD\n        [REPLACE \'current_auth_string\']\n        [RETAIN CURRENT PASSWORD]\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n        [REPLACE \'current_auth_string\']\n        [RETAIN CURRENT PASSWORD]\n  | IDENTIFIED WITH auth_plugin BY RANDOM PASSWORD\n        [REPLACE \'current_auth_string\']\n        [RETAIN CURRENT PASSWORD]\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n  | DISCARD OLD PASSWORD\n}\n\nuser_func_auth_option: {\n    IDENTIFIED BY \'auth_string\'\n        [REPLACE \'current_auth_string\']\n        [RETAIN CURRENT PASSWORD]\n  | DISCARD OLD PASSWORD\n}\n\ntls_option: {\n   SSL\n | X509\n | CIPHER \'cipher\'\n | ISSUER \'issuer\'\n | SUBJECT \'subject\'\n}\n\nresource_option: {\n    MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\npassword_option: {\n    PASSWORD EXPIRE [DEFAULT | NEVER | INTERVAL N DAY]\n  | PASSWORD HISTORY {DEFAULT | N}\n  | PASSWORD REUSE INTERVAL {DEFAULT | N DAY}\n  | PASSWORD REQUIRE CURRENT [DEFAULT | OPTIONAL]\n  | FAILED_LOGIN_ATTEMPTS N\n  | PASSWORD_LOCK_TIME {N | UNBOUNDED}\n}\n\nlock_option: {\n    ACCOUNT LOCK\n  | ACCOUNT UNLOCK\n}\n\nThe ALTER USER statement modifies MySQL accounts. It enables\nauthentication, role, SSL/TLS, resource-limit, and password-management\nproperties to be modified for existing accounts. It can also be used to\nlock and unlock accounts.\n\nIn most cases, ALTER USER requires the global CREATE USER privilege, or\nthe UPDATE privilege for the mysql system schema. The exceptions are:\n\no Any client who connects to the server using a nonanonymous account\n  can change the password for that account. (In particular, you can\n  change your own password.) To see which account the server\n  authenticated you as, invoke the CURRENT_USER() function:\n\nSELECT CURRENT_USER();\n\no For DEFAULT ROLE syntax, ALTER USER requires these privileges:\n\n  o Setting the default roles for another user requires the global\n    CREATE USER privilege, or the UPDATE privilege for the\n    mysql.default_roles system table.\n\n  o Setting the default roles for yourself requires no special\n    privileges, as long as the roles you want as the default have been\n    granted to you.\n\no Statements that modify secondary passwords require these privileges:\n\n  o The APPLICATION_PASSWORD_ADMIN privilege is required to use the\n    RETAIN CURRENT PASSWORD or DISCARD OLD PASSWORD clause for ALTER\n    USER statements that apply to your own account. The privilege is\n    required to manipulate your own secondary password because most\n    users require only one password.\n\n  o If an account is to be permitted to manipulate secondary passwords\n    for all accounts, it requires the CREATE USER privilege rather than\n    APPLICATION_PASSWORD_ADMIN.\n\nWhen the read_only system variable is enabled, ALTER USER additionally\nrequires the CONNECTION_ADMIN or SUPER privilege.\n\nBy default, an error occurs if you try to modify a user that does not\nexist. If the IF EXISTS clause is given, the statement produces a\nwarning for each named user that does not exist, rather than an error.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-user.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-user.html'),(600,'CREATE ROLE',37,'Syntax:\nCREATE ROLE [IF NOT EXISTS] role [, role ] ...\n\nCREATE ROLE creates one or more roles, which are named collections of\nprivileges. To use this statement, you must have the global CREATE ROLE\nor CREATE USER privilege. When the read_only system variable is\nenabled, CREATE ROLE additionally requires the CONNECTION_ADMIN or\nSUPER privilege.\n\nA role when created is locked, has no password, and is assigned the\ndefault authentication plugin. (These role attributes can be changed\nlater with the ALTER USER statement, by users who have the global\nCREATE USER privilege.)\n\nCREATE ROLE either succeeds for all named roles or rolls back and has\nno effect if any error occurs. By default, an error occurs if you try\nto create a role that already exists. If the IF NOT EXISTS clause is\ngiven, the statement produces a warning for each named role that\nalready exists, rather than an error.\n\nThe statement is written to the binary log if it succeeds, but not if\nit fails; in that case, rollback occurs and no changes are made. A\nstatement written to the binary log includes all named roles. If the IF\nNOT EXISTS clause is given, this includes even roles that already exist\nand were not created.\n\nEach role name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html. For example:\n\nCREATE ROLE \'administrator\', \'developer\';\nCREATE ROLE \'webapp\'@\'localhost\';\n\nThe host name part of the role name, if omitted, defaults to \'%\'.\n\nFor role usage examples, see\nhttps://dev.mysql.com/doc/refman/8.0/en/roles.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-role.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-role.html'),(601,'CREATE USER',37,'Syntax:\nCREATE USER [IF NOT EXISTS]\n    user [auth_option] [, user [auth_option]] ...\n    DEFAULT ROLE role [, role ] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH resource_option [resource_option] ...]\n    [password_option | lock_option] ...\n\nuser:\n    (see )\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED BY RANDOM PASSWORD\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin BY RANDOM PASSWORD\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n}\n\ntls_option: {\n   SSL\n | X509\n | CIPHER \'cipher\'\n | ISSUER \'issuer\'\n | SUBJECT \'subject\'\n}\n\nresource_option: {\n    MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\npassword_option: {\n    PASSWORD EXPIRE [DEFAULT | NEVER | INTERVAL N DAY]\n  | PASSWORD HISTORY {DEFAULT | N}\n  | PASSWORD REUSE INTERVAL {DEFAULT | N DAY}\n  | PASSWORD REQUIRE CURRENT [DEFAULT | OPTIONAL]\n  | FAILED_LOGIN_ATTEMPTS N\n  | PASSWORD_LOCK_TIME {N | UNBOUNDED}\n}\n\nlock_option: {\n    ACCOUNT LOCK\n  | ACCOUNT UNLOCK\n}\n\nThe CREATE USER statement creates new MySQL accounts. It enables\nauthentication, role, SSL/TLS, resource-limit, and password-management\nproperties to be established for new accounts. It also controls whether\naccounts are initially locked or unlocked.\n\nTo use CREATE USER, you must have the global CREATE USER privilege, or\nthe INSERT privilege for the mysql system schema. When the read_only\nsystem variable is enabled, CREATE USER additionally requires the\nCONNECTION_ADMIN or SUPER privilege.\n\nCREATE USER either succeeds for all named users or rolls back and has\nno effect if any error occurs. By default, an error occurs if you try\nto create a user that already exists. If the IF NOT EXISTS clause is\ngiven, the statement produces a warning for each named user that\nalready exists, rather than an error.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-user.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-user.html'),(602,'DROP ROLE',37,'Syntax:\nDROP ROLE [IF EXISTS] role [, role ] ...\n\nDROP ROLE removes one or more roles (named collections of privileges).\nTo use this statement, you must have the global DROP ROLE or CREATE\nUSER privilege. When the read_only system variable is enabled, DROP\nROLE additionally requires the CONNECTION_ADMIN or SUPER privilege.\n\nAs of MySQL 8.0.16, users who have the CREATE USER privilege can use\nthis statement to drop accounts that are locked or unlocked. Users who\nhave the DROP ROLE privilege can use this statement only to drop\naccounts that are locked (unlocked accounts are presumably user\naccounts used to log in to the server and not just as roles).\n\nRoles named in the mandatory_roles system variable value cannot be\ndropped.\n\nDROP ROLE either succeeds for all named roles or rolls back and has no\neffect if any error occurs. By default, an error occurs if you try to\ndrop a role that does not exist. If the IF EXISTS clause is given, the\nstatement produces a warning for each named role that does not exist,\nrather than an error.\n\nThe statement is written to the binary log if it succeeds, but not if\nit fails; in that case, rollback occurs and no changes are made. A\nstatement written to the binary log includes all named roles. If the IF\nEXISTS clause is given, this includes even roles that do not exist and\nwere not dropped.\n\nEach role name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html. For example:\n\nDROP ROLE \'administrator\', \'developer\';\nDROP ROLE \'webapp\'@\'localhost\';\n\nThe host name part of the role name, if omitted, defaults to \'%\'.\n\nA dropped role is automatically revoked from any user account (or role)\nto which the role was granted. Within any current session for such an\naccount, its adjusted privileges apply beginning with the next\nstatement executed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-role.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-role.html'),(603,'DROP USER',37,'Syntax:\nDROP USER [IF EXISTS] user [, user] ...\n\nThe DROP USER statement removes one or more MySQL accounts and their\nprivileges. It removes privilege rows for the account from all grant\ntables.\n\nRoles named in the mandatory_roles system variable value cannot be\ndropped.\n\nTo use DROP USER, you must have the global CREATE USER privilege, or\nthe DELETE privilege for the mysql system schema. When the read_only\nsystem variable is enabled, DROP USER additionally requires the\nCONNECTION_ADMIN or SUPER privilege.\n\nDROP USER either succeeds for all named users or rolls back and has no\neffect if any error occurs. By default, an error occurs if you try to\ndrop a user that does not exist. If the IF EXISTS clause is given, the\nstatement produces a warning for each named user that does not exist,\nrather than an error.\n\nThe statement is written to the binary log if it succeeds, but not if\nit fails; in that case, rollback occurs and no changes are made. A\nstatement written to the binary log includes all named users. If the IF\nEXISTS clause is given, this includes even users that do not exist and\nwere not dropped.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html. For\nexample:\n\nDROP USER \'jeffrey\'@\'localhost\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-user.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-user.html'),(604,'GRANT',37,'Syntax:\nGRANT\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    TO user_or_role [, user_or_role] ...\n    [WITH GRANT OPTION]\n    [AS user\n        [WITH ROLE\n            DEFAULT\n          | NONE\n          | ALL\n          | ALL EXCEPT role [, role ] ...\n          | role [, role ] ...\n        ]\n    ]\n}\n\nGRANT PROXY ON user_or_role\n    TO user_or_role [, user_or_role] ...\n    [WITH GRANT OPTION]\n\nGRANT role [, role] ...\n    TO user_or_role [, user_or_role] ...\n    [WITH ADMIN OPTION]\n\nobject_type: {\n    TABLE\n  | FUNCTION\n  | PROCEDURE\n}\n\npriv_level: {\n    *\n  | *.*\n  | db_name.*\n  | db_name.tbl_name\n  | tbl_name\n  | db_name.routine_name\n}\n\nuser_or_role: {\n    user (see https://dev.mysql.com/doc/refman/8.0/en/account-names.html)\n  | role (see https://dev.mysql.com/doc/refman/8.0/en/role-names.html)\n}\n\nThe GRANT statement enables system administrators to grant privileges\nand roles, which can be granted to user accounts and roles. These\nsyntax restrictions apply:\n\no GRANT cannot mix granting both privileges and roles in the same\n  statement. A given GRANT statement must grant either privileges or\n  roles.\n\no The ON clause distinguishes whether the statement grants privileges\n  or roles:\n\n  o With ON, the statement grants privileges.\n\n  o Without ON, the statement grants roles.\n\n  o It is permitted to assign both privileges and roles to an account,\n    but you must use separate GRANT statements, each with syntax\n    appropriate to what is to be granted.\n\nFor more information about roles, see\nhttps://dev.mysql.com/doc/refman/8.0/en/roles.html.\n\nTo use GRANT, you must have the GRANT OPTION privilege, and you must\nhave the privileges that you are granting. When the read_only system\nvariable is enabled, GRANT additionally requires the CONNECTION_ADMIN\nor SUPER privilege.\n\nGRANT either succeeds for all named users and roles or rolls back and\nhas no effect if any error occurs. The statement is written to the\nbinary log only if it succeeds for all named users and roles.\n\nThe REVOKE statement is related to GRANT and enables administrators to\nremove account privileges. See [HELP REVOKE].\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html. Each role\nname uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html. For example:\n\nGRANT ALL ON db1.* TO \'jeffrey\'@\'localhost\';\nGRANT \'role1\', \'role2\' TO \'user1\'@\'localhost\', \'user2\'@\'localhost\';\nGRANT SELECT ON world.* TO \'role3\';\n\nThe host name part of the account or role name, if omitted, defaults to\n\'%\'.\n\nNormally, a database administrator first uses CREATE USER to create an\naccount and define its nonprivilege characteristics such as its\npassword, whether it uses secure connections, and limits on access to\nserver resources, then uses GRANT to define its privileges. ALTER USER\nmay be used to change the nonprivilege characteristics of existing\naccounts. For example:\n\nCREATE USER \'jeffrey\'@\'localhost\' IDENTIFIED BY \'password\';\nGRANT ALL ON db1.* TO \'jeffrey\'@\'localhost\';\nGRANT SELECT ON db2.invoice TO \'jeffrey\'@\'localhost\';\nALTER USER \'jeffrey\'@\'localhost\' WITH MAX_QUERIES_PER_HOUR 90;\n\nFrom the mysql program, GRANT responds with Query OK, 0 rows affected\nwhen executed successfully. To determine what privileges result from\nthe operation, use SHOW GRANTS. See [HELP SHOW GRANTS].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/grant.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/grant.html'),(605,'RENAME USER',37,'Syntax:\nRENAME USER old_user TO new_user\n    [, old_user TO new_user] ...\n\nThe RENAME USER statement renames existing MySQL accounts. An error\noccurs for old accounts that do not exist or new accounts that already\nexist.\n\nTo use RENAME USER, you must have the global CREATE USER privilege, or\nthe UPDATE privilege for the mysql system schema. When the read_only\nsystem variable is enabled, RENAME USER additionally requires the\nCONNECTION_ADMIN or SUPER privilege.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html. For\nexample:\n\nRENAME USER \'jeffrey\'@\'localhost\' TO \'jeff\'@\'127.0.0.1\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nRENAME USER causes the privileges held by the old user to be those held\nby the new user. However, RENAME USER does not automatically drop or\ninvalidate databases or objects within them that the old user created.\nThis includes stored programs or views for which the DEFINER attribute\nnames the old user. Attempts to access such objects may produce an\nerror if they execute in definer security context. (For information\nabout security context, see\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-objects-security.html.)\n\nThe privilege changes take effect as indicated in\nhttps://dev.mysql.com/doc/refman/8.0/en/privilege-changes.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/rename-user.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/rename-user.html'),(606,'REVOKE',37,'Syntax:\nREVOKE\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    FROM user_or_role [, user_or_role] ...\n\nREVOKE ALL [PRIVILEGES], GRANT OPTION\n    FROM user_or_role [, user_or_role] ...\n\nREVOKE PROXY ON user_or_role\n    FROM user_or_role [, user_or_role] ...\n\nREVOKE role [, role ] ...\n    FROM user_or_role [, user_or_role ] ...\n\nuser_or_role: {\n    user (see https://dev.mysql.com/doc/refman/8.0/en/account-names.html)\n  | role (see https://dev.mysql.com/doc/refman/8.0/en/role-names.html.\n}\n\nThe REVOKE statement enables system administrators to revoke privileges\nand roles, which can be revoked from user accounts and roles.\n\nFor details on the levels at which privileges exist, the permissible\npriv_type, priv_level, and object_type values, and the syntax for\nspecifying users and passwords, see [HELP GRANT].\n\nFor information about roles, see\nhttps://dev.mysql.com/doc/refman/8.0/en/roles.html.\n\nWhen the read_only system variable is enabled, REVOKE requires the\nCONNECTION_ADMIN or SUPER privilege in addition to any other required\nprivileges described in the following discussion.\n\nREVOKE either succeeds for all named users and roles or rolls back and\nhas no effect if any error occurs. The statement is written to the\nbinary log only if it succeeds for all named users and roles.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html. Each role\nname uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html. For example:\n\nREVOKE INSERT ON *.* FROM \'jeffrey\'@\'localhost\';\nREVOKE \'role1\', \'role2\' FROM \'user1\'@\'localhost\', \'user2\'@\'localhost\';\nREVOKE SELECT ON world.* FROM \'role3\';\n\nThe host name part of the account or role name, if omitted, defaults to\n\'%\'.\n\nTo use the first REVOKE syntax, you must have the GRANT OPTION\nprivilege, and you must have the privileges that you are revoking.\n\nTo revoke all privileges, use the second syntax, which drops all\nglobal, database, table, column, and routine privileges for the named\nusers or roles:\n\nREVOKE ALL PRIVILEGES, GRANT OPTION\n  FROM user_or_role [, user_or_role] ...\n\nREVOKE ALL PRIVILEGES, GRANT OPTION does not revoke any roles.\n\nTo use this REVOKE syntax, you must have the global CREATE USER\nprivilege, or the UPDATE privilege for the mysql system schema.\n\nThe syntax for which the REVOKE keyword is followed by one or more role\nnames takes a FROM clause indicating one or more users or roles from\nwhich to revoke the roles.\n\nRoles named in the mandatory_roles system variable value cannot be\nrevoked.\n\nA revoked role immediately affects any user account from which it was\nrevoked, such that within any current session for the account, its\nprivileges are adjusted for the next statement executed.\n\nRevoking a role revokes the role itself, not the privileges that it\nrepresents. Suppose that an account is granted a role that includes a\ngiven privilege, and is also granted the privilege explicitly or\nanother role that includes the privilege. In this case, the account\nstill possesses that privilege if the first role is revoked. For\nexample, if an account is granted two roles that each include SELECT,\nthe account still can select after either role is revoked.\n\nREVOKE ALL ON *.* (at the global level) revokes all granted static\nglobal privileges and all granted dynamic privileges.\n\nUser accounts and roles from which privileges and roles are to be\nrevoked must exist, but the privileges and roles to be revoked need not\nbe currently granted to them.\n\nA revoked privilege that is granted but not known to the server is\nrevoked with a warning. This situtation can occur for dynamic\nprivileges. For example, a dynamic privilege can be granted while the\ncomponent that registers it is installed, but if that component is\nsubsequently uninstalled, the privilege becomes unregistered, although\naccounts that possess the privilege still possess it and it can be\nrevoked from them.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/revoke.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/revoke.html'),(607,'SET DEFAULT ROLE',37,'Syntax:\nSET DEFAULT ROLE\n    {NONE | ALL | role [, role ] ...}\n    TO user [, user ] ...\n\nFor each user named immediately after the TO keyword, this statement\ndefines which roles become active when the user connects to the server\nand authenticates, or when the user executes the SET ROLE DEFAULT\nstatement during a session.\n\nSET DEFAULT ROLE is alternative syntax for ALTER USER ... DEFAULT ROLE\n(see [HELP ALTER USER]). However, ALTER USER can set the default for\nonly a single user, whereas SET DEFAULT ROLE can set the default for\nmultiple users. On the other hand, you can specify CURRENT_USER as the\nuser name for the ALTER USER statement, whereas you cannot for SET\nDEFAULT ROLE.\n\nSET DEFAULT ROLE requires these privileges:\n\no Setting the default roles for another user requires the global CREATE\n  USER privilege, or the UPDATE privilege for the mysql.default_roles\n  system table.\n\no Setting the default roles for yourself requires no special\n  privileges, as long as the roles you want as the default have been\n  granted to you.\n\nEach role name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html. For example:\n\nSET DEFAULT ROLE administrator, developer TO \'joe\'@\'10.0.0.1\';\n\nThe host name part of the role name, if omitted, defaults to \'%\'.\n\nThe clause following the DEFAULT ROLE keywords permits these values:\n\no NONE: Set the default to NONE (no roles).\n\no ALL: Set the default to all roles granted to the account.\n\no role [, role ] ...: Set the default to the named roles, which must\n  exist and be granted to the account at the time SET DEFAULT ROLE is\n  executed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-default-role.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-default-role.html'),(608,'SET PASSWORD',37,'Syntax:\nSET PASSWORD [FOR user] auth_option\n    [REPLACE \'current_auth_string\']\n    [RETAIN CURRENT PASSWORD]\n\nauth_option: {\n    = \'auth_string\'\n  | TO RANDOM\n}\n\nThe SET PASSWORD statement assigns a password to a MySQL user account.\nThe password may be either explicitly specified in the statement or\nrandomly generated by MySQL. The statement may also include a\npassword-verification clause that specifies the account current\npassword to be replaced, and a clause that manages whether an account\nhas a secondary password. \'auth_string\' and \'current_auth_string\' each\nrepresent a cleartext (unencrypted) password.\n\n*Note*:\n\nRather than using SET PASSWORD to assign passwords, ALTER USER is the\npreferred statement for account alterations, including assigning\npasswords. For example:\n\nALTER USER user IDENTIFIED BY \'auth_string\';\n\n*Note*:\n\nClauses for random password generation, password verification, and\nsecondary passwords apply only to accounts that use an authentication\nplugin that stores credentials internally to MySQL. For accounts that\nuse a plugin that performs authentication against a credentials system\nthat is external to MySQL, password management must be handled\nexternally against that system as well. For more information about\ninternal credentials storage, see\nhttps://dev.mysql.com/doc/refman/8.0/en/password-management.html.\n\nThe REPLACE \'current_auth_string\' clause performs password verification\nand is available as of MySQL 8.0.13. If given:\n\no REPLACE specifies the account current password to be replaced, as a\n  cleartext (unencrypted) string.\n\no The clause must be given if password changes for the account are\n  required to specify the current password, as verification that the\n  user attempting to make the change actually knows the current\n  password.\n\no The clause is optional if password changes for the account may but\n  need not specify the current password.\n\no The statement fails if the clause is given but does not match the\n  current password, even if the clause is optional.\n\no REPLACE can be specified only when changing the account password for\n  the current user.\n\nFor more information about password verification by specifying the\ncurrent password, see\nhttps://dev.mysql.com/doc/refman/8.0/en/password-management.html.\n\nThe RETAIN CURRENT PASSWORD clause implements dual-password capability\nand is available as of MySQL 8.0.14. If given:\n\no RETAIN CURRENT PASSWORD retains an account current password as its\n  secondary password, replacing any existing secondary password. The\n  new password becomes the primary password, but clients can use the\n  account to connect to the server using either the primary or\n  secondary password. (Exception: If the new password specified by the\n  SET PASSWORD statement is empty, the secondary password becomes empty\n  as well, even if RETAIN CURRENT PASSWORD is given.)\n\no If you specify RETAIN CURRENT PASSWORD for an account that has an\n  empty primary password, the statement fails.\n\no If an account has a secondary password and you change its primary\n  password without specifying RETAIN CURRENT PASSWORD, the secondary\n  password remains unchanged.\n\nFor more information about use of dual passwords, see\nhttps://dev.mysql.com/doc/refman/8.0/en/password-management.html.\n\nSET PASSWORD permits these auth_option syntaxes:\n\no = \'auth_string\'\n\n  Assigns the account the given literal password.\n\no TO RANDOM\n\n  Assigns the account a password randomly generated by MySQL. The\n  statement also returns the cleartext password in a result set to make\n  it available to the user or application executing the statement.\n\n  For details about the result set and characteristics of randomly\n  generated passwords, see\n  https://dev.mysql.com/doc/refman/8.0/en/password-management.html#rand\n  om-password-generation.\n\n  Random password generation is available as of MySQL 8.0.18.\n\n*Important*:\n\nUnder some circumstances, SET PASSWORD may be recorded in server logs\nor on the client side in a history file such as ~/.mysql_history, which\nmeans that cleartext passwords may be read by anyone having read access\nto that information. For information about the conditions under which\nthis occurs for the server logs and how to control it, see\nhttps://dev.mysql.com/doc/refman/8.0/en/password-logging.html. For\nsimilar information about client-side logging, see\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-logging.html.\n\nSET PASSWORD can be used with or without a FOR clause that explicitly\nnames a user account:\n\no With a FOR user clause, the statement sets the password for the named\n  account, which must exist:\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = \'auth_string\';\n\no With no FOR user clause, the statement sets the password for the\n  current user:\n\nSET PASSWORD = \'auth_string\';\n\n  Any client who connects to the server using a nonanonymous account\n  can change the password for that account. (In particular, you can\n  change your own password.) To see which account the server\n  authenticated you as, invoke the CURRENT_USER() function:\n\nSELECT CURRENT_USER();\n\nIf a FOR user clause is given, the account name uses the format\ndescribed in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html. For\nexample:\n\nSET PASSWORD FOR \'bob\'@\'%.example.org\' = \'auth_string\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nSET PASSWORD interprets the string as a cleartext string, passes it to\nthe authentication plugin associated with the account, and stores the\nresult returned by the plugin in the account row in the mysql.user\nsystem table. (The plugin is given the opportunity to hash the value\ninto the encryption format it expects. The plugin may use the value as\nspecified, in which case no hashing occurs.)\n\nSetting the password for a named account (with a FOR clause) requires\nthe UPDATE privilege for the mysql system schema. Setting the password\nfor yourself (for a nonanonymous account with no FOR clause) requires\nno special privileges.\n\nStatements that modify secondary passwords require these privileges:\n\no The APPLICATION_PASSWORD_ADMIN privilege is required to use the\n  RETAIN CURRENT PASSWORD clause for SET PASSWORD statements that apply\n  to your own account. The privilege is required to manipulate your own\n  secondary password because most users require only one password.\n\no If an account is to be permitted to manipulate secondary passwords\n  for all accounts, it should be granted the CREATE USER privilege\n  rather than APPLICATION_PASSWORD_ADMIN.\n\nWhen the read_only system variable is enabled, SET PASSWORD requires\nthe CONNECTION_ADMIN or SUPER privilege in addition to any other\nrequired privileges.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-password.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-password.html'),(609,'SET ROLE',37,'Syntax:\nSET ROLE {\n    DEFAULT\n  | NONE\n  | ALL\n  | ALL EXCEPT role [, role ] ...\n  | role [, role ] ...\n}\n\nSET ROLE modifies the current user\'s effective privileges within the\ncurrent session by specifying which of its granted roles are active.\nGranted roles include those granted explicitly to the user and those\nnamed in the mandatory_roles system variable value.\n\nExamples:\n\nSET ROLE DEFAULT;\nSET ROLE \'role1\', \'role2\';\nSET ROLE ALL;\nSET ROLE ALL EXCEPT \'role1\', \'role2\';\n\nEach role name uses the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html. The host name\npart of the role name, if omitted, defaults to \'%\'.\n\nPrivileges that the user has been granted directly (rather than through\nroles) remain unaffected by changes to the active roles.\n\nThe statement permits these role specifiers:\n\no DEFAULT: Activate the account default roles. Default roles are those\n  specified with SET DEFAULT ROLE.\n\n  When a user connects to the server and authenticates successfully,\n  the server determines which roles to activate as the default roles.\n  If the activate_all_roles_on_login system variable is enabled, the\n  server activates all granted roles. Otherwise, the server executes\n  SET ROLE DEFAULT implicitly. The server activates only default roles\n  that can be activated. The server writes warnings to its error log\n  for default roles that cannot be activated, but the client receives\n  no warnings.\n\n  If a user executes SET ROLE DEFAULT during a session, an error occurs\n  if any default role cannot be activated (for example, if it does not\n  exist or is not granted to the user). In this case, the current\n  active roles are not changed.\n\no NONE: Set the active roles to NONE (no active roles).\n\no ALL: Activate all roles granted to the account.\n\no ALL EXCEPT role [, role ] ...: Activate all roles granted to the\n  account except those named. The named roles need not exist or be\n  granted to the account.\n\no role [, role ] ...: Activate the named roles, which must be granted\n  to the account.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-role.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-role.html'),(610,'ALTER RESOURCE GROUP',37,'Syntax:\nALTER RESOURCE GROUP group_name\n    [VCPU [=] vcpu_spec [, vcpu_spec] ...]\n    [THREAD_PRIORITY [=] N]\n    [ENABLE|DISABLE [FORCE]]\n\nvcpu_spec: {N | M - N}\n\nALTER RESOURCE GROUP is used for resource group management (see\nhttps://dev.mysql.com/doc/refman/8.0/en/resource-groups.html). This\nstatement alters modifiable attributes of an existing resource group.\nIt requires the RESOURCE_GROUP_ADMIN privilege.\n\ngroup_name identifies which resource group to alter. If the group does\nnot exist, an error occurs.\n\nThe attributes for CPU affinity, priority, and whether the group is\nenabled can be modified with ALTER RESOURCE GROUP. These attributes are\nspecified the same way as described for CREATE RESOURCE GROUP (see\n[HELP CREATE RESOURCE GROUP]). Only the attributes specified are\naltered. Unspecified attributes retain their current values.\n\nThe FORCE modifier is used with DISABLE. It determines statement\nbehavior if the resource group has any threads assigned to it:\n\no If FORCE is not given, existing threads in the group continue to run\n  until they terminate, but new threads cannot be assigned to the\n  group.\n\no If FORCE is given, existing threads in the group are moved to their\n  respective default group (system threads to SYS_default, user threads\n  to USR_default).\n\nThe name and type attributes are set at group creation time and cannot\nbe modified thereafter with ALTER RESOURCE GROUP.\n\nExamples:\n\no Alter a group CPU affinity:\n\nALTER RESOURCE GROUP rg1 VCPU = 0-63;\n\no Alter a group thread priority:\n\nALTER RESOURCE GROUP rg2 THREAD_PRIORITY = 5;\n\no Disable a group, moving any threads assigned to it to the default\n  groups:\n\nALTER RESOURCE GROUP rg3 DISABLE FORCE;\n\nResource group management is local to the server on which it occurs.\nALTER RESOURCE GROUP statements are not written to the binary log and\nare not replicated.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/alter-resource-group.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/alter-resource-group.html'),(611,'CREATE RESOURCE GROUP',37,'Syntax:\nCREATE RESOURCE GROUP group_name\n    TYPE = {SYSTEM|USER}\n    [VCPU [=] vcpu_spec [, vcpu_spec] ...]\n    [THREAD_PRIORITY [=] N]\n    [ENABLE|DISABLE]\n\nvcpu_spec: {N | M - N}\n\nCREATE RESOURCE GROUP is used for resource group management (see\nhttps://dev.mysql.com/doc/refman/8.0/en/resource-groups.html). This\nstatement creates a new resource group and assigns its initial\nattribute values. It requires the RESOURCE_GROUP_ADMIN privilege.\n\ngroup_name identifies which resource group to create. If the group\nalready exists, an error occurs.\n\nThe TYPE attribute is required. It should be SYSTEM for a system\nresource group, USER for a user resource group. The group type affects\npermitted THREAD_PRIORITY values, as described later.\n\nThe VCPU attribute indicates the CPU affinity; that is, the set of\nvirtual CPUs the group can use:\n\no If VCPU is not given, the resource group has no CPU affinity and can\n  use all available CPUs.\n\no If VCPU is given, the attribute value is a list of comma-separated\n  CPU numbers or ranges:\n\n  o Each number must be an integer in the range from 0 to the number of\n    CPUs − 1. For example, on a system with 64 CPUs, the number can\n    range from 0 to 63.\n\n  o A range is given in the form M − N, where M is less than or equal\n    to N and both numbers are in the CPU range.\n\n  o If a CPU number is an integer outside the permitted range or is not\n    an integer, an error occurs.\n\nExample VCPU specifiers (these are all equivalent):\n\nVCPU = 0,1,2,3,9,10\nVCPU = 0-3,9-10\nVCPU = 9,10,0-3\nVCPU = 0,10,1,9,3,2\n\nThe THREAD_PRIORITY attribute indicates the priority for threads\nassigned to the group:\n\no If THREAD_PRIORITY is not given, the default priority is 0.\n\no If THREAD_PRIORITY is given, the attribute value must be in the range\n  from -20 (highest priority) to 19 (lowest priority). The priority for\n  system resource groups must be in the range from -20 to 0. The\n  priority for user resource groups must be in the range from 0 to 19.\n  Use of different ranges for system and user groups ensures that user\n  threads never have a higher priority than system threads.\n\nENABLE and DISABLE specify that the resource group is initially enabled\nor disabled. If neither is specified, the group is enabled by default.\nA disabled group cannot have threads assigned to it.\n\nExamples:\n\no Create an enabled user group that has a single CPU and the lowest\n  priority:\n\nCREATE RESOURCE GROUP rg1\n  TYPE = USER\n  VCPU = 0\n  THREAD_PRIORITY = 19;\n\no Create a disabled system group that has no CPU affinity (can use all\n  CPUs) and the highest priority:\n\nCREATE RESOURCE GROUP rg2\n  TYPE = SYSTEM\n  THREAD_PRIORITY = -20\n  DISABLE;\n\nResource group management is local to the server on which it occurs.\nCREATE RESOURCE GROUP statements are not written to the binary log and\nare not replicated.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-resource-group.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-resource-group.html'),(612,'DROP RESOURCE GROUP',37,'Syntax:\nDROP RESOURCE GROUP group_name [FORCE]\n\nDROP RESOURCE GROUP is used for resource group management (see\nhttps://dev.mysql.com/doc/refman/8.0/en/resource-groups.html). This\nstatement drops a resource group. It requires the RESOURCE_GROUP_ADMIN\nprivilege.\n\ngroup_name identifies which resource group to drop. If the group does\nnot exist, an error occurs.\n\nThe FORCE modifier determines statement behavior if the resource group\nhas any threads assigned to it:\n\no If FORCE is not given and any threads are assigned to the group, an\n  error occurs.\n\no If FORCE is given, existing threads in the group are moved to their\n  respective default group (system threads to SYS_default, user threads\n  to USR_default).\n\nExamples:\n\no Drop a group, failing if the group contains any threads:\n\nDROP RESOURCE GROUP rg1;\n\no Drop a group and move existing threads to the default groups:\n\nDROP RESOURCE GROUP rg2 FORCE;\n\nResource group management is local to the server on which it occurs.\nDROP RESOURCE GROUP statements are not written to the binary log and\nare not replicated.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-resource-group.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-resource-group.html'),(613,'SET RESOURCE GROUP',37,'Syntax:\nSET RESOURCE GROUP group_name\n    [FOR thread_id [, thread_id] ...]\n\nSET RESOURCE GROUP is used for resource group management (see\nhttps://dev.mysql.com/doc/refman/8.0/en/resource-groups.html). This\nstatement assigns threads to a resource group. It requires the\nRESOURCE_GROUP_ADMIN or RESOURCE_GROUP_USER privilege.\n\ngroup_name identifies which resource group to be assigned. Any\nthread_id values indicate threads to assign to the group. Thread IDs\ncan be determined from the Performance Schema threads table. If the\nresource group or any named thread ID does not exist, an error occurs.\n\nWith no FOR clause, the statement assigns the current thread for the\nsession to the resource group.\n\nWith a FOR clause that names thread IDs, the statement assigns those\nthreads to the resource group.\n\nFor attempts to assign a system thread to a user resource group or a\nuser thread to a system resource group, a warning occurs.\n\nExamples:\n\no Assign the current session thread to a group:\n\nSET RESOURCE GROUP rg1;\n\no Assign the named threads to a group:\n\nSET RESOURCE GROUP rg2 FOR 14, 78, 4;\n\nResource group management is local to the server on which it occurs.\nSET RESOURCE GROUP statements are not written to the binary log and are\nnot replicated.\n\nAn alternative to SET RESOURCE GROUP is the RESOURCE_GROUP optimizer\nhint, which assigns individual statements to a resource group. See\nhttps://dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-resource-group.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-resource-group.html'),(614,'ANALYZE TABLE',38,'Syntax:\nANALYZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n\nANALYZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name\n    UPDATE HISTOGRAM ON col_name [, col_name] ...\n        [WITH N BUCKETS]\n\nANALYZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name\n    DROP HISTOGRAM ON col_name [, col_name] ...\n\nANALYZE TABLE generates table statistics:\n\no ANALYZE TABLE without either HISTOGRAM clause performs a key\n  distribution analysis and stores the distribution for the named table\n  or tables. For MyISAM tables, ANALYZE TABLE for key distribution\n  analysis is equivalent to using myisamchk --analyze.\n\no ANALYZE TABLE with the UPDATE HISTOGRAM clause generates histogram\n  statistics for the named table columns and stores them in the data\n  dictionary. Only one table name is permitted for this syntax.\n\no ANALYZE TABLE with the DROP HISTOGRAM clause removes histogram\n  statistics for the named table columns from the data dictionary. Only\n  one table name is permitted for this syntax.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nANALYZE TABLE works with InnoDB, NDB, and MyISAM tables. It does not\nwork with views.\n\nIf the innodb_read_only system variable is enabled, ANALYZE TABLE may\nfail because it cannot update statistics tables in the data dictionary,\nwhich use InnoDB. For ANALYZE TABLE operations that update the key\ndistribution, failure may occur even if the operation updates the table\nitself (for example, if it is a MyISAM table). To obtain the updated\ndistribution statistics, set information_schema_stats_expiry=0.\n\nANALYZE TABLE is supported for partitioned tables, and you can use\nALTER TABLE ... ANALYZE PARTITION to analyze one or more partitions;\nfor more information, see [HELP ALTER TABLE], and\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-maintenance.html.\n\nDuring the analysis, the table is locked with a read lock for InnoDB\nand MyISAM.\n\nANALYZE TABLE removes the table from the table definition cache, which\nrequires a flush lock. If there are long running statements or\ntransactions still using the table, subsequent statements and\ntransactions must wait for those operations to finish before the flush\nlock is released. Because ANALYZE TABLE itself typically finishes\nquickly, it may not be apparent that delayed transactions or statements\ninvolving the same table are due to the remaining flush lock.\n\nBy default, the server writes ANALYZE TABLE statements to the binary\nlog so that they replicate to replication slaves. To suppress logging,\nspecify the optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html'),(615,'CHECK TABLE',38,'Syntax:\nCHECK TABLE tbl_name [, tbl_name] ... [option] ...\n\noption: {\n    FOR UPGRADE\n  | QUICK\n  | FAST\n  | MEDIUM\n  | EXTENDED\n  | CHANGED\n}\n\nCHECK TABLE checks a table or tables for errors. CHECK TABLE can also\ncheck views for problems, such as tables that are referenced in the\nview definition that no longer exist.\n\nTo check a table, you must have some privilege for it.\n\nCHECK TABLE works for InnoDB, MyISAM, ARCHIVE, and CSV tables.\n\nBefore running CHECK TABLE on InnoDB tables, see\nhttps://dev.mysql.com/doc/refman/8.0/en/check-table.html#check-table-in\nnodb.\n\nCHECK TABLE is supported for partitioned tables, and you can use ALTER\nTABLE ... CHECK PARTITION to check one or more partitions; for more\ninformation, see [HELP ALTER TABLE], and\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-maintenance.html.\n\nCHECK TABLE ignores virtual generated columns that are not indexed.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/check-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/check-table.html'),(616,'CHECKSUM TABLE',38,'Syntax:\nCHECKSUM TABLE tbl_name [, tbl_name] ... [QUICK | EXTENDED]\n\nCHECKSUM TABLE reports a checksum for the contents of a table. You can\nuse this statement to verify that the contents are the same before and\nafter a backup, rollback, or other operation that is intended to put\nthe data back to a known state.\n\nThis statement requires the SELECT privilege for the table.\n\nThis statement is not supported for views. If you run CHECKSUM TABLE\nagainst a view, the Checksum value is always NULL, and a warning is\nreturned.\n\nFor a nonexistent table, CHECKSUM TABLE returns NULL and generates a\nwarning.\n\nDuring the checksum operation, the table is locked with a read lock for\nInnoDB and MyISAM.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/checksum-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/checksum-table.html'),(617,'OPTIMIZE TABLE',38,'Syntax:\nOPTIMIZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n\nOPTIMIZE TABLE reorganizes the physical storage of table data and\nassociated index data, to reduce storage space and improve I/O\nefficiency when accessing the table. The exact changes made to each\ntable depend on the storage engine used by that table.\n\nUse OPTIMIZE TABLE in these cases, depending on the type of table:\n\no After doing substantial insert, update, or delete operations on an\n  InnoDB table that has its own .ibd file because it was created with\n  the innodb_file_per_table option enabled. The table and indexes are\n  reorganized, and disk space can be reclaimed for use by the operating\n  system.\n\no After doing substantial insert, update, or delete operations on\n  columns that are part of a FULLTEXT index in an InnoDB table. Set the\n  configuration option innodb_optimize_fulltext_only=1 first. To keep\n  the index maintenance period to a reasonable time, set the\n  innodb_ft_num_word_optimize option to specify how many words to\n  update in the search index, and run a sequence of OPTIMIZE TABLE\n  statements until the search index is fully updated.\n\no After deleting a large part of a MyISAM or ARCHIVE table, or making\n  many changes to a MyISAM or ARCHIVE table with variable-length rows\n  (tables that have VARCHAR, VARBINARY, BLOB, or TEXT columns). Deleted\n  rows are maintained in a linked list and subsequent INSERT operations\n  reuse old row positions. You can use OPTIMIZE TABLE to reclaim the\n  unused space and to defragment the data file. After extensive changes\n  to a table, this statement may also improve performance of statements\n  that use the table, sometimes significantly.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nOPTIMIZE TABLE works for InnoDB, MyISAM, and ARCHIVE tables. OPTIMIZE\nTABLE is also supported for dynamic columns of in-memory NDB tables. It\ndoes not work for fixed-width columns of in-memory tables, nor does it\nwork for Disk Data tables. The performance of OPTIMIZE on NDB Cluster\ntables can be tuned using --ndb-optimization-delay, which controls the\nlength of time to wait between processing batches of rows by OPTIMIZE\nTABLE. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-limitations-resol\nved.html.\n\nFor NDB Cluster tables, OPTIMIZE TABLE can be interrupted by (for\nexample) killing the SQL thread performing the OPTIMIZE operation.\n\nBy default, OPTIMIZE TABLE does not work for tables created using any\nother storage engine and returns a result indicating this lack of\nsupport. You can make OPTIMIZE TABLE work for other storage engines by\nstarting mysqld with the --skip-new option. In this case, OPTIMIZE\nTABLE is just mapped to ALTER TABLE.\n\nThis statement does not work with views.\n\nOPTIMIZE TABLE is supported for partitioned tables. For information\nabout using this statement with partitioned tables and table\npartitions, see\nhttps://dev.mysql.com/doc/refman/8.0/en/partitioning-maintenance.html.\n\nBy default, the server writes OPTIMIZE TABLE statements to the binary\nlog so that they replicate to replication slaves. To suppress logging,\nspecify the optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/optimize-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/optimize-table.html'),(618,'REPAIR TABLE',38,'Syntax:\nREPAIR [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n    [QUICK] [EXTENDED] [USE_FRM]\n\nREPAIR TABLE repairs a possibly corrupted table, for certain storage\nengines only.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nAlthough normally you should never have to run REPAIR TABLE, if\ndisaster strikes, this statement is very likely to get back all your\ndata from a MyISAM table. If your tables become corrupted often, try to\nfind the reason for it, to eliminate the need to use REPAIR TABLE. See\nhttps://dev.mysql.com/doc/refman/8.0/en/crashing.html, and\nhttps://dev.mysql.com/doc/refman/8.0/en/myisam-table-problems.html.\n\nREPAIR TABLE checks the table to see whether an upgrade is required. If\nso, it performs the upgrade, following the same rules as CHECK TABLE\n... FOR UPGRADE. See [HELP CHECK TABLE], for more information.\n\n*Important*:\n\no Make a backup of a table before performing a table repair operation;\n  under some circumstances the operation might cause data loss.\n  Possible causes include but are not limited to file system errors.\n  See https://dev.mysql.com/doc/refman/8.0/en/backup-and-recovery.html.\n\no If the server crashes during a REPAIR TABLE operation, it is\n  essential after restarting it that you immediately execute another\n  REPAIR TABLE statement for the table before performing any other\n  operations on it. In the worst case, you might have a new clean index\n  file without information about the data file, and then the next\n  operation you perform could overwrite the data file. This is an\n  unlikely but possible scenario that underscores the value of making a\n  backup first.\n\no In the event that a table on the master becomes corrupted and you run\n  REPAIR TABLE on it, any resulting changes to the original table are\n  not propagated to slaves.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/repair-table.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/repair-table.html'),(619,'CREATE FUNCTION UDF',39,'Syntax:\nCREATE [AGGREGATE] FUNCTION function_name\n    RETURNS {STRING|INTEGER|REAL|DECIMAL}\n    SONAME shared_library_name\n\nA user-defined function (UDF) is a way to extend MySQL with a new\nfunction that works like a native (built-in) MySQL function such as\nABS() or CONCAT().\n\nfunction_name is the name that should be used in SQL statements to\ninvoke the function. The RETURNS clause indicates the type of the\nfunction\'s return value. DECIMAL is a legal value after RETURNS, but\ncurrently DECIMAL functions return string values and should be written\nlike STRING functions.\n\nshared_library_name is the base name of the shared library file that\ncontains the code that implements the function. The file must be\nlocated in the plugin directory. This directory is given by the value\nof the plugin_dir system variable. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/udf-loading.html.\n\nTo create a function, you must have the INSERT privilege for the mysql\nsystem schema. This is necessary because CREATE FUNCTION adds a row to\nthe mysql.func system table that records the function\'s name, type, and\nshared library name.\n\nUDFs registered using CREATE FUNCTION are listed in the Performance\nSchema user_defined_functions table; see\nhttps://dev.mysql.com/doc/refman/8.0/en/user-defined-functions-table.ht\nml.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/create-function-udf.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/create-function-udf.html'),(620,'DROP FUNCTION UDF',39,'Syntax:\nDROP FUNCTION function_name\n\nThis statement drops the user-defined function (UDF) named\nfunction_name.\n\nTo drop a function, you must have the DELETE privilege for the mysql\nsystem schema. This is because DROP FUNCTION removes a row from the\nmysql.func system table that records the function\'s name, type, and\nshared library name.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/drop-function-udf.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/drop-function-udf.html'),(621,'INSTALL COMPONENT',40,'Syntax:\nINSTALL COMPONENT component_name [, component_name ] ...\n\nThis statement installs one or more server components, which become\nactive immediately. A component provides services that are available to\nthe server and other components; see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-components.html. INSTALL\nCOMPONENT requires the INSERT privilege for the mysql.component system\ntable.\n\nExample:\n\nINSTALL COMPONENT \'file://component1\', \'file://component2\';\n\nComponent names are URNs that begin with file:// and indicate the base\nname of the file that implements the component, located in the\ndirectory named by the plugin_dir system variable. Component names do\nnot include any platform-dependent file name suffix such as .so or\n.dll. (These naming details are subject to change because component\nname interpretation is itself performed by a service and the component\ninfrastructure makes it possible to replace the default service\nimplementation with alternative implementations.)\n\nIf any error occurs, the statement fails and has no effect. For\nexample, this happens if a component name is erroneous, a named\ncomponent does not exist or is already installed, or component\ninitialization fails.\n\nA loader service handles component loading, which includes adding\ninstalled components to the mysql.component system table that serves as\na registry. For subsequent server restarts, any components listed in\nmysql.component are loaded by the loader service during the startup\nsequence. This occurs even if the server is started with the\n--skip-grant-tables option.\n\nIf a component depends on services not present in the registry and you\nattempt to install the component without also installing the component\nor components that provide the services on which it depends, an error\noccurs:\n\nERROR 3527 (HY000): Cannot satisfy dependency for service \'component_a\'\nrequired by component \'component_b\'.\n\nTo avoid this problem, either install all components in the same\nstatement, or install the dependent component after installing any\ncomponents on which it depends.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/install-component.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/install-component.html'),(622,'INSTALL PLUGIN',41,'Syntax:\nINSTALL PLUGIN plugin_name SONAME \'shared_library_name\'\n\nThis statement installs a server plugin. It requires the INSERT\nprivilege for the mysql.plugin system table.\n\nplugin_name is the name of the plugin as defined in the plugin\ndescriptor structure contained in the library file (see\nhttps://dev.mysql.com/doc/refman/8.0/en/plugin-data-structures.html).\nPlugin names are not case-sensitive. For maximal compatibility, plugin\nnames should be limited to ASCII letters, digits, and underscore\nbecause they are used in C source files, shell command lines, M4 and\nBourne shell scripts, and SQL environments.\n\nshared_library_name is the name of the shared library that contains the\nplugin code. The name includes the file name extension (for example,\nlibmyplugin.so, libmyplugin.dll, or libmyplugin.dylib).\n\nThe shared library must be located in the plugin directory (the\ndirectory named by the plugin_dir system variable). The library must be\nin the plugin directory itself, not in a subdirectory. By default,\nplugin_dir is the plugin directory under the directory named by the\npkglibdir configuration variable, but it can be changed by setting the\nvalue of plugin_dir at server startup. For example, set its value in a\nmy.cnf file:\n\n[mysqld]\nplugin_dir=/path/to/plugin/directory\n\nIf the value of plugin_dir is a relative path name, it is taken to be\nrelative to the MySQL base directory (the value of the basedir system\nvariable).\n\nINSTALL PLUGIN loads and initializes the plugin code to make the plugin\navailable for use. A plugin is initialized by executing its\ninitialization function, which handles any setup that the plugin must\nperform before it can be used. When the server shuts down, it executes\nthe deinitialization function for each plugin that is loaded so that\nthe plugin has a chance to perform any final cleanup.\n\nINSTALL PLUGIN also registers the plugin by adding a line that\nindicates the plugin name and library file name to the mysql.plugin\nsystem table. At server startup, the server loads and initializes any\nplugin that is listed in mysql.plugin. This means that a plugin is\ninstalled with INSTALL PLUGIN only once, not every time the server\nstarts. Plugin loading at startup does not occur if the server is\nstarted with the --skip-grant-tables option.\n\nA plugin library can contain multiple plugins. For each of them to be\ninstalled, use a separate INSTALL PLUGIN statement. Each statement\nnames a different plugin, but all of them specify the same library\nname.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/install-plugin.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/install-plugin.html'),(623,'UNINSTALL COMPONENT',40,'Syntax:\nUNINSTALL COMPONENT component_name [, component_name ] ...\n\nThis statement deactivates and uninstalls one or more server\ncomponents. A component provides services that are available to the\nserver and other components; see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-components.html.\nUNINSTALL COMPONENT is the complement of INSTALL COMPONENT. It requires\nthe DELETE privilege for the mysql.component system table.\n\nExample:\n\nUNINSTALL COMPONENT \'file://component1\', \'file://component2\';\n\nFor information about component naming, see [HELP INSTALL COMPONENT].\n\nIf any error occurs, the statement fails and has no effect. For\nexample, this happens if a component name is erroneous, a named\ncomponent is not installed, or cannot be uninstalled because other\ninstalled components depend on it.\n\nA loader service handles component unloading, which includes removing\nuninstalled components from the mysql.component system table that\nserves as a registry. As a result, unloaded components are not loaded\nduring the startup sequence for subsequent server restarts.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/uninstall-component.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/uninstall-component.html'),(624,'UNINSTALL PLUGIN',40,'Syntax:\nUNINSTALL PLUGIN plugin_name\n\nThis statement removes an installed server plugin. It requires the\nDELETE privilege for the mysql.plugin system table. UNINSTALL PLUGIN is\nthe complement of INSTALL PLUGIN.\n\nplugin_name must be the name of some plugin that is listed in the\nmysql.plugin table. The server executes the plugin\'s deinitialization\nfunction and removes the row for the plugin from the mysql.plugin\nsystem table, so that subsequent server restarts will not load and\ninitialize the plugin. UNINSTALL PLUGIN does not remove the plugin\'s\nshared library file.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/uninstall-plugin.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/uninstall-plugin.html'),(625,'CLONE',40,'Syntax:\nCLONE clone_action\n\nclone_action: {\n    LOCAL DATA DIRECTORY [=] \'clone_dir\';\n  | INSTANCE FROM \'user\'@\'host\':port\n    IDENTIFIED BY \'password\'\n    [DATA DIRECTORY [=] \'clone_dir\']\n    [REQUIRE [NO] SSL]\n}	\n\nThe CLONE statement is used to clone data locally or from a remote\nMySQL server instance. To use CLONE syntax, the clone plugin must be\ninstalled. See\nhttps://dev.mysql.com/doc/refman/8.0/en/clone-plugin.html.\n\nCLONE LOCAL DATA DIRECTORY syntax clones data from the local MySQL data\ndirectory to a directory on the same server or node where the MySQL\nserver instance runs. The \'clone_dir\' directory is the full path of the\nlocal directory that data is cloned to. An absolute path is required.\nThe specified directory must not exist, but the specified path must be\nan existent path. The MySQL server requires the necessary write access\nto create the specified directory. For more information, see\nhttps://dev.mysql.com/doc/refman/8.0/en/clone-plugin-local.html.\n\nCLONE INSTANCE syntax clones data from a remote MySQL server instance\n(the donor) and transfers it to the MySQL instance where the cloning\noperation was initiated (the recipient).\n\no user is the clone user on the donor MySQL server instance.\n\no host is the hostname address of the donor MySQL server instance.\n  Internet Protocol version 6 (IPv6) address format is not supported.\n  An alias to the IPv6 address can be used instead. An IPv4 address can\n  be used as is.\n\no port is the port number of the donor MySQL server instance. (The X\n  Protocol port specified by mysqlx_port is not supported. Connecting\n  to the donor MySQL server instance through MySQL Router is also not\n  supported.)\n\no IDENTIFIED BY \'password\' specifies the password of the clone user on\n  the donor MySQL server instance.\n\no DATA DIRECTORY [=] \'clone_dir\' is an optional clause used to specify\n  a directory on the recipient for the data you are cloning. Use this\n  option if you do not want to remove existing data in the recipient\n  data directory. An absolute path is required, and the directory must\n  not exist. The MySQL server must have the necessary write access to\n  create the directory.\n\n  When the optional DATA DIRECTORY [=] \'clone_dir\' clause is not used,\n  a cloning operation removes existing data in the recipient data\n  directory, replaces it with the cloned data, and automatically\n  restarts the server afterward.\n\no [REQUIRE [NO] SSL] explicitly specifies whether an encrypted\n  connection is to be used or not when transferring cloned data over\n  the network. An error is returned if the explicit specification\n  cannot be satisfied. If an SSL clause is not specified, clone\n  attempts to establish an encrypted connection by default, falling\n  back to an insecure connection if the secure connection attempt\n  fails. A secure connection is required when cloning encrypted data\n  regardless of whether this clause is specified. For more information,\n  see\n  https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-remote.html#clon\n  e-plugin-remote-ssl.\n\nFor additional information about cloning data from a remote MySQL\nserver instance, see\nhttps://dev.mysql.com/doc/refman/8.0/en/clone-plugin-remote.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/clone.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/clone.html'),(626,'SET',3,'Syntax:\nSET variable = expr [, variable = expr] ...\n\nvariable: {\n    user_var_name\n  | param_name\n  | local_var_name\n  | {GLOBAL | @@GLOBAL.} system_var_name\n  | {PERSIST | @@PERSIST.} system_var_name\n  | {PERSIST_ONLY | @@PERSIST_ONLY.} system_var_name\n  | [SESSION | @@SESSION. | @@] system_var_name\n}\n\nSET syntax for variable assignment enables you to assign values to\ndifferent types of variables that affect the operation of the server or\nclients:\n\no User-defined variables. See\n  https://dev.mysql.com/doc/refman/8.0/en/user-variables.html.\n\no Stored procedure and function parameters, and stored program local\n  variables. See\n  https://dev.mysql.com/doc/refman/8.0/en/stored-program-variables.html\n  .\n\no System variables. See\n  https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n  System variables also can be set at server startup, as described in\n  https://dev.mysql.com/doc/refman/8.0/en/using-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-variable.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-variable.html'),(627,'SET CHARACTER SET',3,'Syntax:\nSET {CHARACTER SET | CHARSET}\n    {\'charset_name\' | DEFAULT}\n\nThis statement maps all strings sent between the server and the current\nclient with the given mapping. SET CHARACTER SET sets three session\nsystem variables: character_set_client and character_set_results are\nset to the given character set, and character_set_connection to the\nvalue of character_set_database. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-connection.html.\n\ncharset_name may be quoted or unquoted.\n\nThe default character set mapping can be restored by using the value\nDEFAULT. The default depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET CHARACTER SET produces an error. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-character-set.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-character-set.html'),(628,'SET CHARSET',3,'Syntax:\nSET {CHARACTER SET | CHARSET}\n    {\'charset_name\' | DEFAULT}\n\nThis statement maps all strings sent between the server and the current\nclient with the given mapping. SET CHARACTER SET sets three session\nsystem variables: character_set_client and character_set_results are\nset to the given character set, and character_set_connection to the\nvalue of character_set_database. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-connection.html.\n\ncharset_name may be quoted or unquoted.\n\nThe default character set mapping can be restored by using the value\nDEFAULT. The default depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET CHARACTER SET produces an error. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-character-set.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-character-set.html'),(629,'SET NAMES',3,'Syntax:\nSET NAMES {\'charset_name\'\n    [COLLATE \'collation_name\'] | DEFAULT}\n\nThis statement sets the three session system variables\ncharacter_set_client, character_set_connection, and\ncharacter_set_results to the given character set. Setting\ncharacter_set_connection to charset_name also sets collation_connection\nto the default collation for charset_name. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-connection.html.\n\nThe optional COLLATE clause may be used to specify a collation\nexplicitly. If given, the collation must one of the permitted\ncollations for charset_name.\n\ncharset_name and collation_name may be quoted or unquoted.\n\nThe default mapping can be restored by using a value of DEFAULT. The\ndefault depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET NAMES produces an error. See\nhttps://dev.mysql.com/doc/refman/8.0/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/set-names.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/set-names.html'),(630,'SHOW',3,'SHOW has many forms that provide information about databases, tables,\ncolumns, or status information about the server. This section describes\nthose following:\n\nSHOW {BINARY | MASTER} LOGS\nSHOW BINLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW CHARACTER SET [like_or_where]\nSHOW COLLATION [like_or_where]\nSHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]\nSHOW CREATE DATABASE db_name\nSHOW CREATE EVENT event_name\nSHOW CREATE FUNCTION func_name\nSHOW CREATE PROCEDURE proc_name\nSHOW CREATE TABLE tbl_name\nSHOW CREATE TRIGGER trigger_name\nSHOW CREATE VIEW view_name\nSHOW DATABASES [like_or_where]\nSHOW ENGINE engine_name {STATUS | MUTEX}\nSHOW [STORAGE] ENGINES\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW EVENTS\nSHOW FUNCTION CODE func_name\nSHOW FUNCTION STATUS [like_or_where]\nSHOW GRANTS FOR user\nSHOW INDEX FROM tbl_name [FROM db_name]\nSHOW MASTER STATUS\nSHOW OPEN TABLES [FROM db_name] [like_or_where]\nSHOW PLUGINS\nSHOW PROCEDURE CODE proc_name\nSHOW PROCEDURE STATUS [like_or_where]\nSHOW PRIVILEGES\nSHOW [FULL] PROCESSLIST\nSHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]\nSHOW PROFILES\nSHOW RELAYLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW SLAVE HOSTS\nSHOW SLAVE STATUS [FOR CHANNEL channel]\nSHOW [GLOBAL | SESSION] STATUS [like_or_where]\nSHOW TABLE STATUS [FROM db_name] [like_or_where]\nSHOW [FULL] TABLES [FROM db_name] [like_or_where]\nSHOW TRIGGERS [FROM db_name] [like_or_where]\nSHOW [GLOBAL | SESSION] VARIABLES [like_or_where]\nSHOW WARNINGS [LIMIT [offset,] row_count]\n\nlike_or_where:\n    LIKE \'pattern\'\n  | WHERE expr\n\nIf the syntax for a given SHOW statement includes a LIKE \'pattern\'\npart, \'pattern\' is a string that can contain the SQL % and _ wildcard\ncharacters. The pattern is useful for restricting statement output to\nmatching values.\n\nSeveral SHOW statements also accept a WHERE clause that provides more\nflexibility in specifying which rows to display. See\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show.html'),(631,'SHOW BINARY LOGS',3,'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged. SHOW BINARY LOGS requires\nthe REPLICATION CLIENT or SUPER privilege.\n\nEncrypted binary log files have a 512-byte file header that stores\ninformation required for encryption and decryption of the file. This is\nincluded in the file size displayed by SHOW BINARY LOGS. The Encrypted\ncolumn shows whether or not the binary log file is encrypted. Binary\nlog encryption is active if binlog_encryption=ON is set for the server.\nExisting binary log files are not encrypted or decrypted if binary log\nencryption is activated or deactivated while the server is running.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000015 |    724935 |       Yes |\n| binlog.000016 |    733481 |       Yes |\n+---------------+-----------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-binary-logs.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-binary-logs.html'),(632,'SHOW MASTER LOGS',3,'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged. SHOW BINARY LOGS requires\nthe REPLICATION CLIENT or SUPER privilege.\n\nEncrypted binary log files have a 512-byte file header that stores\ninformation required for encryption and decryption of the file. This is\nincluded in the file size displayed by SHOW BINARY LOGS. The Encrypted\ncolumn shows whether or not the binary log file is encrypted. Binary\nlog encryption is active if binlog_encryption=ON is set for the server.\nExisting binary log files are not encrypted or decrypted if binary log\nencryption is activated or deactivated while the server is running.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000015 |    724935 |       Yes |\n| binlog.000016 |    733481 |       Yes |\n+---------------+-----------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-binary-logs.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-binary-logs.html'),(633,'SHOW BINLOG EVENTS',3,'Syntax:\nSHOW BINLOG EVENTS\n   [IN \'log_name\']\n   [FROM pos]\n   [LIMIT [offset,] row_count]\n\nShows the events in the binary log. If you do not specify \'log_name\',\nthe first binary log is displayed. SHOW BINLOG EVENTS requires the\nREPLICATION SLAVE privilege.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-binlog-events.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-binlog-events.html'),(634,'SHOW CHARACTER SET',3,'Syntax:\nSHOW CHARACTER SET\n    [LIKE \'pattern\' | WHERE expr]\n\nThe SHOW CHARACTER SET statement shows all available character sets.\nThe LIKE clause, if present, indicates which character set names to\nmatch. The WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html. For\nexample:\n\nmysql> SHOW CHARACTER SET LIKE \'latin%\';\n+---------+-----------------------------+-------------------+--------+\n| Charset | Description                 | Default collation | Maxlen |\n+---------+-----------------------------+-------------------+--------+\n| latin1  | cp1252 West European        | latin1_swedish_ci |      1 |\n| latin2  | ISO 8859-2 Central European | latin2_general_ci |      1 |\n| latin5  | ISO 8859-9 Turkish          | latin5_turkish_ci |      1 |\n| latin7  | ISO 8859-13 Baltic          | latin7_general_ci |      1 |\n+---------+-----------------------------+-------------------+--------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-character-set.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-character-set.html'),(635,'SHOW COLLATION',3,'Syntax:\nSHOW COLLATION\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement lists collations supported by the server. By default,\nthe output from SHOW COLLATION includes all available collations. The\nLIKE clause, if present, indicates which collation names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html. For\nexample:\n\nmysql> SHOW COLLATION WHERE Charset = \'latin1\';\n+-------------------+---------+----+---------+----------+---------+\n| Collation         | Charset | Id | Default | Compiled | Sortlen |\n+-------------------+---------+----+---------+----------+---------+\n| latin1_german1_ci | latin1  |  5 |         | Yes      |       1 |\n| latin1_swedish_ci | latin1  |  8 | Yes     | Yes      |       1 |\n| latin1_danish_ci  | latin1  | 15 |         | Yes      |       1 |\n| latin1_german2_ci | latin1  | 31 |         | Yes      |       2 |\n| latin1_bin        | latin1  | 47 |         | Yes      |       1 |\n| latin1_general_ci | latin1  | 48 |         | Yes      |       1 |\n| latin1_general_cs | latin1  | 49 |         | Yes      |       1 |\n| latin1_spanish_ci | latin1  | 94 |         | Yes      |       1 |\n+-------------------+---------+----+---------+----------+---------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-collation.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-collation.html'),(636,'SHOW COLUMNS',3,'Syntax:\nSHOW [EXTENDED] [FULL] {COLUMNS | FIELDS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. SHOW COLUMNS displays information only for\nthose columns for which you have some privilege.\n\nmysql> SHOW COLUMNS FROM City;\n+-------------+----------+------+-----+---------+----------------+\n| Field       | Type     | Null | Key | Default | Extra          |\n+-------------+----------+------+-----+---------+----------------+\n| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name        | char(35) | NO   |     |         |                |\n| CountryCode | char(3)  | NO   | MUL |         |                |\n| District    | char(20) | NO   |     |         |                |\n| Population  | int(11)  | NO   |     | 0       |                |\n+-------------+----------+------+-----+---------+----------------+\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n\nThe optional EXTENDED keyword causes the output to include information\nabout hidden columns that MySQL uses internally and are not accessible\nby users.\n\nThe optional FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each\ncolumn.\n\nThe LIKE clause, if present, indicates which column names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nThe data types may differ from what you expect them to be based on a\nCREATE TABLE statement because MySQL sometimes changes data types when\nyou create or alter a table. The conditions under which this occurs are\ndescribed in\nhttps://dev.mysql.com/doc/refman/8.0/en/silent-column-changes.html.\n\nSHOW COLUMNS displays the following values for each table column:\n\no Field\n\n  The name of the column.\n\no Type\n\n  The column data type.\n\no Collation\n\n  The collation for nonbinary string columns, or NULL for other\n  columns. This value is displayed only if you use the FULL keyword.\n\no Null\n\n  The column nullability. The value is YES if NULL values can be stored\n  in the column, NO if not.\n\no Key\n\n  Whether the column is indexed:\n\n  o If Key is empty, the column either is not indexed or is indexed\n    only as a secondary column in a multiple-column, nonunique index.\n\n  o If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n    in a multiple-column PRIMARY KEY.\n\n  o If Key is UNI, the column is the first column of a UNIQUE index. (A\n    UNIQUE index permits multiple NULL values, but you can tell whether\n    the column permits NULL by checking the Null field.)\n\n  o If Key is MUL, the column is the first column of a nonunique index\n    in which multiple occurrences of a given value are permitted within\n    the column.\n\n  If more than one of the Key values applies to a given column of a\n  table, Key displays the one with the highest priority, in the order\n  PRI, UNI, MUL.\n\n  A UNIQUE index may be displayed as PRI if it cannot contain NULL\n  values and there is no PRIMARY KEY in the table. A UNIQUE index may\n  display as MUL if several columns form a composite UNIQUE index;\n  although the combination of the columns is unique, each column can\n  still hold multiple occurrences of a given value.\n\no Default\n\n  The default value for the column. This is NULL if the column has an\n  explicit default of NULL, or if the column definition includes no\n  DEFAULT clause.\n\no Extra\n\n  Any additional information that is available about a given column.\n  The value is nonempty in these cases:\n\n  o auto_increment for columns that have the AUTO_INCREMENT attribute.\n\n  o on update CURRENT_TIMESTAMP for TIMESTAMP or DATETIME columns that\n    have the ON UPDATE CURRENT_TIMESTAMP attribute.\n\n  o VIRTUAL GENERATED or VIRTUAL STORED for generated columns.\n\n  o DEFAULT_GENERATED for columns that have an expression default\n    value.\n\no Privileges\n\n  The privileges you have for the column. This value is displayed only\n  if you use the FULL keyword.\n\no Comment\n\n  Any comment included in the column definition. This value is\n  displayed only if you use the FULL keyword.\n\nTable column information is also available from the INFORMATION_SCHEMA\nCOLUMNS table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/columns-table.html. The\nextended information about hidden columns is available only using SHOW\nEXTENDED COLUMNS; it cannot be obtained from the COLUMNS table.\n\nYou can list a table\'s columns with the mysqlshow db_name tbl_name\ncommand.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee https://dev.mysql.com/doc/refman/8.0/en/describe.html.\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-columns.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-columns.html'),(637,'SHOW FIELDS',3,'Syntax:\nSHOW [EXTENDED] [FULL] {COLUMNS | FIELDS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. SHOW COLUMNS displays information only for\nthose columns for which you have some privilege.\n\nmysql> SHOW COLUMNS FROM City;\n+-------------+----------+------+-----+---------+----------------+\n| Field       | Type     | Null | Key | Default | Extra          |\n+-------------+----------+------+-----+---------+----------------+\n| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name        | char(35) | NO   |     |         |                |\n| CountryCode | char(3)  | NO   | MUL |         |                |\n| District    | char(20) | NO   |     |         |                |\n| Population  | int(11)  | NO   |     | 0       |                |\n+-------------+----------+------+-----+---------+----------------+\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n\nThe optional EXTENDED keyword causes the output to include information\nabout hidden columns that MySQL uses internally and are not accessible\nby users.\n\nThe optional FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each\ncolumn.\n\nThe LIKE clause, if present, indicates which column names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nThe data types may differ from what you expect them to be based on a\nCREATE TABLE statement because MySQL sometimes changes data types when\nyou create or alter a table. The conditions under which this occurs are\ndescribed in\nhttps://dev.mysql.com/doc/refman/8.0/en/silent-column-changes.html.\n\nSHOW COLUMNS displays the following values for each table column:\n\no Field\n\n  The name of the column.\n\no Type\n\n  The column data type.\n\no Collation\n\n  The collation for nonbinary string columns, or NULL for other\n  columns. This value is displayed only if you use the FULL keyword.\n\no Null\n\n  The column nullability. The value is YES if NULL values can be stored\n  in the column, NO if not.\n\no Key\n\n  Whether the column is indexed:\n\n  o If Key is empty, the column either is not indexed or is indexed\n    only as a secondary column in a multiple-column, nonunique index.\n\n  o If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n    in a multiple-column PRIMARY KEY.\n\n  o If Key is UNI, the column is the first column of a UNIQUE index. (A\n    UNIQUE index permits multiple NULL values, but you can tell whether\n    the column permits NULL by checking the Null field.)\n\n  o If Key is MUL, the column is the first column of a nonunique index\n    in which multiple occurrences of a given value are permitted within\n    the column.\n\n  If more than one of the Key values applies to a given column of a\n  table, Key displays the one with the highest priority, in the order\n  PRI, UNI, MUL.\n\n  A UNIQUE index may be displayed as PRI if it cannot contain NULL\n  values and there is no PRIMARY KEY in the table. A UNIQUE index may\n  display as MUL if several columns form a composite UNIQUE index;\n  although the combination of the columns is unique, each column can\n  still hold multiple occurrences of a given value.\n\no Default\n\n  The default value for the column. This is NULL if the column has an\n  explicit default of NULL, or if the column definition includes no\n  DEFAULT clause.\n\no Extra\n\n  Any additional information that is available about a given column.\n  The value is nonempty in these cases:\n\n  o auto_increment for columns that have the AUTO_INCREMENT attribute.\n\n  o on update CURRENT_TIMESTAMP for TIMESTAMP or DATETIME columns that\n    have the ON UPDATE CURRENT_TIMESTAMP attribute.\n\n  o VIRTUAL GENERATED or VIRTUAL STORED for generated columns.\n\n  o DEFAULT_GENERATED for columns that have an expression default\n    value.\n\no Privileges\n\n  The privileges you have for the column. This value is displayed only\n  if you use the FULL keyword.\n\no Comment\n\n  Any comment included in the column definition. This value is\n  displayed only if you use the FULL keyword.\n\nTable column information is also available from the INFORMATION_SCHEMA\nCOLUMNS table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/columns-table.html. The\nextended information about hidden columns is available only using SHOW\nEXTENDED COLUMNS; it cannot be obtained from the COLUMNS table.\n\nYou can list a table\'s columns with the mysqlshow db_name tbl_name\ncommand.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee https://dev.mysql.com/doc/refman/8.0/en/describe.html.\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-columns.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-columns.html'),(638,'SHOW CREATE DATABASE',3,'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n\nShows the CREATE DATABASE statement that creates the named database. If\nthe SHOW statement includes an IF NOT EXISTS clause, the output too\nincludes such a clause. SHOW CREATE SCHEMA is a synonym for SHOW CREATE\nDATABASE.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-database.html\n\n','mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test` /*!40100 DEFAULT CHARACTER SET utf8mb4 \n                 COLLATE utf8mb4_0900_ai_ci */ /*!80014 DEFAULT ENCRYPTION=\'N\' */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test` /*!40100 DEFAULT CHARACTER SET utf8mb4 \n                 COLLATE utf8mb4_0900_ai_ci */ /*!80014 DEFAULT ENCRYPTION=\'N\' */   \n','https://dev.mysql.com/doc/refman/8.0/en/show-create-database.html'),(639,'SHOW CREATE SCHEMA',3,'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n\nShows the CREATE DATABASE statement that creates the named database. If\nthe SHOW statement includes an IF NOT EXISTS clause, the output too\nincludes such a clause. SHOW CREATE SCHEMA is a synonym for SHOW CREATE\nDATABASE.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-database.html\n\n','mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test` /*!40100 DEFAULT CHARACTER SET utf8mb4 \n                 COLLATE utf8mb4_0900_ai_ci */ /*!80014 DEFAULT ENCRYPTION=\'N\' */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test` /*!40100 DEFAULT CHARACTER SET utf8mb4 \n                 COLLATE utf8mb4_0900_ai_ci */ /*!80014 DEFAULT ENCRYPTION=\'N\' */   \n','https://dev.mysql.com/doc/refman/8.0/en/show-create-database.html'),(640,'SHOW CREATE EVENT',3,'Syntax:\nSHOW CREATE EVENT event_name\n\nThis statement displays the CREATE EVENT statement needed to re-create\na given event. It requires the EVENT privilege for the database from\nwhich the event is to be shown. For example (using the same event\ne_daily defined and then altered in [HELP SHOW EVENTS]):\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-event.html\n\n','mysql> SHOW CREATE EVENT myschema.e_daily\\G\n*************************** 1. row ***************************\n               Event: e_daily\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_ENGINE_SUBSTITUTION\n           time_zone: SYSTEM\n        Create Event: CREATE DEFINER=`jon`@`ghidora` EVENT `e_daily`\n                        ON SCHEDULE EVERY 1 DAY\n                        STARTS CURRENT_TIMESTAMP + INTERVAL 6 HOUR\n                        ON COMPLETION NOT PRESERVE\n                        ENABLE\n                        COMMENT \'Saves total number of sessions then\n                                clears the table each day\'\n                        DO BEGIN\n                          INSERT INTO site_activity.totals (time, total)\n                            SELECT CURRENT_TIMESTAMP, COUNT(*)\n                              FROM site_activity.sessions;\n                          DELETE FROM site_activity.sessions;\n                        END\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\n  Database Collation: utf8mb4_0900_ai_ci\n','https://dev.mysql.com/doc/refman/8.0/en/show-create-event.html'),(641,'SHOW CREATE FUNCTION',3,'Syntax:\nSHOW CREATE FUNCTION func_name\n\nThis statement is similar to SHOW CREATE PROCEDURE but for stored\nfunctions. See [HELP SHOW CREATE PROCEDURE].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-function.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-create-function.html'),(642,'SHOW CREATE PROCEDURE',3,'Syntax:\nSHOW CREATE PROCEDURE proc_name\n\nThis statement is a MySQL extension. It returns the exact string that\ncan be used to re-create the named stored procedure. A similar\nstatement, SHOW CREATE FUNCTION, displays information about stored\nfunctions (see [HELP SHOW CREATE FUNCTION]).\n\nTo use either statement, you must have the global SELECT privilege.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-procedure.html\n\n','mysql> SHOW CREATE PROCEDURE test.simpleproc\\G\n*************************** 1. row ***************************\n           Procedure: simpleproc\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_ENGINE_SUBSTITUTION\n    Create Procedure: CREATE PROCEDURE `simpleproc`(OUT param1 INT)\n                      BEGIN\n                      SELECT COUNT(*) INTO param1 FROM t;\n                      END\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\n  Database Collation: utf8mb4_0900_ai_ci\n\nmysql> SHOW CREATE FUNCTION test.hello\\G\n*************************** 1. row ***************************\n            Function: hello\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_ENGINE_SUBSTITUTION\n     Create Function: CREATE FUNCTION `hello`(s CHAR(20))\n                      RETURNS char(50) CHARSET utf8mb4\n                      RETURN CONCAT(\'Hello, \',s,\'!\')\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\n  Database Collation: utf8mb4_0900_ai_ci\n','https://dev.mysql.com/doc/refman/8.0/en/show-create-procedure.html'),(643,'SHOW CREATE TABLE',3,'Syntax:\nSHOW CREATE TABLE tbl_name\n\nShows the CREATE TABLE statement that creates the named table. To use\nthis statement, you must have some privilege for the table. This\nstatement also works with views.\n\nAs of MySQL 8.0.16, MySQL implements CHECK constraints and SHOW CREATE\nTABLE displays them. All CHECK constraints are displayed as table\nconstraints. That is, a CHECK constraint originally specified as part\nof a column definition displays as a separate clause not part of the\ncolumn definition. Example:\n\nmysql> CREATE TABLE t1 (\n         i1 INT CHECK (i1 <> 0),      -- column constraint\n         i2 INT,\n         CHECK (i2 > i1),             -- table constraint\n         CHECK (i2 <> 0) NOT ENFORCED -- table constraint, not enforced\n       );\n\nmysql> SHOW CREATE TABLE t1\\G\n*************************** 1. row ***************************\n       Table: t1\nCreate Table: CREATE TABLE `t1` (\n  `i1` int(11) DEFAULT NULL,\n  `i2` int(11) DEFAULT NULL,\n  CONSTRAINT `t1_chk_1` CHECK ((`i1` <> 0)),\n  CONSTRAINT `t1_chk_2` CHECK ((`i2` > `i1`)),\n  CONSTRAINT `t1_chk_3` CHECK ((`i2` <> 0)) /*!80016 NOT ENFORCED */\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\n\nSHOW CREATE TABLE quotes table and column names according to the value\nof the sql_quote_show_create option. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nFor information about how CREATE TABLE statements are stored by MySQL,\nsee\nhttps://dev.mysql.com/doc/refman/8.0/en/create-table-statement-retentio\nn.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-table.html\n\n','mysql> SHOW CREATE TABLE t\\G\n*************************** 1. row ***************************\n       Table: t\nCreate Table: CREATE TABLE `t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `s` char(60) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n','https://dev.mysql.com/doc/refman/8.0/en/show-create-table.html'),(644,'SHOW CREATE TRIGGER',3,'Syntax:\nSHOW CREATE TRIGGER trigger_name\n\nThis statement shows the CREATE TRIGGER statement that creates the\nnamed trigger. This statement requires the TRIGGER privilege for the\ntable associated with the trigger.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-trigger.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-create-trigger.html'),(645,'SHOW CREATE USER',3,'Syntax:\nSHOW CREATE USER user\n\nThis statement shows the CREATE USER statement that creates the named\nuser. An error occurs if the user does not exist. The statement\nrequires the SELECT privilege for the mysql system schema, except to\nsee information for the current user. For the current user, the SELECT\nprivilege for the mysql.user system table is required for display of\nthe password hash in the IDENTIFIED AS clause; otherwise, the hash\ndisplays as <secret>.\n\nTo name the account, use the format described in\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html. The host\nname part of the account name, if omitted, defaults to \'%\'. It is also\npossible to specify CURRENT_USER or CURRENT_USER() to refer to the\naccount associated with the current session.\n\nPassword hash values displayed in the IDENTIFIED WITH clause of output\nfrom SHOW CREATE USER may contain unprintable characters that have\nadverse effects on terminal displays and in other environments.\nEnabling the print_identified_with_as_hex system variable (available as\nof MySQL 8.0.17) causes SHOW CREATE USER to display such hash values as\nhexadecimal strings rather than as regular string literals. Hash values\nthat do not contain unprintable characters still display as regular\nstring literals, even with this variable enabled.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-user.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-create-user.html'),(646,'SHOW CREATE VIEW',3,'Syntax:\nSHOW CREATE VIEW view_name\n\nThis statement shows the CREATE VIEW statement that creates the named\nview.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-create-view.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-create-view.html'),(647,'SHOW DATABASES',3,'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nMySQL implements databases as directories in the data directory, so\nthis statement simply lists directories in that location. However, the\noutput may include names of directories that do not correspond to\nactual databases.\n\nDatabase information is also available from the INFORMATION_SCHEMA\nSCHEMATA table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/schemata-table.html.\n\n*Caution*:\n\nBecause any static global privilege is considered a privilege for all\ndatabases, any static global privilege enables a user to see all\ndatabase names with SHOW DATABASES or by examining the SCHEMATA table\nof INFORMATION_SCHEMA, except databases that have been restricted at\nthe database level by partial revokes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-databases.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-databases.html'),(648,'SHOW SCHEMAS',3,'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nMySQL implements databases as directories in the data directory, so\nthis statement simply lists directories in that location. However, the\noutput may include names of directories that do not correspond to\nactual databases.\n\nDatabase information is also available from the INFORMATION_SCHEMA\nSCHEMATA table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/schemata-table.html.\n\n*Caution*:\n\nBecause any static global privilege is considered a privilege for all\ndatabases, any static global privilege enables a user to see all\ndatabase names with SHOW DATABASES or by examining the SCHEMATA table\nof INFORMATION_SCHEMA, except databases that have been restricted at\nthe database level by partial revokes.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-databases.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-databases.html'),(649,'SHOW ENGINE',3,'Syntax:\nSHOW ENGINE engine_name {STATUS | MUTEX}\n\nSHOW ENGINE displays operational information about a storage engine. It\nrequires the PROCESS privilege. The statement has these variants:\n\nSHOW ENGINE INNODB STATUS\nSHOW ENGINE INNODB MUTEX\nSHOW ENGINE PERFORMANCE_SCHEMA STATUS\n\nSHOW ENGINE INNODB STATUS displays extensive information from the\nstandard InnoDB Monitor about the state of the InnoDB storage engine.\nFor information about the standard monitor and other InnoDB Monitors\nthat provide information about InnoDB processing, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-monitors.html.\n\nSHOW ENGINE INNODB MUTEX displays InnoDB mutex and rw-lock statistics.\n\n*Note*:\n\nInnoDB mutexes and rwlocks can also be monitored using Performance\nSchema tables. See\nhttps://dev.mysql.com/doc/refman/8.0/en/monitor-innodb-mutex-waits-perf\normance-schema.html.\n\nMutex statistics collection is configured dynamically using the\nfollowing options:\n\no To enable the collection of mutex statistics, run:\n\nSET GLOBAL innodb_monitor_enable=\'latch\';\n\no To reset mutex statistics, run:\n\nSET GLOBAL innodb_monitor_reset=\'latch\';\n\no To disable the collection of mutex statistics, run:\n\nSET GLOBAL innodb_monitor_disable=\'latch\';\n\nCollection of mutex statistics for SHOW ENGINE INNODB MUTEX can also be\nenabled by setting innodb_monitor_enable=\'all\', or disabled by setting\ninnodb_monitor_disable=\'all\'.\n\nSHOW ENGINE INNODB MUTEX output has these columns:\n\no Type\n\n  Always InnoDB.\n\no Name\n\n  For mutexes, the Name field reports only the mutex name. For rwlocks,\n  the Name field reports the source file where the rwlock is\n  implemented, and the line number in the file where the rwlock is\n  created. The line number is specific to your version of MySQL.\n\no Status\n\n  The mutex status. This field reports the number of spins, waits, and\n  calls. Statistics for low-level operating system mutexes, which are\n  implemented outside of InnoDB, are not reported.\n\n  o spins indicates the number of spins.\n\n  o waits indicates the number of mutex waits.\n\n  o calls indicates how many times the mutex was requested.\n\nSHOW ENGINE INNODB MUTEX skips the mutexes and rw-locks of buffer pool\nblocks, as the amount of output can be overwhelming on systems with a\nlarge buffer pool. (There is one mutex and one rw-lock in each 16K\nbuffer pool block, and there are 65,536 blocks per gigabyte.) SHOW\nENGINE INNODB MUTEX also does not list any mutexes or rw-locks that\nhave never been waited on (os_waits=0). Thus, SHOW ENGINE INNODB MUTEX\nonly displays information about mutexes and rw-locks outside of the\nbuffer pool that have caused at least one OS-level wait.\n\nUse SHOW ENGINE PERFORMANCE_SCHEMA STATUS to inspect the internal\noperation of the Performance Schema code:\n\nmysql> SHOW ENGINE PERFORMANCE_SCHEMA STATUS\\G\n...\n*************************** 3. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.size\nStatus: 76\n*************************** 4. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.count\nStatus: 10000\n*************************** 5. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.memory\nStatus: 760000\n...\n*************************** 57. row ***************************\n  Type: performance_schema\n  Name: performance_schema.memory\nStatus: 26459600\n...\n\nThis statement is intended to help the DBA understand the effects that\ndifferent Performance Schema options have on memory requirements.\n\nName values consist of two parts, which name an internal buffer and a\nbuffer attribute, respectively. Interpret buffer names as follows:\n\no An internal buffer that is not exposed as a table is named within\n  parentheses. Examples: (pfs_cond_class).size,\n  (pfs_mutex_class).memory.\n\no An internal buffer that is exposed as a table in the\n  performance_schema database is named after the table, without\n  parentheses. Examples: events_waits_history.size,\n  mutex_instances.count.\n\no A value that applies to the Performance Schema as a whole begins with\n  performance_schema. Example: performance_schema.memory.\n\nBuffer attributes have these meanings:\n\no size is the size of the internal record used by the implementation,\n  such as the size of a row in a table. size values cannot be changed.\n\no count is the number of internal records, such as the number of rows\n  in a table. count values can be changed using Performance Schema\n  configuration options.\n\no For a table, tbl_name.memory is the product of size and count. For\n  the Performance Schema as a whole, performance_schema.memory is the\n  sum of all the memory used (the sum of all other memory values).\n\nIn some cases, there is a direct relationship between a Performance\nSchema configuration parameter and a SHOW ENGINE value. For example,\nevents_waits_history_long.count corresponds to\nperformance_schema_events_waits_history_long_size. In other cases, the\nrelationship is more complex. For example, events_waits_history.count\ncorresponds to performance_schema_events_waits_history_size (the number\nof rows per thread) multiplied by\nperformance_schema_max_thread_instances ( the number of threads).\n\nSHOW ENGINE NDB STATUS If the server has the NDB storage engine\nenabled, SHOW ENGINE NDB STATUS displays cluster status information\nsuch as the number of connected data nodes, the cluster connectstring,\nand cluster binary log epochs, as well as counts of various Cluster API\nobjects created by the MySQL Server when connected to the cluster.\nSample output from this statement is shown here:\n\nmysql> SHOW ENGINE NDB STATUS;\n+------------+-----------------------+--------------------------------------------------+\n| Type       | Name                  | Status                                           |\n+------------+-----------------------+--------------------------------------------------+\n| ndbcluster | connection            | cluster_node_id=7,\n  connected_host=198.51.100.103, connected_port=1186, number_of_data_nodes=4,\n  number_of_ready_data_nodes=3, connect_count=0                                         |\n| ndbcluster | NdbTransaction        | created=6, free=0, sizeof=212                    |\n| ndbcluster | NdbOperation          | created=8, free=8, sizeof=660                    |\n| ndbcluster | NdbIndexScanOperation | created=1, free=1, sizeof=744                    |\n| ndbcluster | NdbIndexOperation     | created=0, free=0, sizeof=664                    |\n| ndbcluster | NdbRecAttr            | created=1285, free=1285, sizeof=60               |\n| ndbcluster | NdbApiSignal          | created=16, free=16, sizeof=136                  |\n| ndbcluster | NdbLabel              | created=0, free=0, sizeof=196                    |\n| ndbcluster | NdbBranch             | created=0, free=0, sizeof=24                     |\n| ndbcluster | NdbSubroutine         | created=0, free=0, sizeof=68                     |\n| ndbcluster | NdbCall               | created=0, free=0, sizeof=16                     |\n| ndbcluster | NdbBlob               | created=1, free=1, sizeof=264                    |\n| ndbcluster | NdbReceiver           | created=4, free=0, sizeof=68                     |\n| ndbcluster | binlog                | latest_epoch=155467, latest_trans_epoch=148126,\n  latest_received_binlog_epoch=0, latest_handled_binlog_epoch=0,\n  latest_applied_binlog_epoch=0                                                         |\n+------------+-----------------------+--------------------------------------------------+\n\nThe Status column in each of these rows provides information about the\nMySQL server\'s connection to the cluster and about the cluster binary\nlog\'s status, respectively. The Status information is in the form of\ncomma-delimited set of name/value pairs.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-engine.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-engine.html'),(650,'SHOW ENGINES',3,'Syntax:\nSHOW [STORAGE] ENGINES\n\nSHOW ENGINES displays status information about the server\'s storage\nengines. This is particularly useful for checking whether a storage\nengine is supported, or to see what the default engine is.\n\nFor information about MySQL storage engines, see\nhttps://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html, and\nhttps://dev.mysql.com/doc/refman/8.0/en/storage-engines.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-engines.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-engines.html'),(651,'SHOW ERRORS',3,'Syntax:\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW COUNT(*) ERRORS\n\nSHOW ERRORS is a diagnostic statement that is similar to SHOW WARNINGS,\nexcept that it displays information only for errors, rather than for\nerrors, warnings, and notes.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttps://dev.mysql.com/doc/refman/8.0/en/select.html.\n\nThe SHOW COUNT(*) ERRORS statement displays the number of errors. You\ncan also retrieve this number from the error_count variable:\n\nSHOW COUNT(*) ERRORS;\nSELECT @@error_count;\n\nSHOW ERRORS and error_count apply only to errors, not warnings or\nnotes. In other respects, they are similar to SHOW WARNINGS and\nwarning_count. In particular, SHOW ERRORS cannot display information\nfor more than max_error_count messages, and error_count can exceed the\nvalue of max_error_count if the number of errors exceeds\nmax_error_count.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-errors.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-errors.html'),(652,'SHOW EVENTS',3,'Syntax:\nSHOW EVENTS\n    [{FROM | IN} schema_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement displays information about Event Manager events, which\nare discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/event-scheduler.html. It\nrequires the EVENT privilege for the database from which the events are\nto be shown.\n\nIn its simplest form, SHOW EVENTS lists all of the events in the\ncurrent schema:\n\nmysql> SELECT CURRENT_USER(), SCHEMA();\n+----------------+----------+\n| CURRENT_USER() | SCHEMA() |\n+----------------+----------+\n| jon@ghidora    | myschema |\n+----------------+----------+\n1 row in set (0.00 sec)\n\nmysql> SHOW EVENTS\\G\n*************************** 1. row ***************************\n                  Db: myschema\n                Name: e_daily\n             Definer: jon@ghidora\n           Time zone: SYSTEM\n                Type: RECURRING\n          Execute at: NULL\n      Interval value: 1\n      Interval field: DAY\n              Starts: 2018-08-08 11:06:34\n                Ends: NULL\n              Status: ENABLED\n          Originator: 1\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\n  Database Collation: utf8mb4_0900_ai_ci\n\nTo see events for a specific schema, use the FROM clause. For example,\nto see events for the test schema, use the following statement:\n\nSHOW EVENTS FROM test;\n\nThe LIKE clause, if present, indicates which event names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-events.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-events.html'),(653,'SHOW FUNCTION CODE',3,'Syntax:\nSHOW FUNCTION CODE func_name\n\nThis statement is similar to SHOW PROCEDURE CODE but for stored\nfunctions. See [HELP SHOW PROCEDURE CODE].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-function-code.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-function-code.html'),(654,'SHOW FUNCTION STATUS',3,'Syntax:\nSHOW FUNCTION STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is similar to SHOW PROCEDURE STATUS but for stored\nfunctions. See [HELP SHOW PROCEDURE STATUS].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-function-status.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-function-status.html'),(655,'SHOW GRANTS',3,'Syntax:\nSHOW GRANTS\n    [FOR user_or_role\n        [USING role [, role] ...]]\n\nuser_or_role: {\n    user (see )\n  | role (see .\n}\n\nThis statement displays the privileges and roles that are assigned to a\nMySQL user account or role, in the form of GRANT statements that must\nbe executed to duplicate the privilege and role assignments.\n\n*Note*:\n\nTo display nonprivilege information for MySQL accounts, use the SHOW\nCREATE USER statement. See [HELP SHOW CREATE USER].\n\nSHOW GRANTS requires the SELECT privilege for the mysql system schema,\nexcept to display privileges and roles for the current user.\n\nTo name the account or role for SHOW GRANTS, use the same format as for\nthe GRANT statement (for example, \'jeffrey\'@\'localhost\'):\n\nmysql> SHOW GRANTS FOR \'jeffrey\'@\'localhost\';\n+------------------------------------------------------------------+\n| Grants for jeffrey@localhost                                     |\n+------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO `jeffrey`@`localhost`                      |\n| GRANT SELECT, INSERT, UPDATE ON `db1`.* TO `jeffrey`@`localhost` |\n+------------------------------------------------------------------+\n\nThe host part, if omitted, defaults to \'%\'. For additional information\nabout specifying account and role names, see\nhttps://dev.mysql.com/doc/refman/8.0/en/account-names.html, and\nhttps://dev.mysql.com/doc/refman/8.0/en/role-names.html.\n\nTo display the privileges granted to the current user (the account you\nare using to connect to the server), you can use any of the following\nstatements:\n\nSHOW GRANTS;\nSHOW GRANTS FOR CURRENT_USER;\nSHOW GRANTS FOR CURRENT_USER();\n\nIf SHOW GRANTS FOR CURRENT_USER (or any equivalent syntax) is used in\ndefiner context, such as within a stored procedure that executes with\ndefiner rather than invoker privileges, the grants displayed are those\nof the definer and not the invoker.\n\nIn MySQL 8.0 compared to previous series, SHOW GRANTS no longer\ndisplays ALL PRIVILEGES in its global-privileges output because the\nmeaning of ALL PRIVILEGES at the global level varies depending on which\ndynamic privileges are defined. Instead, SHOW GRANTS explictly lists\neach granted global privilege:\n\nmysql> SHOW GRANTS FOR \'root\'@\'localhost\';\n+---------------------------------------------------------------------+\n| Grants for root@localhost                                           |\n+---------------------------------------------------------------------+\n| GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD,         |\n| SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES,  |\n| SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION   |\n| SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE,  |\n| ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE,      |\n| CREATE ROLE, DROP ROLE ON *.* TO `root`@`localhost` WITH GRANT      |\n| OPTION                                                              |\n| GRANT PROXY ON \'\'@\'\' TO \'root\'@\'localhost\' WITH GRANT OPTION        |\n+---------------------------------------------------------------------+\n\nApplications that process SHOW GRANTS output should be adjusted\naccordingly.\n\nAt the global level, GRANT OPTION applies to all granted static global\nprivileges if granted for any of them, but applies individually to\ngranted dynamic privileges. SHOW GRANTS displays global privileges this\nway:\n\no One line listing all granted static privileges, if there are any,\n  including WITH GRANT OPTION if appropriate.\n\no One line listing all granted dynamic privileges for which GRANT\n  OPTION is granted, if there are any, including WITH GRANT OPTION.\n\no One line listing all granted dynamic privileges for which GRANT\n  OPTION is not granted, if there are any, without WITH GRANT OPTION.\n\nWith the optional USING clause, SHOW GRANTS enables you to examine the\nprivileges associated with roles for the user. Each role named in the\nUSING clause must be granted to the user.\n\nSuppose that user u1 is assigned roles r1 and r2, as follows:\n\nCREATE ROLE \'r1\', \'r2\';\nGRANT SELECT ON db1.* TO \'r1\';\nGRANT INSERT, UPDATE, DELETE ON db1.* TO \'r2\';\nCREATE USER \'u1\'@\'localhost\' IDENTIFIED BY \'u1pass\';\nGRANT \'r1\', \'r2\' TO \'u1\'@\'localhost\';\n\nSHOW GRANTS without USING shows the granted roles:\n\nmysql> SHOW GRANTS FOR \'u1\'@\'localhost\';\n+---------------------------------------------+\n| Grants for u1@localhost                     |\n+---------------------------------------------+\n| GRANT USAGE ON *.* TO `u1`@`localhost`      |\n| GRANT `r1`@`%`,`r2`@`%` TO `u1`@`localhost` |\n+---------------------------------------------+\n\nAdding a USING clause causes the statement to also display the\nprivileges associated with each role named in the clause:\n\nmysql> SHOW GRANTS FOR \'u1\'@\'localhost\' USING \'r1\';\n+---------------------------------------------+\n| Grants for u1@localhost                     |\n+---------------------------------------------+\n| GRANT USAGE ON *.* TO `u1`@`localhost`      |\n| GRANT SELECT ON `db1`.* TO `u1`@`localhost` |\n| GRANT `r1`@`%`,`r2`@`%` TO `u1`@`localhost` |\n+---------------------------------------------+\nmysql> SHOW GRANTS FOR \'u1\'@\'localhost\' USING \'r2\';\n+-------------------------------------------------------------+\n| Grants for u1@localhost                                     |\n+-------------------------------------------------------------+\n| GRANT USAGE ON *.* TO `u1`@`localhost`                      |\n| GRANT INSERT, UPDATE, DELETE ON `db1`.* TO `u1`@`localhost` |\n| GRANT `r1`@`%`,`r2`@`%` TO `u1`@`localhost`                 |\n+-------------------------------------------------------------+\nmysql> SHOW GRANTS FOR \'u1\'@\'localhost\' USING \'r1\', \'r2\';\n+---------------------------------------------------------------------+\n| Grants for u1@localhost                                             |\n+---------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO `u1`@`localhost`                              |\n| GRANT SELECT, INSERT, UPDATE, DELETE ON `db1`.* TO `u1`@`localhost` |\n| GRANT `r1`@`%`,`r2`@`%` TO `u1`@`localhost`                         |\n+---------------------------------------------------------------------+\n\n*Note*:\n\nA privilege granted to an account is always in effect, but a role is\nnot. The active roles for an account can differ across and within\nsessions, depending on the value of the activate_all_roles_on_login\nsystem variable, the account default roles, and whether SET ROLE has\nbeen executed within a session.\n\nMySQL 8.0.16 and higher supports partial revokes of global privileges,\nsuch that a global privilege can be restricted from applying to\nparticular schemas (see\nhttps://dev.mysql.com/doc/refman/8.0/en/partial-revokes.html). To\nindicate which global schema privileges have been revoked for\nparticular schemas, SHOW GRANTS output includes REVOKE statements:\n\nmysql> SET PERSIST partial_revokes = ON;\nmysql> CREATE USER u1;\nmysql> GRANT SELECT, INSERT, DELETE ON *.* TO u1;\nmysql> REVOKE SELECT, INSERT ON mysql.* FROM u1;\nmysql> REVOKE DELETE ON world.* FROM u1;\nmysql> SHOW GRANTS FOR u1;\n+--------------------------------------------------+\n| Grants for u1@%                                  |\n+--------------------------------------------------+\n| GRANT SELECT, INSERT, DELETE ON *.* TO `u1`@`%`  |\n| REVOKE SELECT, INSERT ON `mysql`.* FROM `u1`@`%` |\n| REVOKE DELETE ON `world`.* FROM `u1`@`%`         |\n+--------------------------------------------------+\n\nSHOW GRANTS does not display privileges that are available to the named\naccount but are granted to a different account. For example, if an\nanonymous account exists, the named account might be able to use its\nprivileges, but SHOW GRANTS does not display them.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-grants.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-grants.html'),(656,'SHOW INDEX',3,'Syntax:\nSHOW [EXTENDED] {INDEX | INDEXES | KEYS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [WHERE expr]\n\nSHOW INDEX returns table index information. The format resembles that\nof the SQLStatistics call in ODBC. This statement requires some\nprivilege for any column in the table.\n\nmysql> SHOW INDEX FROM City\\G\n*************************** 1. row ***************************\n        Table: city\n   Non_unique: 0\n     Key_name: PRIMARY\n Seq_in_index: 1\n  Column_name: ID\n    Collation: A\n  Cardinality: 4188\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE\n      Comment:\nIndex_comment:\n      Visible: YES\n   Expression: NULL\n*************************** 2. row ***************************\n        Table: city\n   Non_unique: 1\n     Key_name: CountryCode\n Seq_in_index: 1\n  Column_name: CountryCode\n    Collation: A\n  Cardinality: 232\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE\n      Comment:\nIndex_comment:\n      Visible: YES\n   Expression: NULL\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW INDEX FROM mytable FROM mydb;\nSHOW INDEX FROM mydb.mytable;\n\nThe optional EXTENDED keyword causes the output to include information\nabout hidden indexes that MySQL uses internally and are not accessible\nby users.\n\nThe WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nSHOW INDEX returns the following fields:\n\no Table\n\n  The name of the table.\n\no Non_unique\n\n  0 if the index cannot contain duplicates, 1 if it can.\n\no Key_name\n\n  The name of the index. If the index is the primary key, the name is\n  always PRIMARY.\n\no Seq_in_index\n\n  The column sequence number in the index, starting with 1.\n\no Column_name\n\n  The column name. See also the description for the Expression column.\n\no Collation\n\n  How the column is sorted in the index. This can have values A\n  (ascending), D (descending), or NULL (not sorted).\n\no Cardinality\n\n  An estimate of the number of unique values in the index. To update\n  this number, run ANALYZE TABLE or (for MyISAM tables) myisamchk -a.\n\n  Cardinality is counted based on statistics stored as integers, so the\n  value is not necessarily exact even for small tables. The higher the\n  cardinality, the greater the chance that MySQL uses the index when\n  doing joins.\n\no Sub_part\n\n  The index prefix. That is, the number of indexed characters if the\n  column is only partly indexed, NULL if the entire column is indexed.\n\n  *Note*:\n\n  Prefix limits are measured in bytes. However, prefix lengths for\n  index specifications in CREATE TABLE, ALTER TABLE, and CREATE INDEX\n  statements are interpreted as number of characters for nonbinary\n  string types (CHAR, VARCHAR, TEXT) and number of bytes for binary\n  string types (BINARY, VARBINARY, BLOB). Take this into account when\n  specifying a prefix length for a nonbinary string column that uses a\n  multibyte character set.\n\n  For additional information about index prefixes, see\n  https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html, and\n  [HELP CREATE INDEX].\n\no Packed\n\n  Indicates how the key is packed. NULL if it is not.\n\no Null\n\n  Contains YES if the column may contain NULL values and \'\' if not.\n\no Index_type\n\n  The index method used (BTREE, FULLTEXT, HASH, RTREE).\n\no Comment\n\n  Information about the index not described in its own column, such as\n  disabled if the index is disabled.\n\no Index_comment\n\n  Any comment provided for the index with a COMMENT attribute when the\n  index was created.\n\no Visible\n\n  Whether the index is visible to the optimizer. See\n  https://dev.mysql.com/doc/refman/8.0/en/invisible-indexes.html.\n\no Expression\n\n  MySQL 8.0.13 and higher supports functional key parts (see\n  https://dev.mysql.com/doc/refman/8.0/en/create-index.html#create-inde\n  x-functional-key-parts), which affects both the Column_name and\n  Expression columns:\n\n  o For a nonfunctional key part, Column_name indicates the column\n    indexed by the key part and Expression is NULL.\n\n  o For a functional key part, Column_name column is NULL and\n    Expression indicates the expression for the key part.\n\nInformation about table indexes is also available from the\nINFORMATION_SCHEMA STATISTICS table. See\nhttps://dev.mysql.com/doc/refman/8.0/en/statistics-table.html. The\nextended information about hidden indexes is available only using SHOW\nEXTENDED INDEX; it cannot be obtained from the STATISTICS table.\n\nYou can list a table\'s indexes with the mysqlshow -k db_name tbl_name\ncommand.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-index.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-index.html'),(657,'SHOW MASTER STATUS',3,'Syntax:\nSHOW MASTER STATUS\n\nThis statement provides status information about the binary log files\nof the master. It requires either the SUPER or REPLICATION CLIENT\nprivilege.\n\nExample:\n\nmysql> SHOW MASTER STATUS\\G\n*************************** 1. row ***************************\n             File: master-bin.000002\n         Position: 1307\n     Binlog_Do_DB: test\n Binlog_Ignore_DB: manual, mysql\nExecuted_Gtid_Set: 3E11FA47-71CA-11E1-9E33-C80AA9429562:1-5\n1 row in set (0.00 sec)\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-master-status.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-master-status.html'),(658,'SHOW OPEN TABLES',3,'Syntax:\nSHOW OPEN TABLES\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW OPEN TABLES lists the non-TEMPORARY tables that are currently open\nin the table cache. See\nhttps://dev.mysql.com/doc/refman/8.0/en/table-cache.html. The FROM\nclause, if present, restricts the tables shown to those present in the\ndb_name database. The LIKE clause, if present, indicates which table\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-open-tables.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-open-tables.html'),(659,'SHOW PLUGINS',3,'Syntax:\nSHOW PLUGINS\n\nSHOW PLUGINS displays information about server plugins.\n\nExample of SHOW PLUGINS output:\n\nmysql> SHOW PLUGINS\\G\n*************************** 1. row ***************************\n   Name: binlog\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 2. row ***************************\n   Name: CSV\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 3. row ***************************\n   Name: MEMORY\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 4. row ***************************\n   Name: MyISAM\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n...\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-plugins.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-plugins.html'),(660,'SHOW PRIVILEGES',3,'Syntax:\nSHOW PRIVILEGES\n\nSHOW PRIVILEGES shows the list of system privileges that the MySQL\nserver supports. The privileges displayed include all static\nprivileges, and all currently registered dynamic privileges.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-privileges.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-privileges.html'),(661,'SHOW PROCEDURE CODE',3,'Syntax:\nSHOW PROCEDURE CODE proc_name\n\nThis statement is a MySQL extension that is available only for servers\nthat have been built with debugging support. It displays a\nrepresentation of the internal implementation of the named stored\nprocedure. A similar statement, SHOW FUNCTION CODE, displays\ninformation about stored functions (see [HELP SHOW FUNCTION CODE]).\n\nTo use either statement, you must have the global SELECT privilege.\n\nIf the named routine is available, each statement produces a result\nset. Each row in the result set corresponds to one \"instruction\" in the\nroutine. The first column is Pos, which is an ordinal number beginning\nwith 0. The second column is Instruction, which contains an SQL\nstatement (usually changed from the original source), or a directive\nwhich has meaning only to the stored-routine handler.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-procedure-code.html\n\n','mysql> DELIMITER //\nmysql> CREATE PROCEDURE p1 ()\n    -> BEGIN\n    ->   DECLARE fanta INT DEFAULT 55;\n    ->   DROP TABLE t2;\n    ->   LOOP\n    ->     INSERT INTO t3 VALUES (fanta);\n    ->     END LOOP;\n    ->   END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SHOW PROCEDURE CODE p1//\n+-----+----------------------------------------+\n| Pos | Instruction                            |\n+-----+----------------------------------------+\n|   0 | set fanta@0 55                         |\n|   1 | stmt 9 \"DROP TABLE t2\"                 |\n|   2 | stmt 5 \"INSERT INTO t3 VALUES (fanta)\" |\n|   3 | jump 2                                 |\n+-----+----------------------------------------+\n4 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/show-procedure-code.html'),(662,'SHOW PROCEDURE STATUS',3,'Syntax:\nSHOW PROCEDURE STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is a MySQL extension. It returns characteristics of a\nstored procedure, such as the database, name, type, creator, creation\nand modification dates, and character set information. A similar\nstatement, SHOW FUNCTION STATUS, displays information about stored\nfunctions (see [HELP SHOW FUNCTION STATUS]).\n\nThe LIKE clause, if present, indicates which procedure or function\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-procedure-status.html\n\n','mysql> SHOW PROCEDURE STATUS LIKE \'sp1\'\\G\n*************************** 1. row ***************************\n                  Db: test\n                Name: sp1\n                Type: PROCEDURE\n             Definer: testuser@localhost\n            Modified: 2018-08-08 13:54:11\n             Created: 2018-08-08 13:54:11\n       Security_type: DEFINER\n             Comment:\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\n  Database Collation: utf8mb4_0900_ai_ci\n','https://dev.mysql.com/doc/refman/8.0/en/show-procedure-status.html'),(663,'SHOW PROCESSLIST',3,'Syntax:\nSHOW [FULL] PROCESSLIST\n\nSHOW PROCESSLIST shows which threads are running. If you have the\nPROCESS privilege, you can see all threads. Otherwise, you can see only\nyour own threads (that is, threads associated with the MySQL account\nthat you are using). If you do not use the FULL keyword, only the first\n100 characters of each statement are shown in the Info field.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-processlist.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-processlist.html'),(664,'SHOW PROFILE',3,'Syntax:\nSHOW PROFILE [type [, type] ... ]\n    [FOR QUERY n]\n    [LIMIT row_count [OFFSET offset]]\n\ntype: {\n    ALL\n  | BLOCK IO\n  | CONTEXT SWITCHES\n  | CPU\n  | IPC\n  | MEMORY\n  | PAGE FAULTS\n  | SOURCE\n  | SWAPS\n}\n\nThe SHOW PROFILE and SHOW PROFILES statements display profiling\ninformation that indicates resource usage for statements executed\nduring the course of the current session.\n\n*Note*:\n\nThe SHOW PROFILE and SHOW PROFILES statements are deprecated and will\nbe removed in a future MySQL release. Use the Performance Schema\ninstead; see\nhttps://dev.mysql.com/doc/refman/8.0/en/performance-schema-query-profil\ning.html.\n\nTo control profiling, use the profiling session variable, which has a\ndefault value of 0 (OFF). Enable profiling by setting profiling to 1 or\nON:\n\nmysql> SET profiling = 1;\n\nSHOW PROFILES displays a list of the most recent statements sent to the\nserver. The size of the list is controlled by the\nprofiling_history_size session variable, which has a default value of\n15. The maximum value is 100. Setting the value to 0 has the practical\neffect of disabling profiling.\n\nAll statements are profiled except SHOW PROFILE and SHOW PROFILES, so\nyou will find neither of those statements in the profile list.\nMalformed statements are profiled. For example, SHOW PROFILING is an\nillegal statement, and a syntax error occurs if you try to execute it,\nbut it will show up in the profiling list.\n\nSHOW PROFILE displays detailed information about a single statement.\nWithout the FOR QUERY n clause, the output pertains to the most\nrecently executed statement. If FOR QUERY n is included, SHOW PROFILE\ndisplays information for statement n. The values of n correspond to the\nQuery_ID values displayed by SHOW PROFILES.\n\nThe LIMIT row_count clause may be given to limit the output to\nrow_count rows. If LIMIT is given, OFFSET offset may be added to begin\nthe output offset rows into the full set of rows.\n\nBy default, SHOW PROFILE displays Status and Duration columns. The\nStatus values are like the State values displayed by SHOW PROCESSLIST,\nalthough there might be some minor differences in interpretion for the\ntwo statements for some status values (see\nhttps://dev.mysql.com/doc/refman/8.0/en/thread-information.html).\n\nOptional type values may be specified to display specific additional\ntypes of information:\n\no ALL displays all information\n\no BLOCK IO displays counts for block input and output operations\n\no CONTEXT SWITCHES displays counts for voluntary and involuntary\n  context switches\n\no CPU displays user and system CPU usage times\n\no IPC displays counts for messages sent and received\n\no MEMORY is not currently implemented\n\no PAGE FAULTS displays counts for major and minor page faults\n\no SOURCE displays the names of functions from the source code, together\n  with the name and line number of the file in which the function\n  occurs\n\no SWAPS displays swap counts\n\nProfiling is enabled per session. When a session ends, its profiling\ninformation is lost.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-profile.html\n\n','mysql> SELECT @@profiling;\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> SET profiling = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> DROP TABLE IF EXISTS t1;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> CREATE TABLE T1 (id INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SHOW PROFILES;\n+----------+----------+--------------------------+\n| Query_ID | Duration | Query                    |\n+----------+----------+--------------------------+\n|        0 | 0.000088 | SET PROFILING = 1        |\n|        1 | 0.000136 | DROP TABLE IF EXISTS t1  |\n|        2 | 0.011947 | CREATE TABLE t1 (id INT) |\n+----------+----------+--------------------------+\n3 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE;\n+----------------------+----------+\n| Status               | Duration |\n+----------------------+----------+\n| checking permissions | 0.000040 |\n| creating table       | 0.000056 |\n| After create         | 0.011363 |\n| query end            | 0.000375 |\n| freeing items        | 0.000089 |\n| logging slow query   | 0.000019 |\n| cleaning up          | 0.000005 |\n+----------------------+----------+\n7 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE FOR QUERY 1;\n+--------------------+----------+\n| Status             | Duration |\n+--------------------+----------+\n| query end          | 0.000107 |\n| freeing items      | 0.000008 |\n| logging slow query | 0.000015 |\n| cleaning up        | 0.000006 |\n+--------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE CPU FOR QUERY 2;\n+----------------------+----------+----------+------------+\n| Status               | Duration | CPU_user | CPU_system |\n+----------------------+----------+----------+------------+\n| checking permissions | 0.000040 | 0.000038 |   0.000002 |\n| creating table       | 0.000056 | 0.000028 |   0.000028 |\n| After create         | 0.011363 | 0.000217 |   0.001571 |\n| query end            | 0.000375 | 0.000013 |   0.000028 |\n| freeing items        | 0.000089 | 0.000010 |   0.000014 |\n| logging slow query   | 0.000019 | 0.000009 |   0.000010 |\n| cleaning up          | 0.000005 | 0.000003 |   0.000002 |\n+----------------------+----------+----------+------------+\n7 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/8.0/en/show-profile.html'),(665,'SHOW PROFILES',3,'Syntax:\nSHOW PROFILES\n\nThe SHOW PROFILES statement, together with SHOW PROFILE, displays\nprofiling information that indicates resource usage for statements\nexecuted during the course of the current session. For more\ninformation, see [HELP SHOW PROFILE].\n\n*Note*:\n\nThe SHOW PROFILE and SHOW PROFILES statements are deprecated and will\nbe removed in a future MySQL release. Use the Performance Schema\ninstead; see\nhttps://dev.mysql.com/doc/refman/8.0/en/performance-schema-query-profil\ning.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-profiles.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-profiles.html'),(666,'SHOW RELAYLOG EVENTS',3,'Syntax:\nSHOW RELAYLOG EVENTS\n    [IN \'log_name\']\n    [FROM pos]\n    [LIMIT [offset,] row_count]\n    [channel_option]\n\nchannel_option:\n    FOR CHANNEL channel\n\nShows the events in the relay log of a replication slave. If you do not\nspecify \'log_name\', the first relay log is displayed. This statement\nhas no effect on the master. SHOW RELAYLOG EVENTS requires the\nREPLICATION SLAVE privilege.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-relaylog-events.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-relaylog-events.html'),(667,'SHOW SLAVE HOSTS',3,'Syntax:\nSHOW SLAVE HOSTS\n\nDisplays a list of replication slaves currently registered with the\nmaster. SHOW SLAVE HOSTS requires the REPLICATION SLAVE privilege.\n\nSHOW SLAVE HOSTS should be executed on a server that acts as a\nreplication master. The statement displays information about servers\nthat are or have been connected as replication slaves, with each row of\nthe result corresponding to one slave server, as shown here:\n\nmysql> SHOW SLAVE HOSTS;\n+------------+-----------+------+-----------+--------------------------------------+\n| Server_id  | Host      | Port | Master_id | Slave_UUID                           |\n+------------+-----------+------+-----------+--------------------------------------+\n|  192168010 | iconnect2 | 3306 | 192168011 | 14cb6624-7f93-11e0-b2c0-c80aa9429562 |\n| 1921680101 | athena    | 3306 | 192168011 | 07af4990-f41f-11df-a566-7ac56fdaf645 |\n+------------+-----------+------+-----------+--------------------------------------+\n\no Server_id: The unique server ID of the slave server, as configured in\n  the slave server\'s option file, or on the command line with\n  --server-id=value.\n\no Host: The host name of the slave server as specified on the slave\n  with the --report-host option. This can differ from the machine name\n  as configured in the operating system.\n\no User: The slave server user name as, specified on the slave with the\n  --report-user option. Statement output includes this column only if\n  the master server is started with the --show-slave-auth-info option.\n\no Password: The slave server password as, specified on the slave with\n  the --report-password option. Statement output includes this column\n  only if the master server is started with the --show-slave-auth-info\n  option.\n\no Port: The port on the master to which the slave server is listening,\n  as specified on the slave with the --report-port option.\n\n  A zero in this column means that the slave port (--report-port) was\n  not set.\n\no Master_id: The unique server ID of the master server that the slave\n  server is replicating from. This is the server ID of the server on\n  which SHOW SLAVE HOSTS is executed, so this same value is listed for\n  each row in the result.\n\no Slave_UUID: The globally unique ID of this slave, as generated on the\n  slave and found in the slave\'s auto.cnf file.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-slave-hosts.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-slave-hosts.html'),(668,'SHOW SLAVE STATUS',3,'Syntax:\nSHOW SLAVE STATUS [FOR CHANNEL channel]\n\nThis statement provides status information on essential parameters of\nthe slave threads. It requires either the SUPER or REPLICATION CLIENT\nprivilege.\n\nSHOW SLAVE STATUS is nonblocking. When run concurrently with STOP\nSLAVE, SHOW SLAVE STATUS returns without waiting for STOP SLAVE to\nfinish shutting down the slave SQL thread or slave I/O thread (or\nboth). This permits use in monitoring and other applications where\ngetting an immediate response from SHOW SLAVE STATUS more important\nthan ensuring that it returned the latest data.\n\nIf you issue this statement using the mysql client, you can use a \\G\nstatement terminator rather than a semicolon to obtain a more readable\nvertical layout:\n\nmysql> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: localhost\n                  Master_User: repl\n                  Master_Port: 13000\n                Connect_Retry: 60\n              Master_Log_File: master-bin.000002\n          Read_Master_Log_Pos: 1307\n               Relay_Log_File: slave-relay-bin.000003\n                Relay_Log_Pos: 1508\n        Relay_Master_Log_File: master-bin.000002\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n  Replicate_Wild_Ignore_Table:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Master_Log_Pos: 1307\n              Relay_Log_Space: 1858\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Master_SSL_Allowed: No\n           Master_SSL_CA_File:\n           Master_SSL_CA_Path:\n              Master_SSL_Cert:\n            Master_SSL_Cipher:\n               Master_SSL_Key:\n        Seconds_Behind_Master: 0\nMaster_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids:\n             Master_Server_Id: 1\n                  Master_UUID: 3e11fa47-71ca-11e1-9e33-c80aa9429562\n             Master_Info_File: \n                    SQL_Delay: 0\n          SQL_Remaining_Delay: NULL\n      Slave_SQL_Running_State: Reading event from the relay log\n           Master_Retry_Count: 10\n                  Master_Bind:\n      Last_IO_Error_Timestamp:\n     Last_SQL_Error_Timestamp:\n               Master_SSL_Crl:\n           Master_SSL_Crlpath:\n           Retrieved_Gtid_Set: 3e11fa47-71ca-11e1-9e33-c80aa9429562:1-5\n            Executed_Gtid_Set: 3e11fa47-71ca-11e1-9e33-c80aa9429562:1-5\n                Auto_Position: 1\n         Replicate_Rewrite_DB:\n                 Channel_name:\n           Master_TLS_Version: TLSv1.2\n       Master_public_key_path: public_key.pem\n        Get_master_public_key: 0\n\nThe Performance Schema provides tables that expose replication\ninformation. This is similar to the information available from the SHOW\nSLAVE STATUS statement, but represented in table form. For details, see\nhttps://dev.mysql.com/doc/refman/8.0/en/performance-schema-replication-\ntables.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-slave-status.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-slave-status.html'),(669,'SHOW STATUS',3,'Syntax:\nSHOW [GLOBAL | SESSION] STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW STATUS provides server status information (see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html).\nThis statement does not require any privilege. It requires only the\nability to connect to the server.\n\nStatus variable information is also available from these sources:\n\no Performance Schema tables. See\n  https://dev.mysql.com/doc/refman/8.0/en/performance-schema-status-var\n  iable-tables.html.\n\no The mysqladmin extended-status command. See\n  https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html.\n\nFor SHOW STATUS, a LIKE clause, if present, indicates which variable\nnames to match. A WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nSHOW STATUS accepts an optional GLOBAL or SESSION variable scope\nmodifier:\n\no With a GLOBAL modifier, the statement displays the global status\n  values. A global status variable may represent status for some aspect\n  of the server itself (for example, Aborted_connects), or the\n  aggregated status over all connections to MySQL (for example,\n  Bytes_received and Bytes_sent). If a variable has no global value,\n  the session value is displayed.\n\no With a SESSION modifier, the statement displays the status variable\n  values for the current connection. If a variable has no session\n  value, the global value is displayed. LOCAL is a synonym for SESSION.\n\no If no modifier is present, the default is SESSION.\n\nThe scope for each status variable is listed at\nhttps://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html.\n\nEach invocation of the SHOW STATUS statement uses an internal temporary\ntable and increments the global Created_tmp_tables value.\n\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern:\n\nmysql> SHOW STATUS LIKE \'Key%\';\n+--------------------+----------+\n| Variable_name      | Value    |\n+--------------------+----------+\n| Key_blocks_used    | 14955    |\n| Key_read_requests  | 96854827 |\n| Key_reads          | 162040   |\n| Key_write_requests | 7589728  |\n| Key_writes         | 3813196  |\n+--------------------+----------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-status.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-status.html'),(670,'SHOW TABLE STATUS',3,'Syntax:\nSHOW TABLE STATUS\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLE STATUS works likes SHOW TABLES, but provides a lot of\ninformation about each non-TEMPORARY table. You can also get this list\nusing the mysqlshow --status db_name command. The LIKE clause, if\npresent, indicates which table names to match. The WHERE clause can be\ngiven to select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-table-status.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-table-status.html'),(671,'SHOW TABLES',3,'Syntax:\nSHOW [EXTENDED] [FULL] TABLES\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLES lists the non-TEMPORARY tables in a given database. You can\nalso get this list using the mysqlshow db_name command. The LIKE\nclause, if present, indicates which table names to match. The WHERE\nclause can be given to select rows using more general conditions, as\ndiscussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nMatching performed by the LIKE clause is dependent on the setting of\nthe lower_case_table_names system variable.\n\nThe optional EXTENDED modifier causes SHOW TABLES to list hidden tables\ncreated by failed ALTER TABLE statements. These temporary tables have\nnames beginning with #sql and can be dropped using DROP TABLE.\n\nThis statement also lists any views in the database. The optional FULL\nmodifier causes SHOW TABLES to display a second output column with\nvalues of BASE TABLE for a table, VIEW for a view, or SYSTEM VIEW for\nan INFORMATION_SCHEMA table.\n\nIf you have no privileges for a base table or view, it does not show up\nin the output from SHOW TABLES or mysqlshow db_name.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-tables.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-tables.html'),(672,'SHOW TRIGGERS',3,'Syntax:\nSHOW TRIGGERS\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TRIGGERS lists the triggers currently defined for tables in a\ndatabase (the default database unless a FROM clause is given). This\nstatement returns results only for databases and tables for which you\nhave the TRIGGER privilege. The LIKE clause, if present, indicates\nwhich table names (not trigger names) to match and causes the statement\nto display triggers for those tables. The WHERE clause can be given to\nselect rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nFor the ins_sum trigger defined in\nhttps://dev.mysql.com/doc/refman/8.0/en/triggers.html, the output of\nSHOW TRIGGERS is as shown here:\n\nmysql> SHOW TRIGGERS LIKE \'acc%\'\\G\n*************************** 1. row ***************************\n             Trigger: ins_sum\n               Event: INSERT\n               Table: account\n           Statement: SET @sum = @sum + NEW.amount\n              Timing: BEFORE\n             Created: 2018-08-08 10:10:12.61\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_ENGINE_SUBSTITUTION\n             Definer: me@localhost\ncharacter_set_client: utf8mb4\ncollation_connection: utf8mb4_0900_ai_ci\n  Database Collation: utf8mb4_0900_ai_ci\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-triggers.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-triggers.html'),(673,'SHOW VARIABLES',3,'Syntax:\nSHOW [GLOBAL | SESSION] VARIABLES\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW VARIABLES shows the values of MySQL system variables (see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html).\nThis statement does not require any privilege. It requires only the\nability to connect to the server.\n\nSystem variable information is also available from these sources:\n\no Performance Schema tables. See\n  https://dev.mysql.com/doc/refman/8.0/en/performance-schema-system-var\n  iable-tables.html.\n\no The mysqladmin variables command. See\n  https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html.\n\nFor SHOW VARIABLES, a LIKE clause, if present, indicates which variable\nnames to match. A WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/8.0/en/extended-show.html.\n\nSHOW VARIABLES accepts an optional GLOBAL or SESSION variable scope\nmodifier:\n\no With a GLOBAL modifier, the statement displays global system variable\n  values. These are the values used to initialize the corresponding\n  session variables for new connections to MySQL. If a variable has no\n  global value, no value is displayed.\n\no With a SESSION modifier, the statement displays the system variable\n  values that are in effect for the current connection. If a variable\n  has no session value, the global value is displayed. LOCAL is a\n  synonym for SESSION.\n\no If no modifier is present, the default is SESSION.\n\nThe scope for each system variable is listed at\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html.\n\nSHOW VARIABLES is subject to a version-dependent display-width limit.\nFor variables with very long values that are not completely displayed,\nuse SELECT as a workaround. For example:\n\nSELECT @@GLOBAL.innodb_data_file_path;\n\nMost system variables can be set at server startup (read-only variables\nsuch as version_comment are exceptions). Many can be changed at runtime\nwith the SET statement. See\nhttps://dev.mysql.com/doc/refman/8.0/en/using-system-variables.html,\nand [HELP SET].\n\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern. To obtain the row for a\nspecific variable, use a LIKE clause as shown:\n\nSHOW VARIABLES LIKE \'max_join_size\';\nSHOW SESSION VARIABLES LIKE \'max_join_size\';\n\nTo get a list of variables whose name match a pattern, use the %\nwildcard character in a LIKE clause:\n\nSHOW VARIABLES LIKE \'%size%\';\nSHOW GLOBAL VARIABLES LIKE \'%size%\';\n\nWildcard characters can be used in any position within the pattern to\nbe matched. Strictly speaking, because _ is a wildcard that matches any\nsingle character, you should escape it as \\_ to match it literally. In\npractice, this is rarely necessary.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-variables.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-variables.html'),(674,'SHOW WARNINGS',3,'Syntax:\nSHOW WARNINGS [LIMIT [offset,] row_count]\nSHOW COUNT(*) WARNINGS\n\nSHOW WARNINGS is a diagnostic statement that displays information about\nthe conditions (errors, warnings, and notes) resulting from executing a\nstatement in the current session. Warnings are generated for DML\nstatements such as INSERT, UPDATE, and LOAD DATA as well as DDL\nstatements such as CREATE TABLE and ALTER TABLE.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttps://dev.mysql.com/doc/refman/8.0/en/select.html.\n\nSHOW WARNINGS is also used following EXPLAIN, to display the extended\ninformation generated by EXPLAIN. See\nhttps://dev.mysql.com/doc/refman/8.0/en/explain-extended.html.\n\nSHOW WARNINGS displays information about the conditions resulting from\nexecution of the most recent nondiagnostic statement in the current\nsession. If the most recent statement resulted in an error during\nparsing, SHOW WARNINGS shows the resulting conditions, regardless of\nstatement type (diagnostic or nondiagnostic).\n\nThe SHOW COUNT(*) WARNINGS diagnostic statement displays the total\nnumber of errors, warnings, and notes. You can also retrieve this\nnumber from the warning_count system variable:\n\nSHOW COUNT(*) WARNINGS;\nSELECT @@warning_count;\n\nA difference in these statements is that the first is a diagnostic\nstatement that does not clear the message list. The second, because it\nis a SELECT statement is considered nondiagnostic and does clear the\nmessage list.\n\nA related diagnostic statement, SHOW ERRORS, shows only error\nconditions (it excludes warnings and notes), and SHOW COUNT(*) ERRORS\nstatement displays the total number of errors. See [HELP SHOW ERRORS].\nGET DIAGNOSTICS can be used to examine information for individual\nconditions. See [HELP GET DIAGNOSTICS].\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/show-warnings.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/show-warnings.html'),(675,'BINLOG',3,'Syntax:\nBINLOG \'str\'\n\nBINLOG is an internal-use statement. It is generated by the mysqlbinlog\nprogram as the printable representation of certain events in binary log\nfiles. (See https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog.html.)\nThe \'str\' value is a base 64-encoded string the that server decodes to\ndetermine the data change indicated by the corresponding event.\n\nTo execute BINLOG statements when applying mysqlbinlog output, a user\naccount requires the BINLOG_ADMIN or SUPER privilege, or the\nREPLICATION_APPLIER privilege plus the appropriate privileges to\nexecute each log event.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/binlog.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/binlog.html'),(676,'CACHE INDEX',3,'Syntax:\nCACHE INDEX {\n      tbl_index_list [, tbl_index_list] ...\n    | tbl_name PARTITION (partition_list)\n  }\n  IN key_cache_name\n\ntbl_index_list:\n  tbl_name [{INDEX|KEY} (index_name[, index_name] ...)]\n\npartition_list: {\n    partition_name[, partition_name] ...\n  | ALL\n}\n\nThe CACHE INDEX statement assigns table indexes to a specific key\ncache. It applies only to MyISAM tables, including partitioned MyISAM\ntables. After the indexes have been assigned, they can be preloaded\ninto the cache if desired with LOAD INDEX INTO CACHE.\n\nThe following statement assigns indexes from the tables t1, t2, and t3\nto the key cache named hot_cache:\n\nmysql> CACHE INDEX t1, t2, t3 IN hot_cache;\n+---------+--------------------+----------+----------+\n| Table   | Op                 | Msg_type | Msg_text |\n+---------+--------------------+----------+----------+\n| test.t1 | assign_to_keycache | status   | OK       |\n| test.t2 | assign_to_keycache | status   | OK       |\n| test.t3 | assign_to_keycache | status   | OK       |\n+---------+--------------------+----------+----------+\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/cache-index.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/cache-index.html'),(677,'FLUSH',3,'Syntax:\nFLUSH [NO_WRITE_TO_BINLOG | LOCAL] {\n    flush_option [, flush_option] ...\n  | tables_option\n}\n\nflush_option: {\n    BINARY LOGS\n  | ENGINE LOGS\n  | ERROR LOGS\n  | GENERAL LOGS\n  | HOSTS\n  | LOGS\n  | PRIVILEGES\n  | OPTIMIZER_COSTS\n  | RELAY LOGS [FOR CHANNEL channel]\n  | SLOW LOGS\n  | STATUS\n  | USER_RESOURCES\n}\n\ntables_option: {\n    TABLES\n  | TABLES tbl_name [, tbl_name] ...\n  | TABLES WITH READ LOCK\n  | TABLES tbl_name [, tbl_name] ... WITH READ LOCK\n  | TABLES tbl_name [, tbl_name] ... FOR EXPORT\n}\n\nThe FLUSH statement has several variant forms that clear or reload\nvarious internal caches, flush tables, or acquire locks. To execute\nFLUSH, you must have the RELOAD privilege. Specific flush options might\nrequire additional privileges, as described later.\n\n*Note*:\n\nIt is not possible to issue FLUSH statements within stored functions or\ntriggers. However, you may use FLUSH in stored procedures, so long as\nthese are not called from stored functions or triggers. See\nhttps://dev.mysql.com/doc/refman/8.0/en/stored-program-restrictions.htm\nl.\n\nBy default, the server writes FLUSH statements to the binary log so\nthat they replicate to replication slaves. To suppress logging, specify\nthe optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\n*Note*:\n\nFLUSH LOGS, FLUSH BINARY LOGS, FLUSH TABLES WITH READ LOCK (with or\nwithout a table list), and FLUSH TABLES tbl_name ... FOR EXPORT are not\nwritten to the binary log in any case because they would cause problems\nif replicated to a slave.\n\nThe FLUSH statement causes an implicit commit. See\nhttps://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\nThe mysqladmin utility provides a command-line interface to some flush\noperations, using commands such as flush-hosts, flush-logs,\nflush-privileges, flush-status, and flush-tables. See\nhttps://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html.\n\nSending a SIGHUP signal to the server causes several flush operations\nto occur that are similar to various forms of the FLUSH statement. See\nhttps://dev.mysql.com/doc/refman/8.0/en/server-signal-response.html.\n\nThe RESET statement is similar to FLUSH. See [HELP RESET], for\ninformation about using the RESET statement with replication.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/flush.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/flush.html'),(678,'KILL',3,'Syntax:\nKILL [CONNECTION | QUERY] processlist_id\n\nEach connection to mysqld runs in a separate thread. You can kill a\nthread with the KILL processlist_id statement.\n\nThread processlist identifiers can be determined from the ID column of\nthe INFORMATION_SCHEMA PROCESSLIST table, the Id column of SHOW\nPROCESSLIST output, and the PROCESSLIST_ID column of the Performance\nSchema threads table. The value for the current thread is returned by\nthe CONNECTION_ID() function.\n\nKILL permits an optional CONNECTION or QUERY modifier:\n\no KILL CONNECTION is the same as KILL with no modifier: It terminates\n  the connection associated with the given processlist_id, after\n  terminating any statement the connection is executing.\n\no KILL QUERY terminates the statement the connection is currently\n  executing, but leaves the connection itself intact.\n\nThe ability to see which threads are available to be killed depends on\nthe PROCESS privilege:\n\no Without PROCESS, you can see only your own threads.\n\no With PROCESS, you can see all threads.\n\nThe ability to kill threads and statements depends on the\nCONNECTION_ADMIN and SUPER privileges:\n\no Without CONNECTION_ADMIN or SUPER, you can kill only your own threads\n  and statements.\n\no With CONNECTION_ADMIN or SUPER, you can kill all threads and\n  statements, except that to affect a thread or statement that is\n  executing with the SYSTEM_USER privilege, your own session must\n  additionally have the SYSTEM_USER privilege.\n\nYou can also use the mysqladmin processlist and mysqladmin kill\ncommands to examine and kill threads.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/kill.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/kill.html'),(679,'LOAD INDEX',3,'Syntax:\nLOAD INDEX INTO CACHE\n  tbl_index_list [, tbl_index_list] ...\n\ntbl_index_list:\n  tbl_name\n    [PARTITION (partition_list)]\n    [{INDEX|KEY} (index_name[, index_name] ...)]\n    [IGNORE LEAVES]\n\npartition_list: {\n    partition_name[, partition_name] ...\n  | ALL\n}\n\nThe LOAD INDEX INTO CACHE statement preloads a table index into the key\ncache to which it has been assigned by an explicit CACHE INDEX\nstatement, or into the default key cache otherwise.\n\nLOAD INDEX INTO CACHE applies only to MyISAM tables, including\npartitioned MyISAM tables. In addition, indexes on partitioned tables\ncan be preloaded for one, several, or all partitions.\n\nThe IGNORE LEAVES modifier causes only blocks for the nonleaf nodes of\nthe index to be preloaded.\n\nIGNORE LEAVES is also supported for partitioned MyISAM tables.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/load-index.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/load-index.html'),(680,'RESET',3,'Syntax:\nRESET reset_option [, reset_option] ...\n\nreset_option: {\n    MASTER\n  | SLAVE\n}\n\nThe RESET statement is used to clear the state of various server\noperations. You must have the RELOAD privilege to execute RESET.\n\nFor information about the RESET PERSIST statement that removes\npersisted global system variables, see [HELP RESET PERSIST].\n\nRESET acts as a stronger version of the FLUSH statement. See [HELP\nFLUSH].\n\nThe RESET statement causes an implicit commit. See\nhttps://dev.mysql.com/doc/refman/8.0/en/implicit-commit.html.\n\nThe following list describes the permitted RESET statement reset_option\nvalues:\n\no RESET MASTER\n\n  Deletes all binary logs listed in the index file, resets the binary\n  log index file to be empty, and creates a new binary log file.\n\no RESET SLAVE\n\n  Makes the slave forget its replication position in the master binary\n  logs. Also resets the relay log by deleting any existing relay log\n  files and beginning a new one.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/reset.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/reset.html'),(681,'RESET PERSIST',3,'Syntax:\nRESET PERSIST [[IF EXISTS] system_var_name]\n\nRESET PERSIST removes persisted global system variable settings from\nthe mysqld-auto.cnf option file in the data directory. Removing a\npersisted system variable causes the variable no longer to be\ninitialized from mysqld-auto.cnf at server startup. For more\ninformation about persisting system variables and the mysqld-auto.cnf\nfile, see\nhttps://dev.mysql.com/doc/refman/8.0/en/persisted-system-variables.html\n.\n\nThe privileges required for RESET PERSIST depend on the type of system\nvariable to be removed:\n\no For dynamic system variables, this statement requires the\n  SYSTEM_VARIABLES_ADMIN or SUPER privilege.\n\no For read-only system variables, this statement requires the\n  SYSTEM_VARIABLES_ADMIN and PERSIST_RO_VARIABLES_ADMIN privileges.\n\nSee\nhttps://dev.mysql.com/doc/refman/8.0/en/system-variable-privileges.html\n.\n\nDepending on whether the variable name and IF EXISTS clauses are\npresent, the RESET PERSIST statement has these forms:\n\no To remove all persisted variables from mysqld-auto.cnf, use RESET\n  PERSIST without naming any system variable:\n\nRESET PERSIST;\n\n  You must have privileges for removing both dynamic and read-only\n  system variables if mysqld-auto.cnf contains both kinds of variables.\n\no To remove a specific persisted variable from mysqld-auto.cnf, name it\n  in the statement:\n\nRESET PERSIST system_var_name;\n\n  This includes plugin system variables, even if the plugin is not\n  currently installed. If the variable is not present in the file, an\n  error occurs.\n\no To remove a specific persisted variable from mysqld-auto.cnf, but\n  produce a warning rather than an error if the variable is not present\n  in the file, add an IF EXISTS clause to the previous syntax:\n\nRESET PERSIST IF EXISTS system_var_name;\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/reset-persist.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/reset-persist.html'),(682,'RESTART',3,'Syntax:\nRESTART\n\nThis statement stops and restarts the MySQL server. It requires the\nSHUTDOWN privilege.\n\nOne use for RESTART is when it is not possible or convenient to gain\ncommand-line access to the MySQL server on the server host to restart\nit. For example, SET PERSIST_ONLY can be used at runtime to make\nconfiguration changes to system variables that can be set only at\nserver startup, but the server must still be restarted for those\nchanges to take effect. The RESTART statement provides a way to do so\nfrom within client sessions, without requiring command-line access on\nthe server host.\n\n*Note*:\n\nAfter executing a RESTART statement, the client can expect the current\nconnection to be lost. If auto-reconnect is enabled, the connection\nwill be reestablished after the server restarts. Otherwise, the\nconnection must be reestablished manually.\n\nA successful RESTART operation requires mysqld to be running in an\nenvironment that has a monitoring process available to detect a server\nshutdown performed for restart purposes:\n\no In the presence of a monitoring process, RESTART causes mysqld to\n  terminate such that the monitoring process can determine that it\n  should start a new mysqld instance.\n\no If no monitoring process is present, RESTART fails with an error.\n\nThese platforms provide the necessary monitoring support for the\nRESTART statement:\n\no Windows, when mysqld is started as a Windows service or standalone.\n  (mysqld forks, and one process acts as a monitor to the other, which\n  acts as the server.)\n\no Unix and Unix-like systems that use systemd or mysqld_safe to manage\n  mysqld.\n\nTo configure a monitoring environment such that mysqld enables the\nRESTART statement:\n\n1. Set the MYSQLD_PARENT_PID environment variable to the value of the\n   process ID of the process that starts mysqld, before starting\n   mysqld.\n\n2. When mysqld performs a shutdown due to use of the RESTART statement,\n   it returns exit code 16.\n\n3. When the monitoring process detects an exit code of 16, it starts\n   mysqld again. Otherwise, it exits.\n\nHere is a minimal example as implemented in the bash shell:\n\n#!/bin/bash\n\nexport MYSQLD_PARENT_PID=$$\n\nexport MYSQLD_RESTART_EXIT=16\n\nwhile true ; do\n  bin/mysqld mysqld options here\n  if [ $? -ne $MYSQLD_RESTART_EXIT ]; then\n    break\n  fi\ndone\n\nOn Windows, the forking used to implement RESTART makes determining the\nserver process to attach to for debugging more difficult. To alleviate\nthis, starting the server with --gdb suppresses forking, in addition to\nits other actions done to set up a debugging environment. In non-debug\nsettings, --no-monitor may be used for the sole purpose of suppressing\nforking the monitor process. For a server started with either --gdb or\n--no-monitor, executing RESTART causes the server to simply exit\nwithout restarting.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/restart.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/restart.html'),(683,'SHUTDOWN',3,'Syntax:\nSHUTDOWN\n\nThis statement stops the MySQL server. It requires the SHUTDOWN\nprivilege.\n\nSHUTDOWN provides an SQL-level interface to the same functionality\navailable using the mysqladmin shutdown command or the mysql_shutdown()\nC API function.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/shutdown.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/shutdown.html'),(684,'EXPLAIN',42,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\n{EXPLAIN | DESCRIBE | DESC} ANALYZE select_statement    \n\nexplain_type: {\n    FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n  | TREE\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/explain.html'),(685,'DESCRIBE',42,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\n{EXPLAIN | DESCRIBE | DESC} ANALYZE select_statement    \n\nexplain_type: {\n    FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n  | TREE\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/explain.html'),(686,'DESC',42,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\n{EXPLAIN | DESCRIBE | DESC} ANALYZE select_statement    \n\nexplain_type: {\n    FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n  | TREE\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/explain.html'),(687,'HELP STATEMENT',42,'Syntax:\nHELP \'search_string\'\n\nThe HELP statement returns online information from the MySQL Reference\nManual. Its proper operation requires that the help tables in the mysql\ndatabase be initialized with help topic information (see\nhttps://dev.mysql.com/doc/refman/8.0/en/server-side-help-support.html).\n\nThe HELP statement searches the help tables for the given search string\nand displays the result of the search. The search string is not\ncase-sensitive.\n\nThe search string can contain the wildcard characters % and _. These\nhave the same meaning as for pattern-matching operations performed with\nthe LIKE operator. For example, HELP \'rep%\' returns a list of topics\nthat begin with rep.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/help.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/help.html'),(688,'USE',42,'Syntax:\nUSE db_name\n\nThe USE statement tells MySQL to use the named database as the default\n(current) database for subsequent statements. This statement requires\nsome privilege for the database or some object within it.\n\nThe named database remains the default until the end of the session or\nanother USE statement is issued:\n\nUSE db1;\nSELECT COUNT(*) FROM mytable;   # selects from db1.mytable\nUSE db2;\nSELECT COUNT(*) FROM mytable;   # selects from db2.mytable\n\nThe database name must be specified on a single line. Newlines in\ndatabase names are not supported.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/use.html\n\n','','https://dev.mysql.com/doc/refman/8.0/en/use.html'),(689,'MERGE',43,'The MERGE storage engine, also known as the MRG_MyISAM engine, is a\ncollection of identical MyISAM tables that can be used as one.\n\"Identical\" means that all tables have identical column data types and\nindex information. You cannot merge MyISAM tables in which the columns\nare listed in a different order, do not have exactly the same data\ntypes in corresponding columns, or have the indexes in different order.\nHowever, any or all of the MyISAM tables can be compressed with\nmyisampack. See\nhttps://dev.mysql.com/doc/refman/8.0/en/myisampack.html. Differences\nbetween tables such as these do not matter:\n\no Names of corresponding columns and indexes can differ.\n\no Comments for tables, columns, and indexes can differ.\n\no Table options such as AVG_ROW_LENGTH, MAX_ROWS, or PACK_KEYS can\n  differ.\n\nURL: https://dev.mysql.com/doc/refman/8.0/en/merge-storage-engine.html\n\n','mysql> CREATE TABLE t1 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> CREATE TABLE t2 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> INSERT INTO t1 (message) VALUES (\'Testing\'),(\'table\'),(\'t1\');\nmysql> INSERT INTO t2 (message) VALUES (\'Testing\'),(\'table\'),(\'t2\');\nmysql> CREATE TABLE total (\n    ->    a INT NOT NULL AUTO_INCREMENT,\n    ->    message CHAR(20), INDEX(a))\n    ->    ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;\n','https://dev.mysql.com/doc/refman/8.0/en/merge-storage-engine.html');
/*!40000 ALTER TABLE `help_topic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `innodb_index_stats`
--

/*!40000 ALTER TABLE `innodb_index_stats` DISABLE KEYS */;
INSERT  IGNORE INTO `innodb_index_stats` VALUES ('mysql','component','PRIMARY','2022-05-16 22:10:01','n_diff_pfx01',0,1,'component_id'),('mysql','component','PRIMARY','2022-05-16 22:10:01','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('mysql','component','PRIMARY','2022-05-16 22:10:01','size',1,NULL,'Number of pages in the index'),('mysql','gtid_executed','PRIMARY','2021-01-02 22:28:30','n_diff_pfx01',0,1,'source_uuid'),('mysql','gtid_executed','PRIMARY','2021-01-02 22:28:30','n_diff_pfx02',0,1,'source_uuid,interval_start'),('mysql','gtid_executed','PRIMARY','2021-01-02 22:28:30','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('mysql','gtid_executed','PRIMARY','2021-01-02 22:28:30','size',1,NULL,'Number of pages in the index'),('runoob','aclist','GEN_CLUST_INDEX','2022-06-10 22:44:22','n_diff_pfx01',143,1,'DB_ROW_ID'),('runoob','aclist','GEN_CLUST_INDEX','2022-06-10 22:44:22','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','aclist','GEN_CLUST_INDEX','2022-06-10 22:44:22','size',1,NULL,'Number of pages in the index'),('runoob','aclist1','GEN_CLUST_INDEX','2022-07-02 06:51:14','n_diff_pfx01',63,1,'DB_ROW_ID'),('runoob','aclist1','GEN_CLUST_INDEX','2022-07-02 06:51:14','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','aclist1','GEN_CLUST_INDEX','2022-07-02 06:51:14','size',1,NULL,'Number of pages in the index'),('runoob','buylist','GEN_CLUST_INDEX','2022-05-29 00:54:29','n_diff_pfx01',3466,13,'DB_ROW_ID'),('runoob','buylist','GEN_CLUST_INDEX','2022-05-29 00:54:29','n_leaf_pages',13,NULL,'Number of leaf pages in the index'),('runoob','buylist','GEN_CLUST_INDEX','2022-05-29 00:54:29','size',14,NULL,'Number of pages in the index'),('runoob','catelist','GEN_CLUST_INDEX','2022-05-16 22:10:02','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','catelist','GEN_CLUST_INDEX','2022-05-16 22:10:02','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','catelist','GEN_CLUST_INDEX','2022-05-16 22:10:02','size',1,NULL,'Number of pages in the index'),('runoob','customlist','GEN_CLUST_INDEX','2022-06-09 21:17:08','n_diff_pfx01',514,6,'DB_ROW_ID'),('runoob','customlist','GEN_CLUST_INDEX','2022-06-09 21:17:08','n_leaf_pages',6,NULL,'Number of leaf pages in the index'),('runoob','customlist','GEN_CLUST_INDEX','2022-06-09 21:17:08','size',7,NULL,'Number of pages in the index'),('runoob','inventorylist','GEN_CLUST_INDEX','2022-06-09 21:27:10','n_diff_pfx01',3522,20,'DB_ROW_ID'),('runoob','inventorylist','GEN_CLUST_INDEX','2022-06-09 21:27:10','n_leaf_pages',25,NULL,'Number of leaf pages in the index'),('runoob','inventorylist','GEN_CLUST_INDEX','2022-06-09 21:27:10','size',26,NULL,'Number of pages in the index'),('runoob','invoicelist','GEN_CLUST_INDEX','2022-07-22 20:50:40','n_diff_pfx01',62,1,'DB_ROW_ID'),('runoob','invoicelist','GEN_CLUST_INDEX','2022-07-22 20:50:40','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','invoicelist','GEN_CLUST_INDEX','2022-07-22 20:50:40','size',1,NULL,'Number of pages in the index'),('runoob','nuser','GEN_CLUST_INDEX','2022-07-23 00:16:40','n_diff_pfx01',5,1,'DB_ROW_ID'),('runoob','nuser','GEN_CLUST_INDEX','2022-07-23 00:16:40','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','nuser','GEN_CLUST_INDEX','2022-07-23 00:16:40','size',1,NULL,'Number of pages in the index'),('runoob','revorderlist','GEN_CLUST_INDEX','2022-06-10 22:50:21','n_diff_pfx01',126,1,'DB_ROW_ID'),('runoob','revorderlist','GEN_CLUST_INDEX','2022-06-10 22:50:21','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','revorderlist','GEN_CLUST_INDEX','2022-06-10 22:50:21','size',1,NULL,'Number of pages in the index'),('runoob','saledetail','GEN_CLUST_INDEX','2022-07-22 21:13:16','n_diff_pfx01',413,4,'DB_ROW_ID'),('runoob','saledetail','GEN_CLUST_INDEX','2022-07-22 21:13:16','n_leaf_pages',4,NULL,'Number of leaf pages in the index'),('runoob','saledetail','GEN_CLUST_INDEX','2022-07-22 21:13:16','size',5,NULL,'Number of pages in the index'),('runoob','sellerlist','GEN_CLUST_INDEX','2022-05-23 21:33:50','n_diff_pfx01',242,3,'DB_ROW_ID'),('runoob','sellerlist','GEN_CLUST_INDEX','2022-05-23 21:33:50','n_leaf_pages',3,NULL,'Number of leaf pages in the index'),('runoob','sellerlist','GEN_CLUST_INDEX','2022-05-23 21:33:50','size',4,NULL,'Number of pages in the index'),('runoob','spuser','GEN_CLUST_INDEX','2022-07-23 00:16:20','n_diff_pfx01',6,1,'DB_ROW_ID'),('runoob','spuser','GEN_CLUST_INDEX','2022-07-23 00:16:20','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','spuser','GEN_CLUST_INDEX','2022-07-23 00:16:20','size',1,NULL,'Number of pages in the index'),('runoob','storelist','GEN_CLUST_INDEX','2022-05-16 22:10:03','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','storelist','GEN_CLUST_INDEX','2022-05-16 22:10:03','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','storelist','GEN_CLUST_INDEX','2022-05-16 22:10:03','size',1,NULL,'Number of pages in the index'),('runoob','temporder','GEN_CLUST_INDEX','2022-06-02 23:41:30','n_diff_pfx01',6,1,'DB_ROW_ID'),('runoob','temporder','GEN_CLUST_INDEX','2022-06-02 23:41:30','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder','GEN_CLUST_INDEX','2022-06-02 23:41:30','size',1,NULL,'Number of pages in the index'),('runoob','temporder1','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder1','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder1','GEN_CLUST_INDEX','2022-06-25 17:49:00','size',1,NULL,'Number of pages in the index'),('runoob','temporder2','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder2','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder2','GEN_CLUST_INDEX','2022-06-25 17:49:00','size',1,NULL,'Number of pages in the index'),('runoob','temporder3','GEN_CLUST_INDEX','2022-07-01 18:46:06','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder3','GEN_CLUST_INDEX','2022-07-01 18:46:06','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder3','GEN_CLUST_INDEX','2022-07-01 18:46:06','size',1,NULL,'Number of pages in the index'),('runoob','temporder4','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder4','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder4','GEN_CLUST_INDEX','2022-06-25 17:49:00','size',1,NULL,'Number of pages in the index'),('runoob','temporder5','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder5','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder5','GEN_CLUST_INDEX','2022-06-25 17:49:00','size',1,NULL,'Number of pages in the index'),('runoob','temporder6','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder6','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder6','GEN_CLUST_INDEX','2022-06-25 17:49:00','size',1,NULL,'Number of pages in the index'),('runoob','temporder7','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder7','GEN_CLUST_INDEX','2022-06-25 17:49:00','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder7','GEN_CLUST_INDEX','2022-06-25 17:49:00','size',1,NULL,'Number of pages in the index'),('runoob','temporder8','GEN_CLUST_INDEX','2022-07-22 23:54:15','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','temporder8','GEN_CLUST_INDEX','2022-07-22 23:54:15','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','temporder8','GEN_CLUST_INDEX','2022-07-22 23:54:15','size',1,NULL,'Number of pages in the index'),('runoob','test','GEN_CLUST_INDEX','2022-05-16 22:10:03','n_diff_pfx01',0,1,'DB_ROW_ID'),('runoob','test','GEN_CLUST_INDEX','2022-05-16 22:10:03','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','test','GEN_CLUST_INDEX','2022-05-16 22:10:03','size',1,NULL,'Number of pages in the index'),('runoob','user','GEN_CLUST_INDEX','2022-07-23 00:16:30','n_diff_pfx01',4,1,'DB_ROW_ID'),('runoob','user','GEN_CLUST_INDEX','2022-07-23 00:16:30','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('runoob','user','GEN_CLUST_INDEX','2022-07-23 00:16:30','size',1,NULL,'Number of pages in the index'),('sys','sys_config','PRIMARY','2021-01-02 22:28:30','n_diff_pfx01',6,1,'variable'),('sys','sys_config','PRIMARY','2021-01-02 22:28:30','n_leaf_pages',1,NULL,'Number of leaf pages in the index'),('sys','sys_config','PRIMARY','2021-01-02 22:28:30','size',1,NULL,'Number of pages in the index');
/*!40000 ALTER TABLE `innodb_index_stats` ENABLE KEYS */;

--
-- Dumping data for table `innodb_table_stats`
--

/*!40000 ALTER TABLE `innodb_table_stats` DISABLE KEYS */;
INSERT  IGNORE INTO `innodb_table_stats` VALUES ('mysql','component','2022-05-16 22:10:01',0,1,0),('mysql','gtid_executed','2021-01-02 22:28:30',0,1,0),('runoob','aclist','2022-06-10 22:44:22',143,1,0),('runoob','aclist1','2022-07-02 06:51:14',63,1,0),('runoob','buylist','2022-05-29 00:54:29',3466,14,0),('runoob','catelist','2022-05-16 22:10:02',0,1,0),('runoob','customlist','2022-06-09 21:17:08',514,7,0),('runoob','inventorylist','2022-06-09 21:27:10',3522,26,0),('runoob','invoicelist','2022-07-22 20:50:40',62,1,0),('runoob','nuser','2022-07-23 00:16:40',5,1,0),('runoob','revorderlist','2022-06-10 22:50:21',126,1,0),('runoob','saledetail','2022-07-22 21:13:16',413,5,0),('runoob','sellerlist','2022-05-23 21:33:50',242,4,0),('runoob','spuser','2022-07-23 00:16:20',6,1,0),('runoob','storelist','2022-05-16 22:10:03',0,1,0),('runoob','temporder','2022-06-02 23:41:30',6,1,0),('runoob','temporder1','2022-06-25 17:49:00',0,1,0),('runoob','temporder2','2022-06-25 17:49:00',0,1,0),('runoob','temporder3','2022-07-01 18:46:06',0,1,0),('runoob','temporder4','2022-06-25 17:49:00',0,1,0),('runoob','temporder5','2022-06-25 17:49:00',0,1,0),('runoob','temporder6','2022-06-25 17:49:00',0,1,0),('runoob','temporder7','2022-06-25 17:49:00',0,1,0),('runoob','temporder8','2022-07-22 23:54:15',0,1,0),('runoob','test','2022-05-16 22:10:03',0,1,0),('runoob','user','2022-07-23 00:16:30',4,1,0),('sys','sys_config','2021-01-02 22:28:30',6,1,0);
/*!40000 ALTER TABLE `innodb_table_stats` ENABLE KEYS */;

--
-- Table structure for table `password_history`
--

DROP TABLE IF EXISTS `password_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `password_history` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Password_timestamp` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  `Password` text CHARACTER SET utf8 COLLATE utf8_bin,
  PRIMARY KEY (`Host`,`User`,`Password_timestamp` DESC)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Password history for user accounts';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `password_history`
--

LOCK TABLES `password_history` WRITE;
/*!40000 ALTER TABLE `password_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `password_history` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plugin`
--

DROP TABLE IF EXISTS `plugin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `plugin` (
  `name` varchar(64) NOT NULL DEFAULT '',
  `dl` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='MySQL plugins';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plugin`
--

LOCK TABLES `plugin` WRITE;
/*!40000 ALTER TABLE `plugin` DISABLE KEYS */;
/*!40000 ALTER TABLE `plugin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `procs_priv`
--

DROP TABLE IF EXISTS `procs_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `procs_priv` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `Db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Routine_name` char(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `Routine_type` enum('FUNCTION','PROCEDURE') CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Grantor` varchar(288) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),
  KEY `Grantor` (`Grantor`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Procedure privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `procs_priv`
--

LOCK TABLES `procs_priv` WRITE;
/*!40000 ALTER TABLE `procs_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `procs_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proxies_priv`
--

DROP TABLE IF EXISTS `proxies_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `proxies_priv` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proxied_host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `Proxied_user` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `With_grant` tinyint(1) NOT NULL DEFAULT '0',
  `Grantor` varchar(288) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`User`,`Proxied_host`,`Proxied_user`),
  KEY `Grantor` (`Grantor`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='User proxy privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proxies_priv`
--

LOCK TABLES `proxies_priv` WRITE;
/*!40000 ALTER TABLE `proxies_priv` DISABLE KEYS */;
INSERT INTO `proxies_priv` VALUES ('localhost','root','','',1,'boot@','0000-00-00 00:00:00');
/*!40000 ALTER TABLE `proxies_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `role_edges`
--

DROP TABLE IF EXISTS `role_edges`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `role_edges` (
  `FROM_HOST` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `FROM_USER` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `TO_HOST` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `TO_USER` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `WITH_ADMIN_OPTION` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  PRIMARY KEY (`FROM_HOST`,`FROM_USER`,`TO_HOST`,`TO_USER`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Role hierarchy and role grants';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `role_edges`
--

LOCK TABLES `role_edges` WRITE;
/*!40000 ALTER TABLE `role_edges` DISABLE KEYS */;
/*!40000 ALTER TABLE `role_edges` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `server_cost`
--

DROP TABLE IF EXISTS `server_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `server_cost` (
  `cost_name` varchar(64) NOT NULL,
  `cost_value` float DEFAULT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `comment` varchar(1024) DEFAULT NULL,
  `default_value` float GENERATED ALWAYS AS ((case `cost_name` when _utf8mb3'disk_temptable_create_cost' then 20.0 when _utf8mb3'disk_temptable_row_cost' then 0.5 when _utf8mb3'key_compare_cost' then 0.05 when _utf8mb3'memory_temptable_create_cost' then 1.0 when _utf8mb3'memory_temptable_row_cost' then 0.1 when _utf8mb3'row_evaluate_cost' then 0.1 else NULL end)) VIRTUAL,
  PRIMARY KEY (`cost_name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `server_cost`
--

LOCK TABLES `server_cost` WRITE;
/*!40000 ALTER TABLE `server_cost` DISABLE KEYS */;
INSERT INTO `server_cost` (`cost_name`, `cost_value`, `last_update`, `comment`) VALUES ('disk_temptable_create_cost',NULL,'2021-01-02 22:28:30',NULL),('disk_temptable_row_cost',NULL,'2021-01-02 22:28:30',NULL),('key_compare_cost',NULL,'2021-01-02 22:28:30',NULL),('memory_temptable_create_cost',NULL,'2021-01-02 22:28:30',NULL),('memory_temptable_row_cost',NULL,'2021-01-02 22:28:30',NULL),('row_evaluate_cost',NULL,'2021-01-02 22:28:30',NULL);
/*!40000 ALTER TABLE `server_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `servers`
--

DROP TABLE IF EXISTS `servers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `servers` (
  `Server_name` char(64) NOT NULL DEFAULT '',
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `Db` char(64) NOT NULL DEFAULT '',
  `Username` char(64) NOT NULL DEFAULT '',
  `Password` char(64) NOT NULL DEFAULT '',
  `Port` int NOT NULL DEFAULT '0',
  `Socket` char(64) NOT NULL DEFAULT '',
  `Wrapper` char(64) NOT NULL DEFAULT '',
  `Owner` char(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`Server_name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='MySQL Foreign Servers table';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `servers`
--

LOCK TABLES `servers` WRITE;
/*!40000 ALTER TABLE `servers` DISABLE KEYS */;
/*!40000 ALTER TABLE `servers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `slave_master_info`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `slave_master_info` (
  `Number_of_lines` int unsigned NOT NULL COMMENT 'Number of lines in the file.',
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the master binary log currently being read from the master.',
  `Master_log_pos` bigint unsigned NOT NULL COMMENT 'The master log position of the last read event.',
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL COMMENT 'The host name of the master.',
  `User_name` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The user name used to connect to the master.',
  `User_password` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The password used to connect to the master.',
  `Port` int unsigned NOT NULL COMMENT 'The network port used to connect to the master.',
  `Connect_retry` int unsigned NOT NULL COMMENT 'The period (in seconds) that the slave will wait before trying to reconnect to the master.',
  `Enabled_ssl` tinyint(1) NOT NULL COMMENT 'Indicates whether the server supports SSL connections.',
  `Ssl_ca` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file used for the Certificate Authority (CA) certificate.',
  `Ssl_capath` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The path to the Certificate Authority (CA) certificates.',
  `Ssl_cert` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the SSL certificate file.',
  `Ssl_cipher` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the cipher in use for the SSL connection.',
  `Ssl_key` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the SSL key file.',
  `Ssl_verify_server_cert` tinyint(1) NOT NULL COMMENT 'Whether to verify the server certificate.',
  `Heartbeat` float NOT NULL,
  `Bind` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Displays which interface is employed when connecting to the MySQL server',
  `Ignored_server_ids` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The number of server IDs to be ignored, followed by the actual server IDs',
  `Uuid` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The master server uuid.',
  `Retry_count` bigint unsigned NOT NULL COMMENT 'Number of reconnect attempts, to the master, before giving up.',
  `Ssl_crl` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file used for the Certificate Revocation List (CRL)',
  `Ssl_crlpath` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The path used for Certificate Revocation List (CRL) files',
  `Enabled_auto_position` tinyint(1) NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the master.',
  `Channel_name` char(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  `Tls_version` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Tls version',
  `Public_key_path` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file containing public key of master server.',
  `Get_public_key` tinyint(1) NOT NULL COMMENT 'Preference to get public key from master.',
  `Network_namespace` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Network namespace used for communication with the master server.',
  `Master_compression_algorithm` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'Compression algorithm supported for data transfer between master and slave.',
  `Master_zstd_compression_level` int unsigned NOT NULL COMMENT 'Compression level associated with zstd compression algorithm.',
  `Tls_ciphersuites` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Ciphersuites used for TLS 1.3 communication with the master server.',
  PRIMARY KEY (`Channel_name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Master Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slave_relay_log_info`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `slave_relay_log_info` (
  `Number_of_lines` int unsigned NOT NULL COMMENT 'Number of lines in the file or rows in the table. Used to version table definitions.',
  `Relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the current relay log file.',
  `Relay_log_pos` bigint unsigned DEFAULT NULL COMMENT 'The relay log position of the last executed event.',
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the master binary log file from which the events in the relay log file were read.',
  `Master_log_pos` bigint unsigned DEFAULT NULL COMMENT 'The master log position of the last executed event.',
  `Sql_delay` int DEFAULT NULL COMMENT 'The number of seconds that the slave must lag behind the master.',
  `Number_of_workers` int unsigned DEFAULT NULL,
  `Id` int unsigned DEFAULT NULL COMMENT 'Internal Id that uniquely identifies this record.',
  `Channel_name` char(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  `Privilege_checks_username` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'Username part of PRIVILEGE_CHECKS_USER.',
  `Privilege_checks_hostname` char(255) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL COMMENT 'Hostname part of PRIVILEGE_CHECKS_USER.',
  `Require_row_format` tinyint(1) NOT NULL COMMENT 'Indicates whether the channel shall only accept row based events.',
  PRIMARY KEY (`Channel_name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Relay Log Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slave_worker_info`
--

DROP TABLE IF EXISTS `slave_worker_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `slave_worker_info` (
  `Id` int unsigned NOT NULL,
  `Relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Relay_log_pos` bigint unsigned NOT NULL,
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Master_log_pos` bigint unsigned NOT NULL,
  `Checkpoint_relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Checkpoint_relay_log_pos` bigint unsigned NOT NULL,
  `Checkpoint_master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Checkpoint_master_log_pos` bigint unsigned NOT NULL,
  `Checkpoint_seqno` int unsigned NOT NULL,
  `Checkpoint_group_size` int unsigned NOT NULL,
  `Checkpoint_group_bitmap` blob NOT NULL,
  `Channel_name` char(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  PRIMARY KEY (`Channel_name`,`Id`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Worker Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `slave_worker_info`
--

LOCK TABLES `slave_worker_info` WRITE;
/*!40000 ALTER TABLE `slave_worker_info` DISABLE KEYS */;
/*!40000 ALTER TABLE `slave_worker_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tables_priv`
--

DROP TABLE IF EXISTS `tables_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tables_priv` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `Db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Grantor` varchar(288) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),
  KEY `Grantor` (`Grantor`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Table privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tables_priv`
--

LOCK TABLES `tables_priv` WRITE;
/*!40000 ALTER TABLE `tables_priv` DISABLE KEYS */;
INSERT INTO `tables_priv` VALUES ('localhost','mysql','mysql.session','user','boot@','0000-00-00 00:00:00','Select',''),('localhost','sys','mysql.sys','sys_config','root@localhost','2021-01-02 22:28:30','Select','');
/*!40000 ALTER TABLE `tables_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone`
--

DROP TABLE IF EXISTS `time_zone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `time_zone` (
  `Time_zone_id` int unsigned NOT NULL AUTO_INCREMENT,
  `Use_leap_seconds` enum('Y','N') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Time_zone_id`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone`
--

LOCK TABLES `time_zone` WRITE;
/*!40000 ALTER TABLE `time_zone` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_leap_second`
--

DROP TABLE IF EXISTS `time_zone_leap_second`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `time_zone_leap_second` (
  `Transition_time` bigint NOT NULL,
  `Correction` int NOT NULL,
  PRIMARY KEY (`Transition_time`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Leap seconds information for time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_leap_second`
--

LOCK TABLES `time_zone_leap_second` WRITE;
/*!40000 ALTER TABLE `time_zone_leap_second` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_leap_second` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_name`
--

DROP TABLE IF EXISTS `time_zone_name`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `time_zone_name` (
  `Name` char(64) NOT NULL,
  `Time_zone_id` int unsigned NOT NULL,
  PRIMARY KEY (`Name`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Time zone names';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_name`
--

LOCK TABLES `time_zone_name` WRITE;
/*!40000 ALTER TABLE `time_zone_name` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_name` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition`
--

DROP TABLE IF EXISTS `time_zone_transition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `time_zone_transition` (
  `Time_zone_id` int unsigned NOT NULL,
  `Transition_time` bigint NOT NULL,
  `Transition_type_id` int unsigned NOT NULL,
  PRIMARY KEY (`Time_zone_id`,`Transition_time`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Time zone transitions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition`
--

LOCK TABLES `time_zone_transition` WRITE;
/*!40000 ALTER TABLE `time_zone_transition` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition_type`
--

DROP TABLE IF EXISTS `time_zone_transition_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `time_zone_transition_type` (
  `Time_zone_id` int unsigned NOT NULL,
  `Transition_type_id` int unsigned NOT NULL,
  `Offset` int NOT NULL DEFAULT '0',
  `Is_DST` tinyint unsigned NOT NULL DEFAULT '0',
  `Abbreviation` char(8) NOT NULL DEFAULT '',
  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Time zone transition types';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition_type`
--

LOCK TABLES `time_zone_transition_type` WRITE;
/*!40000 ALTER TABLE `time_zone_transition_type` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user` (
  `Host` char(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '',
  `User` char(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Reload_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Shutdown_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Process_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `File_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Show_db_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Super_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Repl_slave_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Repl_client_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_user_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_tablespace_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `ssl_type` enum('','ANY','X509','SPECIFIED') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `ssl_cipher` blob NOT NULL,
  `x509_issuer` blob NOT NULL,
  `x509_subject` blob NOT NULL,
  `max_questions` int unsigned NOT NULL DEFAULT '0',
  `max_updates` int unsigned NOT NULL DEFAULT '0',
  `max_connections` int unsigned NOT NULL DEFAULT '0',
  `max_user_connections` int unsigned NOT NULL DEFAULT '0',
  `plugin` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT 'caching_sha2_password',
  `authentication_string` text CHARACTER SET utf8 COLLATE utf8_bin,
  `password_expired` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `password_last_changed` timestamp NULL DEFAULT NULL,
  `password_lifetime` smallint unsigned DEFAULT NULL,
  `account_locked` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Create_role_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Drop_role_priv` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'N',
  `Password_reuse_history` smallint unsigned DEFAULT NULL,
  `Password_reuse_time` smallint unsigned DEFAULT NULL,
  `Password_require_current` enum('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `User_attributes` json DEFAULT NULL,
  PRIMARY KEY (`Host`,`User`)
) /*!50100 TABLESPACE `mysql` */ ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC COMMENT='Users and global privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES ('%','username','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'caching_sha2_password','$A$005$>	?4yu:ctdSh07jiuiI./KjksfeSWsV7qG4q7aq3eoe4a3/NxvI1X9PCC','N','2021-01-02 23:11:15',NULL,'N','Y','Y',NULL,NULL,NULL,NULL),('%','uu','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'caching_sha2_password','$A$005$SvQ)&ytfM6Fx\\#D7Emo/qqlIyr4EetBbj0C7uSfnZA5Nz8s/a4TGYMLD6','N','2021-09-28 18:19:30',NULL,'N','Y','Y',NULL,NULL,NULL,NULL),('localhost','mysql.infoschema','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'caching_sha2_password','$A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED','N','2021-01-02 22:28:30',NULL,'Y','N','N',NULL,NULL,NULL,NULL),('localhost','mysql.session','N','N','N','N','N','N','N','Y','N','N','N','N','N','N','N','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'caching_sha2_password','$A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED','N','2021-01-02 22:28:30',NULL,'Y','N','N',NULL,NULL,NULL,NULL),('localhost','mysql.sys','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'caching_sha2_password','$A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED','N','2021-01-02 22:28:30',NULL,'Y','N','N',NULL,NULL,NULL,NULL),('localhost','root','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'caching_sha2_password','$A$005$r|7[&S\\1Po~/8IXFPy5KSKD0FTeBm0rnhADrUlrwNjS.opalriIoH21','N','2021-01-02 22:29:54',NULL,'N','Y','Y',NULL,NULL,NULL,NULL),('localhost','username','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'caching_sha2_password','$A$005$nt+Km88GHnQsh:&&R7nzXgmNDHfq3DA7YsUfiDypl/EQMf45H/eAjseIfr7','N','2021-01-02 23:10:45',NULL,'N','Y','Y',NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `general_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `general_log` (
  `event_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `thread_id` bigint unsigned NOT NULL,
  `server_id` int unsigned NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumblob NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='General log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slow_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE IF NOT EXISTS `slow_log` (
  `start_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `query_time` time(6) NOT NULL,
  `lock_time` time(6) NOT NULL,
  `rows_sent` int NOT NULL,
  `rows_examined` int NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int NOT NULL,
  `insert_id` int NOT NULL,
  `server_id` int unsigned NOT NULL,
  `sql_text` mediumblob NOT NULL,
  `thread_id` bigint unsigned NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='Slow log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Current Database: `runoob`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `runoob` /*!40100 DEFAULT CHARACTER SET utf8 */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `runoob`;

--
-- Table structure for table `aclist`
--

DROP TABLE IF EXISTS `aclist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `aclist` (
  `id` int NOT NULL,
  `inv_id` int NOT NULL,
  `Itemprice` decimal(12,2) DEFAULT NULL,
  `orderdate` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aclist`
--

LOCK TABLES `aclist` WRITE;
/*!40000 ALTER TABLE `aclist` DISABLE KEYS */;
INSERT INTO `aclist` VALUES (1903,9025,5.00,'2022-06-01'),(1903,10642,4.95,'2022-06-01'),(1819,9025,21.00,'2022-06-09'),(1819,9025,21.00,'2022-06-09'),(1818,9073,6.65,'2022-06-02'),(1821,4751,6.00,'2022-06-02'),(1821,12345,0.00,'2022-06-02'),(1819,4751,6.00,'2022-06-02'),(1819,11238,2.19,'2022-06-03'),(1819,5123,50.00,'2022-06-02'),(1816,11238,2.19,'2022-06-03'),(1816,12269,1.00,'2022-06-03'),(1811,10642,4.95,'2022-06-02'),(1811,9566,39.95,'2022-06-02'),(1811,9161,1000.00,'2022-06-02'),(1816,9073,6.65,'2022-06-03'),(1816,12345,0.00,'2022-06-02'),(1816,5123,50.00,'2022-06-02'),(1816,10964,25.00,'2022-06-03'),(1816,10020,37.95,'2022-06-02'),(1816,11942,1.29,'2022-06-02'),(1816,5883,6.50,'2022-06-02'),(1819,12345,0.00,'2022-06-02'),(1819,10642,4.95,'2022-06-02'),(1819,11245,1.00,'2022-06-02'),(1818,9566,39.95,'2022-06-02'),(1816,4751,6.00,'2022-06-03'),(1819,11767,7.99,'2022-06-03'),(1819,9073,6.65,'2022-06-03'),(1816,11767,7.99,'2022-06-09'),(1819,9578,10.00,'2022-06-09'),(2087,6202,94.00,'2022-06-04'),(2087,5319,24.00,'2022-06-04'),(2087,10004,18.00,'2022-06-04'),(2087,6082,39.00,'2022-06-04'),(2087,6333,36.00,'2022-06-04'),(2087,5125,53.00,'2022-06-04'),(2087,9820,5.99,'2022-06-04'),(2087,5900,6.79,'2022-06-04'),(2087,6331,28.00,'2022-06-04'),(2087,4983,8.99,'2022-06-04'),(2087,10259,31.00,'2022-06-04'),(2087,9090,35.70,'2022-06-04'),(2087,5505,27.60,'2022-06-04'),(2087,12383,156.00,'2022-06-04'),(2087,4826,71.60,'2022-06-04'),(2087,5902,1.19,'2022-06-04'),(1815,6331,26.00,'2022-06-09'),(1848,9766,3.99,'2022-06-08'),(2066,7299,19.00,'2022-06-09'),(2066,5132,29.00,'2022-06-09'),(2066,4826,59.60,'2022-06-09'),(2066,4983,8.99,'2022-06-09'),(1814,10642,4.95,'2022-06-09'),(1814,4751,6.00,'2022-06-09'),(1815,11767,7.99,'2022-06-09'),(1812,11246,1.00,'2022-06-09'),(1812,9370,3.79,'2022-06-09'),(1812,12005,17.00,'2022-06-09'),(1812,11195,2.69,'2022-06-09'),(1812,11366,1.95,'2022-06-09'),(1814,9025,21.00,'2022-06-09'),(1814,5123,50.00,'2022-06-09'),(1816,9025,21.00,'2022-06-09'),(2343,6043,14.00,'2022-05-30'),(2343,5649,37.00,'2022-05-30'),(2343,6119,20.00,'2022-05-30'),(2343,5321,17.95,'2022-05-30'),(2343,11843,44.00,'2022-05-30'),(2343,5233,43.00,'2022-05-30'),(2343,6083,29.00,'2022-05-30'),(2343,4711,13.00,'2022-05-30'),(2343,5717,47.00,'2022-05-30'),(2343,9883,60.00,'2022-05-30'),(2343,5789,160.00,'2022-05-30'),(2343,9000,55.00,'2022-05-30'),(2343,10023,65.00,'2022-05-30'),(2343,5773,33.00,'2022-05-30'),(2343,5252,20.00,'2022-05-30'),(2343,5564,2.19,'2022-05-30'),(2343,9612,1.49,'2022-05-30'),(2343,5751,42.00,'2022-05-30'),(2343,7303,34.00,'2022-05-30'),(2343,6000,35.00,'2022-05-30'),(2343,7299,19.00,'2022-05-30'),(2343,9306,33.00,'2022-05-30'),(2343,9629,19.00,'2022-05-30'),(2343,5383,20.00,'2022-05-30'),(2343,5147,22.00,'2022-05-30'),(2343,5505,26.00,'2022-05-30'),(2343,9072,52.00,'2022-05-30'),(2343,5901,65.78,'2022-05-30'),(2343,5823,156.00,'2022-05-30'),(2343,10314,52.00,'2022-05-30'),(2343,5739,24.00,'2022-05-30'),(2343,5104,35.50,'2022-05-30'),(2343,5902,1.05,'2022-05-30'),(2343,5402,1.99,'2022-05-30'),(2343,9391,1.99,'2022-05-30'),(2141,6083,29.00,'2022-05-30'),(2141,5988,69.00,'2022-05-30'),(2141,5426,10.00,'2022-05-30'),(2141,6066,33.00,'2022-05-30'),(2141,6162,10.00,'2022-05-30'),(2141,5883,6.50,'2022-05-30'),(2141,4711,13.00,'2022-05-30'),(2141,5322,36.00,'2022-05-30'),(2141,9020,35.00,'2022-05-30'),(2141,6119,25.00,'2022-05-30'),(2141,5336,51.00,'2022-05-30'),(2141,7303,34.00,'2022-05-30'),(2141,9006,1.79,'2022-05-30'),(2141,7299,19.00,'2022-05-30'),(2141,6347,35.00,'2022-05-30'),(2141,9057,22.00,'2022-05-30'),(2078,6126,23.00,'2022-06-09'),(2078,5132,29.00,'2022-05-31'),(2360,5091,52.00,'2022-06-09'),(2360,5870,94.00,'2022-06-09'),(2360,10173,20.00,'2022-06-09'),(2360,9442,7.99,'2022-06-09'),(2324,5733,222.00,'2022-05-31'),(2324,5123,50.00,'2022-05-31'),(2324,11767,7.99,'2022-05-31'),(1817,11767,7.99,'2022-06-10'),(1815,10642,4.95,'2022-06-10'),(1814,11767,7.99,'2022-06-10'),(2078,11737,38.00,'2022-06-10'),(2078,5233,42.00,'2022-06-10'),(2078,5442,47.00,'2022-05-31'),(2078,5811,62.00,'2022-05-31'),(2078,6354,57.00,'2022-05-31'),(2078,10070,120.00,'2022-05-31'),(2078,6302,70.00,'2022-05-31'),(2078,5733,35.00,'2022-05-31'),(2078,5628,35.00,'2022-05-31'),(2078,10815,258.00,'2022-05-31'),(2078,12252,82.80,'2022-05-31'),(2078,11035,4.29,'2022-05-31'),(2078,5402,1.99,'2022-05-31'),(2308,6257,58.00,'2022-06-10'),(2308,11737,38.00,'2022-05-31'),(2308,5233,42.00,'2022-05-31'),(2308,6354,57.00,'2022-05-31'),(2308,10070,120.00,'2022-05-31'),(2308,9000,55.00,'2022-05-31'),(2308,5733,35.00,'2022-05-31'),(2308,5132,29.00,'2022-05-31'),(2308,6000,1.69,'2022-05-31'),(2308,10815,248.70,'2022-05-31'),(2308,12252,82.80,'2022-05-31'),(2308,11035,4.29,'2022-05-31');
/*!40000 ALTER TABLE `aclist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aclist1`
--

DROP TABLE IF EXISTS `aclist1`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `aclist1` (
  `cid` int NOT NULL,
  `inv_id` int NOT NULL,
  `Taxable` tinyint(1) DEFAULT NULL,
  `smallu` varchar(20) NOT NULL,
  `bigu` varchar(20) NOT NULL,
  `smallp` decimal(12,2) DEFAULT NULL,
  `bigp` decimal(14,2) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aclist1`
--

LOCK TABLES `aclist1` WRITE;
/*!40000 ALTER TABLE `aclist1` DISABLE KEYS */;
INSERT INTO `aclist1` VALUES (1812,11767,0,'btl','cs',7.99,55.00),(1812,10642,0,'lb','lb',4.95,4.95),(1813,11767,0,'btl','cs',7.99,75.00),(1813,10642,0,'lb','lb',4.95,4.95),(1813,10210,1,'dz','dz',15.00,16.00),(1812,5896,1,'roll','cs',3.50,33.50),(1815,4751,0,'bag','cs',6.00,150.00),(1815,10642,0,'lb','lb',4.95,4.95),(1815,9566,0,'cs','cs',39.95,39.95),(1815,12269,0,'box','box',1.00,1.00),(1815,9764,0,'bundl','bundl',54.00,54.00),(1814,5863,0,'can','cs',7.50,168.00),(1814,10642,0,'lb','lb',4.95,4.95),(1814,12269,0,'box','box',1.00,1.00),(1816,5123,0,'gal','cs',50.00,97.00),(1816,10642,0,'lb','lb',4.95,4.95),(1817,10642,0,'lb','lb',4.95,4.95),(1817,9025,0,'bag','cs',21.00,26.00),(1817,11238,0,'box','box',2.19,2.19),(1817,10350,0,'lb','lb',60.00,60.00),(1817,5440,0,'bundl','bundl',42.00,42.00),(1817,9771,0,'jar','cs',1.99,40.00),(1817,11692,0,'can','can',2.99,2.99),(1811,9025,0,'bag','cs',21.00,26.00),(1811,11238,0,'box','box',2.19,2.19),(1811,9566,0,'cs','cs',39.95,39.95),(1812,11238,0,'box','box',2.19,2.19),(2324,5233,0,'cs','cs',40.00,41.00),(2324,6354,0,'cs','cs',41.50,41.50),(2324,5733,0,'sk','sk',28.99,28.99),(2324,10076,0,'cs','cs',21.00,21.00),(2324,11737,0,'cs','cs',32.00,32.00),(2324,5845,0,'cs','cs',75.00,75.00),(2324,9169,0,'cs','cs',37.00,37.00),(2324,6257,0,'btl','cs',3.79,35.00),(2324,9000,0,'sk','sk',22.00,22.00),(2324,12252,0,'lb','cs',1.23,49.20),(2324,11035,0,'lb','lb',4.29,4.29),(2324,10110,0,'cs','cs',0.99,31.00),(2087,6202,0,'pkg','cs',1.99,94.00),(2087,5319,0,'cs','cs',22.00,22.00),(2087,10004,0,'cs','cs',18.00,18.00),(2087,6082,0,'can','cs',7.50,36.00),(2087,6333,0,'pkg','cs',2.25,32.50),(2087,5125,0,'pkg','cs',2.25,48.00),(2087,9820,0,'bag','cs',3.99,90.00),(2087,5900,0,'pkg','cs',4.50,80.00),(2087,6331,0,'cs','cs',20.50,20.50),(2087,4983,0,'cs','cs',8.50,8.50),(2087,9090,0,'lb','cs',1.19,35.70),(2087,5505,0,'lb','cs',0.69,27.60),(2087,5823,0,'lb','cs',2.35,94.00),(2087,4826,0,'cs','cs',1.89,75.60),(2087,5902,0,'lb','lb',0.69,0.69),(1899,9462,1,'ea','box',0.59,28.00),(1899,5649,0,'cs','cs',37.00,37.00),(1899,5505,0,'lb','cs',0.69,27.60),(1899,9090,0,'lb','cs',1.19,35.70),(1820,9025,0,'bag','cs',21.00,26.00),(1820,10642,0,'lb','lb',4.95,4.95),(1818,10642,0,'lb','lb',4.95,4.95),(1818,9025,0,'bag','cs',21.00,26.00),(1818,9566,0,'cs','cs',39.95,39.95),(2372,5957,1,'bkt','bkt',44.00,44.00),(2209,9025,0,'bag','cs',21.00,26.00),(2209,12269,0,'box','box',1.00,1.00),(2209,9566,0,'cs','cs',39.95,39.95),(2209,10350,0,'lb','lb',60.00,60.00),(2209,11767,0,'btl','cs',7.99,75.00),(2209,9746,1,'ea','ea',39.95,39.95);
/*!40000 ALTER TABLE `aclist1` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `buylist`
--

DROP TABLE IF EXISTS `buylist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `buylist` (
  `id` int NOT NULL,
  `invid` int DEFAULT NULL,
  `sid` int DEFAULT NULL,
  `transdate` date DEFAULT NULL,
  `largenum` decimal(12,2) DEFAULT NULL,
  `cost` decimal(14,2) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `buylist`
--

LOCK TABLES `buylist` WRITE;
/*!40000 ALTER TABLE `buylist` DISABLE KEYS */;
INSERT INTO `buylist` VALUES (1,12345,2,'2022-05-28',0.00,0.00),(2,5123,2,'2022-05-28',4.00,83.45),(3,10350,2,'2022-05-28',0.00,0.00),(4,5863,2,'2022-05-28',0.00,0.00),(5,11767,2,'2022-05-28',0.00,0.00),(6,9025,2,'2022-05-28',2.00,44.95),(7,4751,2,'2022-05-28',2.00,103.75),(8,9073,2,'2022-05-28',3.00,20.75),(9,10642,2,'2022-05-28',0.00,0.00),(10,11238,2,'2022-05-28',0.00,0.00),(11,9566,2,'2022-05-28',0.00,0.00),(12,12269,2,'2022-05-28',0.00,0.00),(13,9965,2,'2022-05-28',0.00,0.00),(14,9957,2,'2022-05-28',0.00,0.00),(15,11480,2,'2022-05-28',0.00,0.00),(16,11278,2,'2022-05-28',0.00,0.00),(17,11279,2,'2022-05-28',0.00,0.00),(18,9809,2,'2022-05-28',0.00,0.00),(19,9559,2,'2022-05-28',0.00,0.00),(20,5096,2,'2022-05-28',4.00,28.39),(21,5440,2,'2022-05-28',2.00,36.48),(22,9127,2,'2022-05-28',105.00,10.00),(23,10781,2,'2022-05-28',0.00,0.00),(24,9764,2,'2022-05-28',4.00,51.58),(25,9080,2,'2022-05-28',4.00,16.59),(26,10964,2,'2022-05-28',0.00,0.00),(27,9181,2,'2022-05-28',1.00,62.23),(28,10020,2,'2022-05-28',0.00,0.00),(29,5439,2,'2022-05-28',3.00,22.80),(30,11245,2,'2022-05-28',0.00,0.00),(31,11246,2,'2022-05-28',0.00,0.00),(32,11432,2,'2022-05-28',0.00,0.00),(33,11861,2,'2022-05-28',0.00,0.00),(34,11243,2,'2022-05-28',0.00,0.00),(35,9943,2,'2022-05-28',0.00,0.00),(36,12122,2,'2022-05-28',1.00,113.52),(37,10708,2,'2022-05-28',0.00,0.00),(38,9374,2,'2022-05-28',0.00,0.00),(39,9373,2,'2022-05-28',0.00,0.00),(40,9372,2,'2022-05-28',0.00,0.00),(41,9748,2,'2022-05-28',0.00,0.00),(42,5834,2,'2022-05-28',718.00,14.00),(43,9382,2,'2022-05-28',0.00,0.00),(44,6114,2,'2022-05-28',600.00,17.75),(45,12144,2,'2022-05-28',0.00,0.00),(46,6248,2,'2022-05-28',97.00,16.90),(47,9186,2,'2022-05-28',0.00,0.00),(48,5089,2,'2022-05-28',171.00,16.50),(51,5194,120,'2022-05-28',92.00,16.95),(53,9649,2,'2022-05-28',18.00,16.95),(54,5098,2,'2022-05-28',55.00,35.62),(55,9170,2,'2022-05-28',0.00,0.00),(56,11429,2,'2022-05-28',0.00,0.00),(57,4841,2,'2022-05-28',14.50,50.64),(58,11099,2,'2022-05-28',0.00,0.00),(59,11942,2,'2022-05-28',0.00,0.00),(60,5883,2,'2022-05-28',36.33,24.18),(61,9805,2,'2022-05-28',0.00,0.00),(62,9681,2,'2022-05-28',0.00,0.00),(63,10349,2,'2022-05-28',0.00,0.00),(64,10348,2,'2022-05-28',0.00,0.00),(65,9904,2,'2022-05-28',0.00,0.00),(66,12308,2,'2022-05-28',0.00,0.00),(67,4731,2,'2022-05-28',9.83,33.00),(68,9771,2,'2022-05-28',0.00,0.00),(69,4732,48,'2022-05-28',280.00,33.00),(70,10571,2,'2022-05-28',0.00,0.00),(71,11692,2,'2022-05-28',0.00,0.00),(72,5184,48,'2022-05-28',102.00,33.00),(73,10324,2,'2022-05-28',0.00,0.00),(74,6329,2,'2022-05-28',1.00,40.00),(75,10965,2,'2022-05-28',0.00,0.00),(76,5894,2,'2022-05-28',30.00,1.19),(77,12176,2,'2022-05-28',0.00,0.00),(78,10166,2,'2022-05-28',0.00,0.00),(79,9238,2,'2022-05-28',0.00,0.00),(80,9237,2,'2022-05-28',0.00,0.00),(81,9860,2,'2022-05-28',0.00,0.00),(82,5437,2,'2022-05-28',0.00,0.00),(83,5895,2,'2022-05-28',0.00,0.00),(84,5896,2,'2022-05-28',8.00,25.84),(85,4818,37,'2022-05-28',7.00,24.82),(86,6075,2,'2022-05-28',0.00,0.00),(87,11230,2,'2022-05-28',0.00,0.00),(88,11025,2,'2022-05-28',0.00,0.00),(89,10852,2,'2022-05-28',0.00,0.00),(90,5920,2,'2022-05-28',8.50,95.00),(91,5921,2,'2022-05-28',0.00,0.00),(92,9433,2,'2022-05-28',0.00,0.00),(93,9319,2,'2022-05-28',0.00,0.00),(94,11849,2,'2022-05-28',0.00,0.00),(95,11098,2,'2022-05-28',0.00,0.00),(96,10547,2,'2022-05-28',0.00,0.00),(97,11759,2,'2022-05-28',0.00,0.00),(98,9318,2,'2022-05-28',0.00,0.00),(99,9882,2,'2022-05-28',0.00,0.00),(100,10602,2,'2022-05-28',0.00,0.00),(101,10698,2,'2022-05-28',0.00,0.00),(102,11428,2,'2022-05-28',0.00,0.00),(103,11103,2,'2022-05-28',0.00,0.00),(104,9095,2,'2022-05-28',0.00,0.00),(105,11395,2,'2022-05-28',0.00,0.00),(106,11932,2,'2022-05-28',0.00,0.00),(107,11069,2,'2022-05-28',0.00,0.00),(108,4801,2,'2022-05-28',78.00,1.90),(109,10889,2,'2022-05-28',0.00,0.00),(110,9440,2,'2022-05-28',0.00,0.00),(111,11907,2,'2022-05-28',0.00,0.00),(112,6184,2,'2022-05-28',0.00,0.00),(113,11397,2,'2022-05-28',0.00,0.00),(114,11489,2,'2022-05-28',0.00,0.00),(115,10099,2,'2022-05-28',0.00,0.00),(116,6180,2,'2022-05-28',0.00,0.00),(117,10683,2,'2022-05-28',0.00,0.00),(118,12197,2,'2022-05-28',0.00,0.00),(119,10989,2,'2022-05-28',0.00,0.00),(120,12115,2,'2022-05-28',0.00,0.00),(121,9180,2,'2022-05-28',0.00,0.00),(122,10100,2,'2022-05-28',0.00,0.00),(123,9641,2,'2022-05-28',0.00,0.00),(124,9461,2,'2022-05-28',0.00,0.00),(125,11968,2,'2022-05-28',0.00,0.00),(126,9157,2,'2022-05-28',0.00,0.00),(127,9156,2,'2022-05-28',0.00,0.00),(128,11515,2,'2022-05-28',0.00,0.00),(129,11119,2,'2022-05-28',0.00,0.00),(130,11969,2,'2022-05-28',0.00,0.00),(131,11323,2,'2022-05-28',0.00,0.00),(132,10545,2,'2022-05-28',0.00,0.00),(133,12124,2,'2022-05-28',0.00,0.00),(134,11185,2,'2022-05-28',0.00,0.00),(135,11184,2,'2022-05-28',0.00,0.00),(136,11711,2,'2022-05-28',0.00,0.00),(137,9479,2,'2022-05-28',0.00,0.00),(138,12258,2,'2022-05-28',0.00,0.00),(139,10071,54,'2022-05-28',7.00,0.00),(140,11118,2,'2022-05-28',0.00,0.00),(141,9616,57,'2022-05-28',0.00,0.00),(142,6055,2,'2022-05-28',3.67,36.25),(143,11094,2,'2022-05-28',0.00,0.00),(144,6285,2,'2022-05-28',0.00,0.00),(145,6279,2,'2022-05-28',0.94,105.00),(146,10193,2,'2022-05-28',0.00,0.00),(147,6079,2,'2022-05-28',0.00,0.00),(148,9293,2,'2022-05-28',9.00,43.50),(149,5730,54,'2022-05-28',14.00,38.00),(150,6281,2,'2022-05-28',24.25,105.00),(151,5252,2,'2022-05-28',0.00,0.00),(152,9008,2,'2022-05-28',0.00,0.00),(153,7307,2,'2022-05-28',0.00,0.00),(154,10095,2,'2022-05-28',0.00,0.00),(155,10096,2,'2022-05-28',0.00,0.00),(156,12289,2,'2022-05-28',0.00,0.00),(157,10094,2,'2022-05-28',0.00,0.00),(158,5898,2,'2022-05-28',0.00,0.00),(159,9322,2,'2022-05-28',0.00,0.00),(160,10453,2,'2022-05-28',0.00,0.00),(161,5374,2,'2022-05-28',19.62,55.00),(162,11925,2,'2022-05-28',0.00,0.00),(163,12160,2,'2022-05-28',0.00,0.00),(164,12107,2,'2022-05-28',0.00,0.00),(165,11300,2,'2022-05-28',0.00,0.00),(166,10687,2,'2022-05-28',0.00,0.00),(167,10688,2,'2022-05-28',0.00,0.00),(168,10230,2,'2022-05-28',2345.95,3.60),(169,11910,2,'2022-05-28',0.00,0.00),(170,10435,2,'2022-05-28',0.00,0.00),(171,5743,2,'2022-05-28',0.00,0.00),(172,5902,2,'2022-05-28',10414.65,0.69),(173,10634,2,'2022-05-28',0.00,0.00),(174,5903,2,'2022-05-28',4599.78,2.73),(175,12128,2,'2022-05-28',0.00,0.00),(176,10608,2,'2022-05-28',0.00,0.00),(177,11293,2,'2022-05-28',0.00,0.00),(178,10520,2,'2022-05-28',4.00,54.50),(179,9352,2,'2022-05-28',5979.08,3.39),(180,12245,2,'2022-05-28',0.00,0.00),(181,12108,2,'2022-05-28',0.00,0.00),(182,9485,2,'2022-05-28',0.00,0.00),(183,10776,2,'2022-05-28',5.00,187.50),(184,11001,2,'2022-05-28',0.00,0.00),(185,9646,2,'2022-05-28',0.00,0.00),(186,10640,2,'2022-05-28',0.00,0.00),(187,11358,2,'2022-05-28',0.00,0.00),(188,10631,2,'2022-05-28',0.00,0.00),(189,5905,2,'2022-05-28',201.60,4.25),(190,11960,2,'2022-05-28',0.00,0.00),(191,10815,2,'2022-05-28',28.00,225.00),(192,5906,2,'2022-05-28',0.00,0.00),(193,11935,2,'2022-05-28',0.00,0.00),(194,10689,2,'2022-05-28',0.00,0.00),(195,12087,2,'2022-05-28',0.00,0.00),(196,10548,2,'2022-05-28',0.00,0.00),(197,10554,2,'2022-05-28',0.00,0.00),(198,9093,2,'2022-05-28',0.00,0.00),(199,10758,2,'2022-05-28',0.00,0.00),(200,5907,2,'2022-05-28',0.00,0.00),(201,10757,2,'2022-05-28',0.00,0.00),(202,5908,2,'2022-05-28',2662.26,3.70),(203,11061,2,'2022-05-28',0.00,0.00),(204,12146,2,'2022-05-28',0.00,0.00),(205,10582,2,'2022-05-28',0.00,0.00),(206,11065,2,'2022-05-28',0.00,0.00),(207,10308,2,'2022-05-28',0.00,0.00),(208,5909,2,'2022-05-28',10.00,152.90),(209,11204,2,'2022-05-28',0.00,0.00),(210,11034,2,'2022-05-28',0.00,0.00),(211,11035,2,'2022-05-28',3433.58,3.95),(212,9855,2,'2022-05-28',0.00,0.00),(213,5901,2,'2022-05-28',30.00,56.98),(214,12243,2,'2022-05-28',0.00,0.00),(215,5900,2,'2022-05-28',8.50,73.00),(216,12021,2,'2022-05-28',0.00,0.00),(217,10013,2,'2022-05-28',0.00,0.00),(218,9317,2,'2022-05-28',106.00,103.75),(219,9125,2,'2022-05-28',0.00,0.00),(220,9597,2,'2022-05-28',0.00,0.00),(221,12022,2,'2022-05-28',0.00,0.00),(222,12024,2,'2022-05-28',0.00,0.00),(223,9224,2,'2022-05-28',0.00,0.00),(224,11878,2,'2022-05-28',0.00,0.00),(225,9040,2,'2022-05-28',0.00,0.00),(226,9701,2,'2022-05-28',0.00,0.00),(227,9702,2,'2022-05-28',0.00,0.00),(228,9486,2,'2022-05-28',0.00,0.00),(229,12077,2,'2022-05-28',0.00,0.00),(230,11420,2,'2022-05-28',0.00,0.00),(231,10039,2,'2022-05-28',0.00,0.00),(232,10418,2,'2022-05-28',0.00,0.00),(233,10419,2,'2022-05-28',0.00,0.00),(234,9071,2,'2022-05-28',0.00,0.00),(235,5735,37,'2022-05-28',33.00,21.07),(236,10638,2,'2022-05-28',0.00,0.00),(237,10701,2,'2022-05-28',0.00,0.00),(238,10148,2,'2022-05-28',0.00,0.00),(239,11058,2,'2022-05-28',0.00,0.00),(240,10225,2,'2022-05-28',0.00,0.00),(241,10224,2,'2022-05-28',0.00,0.00),(242,10229,2,'2022-05-28',0.00,0.00),(243,10212,2,'2022-05-28',2.00,18.69),(244,12272,2,'2022-05-28',0.00,0.00),(245,12030,2,'2022-05-28',0.00,0.00),(246,11864,2,'2022-05-28',0.00,0.00),(247,11863,2,'2022-05-28',0.00,0.00),(248,12183,2,'2022-05-28',0.00,0.00),(249,12162,2,'2022-05-28',0.00,0.00),(250,11752,2,'2022-05-28',0.00,0.00),(251,11753,2,'2022-05-28',0.00,0.00),(252,11880,2,'2022-05-28',0.00,0.00),(253,12184,2,'2022-05-28',0.00,0.00),(254,11746,2,'2022-05-28',0.00,0.00),(255,11754,2,'2022-05-28',0.00,0.00),(256,11716,2,'2022-05-28',0.00,0.00),(257,12278,2,'2022-05-28',0.00,0.00),(258,12169,2,'2022-05-28',0.00,0.00),(259,11699,2,'2022-05-28',0.00,0.00),(260,11898,2,'2022-05-28',0.00,0.00),(261,11729,2,'2022-05-28',0.00,0.00),(262,12088,2,'2022-05-28',0.00,0.00),(263,12170,2,'2022-05-28',0.00,0.00),(264,11899,2,'2022-05-28',0.00,0.00),(265,11905,2,'2022-05-28',0.00,0.00),(266,11776,2,'2022-05-28',0.00,0.00),(267,12171,2,'2022-05-28',0.00,0.00),(268,11703,2,'2022-05-28',0.00,0.00),(269,11856,2,'2022-05-28',0.00,0.00),(270,10064,2,'2022-05-28',0.00,0.00),(271,12129,2,'2022-05-28',0.00,0.00),(272,11857,2,'2022-05-28',0.00,0.00),(273,11858,2,'2022-05-28',0.00,0.00),(274,11867,2,'2022-05-28',0.00,0.00),(275,11874,2,'2022-05-28',0.00,0.00),(276,11873,2,'2022-05-28',4.00,42.98),(277,11866,2,'2022-05-28',0.00,0.00),(278,11865,2,'2022-05-28',0.00,0.00),(279,11732,2,'2022-05-28',0.00,0.00),(280,11635,2,'2022-05-28',0.00,0.00),(281,9098,2,'2022-05-28',3.00,16.10),(282,12097,2,'2022-05-28',0.00,0.00),(283,5836,2,'2022-05-28',0.00,0.00),(284,9453,2,'2022-05-28',0.00,0.00),(285,11828,2,'2022-05-28',0.00,0.00),(286,6301,2,'2022-05-28',1.00,55.00),(287,10897,2,'2022-05-28',0.00,0.00),(288,11070,2,'2022-05-28',0.00,0.00),(289,10838,2,'2022-05-28',0.00,0.00),(290,9950,2,'2022-05-28',0.00,0.00),(291,11845,2,'2022-05-28',0.00,0.00),(292,11392,2,'2022-05-28',0.00,0.00),(293,9554,2,'2022-05-28',0.00,0.00),(294,9019,2,'2022-05-28',0.00,0.00),(295,9949,2,'2022-05-28',0.00,0.00),(296,11948,2,'2022-05-28',0.00,0.00),(297,12267,2,'2022-05-28',1.00,48.00),(298,12268,2,'2022-05-28',0.00,0.00),(299,11846,2,'2022-05-28',0.00,0.00),(300,11372,2,'2022-05-28',0.00,0.00),(301,11348,2,'2022-05-28',0.00,0.00),(302,10763,2,'2022-05-28',0.00,0.00),(303,10941,2,'2022-05-28',0.00,0.00),(304,11893,2,'2022-05-28',0.00,0.00),(305,10595,2,'2022-05-28',0.00,0.00),(306,12375,2,'2022-05-28',0.00,0.00),(307,11847,2,'2022-05-28',0.00,0.00),(308,11015,2,'2022-05-28',0.00,0.00),(309,10226,2,'2022-05-28',0.00,0.00),(310,9843,2,'2022-05-28',0.00,0.00),(311,9844,2,'2022-05-28',0.00,0.00),(312,11157,2,'2022-05-28',0.00,0.00),(313,9892,2,'2022-05-28',0.00,0.00),(314,11158,2,'2022-05-28',0.00,0.00),(315,6005,2,'2022-05-28',6.00,32.00),(316,10769,2,'2022-05-28',0.00,0.00),(317,9270,2,'2022-05-28',59.00,2.00),(318,9147,2,'2022-05-28',0.00,0.00),(319,9493,2,'2022-05-28',218.00,1.80),(320,10919,2,'2022-05-28',0.00,0.00),(321,11005,2,'2022-05-28',0.00,0.00),(322,10935,2,'2022-05-28',0.00,0.00),(323,9938,2,'2022-05-28',0.00,0.00),(324,10662,2,'2022-05-28',0.00,0.00),(325,10663,2,'2022-05-28',0.00,0.00),(326,11175,2,'2022-05-28',0.00,0.00),(327,9673,2,'2022-05-28',0.00,0.00),(328,12145,2,'2022-05-28',0.00,0.00),(329,5817,2,'2022-05-28',140.00,17.77),(330,11242,2,'2022-05-28',0.00,0.00),(331,5922,2,'2022-05-28',0.00,0.00),(332,11241,2,'2022-05-28',0.00,0.00),(333,5818,2,'2022-05-28',200.00,15.00),(334,5923,2,'2022-05-28',80.00,17.77),(335,11735,2,'2022-05-28',0.00,0.00),(336,11473,2,'2022-05-28',0.00,0.00),(337,9292,2,'2022-05-28',0.00,0.00),(338,10998,2,'2022-05-28',0.00,0.00),(339,11896,2,'2022-05-28',0.00,0.00),(340,12029,2,'2022-05-28',0.00,0.00),(341,11474,2,'2022-05-28',0.00,0.00),(342,11900,2,'2022-05-28',0.00,0.00),(343,11795,52,'2022-05-28',1.00,49.50),(344,11570,2,'2022-05-28',0.00,0.00),(345,11772,2,'2022-05-28',0.00,0.00),(346,6099,2,'2022-05-28',0.00,0.00),(347,9726,2,'2022-05-28',0.00,0.00),(348,10937,2,'2022-05-28',0.00,0.00),(349,9014,2,'2022-05-28',88.00,112.50),(350,9227,2,'2022-05-28',158.00,22.50),(351,11333,2,'2022-05-28',0.00,0.00),(352,11957,2,'2022-05-28',0.00,0.00),(353,11965,2,'2022-05-28',0.00,0.00),(354,10792,2,'2022-05-28',0.00,0.00),(355,10791,2,'2022-05-28',0.00,0.00),(356,10703,2,'2022-05-28',0.00,0.00),(357,6080,2,'2022-05-28',0.00,0.00),(358,10421,2,'2022-05-28',0.00,0.00),(359,6054,57,'2022-05-28',6.00,49.50),(360,5498,2,'2022-05-28',0.00,0.00),(361,10581,2,'2022-05-28',0.00,0.00),(362,10645,2,'2022-05-28',0.00,0.00),(363,10338,2,'2022-05-28',0.00,0.00),(364,10785,2,'2022-05-28',0.00,0.00),(365,6107,2,'2022-05-28',0.00,0.00),(366,6108,2,'2022-05-28',0.00,0.00),(367,6106,2,'2022-05-28',0.00,0.00),(368,9989,2,'2022-05-28',0.00,0.00),(369,9737,2,'2022-05-28',0.00,0.00),(370,9474,2,'2022-05-28',0.00,0.00),(371,10876,2,'2022-05-28',0.00,0.00),(372,10986,2,'2022-05-28',0.00,0.00),(373,9096,2,'2022-05-28',0.00,0.00),(374,9094,2,'2022-05-28',0.00,0.00),(375,9785,2,'2022-05-28',0.00,0.00),(376,5505,2,'2022-05-28',33.00,21.20),(378,11045,2,'2022-05-28',0.00,0.00),(379,5823,2,'2022-05-28',17.00,93.80),(380,11120,2,'2022-05-28',0.00,0.00),(381,11617,2,'2022-05-28',0.00,0.00),(382,11913,2,'2022-05-28',0.00,0.00),(383,9408,2,'2022-05-28',0.00,0.00),(384,11821,2,'2022-05-28',0.00,0.00),(385,10614,2,'2022-05-28',0.00,0.00),(386,9628,2,'2022-05-28',0.00,0.00),(387,11738,2,'2022-05-28',0.00,0.00),(388,11862,2,'2022-05-28',0.00,0.00),(389,12317,2,'2022-05-28',0.00,0.00),(390,4766,2,'2022-05-28',0.00,0.00),(391,10242,56,'2022-05-28',34.67,96.00),(392,10768,2,'2022-05-28',0.00,0.00),(393,6265,2,'2022-05-28',90.12,1.15),(394,4826,2,'2022-05-28',27.00,50.00),(395,11282,2,'2022-05-28',0.00,0.00),(396,5929,2,'2022-05-28',0.00,0.00),(397,9696,2,'2022-05-28',0.00,0.00),(398,11309,2,'2022-05-28',0.00,0.00),(399,11774,2,'2022-05-28',0.00,0.00),(400,11775,2,'2022-05-28',0.00,0.00),(401,9452,2,'2022-05-28',0.00,0.00),(402,11470,2,'2022-05-28',0.00,0.00),(403,11266,2,'2022-05-28',0.00,0.00),(404,5931,2,'2022-05-28',11.00,26.70),(405,10672,2,'2022-05-28',0.00,0.00),(406,10462,2,'2022-05-28',0.00,0.00),(407,10563,2,'2022-05-28',0.00,0.00),(408,11299,2,'2022-05-28',0.00,0.00),(409,5932,2,'2022-05-28',0.00,0.00),(410,10261,2,'2022-05-28',0.00,0.00),(411,12193,2,'2022-05-28',0.00,0.00),(412,4980,2,'2022-05-28',0.00,0.00),(413,9577,2,'2022-05-28',0.00,0.00),(414,11798,2,'2022-05-28',0.00,0.00),(415,11231,2,'2022-05-28',0.00,0.00),(416,11033,2,'2022-05-28',0.00,0.00),(417,11390,2,'2022-05-28',0.00,0.00),(418,10129,2,'2022-05-28',0.00,0.00),(419,11593,2,'2022-05-28',0.00,0.00),(420,11498,2,'2022-05-28',0.00,0.00),(421,10238,2,'2022-05-28',0.00,0.00),(422,5870,2,'2022-05-28',55.50,74.65),(423,9611,2,'2022-05-28',0.00,0.00),(424,5195,2,'2022-05-28',66.75,90.00),(425,6081,2,'2022-05-28',38.00,83.00),(426,12067,2,'2022-05-28',0.00,0.00),(427,10054,2,'2022-05-28',0.00,0.00),(428,10415,2,'2022-05-28',0.00,0.00),(429,9023,2,'2022-05-28',186.00,78.00),(430,12252,2,'2022-05-28',0.00,78.00),(431,5968,2,'2022-05-28',5.17,51.00),(432,12180,2,'2022-05-28',15.00,10.50),(433,10661,2,'2022-05-28',0.00,0.00),(434,11806,2,'2022-05-28',0.00,0.00),(435,11331,2,'2022-05-28',0.00,0.00),(436,5321,2,'2022-05-28',68.83,55.50),(437,9670,2,'2022-05-28',0.00,0.00),(438,6321,2,'2022-05-28',0.00,0.00),(439,6322,57,'2022-05-28',37.67,52.00),(440,11253,2,'2022-05-28',0.00,0.00),(441,9632,2,'2022-05-28',0.00,0.00),(442,10954,2,'2022-05-28',0.00,0.00),(443,9633,2,'2022-05-28',0.00,0.00),(444,9854,2,'2022-05-28',0.00,0.00),(445,10942,2,'2022-05-28',0.00,0.00),(446,11978,2,'2022-05-28',0.00,0.00),(447,10452,2,'2022-05-28',4.00,103.00),(448,6133,2,'2022-05-28',0.00,0.00),(449,9685,2,'2022-05-28',4.50,52.00),(450,5925,2,'2022-05-28',0.00,0.00),(451,9568,2,'2022-05-28',38.00,18.25),(452,11178,2,'2022-05-28',0.00,0.00),(453,6076,2,'2022-05-28',7.00,10.00),(454,11895,2,'2022-05-28',0.00,0.00),(455,9517,2,'2022-05-28',18.00,10.00),(456,11894,2,'2022-05-28',0.00,0.00),(457,6220,2,'2022-05-28',48.00,5.36),(458,10316,2,'2022-05-28',4.00,13.30),(459,12295,2,'2022-05-28',0.00,0.00),(460,6258,2,'2022-05-28',0.00,0.00),(461,11160,2,'2022-05-28',0.00,0.00),(462,6077,2,'2022-05-28',0.00,0.00),(463,11981,2,'2022-05-28',0.00,0.00),(464,11228,2,'2022-05-28',0.00,0.00),(465,10116,2,'2022-05-28',0.00,0.00),(466,10115,2,'2022-05-28',0.00,0.00),(467,10114,2,'2022-05-28',0.00,0.00),(468,10025,2,'2022-05-28',0.00,0.00),(469,9037,57,'2022-05-28',36.00,38.00),(470,11257,48,'2022-05-28',11.00,12.00),(471,10113,2,'2022-05-28',0.00,0.00),(472,6280,2,'2022-05-28',1.00,105.00),(473,10630,2,'2022-05-28',0.00,0.00),(474,6036,2,'2022-05-28',0.00,0.00),(475,6037,2,'2022-05-28',0.00,0.00),(476,10292,2,'2022-05-28',0.00,0.00),(477,9614,2,'2022-05-28',0.00,0.00),(478,9691,2,'2022-05-28',0.00,0.00),(479,11810,2,'2022-05-28',0.00,0.00),(480,6216,57,'2022-05-28',55.33,51.00),(481,11129,2,'2022-05-28',0.00,0.00),(482,9378,2,'2022-05-28',0.00,0.00),(483,11915,2,'2022-05-28',0.00,0.00),(484,9668,2,'2022-05-28',0.00,0.00),(485,6256,57,'2022-05-28',86.00,25.00),(486,6257,57,'2022-05-28',67.00,49.00),(487,9694,2,'2022-05-28',0.00,0.00),(488,9744,2,'2022-05-28',0.00,0.00),(489,12257,2,'2022-05-28',0.00,0.00),(490,9126,54,'2022-05-28',8.50,36.00),(491,10450,2,'2022-05-28',0.00,0.00),(492,9774,2,'2022-05-28',0.00,0.00),(493,10004,2,'2022-05-28',100.00,12.00),(494,9749,2,'2022-05-28',0.00,0.00),(495,10994,2,'2022-05-28',0.00,0.00),(496,11784,2,'2022-05-28',0.00,0.00),(497,11467,2,'2022-05-28',0.00,0.00),(498,11466,2,'2022-05-28',0.00,0.00),(499,11461,2,'2022-05-28',0.00,0.00),(500,11462,2,'2022-05-28',0.00,0.00),(501,11465,2,'2022-05-28',0.00,0.00),(502,11463,2,'2022-05-28',0.00,0.00),(503,11464,2,'2022-05-28',0.00,0.00),(504,4982,2,'2022-05-28',0.00,0.00),(505,9495,2,'2022-05-28',0.00,0.00),(506,12200,2,'2022-05-28',16.00,37.00),(507,10666,2,'2022-05-28',0.00,0.00),(508,5193,2,'2022-05-28',222.00,10.00),(509,9465,2,'2022-05-28',0.00,0.00),(510,5649,2,'2022-05-28',148.00,30.00),(511,6324,2,'2022-05-28',28.00,40.00),(512,10231,2,'2022-05-28',0.00,0.00),(513,9964,2,'2022-05-28',0.00,0.00),(514,11016,2,'2022-05-28',0.00,0.00),(515,9009,2,'2022-05-28',0.00,0.00),(516,6182,2,'2022-05-28',0.00,0.00),(517,10470,2,'2022-05-28',0.00,0.00),(518,10049,2,'2022-05-28',0.00,0.00),(519,12079,2,'2022-05-28',0.00,0.00),(520,10063,2,'2022-05-28',0.00,0.00),(521,12214,2,'2022-05-28',0.00,0.00),(522,10651,2,'2022-05-28',0.00,0.00),(523,5941,2,'2022-05-28',0.00,0.00),(524,9423,2,'2022-05-28',0.00,0.00),(525,9113,2,'2022-05-28',0.00,0.00),(526,11926,2,'2022-05-28',0.00,0.00),(527,10524,2,'2022-05-28',0.00,0.00),(528,10077,2,'2022-05-28',0.00,0.00),(529,10513,2,'2022-05-28',0.00,0.00),(530,11688,2,'2022-05-28',4.00,46.00),(531,12188,2,'2022-05-28',0.00,0.00),(532,10233,2,'2022-05-28',0.00,0.00),(533,10780,2,'2022-05-28',0.00,0.00),(534,5926,48,'2022-05-28',11.75,38.50),(535,5927,80,'2022-05-28',88.00,69.00),(536,11060,2,'2022-05-28',0.00,0.00),(537,6101,80,'2022-05-28',208.00,57.00),(538,10738,2,'2022-05-28',0.00,0.00),(539,11287,2,'2022-05-28',0.00,0.00),(540,10896,2,'2022-05-28',0.00,0.00),(541,10036,2,'2022-05-28',0.00,0.00),(542,11520,2,'2022-05-28',0.00,0.00),(543,9230,2,'2022-05-28',2.37,90.00),(544,11949,80,'2022-05-28',1.00,85.00),(545,12114,2,'2022-05-28',0.00,0.00),(546,11565,2,'2022-05-28',0.00,0.00),(547,9865,2,'2022-05-28',0.00,0.00),(548,10341,2,'2022-05-28',0.00,0.00),(549,12003,2,'2022-05-28',1.00,20.00),(550,12210,2,'2022-05-28',0.00,0.00),(551,11721,2,'2022-05-28',0.00,0.00),(552,11840,2,'2022-05-28',6.00,39.00),(553,12255,2,'2022-05-28',0.00,0.00),(554,11841,2,'2022-05-28',16.00,33.00),(555,9971,2,'2022-05-28',22.00,30.00),(556,11843,2,'2022-05-28',164.00,35.00),(557,9875,2,'2022-05-28',0.00,0.00),(558,9659,2,'2022-05-28',0.00,0.00),(559,12051,2,'2022-05-28',0.00,0.00),(560,11842,2,'2022-05-28',0.00,0.00),(561,9647,2,'2022-05-28',0.00,0.00),(562,11844,2,'2022-05-28',0.00,0.00),(563,12153,2,'2022-05-28',0.00,0.00),(564,12049,2,'2022-05-28',0.00,0.00),(565,10030,2,'2022-05-28',0.00,0.00),(566,12081,2,'2022-05-28',0.00,0.00),(567,11647,2,'2022-05-28',0.00,0.00),(568,11653,2,'2022-05-28',0.00,0.00),(569,11655,2,'2022-05-28',0.00,0.00),(570,11654,2,'2022-05-28',0.00,0.00),(571,10579,2,'2022-05-28',0.00,0.00),(572,10342,2,'2022-05-28',0.00,0.00),(573,5946,2,'2022-05-28',40.00,28.00),(574,5945,2,'2022-05-28',118.00,39.00),(575,10003,2,'2022-05-28',0.00,0.00),(576,10779,2,'2022-05-28',0.00,0.00),(577,10018,2,'2022-05-28',0.00,0.00),(578,10022,2,'2022-05-28',0.00,0.00),(579,10027,2,'2022-05-28',0.00,0.00),(580,10268,2,'2022-05-28',0.00,0.00),(581,9941,2,'2022-05-28',0.00,0.00),(582,10001,2,'2022-05-28',0.00,0.00),(583,10211,2,'2022-05-28',0.00,0.00),(584,10002,2,'2022-05-28',0.00,0.00),(585,9940,2,'2022-05-28',0.00,0.00),(586,10014,2,'2022-05-28',0.00,0.00),(587,9942,2,'2022-05-28',0.00,0.00),(588,10017,2,'2022-05-28',0.00,0.00),(589,10364,2,'2022-05-28',0.00,0.00),(590,10041,2,'2022-05-28',0.00,0.00),(591,10043,2,'2022-05-28',0.00,0.00),(592,10042,2,'2022-05-28',0.00,0.00),(593,10044,2,'2022-05-28',0.00,0.00),(594,10787,2,'2022-05-28',0.00,0.00),(595,12318,2,'2022-05-28',0.00,0.00),(596,11048,2,'2022-05-28',0.00,0.00),(597,10309,2,'2022-05-28',0.00,0.00),(598,10271,2,'2022-05-28',0.00,0.00),(599,10273,2,'2022-05-28',0.00,0.00),(600,10272,2,'2022-05-28',0.00,0.00),(601,10962,2,'2022-05-28',0.00,0.00),(602,10313,2,'2022-05-28',0.00,0.00),(603,10786,2,'2022-05-28',0.00,0.00),(604,10633,2,'2022-05-28',0.00,0.00),(605,11756,2,'2022-05-28',0.00,0.00),(606,11755,2,'2022-05-28',0.00,0.00),(607,10412,2,'2022-05-28',0.00,0.00),(608,10334,2,'2022-05-28',0.00,0.00),(609,10696,2,'2022-05-28',0.00,0.00),(610,10221,2,'2022-05-28',0.00,0.00),(611,10411,2,'2022-05-28',0.00,0.00),(612,10439,2,'2022-05-28',0.00,0.00),(613,11288,2,'2022-05-28',0.00,0.00),(614,9425,2,'2022-05-28',0.00,0.00),(615,10008,2,'2022-05-28',0.00,0.00),(616,11513,2,'2022-05-28',0.00,0.00),(617,10969,2,'2022-05-28',0.00,0.00),(618,9729,2,'2022-05-28',0.00,0.00),(619,11029,2,'2022-05-28',0.00,0.00),(620,9640,2,'2022-05-28',0.00,0.00),(621,10463,2,'2022-05-28',0.00,0.00),(622,11389,2,'2022-05-28',0.00,0.00),(623,11475,2,'2022-05-28',0.00,0.00),(624,11476,2,'2022-05-28',0.00,0.00),(625,11376,2,'2022-05-28',0.00,0.00),(626,11334,2,'2022-05-28',0.00,0.00),(627,11225,2,'2022-05-28',0.00,0.00),(628,10728,2,'2022-05-28',0.00,0.00),(629,12048,2,'2022-05-28',0.00,0.00),(630,11289,2,'2022-05-28',0.00,0.00),(631,10623,2,'2022-05-28',0.00,0.00),(632,10929,2,'2022-05-28',0.00,0.00),(633,11933,2,'2022-05-28',0.00,0.00),(634,12120,2,'2022-05-28',0.00,0.00),(635,11859,2,'2022-05-28',0.00,0.00),(636,12266,2,'2022-05-28',0.00,0.00),(637,10637,2,'2022-05-28',0.00,0.00),(638,12009,2,'2022-05-28',0.00,0.00),(639,11685,2,'2022-05-28',0.00,0.00),(640,11684,2,'2022-05-28',0.00,0.00),(641,11259,2,'2022-05-28',0.00,0.00),(642,10859,2,'2022-05-28',0.00,0.00),(643,9935,2,'2022-05-28',0.00,0.00),(644,11040,2,'2022-05-28',0.00,0.00),(645,11030,2,'2022-05-28',0.00,0.00),(646,11608,2,'2022-05-28',0.00,0.00),(647,11607,2,'2022-05-28',0.00,0.00),(648,11240,2,'2022-05-28',0.00,0.00),(649,11171,2,'2022-05-28',0.00,0.00),(650,12264,2,'2022-05-28',9.00,11.47),(651,10281,2,'2022-05-28',0.00,0.00),(652,10562,2,'2022-05-28',0.00,0.00),(653,10697,2,'2022-05-28',0.00,0.00),(654,12235,2,'2022-05-28',0.00,0.00),(655,11964,2,'2022-05-28',19.00,8.24),(656,11980,2,'2022-05-28',20.00,8.24),(657,10357,2,'2022-05-28',0.00,0.00),(658,10492,2,'2022-05-28',0.00,0.00),(659,10860,2,'2022-05-28',0.00,0.00),(660,11405,2,'2022-05-28',0.00,0.00),(661,9722,2,'2022-05-28',0.00,0.00),(662,10731,2,'2022-05-28',0.00,0.00),(663,11683,2,'2022-05-28',21.00,2.80),(664,11310,2,'2022-05-28',0.00,0.00),(665,11594,2,'2022-05-28',0.00,0.00),(666,12206,2,'2022-05-28',0.00,0.00),(667,10372,2,'2022-05-28',0.00,0.00),(668,10447,2,'2022-05-28',0.00,0.00),(669,9723,2,'2022-05-28',0.00,0.00),(670,10446,2,'2022-05-28',0.00,0.00),(671,11386,2,'2022-05-28',0.00,0.00),(672,10770,2,'2022-05-28',3.00,9.99),(673,11320,2,'2022-05-28',36.00,0.99),(674,10695,2,'2022-05-28',0.00,0.00),(675,10913,2,'2022-05-28',0.00,0.00),(676,10915,2,'2022-05-28',0.00,0.00),(677,12010,2,'2022-05-28',0.00,0.00),(678,12335,2,'2022-05-28',0.00,0.00),(679,10705,2,'2022-05-28',0.00,0.00),(680,11137,2,'2022-05-28',0.00,0.00),(681,12357,2,'2022-05-28',4.00,308.23),(682,9450,2,'2022-05-28',0.00,0.00),(683,9881,2,'2022-05-28',0.00,0.00),(684,9856,2,'2022-05-28',0.00,0.00),(685,9229,2,'2022-05-28',42.00,10.30),(686,11226,2,'2022-05-28',30.00,9.54),(687,9310,2,'2022-05-28',70.00,9.29),(688,9311,2,'2022-05-28',0.00,0.00),(689,9497,2,'2022-05-28',0.00,0.00),(690,9427,2,'2022-05-28',0.00,0.00),(691,10326,2,'2022-05-28',0.00,0.00),(692,9500,2,'2022-05-28',0.00,0.00),(693,9498,2,'2022-05-28',0.00,0.00),(694,9384,2,'2022-05-28',0.00,0.00),(695,11677,2,'2022-05-28',3.00,30.00),(696,9505,2,'2022-05-28',0.00,0.00),(697,9504,2,'2022-05-28',0.00,0.00),(698,9263,2,'2022-05-28',0.00,0.00),(699,9598,2,'2022-05-28',24.00,2.59),(700,12328,2,'2022-05-28',0.00,0.00),(701,9503,2,'2022-05-28',28.00,13.50),(702,9502,2,'2022-05-28',0.00,0.00),(703,11934,2,'2022-05-28',0.00,0.00),(704,12110,2,'2022-05-28',42.00,5.68),(705,11170,2,'2022-05-28',140.00,22.00),(706,9511,2,'2022-05-28',0.00,0.00),(707,9599,2,'2022-05-28',0.00,0.00),(708,9862,2,'2022-05-28',0.00,0.00),(709,9512,2,'2022-05-28',0.00,0.00),(710,9513,2,'2022-05-28',0.00,0.00),(711,9863,2,'2022-05-28',0.00,0.00),(712,9449,2,'2022-05-28',0.00,0.00),(713,9448,2,'2022-05-28',0.00,0.00),(714,10386,2,'2022-05-28',0.00,0.00),(715,9731,2,'2022-05-28',0.00,0.00),(716,9153,2,'2022-05-28',137.00,8.50),(717,9152,2,'2022-05-28',54.00,7.50),(718,9151,2,'2022-05-28',0.00,0.00),(719,10619,2,'2022-05-28',0.00,0.00),(720,10209,2,'2022-05-28',0.00,0.00),(721,10717,2,'2022-05-28',0.00,0.00),(722,10736,2,'2022-05-28',0.00,0.00),(723,11745,2,'2022-05-28',0.00,0.00),(724,10976,2,'2022-05-28',8.00,10.16),(725,11605,2,'2022-05-28',0.00,0.00),(726,11568,2,'2022-05-28',0.00,0.00),(727,11569,2,'2022-05-28',0.00,0.00),(728,11356,2,'2022-05-28',0.00,0.00),(729,9508,2,'2022-05-28',78.00,17.60),(730,10665,2,'2022-05-28',0.00,0.00),(731,10667,2,'2022-05-28',0.00,0.00),(732,10267,2,'2022-05-28',1.00,377.00),(733,11399,2,'2022-05-28',0.00,0.00),(734,9779,2,'2022-05-28',0.00,0.00),(735,10618,2,'2022-05-28',0.00,0.00),(736,10000,2,'2022-05-28',0.00,0.00),(737,10992,2,'2022-05-28',0.00,0.00),(738,11381,2,'2022-05-28',0.00,0.00),(739,9974,2,'2022-05-28',0.00,0.00),(740,11697,2,'2022-05-28',0.00,0.00),(741,9432,2,'2022-05-28',0.00,0.00),(742,11413,2,'2022-05-28',0.00,0.00),(743,10632,2,'2022-05-28',0.00,0.00),(744,5879,2,'2022-05-28',0.00,0.00),(745,9459,2,'2022-05-28',132.00,44.00),(746,5880,2,'2022-05-28',19.00,24.00),(747,9172,2,'2022-05-28',0.00,0.00),(748,11332,2,'2022-05-28',0.00,0.00),(749,10853,2,'2022-05-28',0.00,0.00),(750,9000,57,'2022-05-28',135.00,39.00),(751,9828,2,'2022-05-28',0.00,0.00),(752,5949,2,'2022-05-28',0.00,0.00),(753,10575,2,'2022-05-28',0.00,0.00),(754,10276,2,'2022-05-28',2.00,150.70),(755,6039,2,'2022-05-28',6.53,58.50),(756,10367,2,'2022-05-28',8.00,106.00),(757,12263,2,'2022-05-28',0.00,0.00),(758,9496,2,'2022-05-28',0.00,0.00),(759,9572,2,'2022-05-28',0.00,0.00),(760,9794,2,'2022-05-28',3.00,69.30),(761,9203,2,'2022-05-28',0.00,0.00),(762,11667,2,'2022-05-28',0.00,0.00),(763,10032,2,'2022-05-28',0.00,0.00),(764,9899,2,'2022-05-28',12.00,144.00),(765,11875,2,'2022-05-28',0.00,0.00),(766,6250,2,'2022-05-28',0.00,0.00),(767,5024,2,'2022-05-28',0.00,0.00),(768,11312,2,'2022-05-28',0.00,0.00),(769,11781,2,'2022-05-28',0.00,0.00),(770,11780,2,'2022-05-28',0.00,0.00),(771,10643,2,'2022-05-28',0.00,0.00),(772,9421,2,'2022-05-28',0.00,0.00),(773,5780,2,'2022-05-28',71.00,22.00),(774,5950,2,'2022-05-28',0.00,0.00),(775,4858,2,'2022-05-28',7.00,20.98),(776,9183,2,'2022-05-28',1.00,70.56),(777,5837,2,'2022-05-28',2.00,49.01),(778,5839,2,'2022-05-28',2.00,70.10),(779,5840,2,'2022-05-28',2.00,36.97),(780,5812,2,'2022-05-28',1.00,101.56),(781,5841,2,'2022-05-28',15.00,60.76),(782,5842,2,'2022-05-28',4.00,46.64),(783,11298,2,'2022-05-28',3.00,27.58),(784,5844,2,'2022-05-28',3.00,31.21),(785,5847,2,'2022-05-28',43.00,134.00),(786,5848,2,'2022-05-28',3.00,54.13),(787,5850,2,'2022-05-28',9.00,12.00),(788,5854,2,'2022-05-28',3.00,18.00),(789,5856,2,'2022-05-28',12.00,81.06),(790,9770,2,'2022-05-28',4.00,20.00),(791,10981,2,'2022-05-28',9.00,71.38),(792,10833,2,'2022-05-28',3.00,41.00),(793,5845,2,'2022-05-28',5.00,81.14),(794,5972,2,'2022-05-28',0.00,0.00),(795,5973,2,'2022-05-28',4.00,49.52),(796,5091,2,'2022-05-28',38.00,38.91),(797,5974,2,'2022-05-28',0.00,0.00),(798,5975,2,'2022-05-28',1.00,51.62),(799,5336,2,'2022-05-28',37.00,40.48),(800,12000,2,'2022-05-28',3.00,109.00),(801,6357,2,'2022-05-28',0.02,46.30),(802,6358,2,'2022-05-28',9.00,46.02),(803,5814,2,'2022-05-28',54.00,43.50),(804,6360,2,'2022-05-28',4.00,75.68),(805,6361,2,'2022-05-28',6.00,77.13),(806,10399,2,'2022-05-28',0.00,0.00),(807,12118,2,'2022-05-28',0.00,0.00),(808,10509,2,'2022-05-28',0.00,0.00),(809,10245,2,'2022-05-28',0.00,0.00),(810,10365,2,'2022-05-28',0.00,0.00),(811,9217,2,'2022-05-28',0.00,0.00),(812,10055,2,'2022-05-28',0.00,0.00),(813,10210,2,'2022-05-28',0.00,0.00),(814,9790,2,'2022-05-28',0.00,0.00),(815,10628,2,'2022-05-28',0.00,0.00),(816,10594,2,'2022-05-28',0.00,0.00),(817,11456,2,'2022-05-28',0.00,0.00),(818,10568,2,'2022-05-28',0.00,0.00),(819,9050,2,'2022-05-28',0.00,0.00),(820,10164,2,'2022-05-28',0.00,0.00),(821,10163,2,'2022-05-28',0.00,0.00),(822,10162,2,'2022-05-28',0.00,0.00),(823,9389,2,'2022-05-28',0.00,0.00),(824,9721,2,'2022-05-28',0.00,0.00),(825,12309,2,'2022-05-28',6.00,46.00),(826,6019,2,'2022-05-28',7.58,58.00),(827,9524,2,'2022-05-28',0.00,0.00),(828,11064,2,'2022-05-28',0.00,0.00),(829,10589,2,'2022-05-28',0.00,0.00),(830,6112,2,'2022-05-28',6.75,58.00),(831,9666,2,'2022-05-28',0.00,0.00),(832,12227,2,'2022-05-28',0.00,0.00),(833,6148,2,'2022-05-28',2.00,58.00),(834,10681,2,'2022-05-28',0.00,0.00),(835,6147,2,'2022-05-28',0.00,0.00),(836,6192,2,'2022-05-28',9.00,58.00),(837,9326,2,'2022-05-28',0.00,0.00),(838,6191,2,'2022-05-28',0.00,0.00),(839,6334,2,'2022-05-28',1.04,58.00),(840,9327,2,'2022-05-28',0.00,0.00),(841,10442,2,'2022-05-28',0.00,0.00),(842,10302,2,'2022-05-28',0.00,0.00),(843,10702,2,'2022-05-28',0.00,0.00),(844,11469,2,'2022-05-28',0.00,0.00),(845,5952,2,'2022-05-28',24.00,13.25),(846,5953,2,'2022-05-28',3.00,70.00),(847,11559,2,'2022-05-28',0.00,0.00),(848,9876,2,'2022-05-28',0.00,0.00),(849,10850,2,'2022-05-28',0.00,0.00),(850,11620,2,'2022-05-28',0.00,0.00),(851,10016,2,'2022-05-28',0.00,0.00),(852,5014,2,'2022-05-28',3.00,17.83),(853,9341,2,'2022-05-28',0.00,0.00),(854,9355,2,'2022-05-28',0.00,0.00),(855,5954,2,'2022-05-28',0.00,0.00),(856,9542,2,'2022-05-28',0.00,0.00),(857,11378,2,'2022-05-28',0.00,0.00),(858,9772,2,'2022-05-28',0.00,0.00),(859,9078,2,'2022-05-28',0.00,0.00),(860,9158,2,'2022-05-28',0.00,0.00),(861,11652,2,'2022-05-28',0.00,0.00),(862,9076,2,'2022-05-28',0.00,0.00),(863,9087,2,'2022-05-28',0.00,0.00),(864,5966,2,'2022-05-28',0.00,0.00),(865,4754,2,'2022-05-28',0.00,0.00),(866,10451,2,'2022-05-28',0.00,0.00),(867,11956,2,'2022-05-28',0.00,0.00),(868,11142,2,'2022-05-28',0.00,0.00),(869,9656,2,'2022-05-28',0.00,0.00),(870,10239,2,'2022-05-28',0.00,0.00),(871,10362,2,'2022-05-28',0.00,0.00),(872,9416,2,'2022-05-28',12.00,26.50),(873,11924,2,'2022-05-28',0.00,0.00),(874,10527,2,'2022-05-28',0.00,0.00),(875,5445,2,'2022-05-28',0.00,0.00),(876,11829,2,'2022-05-28',0.00,0.00),(877,11646,2,'2022-05-28',0.00,0.00),(878,11642,2,'2022-05-28',0.00,0.00),(879,11823,2,'2022-05-28',0.00,0.00),(880,11442,2,'2022-05-28',0.00,0.00),(881,5864,2,'2022-05-28',0.00,0.00),(882,10774,2,'2022-05-28',0.00,0.00),(883,12002,2,'2022-05-28',0.00,0.00),(884,9418,2,'2022-05-28',21.00,26.25),(885,9798,2,'2022-05-28',0.00,0.00),(886,9419,2,'2022-05-28',0.00,0.00),(887,10139,2,'2022-05-28',0.00,0.00),(888,11141,2,'2022-05-28',0.00,0.00),(889,5865,2,'2022-05-28',6.00,20.25),(890,9343,2,'2022-05-28',0.00,0.00),(891,9443,2,'2022-05-28',0.00,0.00),(892,11140,2,'2022-05-28',0.00,0.00),(893,11982,2,'2022-05-28',0.00,0.00),(894,10215,2,'2022-05-28',0.00,0.00),(895,9791,2,'2022-05-28',14.00,21.80),(896,9154,2,'2022-05-28',0.00,0.00),(897,5866,2,'2022-05-28',0.00,0.00),(898,5877,2,'2022-05-28',0.00,0.00),(899,10502,2,'2022-05-28',0.00,0.00),(900,9595,2,'2022-05-28',0.00,0.00),(901,10906,2,'2022-05-28',79.00,95.00),(902,9417,2,'2022-05-28',0.00,0.00),(903,10884,2,'2022-05-28',0.00,0.00),(904,9342,2,'2022-05-28',0.00,0.00),(905,11063,2,'2022-05-28',0.00,0.00),(906,11941,2,'2022-05-28',0.00,0.00),(907,10455,2,'2022-05-28',22.00,62.70),(908,9324,2,'2022-05-28',0.00,0.00),(909,11215,2,'2022-05-28',14.00,52.00),(910,9420,2,'2022-05-28',0.00,0.00),(911,9429,2,'2022-05-28',0.00,0.00),(912,12306,2,'2022-05-28',0.00,0.00),(913,6122,2,'2022-05-28',0.00,0.00),(914,10019,2,'2022-05-28',0.00,0.00),(915,11922,2,'2022-05-28',11.00,38.00),(916,12364,2,'2022-05-28',0.00,0.00),(917,9131,2,'2022-05-28',0.00,0.00),(918,11967,2,'2022-05-28',0.00,0.00),(919,11217,2,'2022-05-28',0.00,0.00),(920,11159,2,'2022-05-28',0.00,0.00),(921,11124,2,'2022-05-28',0.00,0.00),(922,11218,2,'2022-05-28',0.00,0.00),(923,11234,2,'2022-05-28',0.00,0.00),(924,11216,2,'2022-05-28',0.00,0.00),(925,11586,2,'2022-05-28',0.00,0.00),(926,11451,2,'2022-05-28',0.00,0.00),(927,11643,2,'2022-05-28',0.00,0.00),(928,11923,2,'2022-05-28',0.00,0.00),(929,11628,2,'2022-05-28',0.00,0.00),(930,11645,2,'2022-05-28',0.00,0.00),(931,11453,2,'2022-05-28',0.00,0.00),(932,11641,2,'2022-05-28',0.00,0.00),(933,11454,2,'2022-05-28',0.00,0.00),(934,11450,2,'2022-05-28',0.00,0.00),(935,9609,2,'2022-05-28',0.00,0.00),(936,11552,2,'2022-05-28',0.00,0.00),(937,11452,2,'2022-05-28',0.00,0.00),(938,11668,2,'2022-05-28',0.00,0.00),(939,11644,2,'2022-05-28',0.00,0.00),(940,11673,2,'2022-05-28',0.00,0.00),(941,10730,2,'2022-05-28',0.00,0.00),(942,11612,2,'2022-05-28',0.00,0.00),(943,11719,2,'2022-05-28',0.00,0.00),(944,11447,2,'2022-05-28',0.00,0.00),(945,11455,2,'2022-05-28',0.00,0.00),(946,11485,2,'2022-05-28',0.00,0.00),(947,11488,2,'2022-05-28',0.00,0.00),(948,11486,2,'2022-05-28',0.00,0.00),(949,11314,2,'2022-05-28',0.00,0.00),(950,9711,2,'2022-05-28',0.00,0.00),(951,6189,2,'2022-05-28',2.00,50.00),(952,9489,2,'2022-05-28',0.00,0.00),(953,11190,2,'2022-05-28',0.00,0.00),(954,11301,2,'2022-05-28',0.00,0.00),(955,9329,2,'2022-05-28',0.00,0.00),(956,11524,2,'2022-05-28',0.00,0.00),(957,11165,2,'2022-05-28',0.00,0.00),(958,11502,2,'2022-05-28',0.00,0.00),(959,11018,2,'2022-05-28',0.00,0.00),(960,11825,2,'2022-05-28',0.00,0.00),(961,9724,2,'2022-05-28',0.00,0.00),(962,11164,2,'2022-05-28',0.00,0.00),(963,11273,2,'2022-05-28',0.00,0.00),(964,9553,2,'2022-05-28',0.00,0.00),(965,11972,2,'2022-05-28',0.00,0.00),(966,11163,2,'2022-05-28',0.00,0.00),(967,11271,2,'2022-05-28',0.00,0.00),(968,10751,2,'2022-05-28',0.00,0.00),(969,10037,2,'2022-05-28',0.00,0.00),(970,11503,2,'2022-05-28',0.00,0.00),(971,9725,2,'2022-05-28',0.00,0.00),(972,11482,2,'2022-05-28',0.00,0.00),(973,11484,2,'2022-05-28',0.00,0.00),(974,11481,2,'2022-05-28',0.00,0.00),(975,11483,2,'2022-05-28',0.00,0.00),(976,11108,2,'2022-05-28',30.00,18.95),(977,10528,2,'2022-05-28',0.00,0.00),(978,5820,2,'2022-05-28',0.00,0.00),(979,5882,2,'2022-05-28',0.00,0.00),(980,10945,2,'2022-05-28',3.00,20.95),(981,9934,2,'2022-05-28',0.00,0.00),(982,10517,2,'2022-05-28',0.00,0.00),(983,11531,2,'2022-05-28',0.00,0.00),(984,11122,2,'2022-05-28',0.00,0.00),(985,11143,2,'2022-05-28',0.00,0.00),(986,9163,2,'2022-05-28',0.00,0.00),(987,6246,2,'2022-05-28',0.00,0.00),(988,11221,2,'2022-05-28',0.00,0.00),(989,10616,2,'2022-05-28',0.00,0.00),(990,11686,2,'2022-05-28',0.00,0.00),(991,10652,2,'2022-05-28',0.00,0.00),(992,11109,2,'2022-05-28',0.00,0.00),(993,9428,2,'2022-05-28',0.00,0.00),(994,11950,2,'2022-05-28',0.00,0.00),(995,10157,2,'2022-05-28',0.00,0.00),(996,12282,2,'2022-05-28',0.00,0.00),(997,10243,2,'2022-05-28',0.00,0.00),(998,12093,2,'2022-05-28',0.00,0.00),(999,9634,2,'2022-05-28',0.00,0.00),(1000,10610,2,'2022-05-28',0.00,0.00),(1001,10158,2,'2022-05-28',0.00,0.00),(1002,10057,2,'2022-05-28',0.00,0.00),(1003,5867,2,'2022-05-28',0.00,0.00),(1004,10985,2,'2022-05-28',0.00,0.00),(1005,10905,2,'2022-05-28',34.00,95.00),(1006,10160,2,'2022-05-28',0.00,0.00),(1007,10503,2,'2022-05-28',0.00,0.00),(1008,11609,2,'2022-05-28',0.00,0.00),(1009,11315,2,'2022-05-28',0.00,0.00),(1010,12026,2,'2022-05-28',0.00,0.00),(1011,11316,2,'2022-05-28',0.00,0.00),(1012,11487,2,'2022-05-28',0.00,0.00),(1013,9445,2,'2022-05-28',0.00,0.00),(1014,9338,2,'2022-05-28',0.00,0.00),(1015,11123,2,'2022-05-28',0.00,0.00),(1016,11560,2,'2022-05-28',0.00,0.00),(1017,11551,2,'2022-05-28',0.00,0.00),(1018,11357,2,'2022-05-28',0.00,0.00),(1019,11176,2,'2022-05-28',0.00,0.00),(1020,11317,2,'2022-05-28',0.00,0.00),(1021,9621,2,'2022-05-28',0.00,0.00),(1022,11272,2,'2022-05-28',0.00,0.00),(1023,11275,2,'2022-05-28',0.00,0.00),(1024,11820,2,'2022-05-28',0.00,0.00),(1025,12244,2,'2022-05-28',0.00,0.00),(1026,9922,2,'2022-05-28',0.00,0.00),(1027,11391,2,'2022-05-28',0.00,0.00),(1028,9958,2,'2022-05-28',0.00,0.00),(1029,10621,2,'2022-05-28',4.00,13.08),(1030,11335,2,'2022-05-28',0.00,0.00),(1031,11460,2,'2022-05-28',12.00,21.48),(1032,11892,2,'2022-05-28',0.00,0.00),(1033,11566,2,'2022-05-28',0.00,0.00),(1034,11318,2,'2022-05-28',0.00,0.00),(1035,10061,2,'2022-05-28',0.00,0.00),(1036,11349,2,'2022-05-28',0.00,0.00),(1037,10540,2,'2022-05-28',0.00,0.00),(1038,10361,2,'2022-05-28',0.00,0.00),(1039,9586,2,'2022-05-28',0.00,0.00),(1040,9585,2,'2022-05-28',0.00,0.00),(1041,11493,2,'2022-05-28',0.00,0.00),(1042,5956,2,'2022-05-28',24.00,39.44),(1043,5957,2,'2022-05-28',20.00,36.50),(1044,10518,2,'2022-05-28',22.00,36.92),(1045,10469,2,'2022-05-28',0.00,0.00),(1046,11724,2,'2022-05-28',0.00,0.00),(1047,5955,2,'2022-05-28',52.00,38.28),(1048,10539,2,'2022-05-28',0.00,0.00),(1049,11550,2,'2022-05-28',0.00,0.00),(1050,11037,2,'2022-05-28',0.00,0.00),(1051,11036,2,'2022-05-28',2.00,32.49),(1052,12365,2,'2022-05-28',0.00,0.00),(1053,11125,2,'2022-05-28',4.00,15.34),(1054,10748,2,'2022-05-28',0.00,0.00),(1055,6342,2,'2022-05-28',0.00,0.00),(1056,10849,2,'2022-05-28',0.00,0.00),(1057,5960,2,'2022-05-28',0.00,0.00),(1058,12036,2,'2022-05-28',0.00,0.00),(1059,9991,2,'2022-05-28',0.00,0.00),(1060,11884,2,'2022-05-28',0.00,0.00),(1061,11582,2,'2022-05-28',0.00,0.00),(1062,10426,2,'2022-05-28',0.00,0.00),(1063,9917,2,'2022-05-28',0.00,0.00),(1064,6089,2,'2022-05-28',99.00,1.98),(1065,10756,2,'2022-05-28',0.00,0.00),(1066,9769,2,'2022-05-28',0.00,0.00),(1067,11169,2,'2022-05-28',0.00,0.00),(1068,10356,2,'2022-05-28',0.00,0.00),(1069,10358,2,'2022-05-28',0.00,0.00),(1070,11579,2,'2022-05-28',0.00,0.00),(1071,10995,2,'2022-05-28',0.00,0.00),(1072,11027,2,'2022-05-28',0.00,0.00),(1073,10848,2,'2022-05-28',0.00,0.00),(1074,11009,2,'2022-05-28',0.00,0.00),(1075,12039,2,'2022-05-28',0.00,0.00),(1076,10746,2,'2022-05-28',0.00,0.00),(1077,10747,2,'2022-05-28',0.00,0.00),(1078,10424,2,'2022-05-28',0.00,0.00),(1079,11725,2,'2022-05-28',0.00,0.00),(1080,11726,2,'2022-05-28',0.00,0.00),(1081,11232,2,'2022-05-28',0.00,0.00),(1082,10996,2,'2022-05-28',0.00,0.00),(1083,11426,2,'2022-05-28',0.00,0.00),(1084,11233,2,'2022-05-28',0.00,0.00),(1085,11973,2,'2022-05-28',0.00,0.00),(1086,10082,2,'2022-05-28',0.00,0.00),(1087,10343,2,'2022-05-28',0.00,0.00),(1088,12035,2,'2022-05-28',0.00,0.00),(1089,12034,2,'2022-05-28',0.00,0.00),(1090,12033,2,'2022-05-28',0.00,0.00),(1091,10460,2,'2022-05-28',0.00,0.00),(1092,10536,2,'2022-05-28',0.00,0.00),(1093,11523,2,'2022-05-28',0.00,0.00),(1094,10892,2,'2022-05-28',0.00,0.00),(1095,5323,2,'2022-05-28',10.00,22.00),(1096,10478,2,'2022-05-28',0.00,0.00),(1097,10431,2,'2022-05-28',0.00,0.00),(1098,10110,2,'2022-05-28',28.00,26.50),(1099,10960,2,'2022-05-28',0.00,0.00),(1100,11258,2,'2022-05-28',20.00,26.50),(1101,5944,2,'2022-05-28',0.00,0.00),(1102,10076,2,'2022-05-28',10.00,18.50),(1103,6126,52,'2022-05-28',6.00,18.50),(1104,11374,2,'2022-05-28',0.00,0.00),(1105,11591,2,'2022-05-28',0.00,0.00),(1106,6016,2,'2022-05-28',11.00,21.50),(1107,10456,2,'2022-05-28',0.00,0.00),(1108,10457,2,'2022-05-28',0.00,0.00),(1109,6023,2,'2022-05-28',0.00,0.00),(1110,6027,2,'2022-05-28',0.00,0.00),(1111,12301,2,'2022-05-28',0.00,0.00),(1112,10943,2,'2022-05-28',0.00,0.00),(1113,11882,2,'2022-05-28',0.00,0.00),(1114,10948,2,'2022-05-28',0.00,0.00),(1115,11626,2,'2022-05-28',0.00,0.00),(1116,10970,2,'2022-05-28',0.00,0.00),(1117,11277,2,'2022-05-28',0.00,0.00),(1118,11182,2,'2022-05-28',0.00,0.00),(1119,10190,2,'2022-05-28',0.00,0.00),(1120,10477,2,'2022-05-28',0.00,0.00),(1121,10459,2,'2022-05-28',0.00,0.00),(1122,10479,2,'2022-05-28',0.00,0.00),(1123,10461,2,'2022-05-28',0.00,0.00),(1124,10458,2,'2022-05-28',0.00,0.00),(1125,10476,2,'2022-05-28',0.00,0.00),(1126,10668,2,'2022-05-28',0.00,0.00),(1127,10952,2,'2022-05-28',0.00,0.00),(1128,10130,2,'2022-05-28',0.00,0.00),(1129,11073,2,'2022-05-28',0.00,0.00),(1130,10512,2,'2022-05-28',0.00,0.00),(1131,10918,2,'2022-05-28',0.00,0.00),(1132,10531,2,'2022-05-28',0.00,0.00),(1133,10533,2,'2022-05-28',0.00,0.00),(1134,10532,2,'2022-05-28',0.00,0.00),(1135,10530,2,'2022-05-28',0.00,0.00),(1136,11547,2,'2022-05-28',0.00,0.00),(1137,10480,2,'2022-05-28',0.00,0.00),(1138,10111,2,'2022-05-28',0.00,0.00),(1139,10959,2,'2022-05-28',0.00,0.00),(1140,5689,2,'2022-05-28',0.00,24.00),(1141,10744,2,'2022-05-28',0.00,0.00),(1142,10745,2,'2022-05-28',0.00,0.00),(1143,10481,2,'2022-05-28',0.00,0.00),(1144,11769,2,'2022-05-28',0.00,0.00),(1145,11000,2,'2022-05-28',0.00,0.00),(1146,10916,2,'2022-05-28',0.00,0.00),(1147,10949,2,'2022-05-28',0.00,0.00),(1148,11737,2,'2022-05-28',0.00,31.00),(1149,6307,2,'2022-05-28',0.00,0.00),(1150,10332,2,'2022-05-28',0.00,0.00),(1151,10109,2,'2022-05-28',0.00,0.00),(1152,10978,2,'2022-05-28',0.00,0.00),(1153,10812,2,'2022-05-28',0.00,0.00),(1154,12064,2,'2022-05-28',0.00,0.00),(1155,11680,2,'2022-05-28',0.00,0.00),(1156,10721,2,'2022-05-28',0.00,0.00),(1157,9371,2,'2022-05-28',14.83,64.15),(1158,5650,2,'2022-05-28',0.00,0.00),(1159,10045,2,'2022-05-28',1.88,50.11),(1160,11010,2,'2022-05-28',0.00,0.00),(1161,10046,2,'2022-05-28',0.00,0.00),(1162,10810,2,'2022-05-28',0.00,0.00),(1163,9817,2,'2022-05-28',0.00,0.00),(1164,10844,2,'2022-05-28',0.00,0.00),(1165,12046,2,'2022-05-28',0.00,0.00),(1166,11126,2,'2022-05-28',0.00,0.00),(1167,11648,2,'2022-05-28',0.00,0.00),(1168,5970,2,'2022-05-28',172.17,2.85),(1169,5202,2,'2022-05-28',0.00,0.00),(1170,5434,2,'2022-05-28',0.00,0.00),(1171,11906,2,'2022-05-28',0.00,0.00),(1172,10196,2,'2022-05-28',0.00,0.00),(1173,5334,2,'2022-05-28',0.00,0.00),(1174,12089,2,'2022-05-28',0.00,0.00),(1175,10894,2,'2022-05-28',0.00,0.00),(1176,11041,2,'2022-05-28',0.00,0.00),(1177,11379,2,'2022-05-28',0.00,0.00),(1178,12150,2,'2022-05-28',0.00,0.00),(1179,10133,2,'2022-05-28',0.00,0.00),(1180,11532,2,'2022-05-28',0.00,0.00),(1181,11203,2,'2022-05-28',0.00,0.00),(1182,12273,2,'2022-05-28',0.00,0.00),(1183,5040,2,'2022-05-28',275.00,9.50),(1184,6317,2,'2022-05-28',0.00,0.00),(1185,12346,2,'2022-05-28',0.00,0.00),(1186,11229,2,'2022-05-28',0.00,0.00),(1187,11145,2,'2022-05-28',0.00,0.00),(1188,6183,2,'2022-05-28',0.00,0.00),(1189,6001,2,'2022-05-28',0.00,125.00),(1190,11441,2,'2022-05-28',0.00,0.00),(1191,12032,2,'2022-05-28',0.00,0.00),(1192,12004,2,'2022-05-28',0.00,0.00),(1193,6215,2,'2022-05-28',0.00,0.00),(1194,6286,2,'2022-05-28',42.00,2.87),(1195,9165,2,'2022-05-28',0.00,0.00),(1196,12078,2,'2022-05-28',0.00,0.00),(1197,10416,2,'2022-05-28',0.00,0.00),(1198,9952,2,'2022-05-28',0.00,0.00),(1199,5539,2,'2022-05-28',0.00,0.00),(1200,5293,2,'2022-05-28',113.00,29.55),(1201,10263,2,'2022-05-28',0.00,0.00),(1202,10382,2,'2022-05-28',0.00,0.00),(1203,9320,2,'2022-05-28',0.00,0.00),(1204,11062,2,'2022-05-28',0.00,0.00),(1205,12063,2,'2022-05-28',0.00,0.00),(1206,10007,2,'2022-05-28',87.00,46.00),(1207,11276,2,'2022-05-28',0.00,0.00),(1208,6347,2,'2022-05-28',6.00,30.00),(1209,5106,2,'2022-05-28',7.00,25.50),(1210,9265,2,'2022-05-28',0.00,0.00),(1211,10921,2,'2022-05-28',0.00,0.00),(1212,11640,2,'2022-05-28',0.00,0.00),(1213,5446,2,'2022-05-28',0.00,0.00),(1214,4823,2,'2022-05-28',0.00,0.00),(1215,9657,2,'2022-05-28',31.00,40.00),(1216,12260,2,'2022-05-28',0.00,0.00),(1217,5125,2,'2022-05-28',43.00,43.00),(1218,9011,2,'2022-05-28',10.00,46.00),(1219,10845,2,'2022-05-28',16.00,46.00),(1220,5417,2,'2022-05-28',0.00,0.00),(1221,10928,2,'2022-05-28',0.00,0.00),(1222,5976,2,'2022-05-28',0.00,0.00),(1223,5977,2,'2022-05-28',0.00,0.00),(1224,5978,2,'2022-05-28',0.00,0.00),(1225,10655,2,'2022-05-28',0.00,0.00),(1226,10654,2,'2022-05-28',0.00,0.00),(1227,9968,2,'2022-05-28',0.00,0.00),(1228,9049,2,'2022-05-28',0.00,0.00),(1229,10286,2,'2022-05-28',0.00,0.00),(1230,9360,2,'2022-05-28',0.00,0.00),(1231,12195,2,'2022-05-28',0.00,0.00),(1232,11918,2,'2022-05-28',0.00,0.00),(1233,11179,2,'2022-05-28',0.00,0.00),(1234,11919,2,'2022-05-28',0.00,0.00),(1235,11422,2,'2022-05-28',0.00,0.00),(1236,11851,2,'2022-05-28',0.00,0.00),(1237,12071,2,'2022-05-28',0.00,0.00),(1238,10546,2,'2022-05-28',0.00,0.00),(1239,10132,2,'2022-05-28',0.00,0.00),(1240,11181,2,'2022-05-28',0.00,0.00),(1241,11187,2,'2022-05-28',0.00,0.00),(1242,10134,2,'2022-05-28',0.00,0.00),(1243,9663,2,'2022-05-28',0.00,0.00),(1244,9664,2,'2022-05-28',0.00,0.00),(1245,11691,2,'2022-05-28',0.00,0.00),(1246,9441,2,'2022-05-28',0.00,0.00),(1247,10097,2,'2022-05-28',0.00,0.00),(1248,9909,2,'2022-05-28',0.00,0.00),(1249,10675,2,'2022-05-28',0.00,0.00),(1250,10569,2,'2022-05-28',0.00,0.00),(1251,5012,2,'2022-05-28',0.00,0.00),(1252,12095,2,'2022-05-28',0.00,0.00),(1253,10752,2,'2022-05-28',0.00,0.00),(1254,11186,2,'2022-05-28',0.00,0.00),(1255,6030,2,'2022-05-28',112.16,16.00),(1256,12338,2,'2022-05-28',0.00,0.00),(1257,11200,2,'2022-05-28',0.00,0.00),(1258,11326,2,'2022-05-28',0.00,0.00),(1259,9719,2,'2022-05-28',0.00,0.00),(1260,10339,2,'2022-05-28',0.00,0.00),(1261,11188,2,'2022-05-28',0.00,0.00),(1262,6072,2,'2022-05-28',0.00,0.00),(1263,9562,2,'2022-05-28',0.00,0.00),(1264,11180,2,'2022-05-28',0.00,0.00),(1265,11901,2,'2022-05-28',0.00,0.00),(1266,9539,2,'2022-05-28',0.00,0.00),(1267,10330,2,'2022-05-28',3.00,110.00),(1268,6350,2,'2022-05-28',2.00,40.00),(1269,10521,2,'2022-05-28',0.00,0.00),(1270,11750,2,'2022-05-28',0.00,0.00),(1271,10472,2,'2022-05-28',0.00,0.00),(1272,10473,2,'2022-05-28',0.00,0.00),(1273,11068,2,'2022-05-28',0.00,0.00),(1274,10471,2,'2022-05-28',0.00,0.00),(1275,10060,2,'2022-05-28',0.00,0.00),(1276,9735,2,'2022-05-28',0.00,0.00),(1277,10474,2,'2022-05-28',0.00,0.00),(1278,6104,2,'2022-05-28',0.00,0.00),(1279,12201,2,'2022-05-28',0.00,0.00),(1280,12017,2,'2022-05-28',0.00,0.00),(1281,12070,2,'2022-05-28',0.00,0.00),(1282,11214,2,'2022-05-28',0.00,0.00),(1283,11434,2,'2022-05-28',0.00,0.00),(1284,5828,2,'2022-05-28',0.00,0.00),(1285,5913,2,'2022-05-28',0.00,0.00),(1286,11938,2,'2022-05-28',0.00,0.00),(1287,12196,2,'2022-05-28',200.00,3.10),(1288,12205,2,'2022-05-28',0.00,0.00),(1289,10522,2,'2022-05-28',0.00,0.00),(1290,12065,2,'2022-05-28',0.00,1.95),(1291,9159,2,'2022-05-28',0.00,0.00),(1292,11939,2,'2022-05-28',0.00,0.00),(1293,12154,2,'2022-05-28',0.00,0.00),(1294,9703,2,'2022-05-28',0.00,0.00),(1295,9588,2,'2022-05-28',0.00,0.00),(1296,10772,2,'2022-05-28',0.00,0.00),(1297,10682,2,'2022-05-28',0.00,0.00),(1298,12179,2,'2022-05-28',0.00,0.00),(1299,9308,2,'2022-05-28',0.00,0.00),(1300,9932,2,'2022-05-28',31.72,9.50),(1301,10704,2,'2022-05-28',0.00,0.00),(1302,9225,2,'2022-05-28',0.00,0.00),(1303,11822,2,'2022-05-28',0.00,0.00),(1304,9743,2,'2022-05-28',0.00,0.00),(1305,10753,2,'2022-05-28',0.00,0.00),(1306,10351,2,'2022-05-28',0.00,0.00),(1307,11671,2,'2022-05-28',0.00,0.00),(1308,10466,2,'2022-05-28',0.00,0.00),(1309,10467,2,'2022-05-28',0.00,0.00),(1310,10468,2,'2022-05-28',0.00,0.00),(1311,10069,2,'2022-05-28',0.00,0.00),(1312,10311,2,'2022-05-28',0.00,0.00),(1313,12149,2,'2022-05-28',140.00,6.99),(1314,12096,2,'2022-05-28',0.00,0.00),(1315,11052,2,'2022-05-28',0.00,0.00),(1316,9574,2,'2022-05-28',0.00,0.00),(1317,9518,2,'2022-05-28',0.00,0.00),(1318,10376,2,'2022-05-28',0.00,0.00),(1319,10560,2,'2022-05-28',0.00,0.00),(1320,12231,2,'2022-05-28',0.00,0.00),(1321,10131,2,'2022-05-28',0.00,0.00),(1322,9047,2,'2022-05-28',0.00,30.25),(1323,12228,2,'2022-05-28',0.00,0.00),(1324,9575,2,'2022-05-28',0.00,0.00),(1325,9730,2,'2022-05-28',18.00,88.50),(1326,9639,2,'2022-05-28',0.00,0.00),(1327,9624,2,'2022-05-28',0.00,0.00),(1328,10135,2,'2022-05-28',0.00,0.00),(1329,9601,2,'2022-05-28',2.00,114.00),(1330,9687,2,'2022-05-28',0.00,0.00),(1331,10559,2,'2022-05-28',80.00,1.80),(1332,12066,2,'2022-05-28',0.00,0.00),(1333,5665,2,'2022-05-28',0.00,0.00),(1334,12177,2,'2022-05-28',0.00,0.00),(1335,10646,2,'2022-05-28',0.00,0.00),(1336,10275,2,'2022-05-28',0.00,0.00),(1337,6211,2,'2022-05-28',154.00,17.00),(1338,9900,2,'2022-05-28',0.00,0.00),(1339,10075,2,'2022-05-28',0.00,0.00),(1340,5042,2,'2022-05-28',22.00,11.00),(1341,10558,2,'2022-05-28',0.00,0.00),(1342,9734,2,'2022-05-28',0.00,0.00),(1343,10232,2,'2022-05-28',0.00,0.00),(1344,9803,2,'2022-05-28',140.00,9.90),(1345,9800,2,'2022-05-28',0.00,0.00),(1346,11106,2,'2022-05-28',0.00,0.00),(1347,6335,2,'2022-05-28',90.00,8.00),(1348,11107,2,'2022-05-28',0.00,0.00),(1349,12111,2,'2022-05-28',0.00,0.00),(1350,12084,2,'2022-05-28',0.00,0.00),(1351,12261,2,'2022-05-28',0.00,0.00),(1352,9097,2,'2022-05-28',0.00,0.00),(1353,11132,2,'2022-05-28',0.00,0.00),(1354,11587,2,'2022-05-28',0.00,0.00),(1355,11194,2,'2022-05-28',0.00,0.00),(1356,9820,2,'2022-05-28',4.83,2.05),(1357,11771,2,'2022-05-28',0.00,0.00),(1358,11785,2,'2022-05-28',0.00,0.00),(1359,11255,2,'2022-05-28',0.00,0.00),(1360,10739,2,'2022-05-28',0.00,0.00),(1361,12189,2,'2022-05-28',0.00,0.00),(1362,5979,2,'2022-05-28',0.00,0.00),(1363,11937,2,'2022-05-28',0.00,0.00),(1364,11555,2,'2022-05-28',0.00,0.00),(1365,12349,2,'2022-05-28',0.00,0.00),(1366,12330,2,'2022-05-28',1.00,128.31),(1367,9048,2,'2022-05-28',1.00,66.00),(1368,11219,2,'2022-05-28',0.00,0.00),(1369,6038,2,'2022-05-28',0.00,0.00),(1370,9222,2,'2022-05-28',0.00,0.00),(1371,10159,2,'2022-05-28',0.00,0.00),(1372,6110,2,'2022-05-28',0.00,0.00),(1373,9247,2,'2022-05-28',48.00,15.25),(1374,10380,2,'2022-05-28',0.00,0.00),(1375,6311,2,'2022-05-28',0.00,0.00),(1376,9787,2,'2022-05-28',0.00,0.00),(1377,9654,2,'2022-05-28',0.00,0.00),(1378,10660,2,'2022-05-28',0.00,0.00),(1379,11220,2,'2022-05-28',0.00,0.00),(1380,10149,2,'2022-05-28',0.00,0.00),(1381,11649,2,'2022-05-28',0.00,0.00),(1382,12256,2,'2022-05-28',0.00,0.00),(1383,12254,2,'2022-05-28',0.00,0.00),(1384,12240,2,'2022-05-28',0.00,0.00),(1385,9232,2,'2022-05-28',31.00,75.00),(1386,12341,2,'2022-05-28',44.00,22.00),(1387,10104,2,'2022-05-28',0.00,0.00),(1388,10105,2,'2022-05-28',0.00,0.00),(1389,10103,2,'2022-05-28',0.00,0.00),(1390,12085,2,'2022-05-28',0.00,0.00),(1391,10636,2,'2022-05-28',0.00,0.00),(1392,12212,2,'2022-05-28',10.00,17.00),(1393,5177,2,'2022-05-28',50.00,38.00),(1394,10795,2,'2022-05-28',0.00,0.00),(1395,9065,2,'2022-05-28',0.00,0.00),(1396,12359,2,'2022-05-28',0.00,0.00),(1397,5980,2,'2022-05-28',0.00,0.00),(1398,10325,2,'2022-05-28',0.00,0.00),(1399,6255,2,'2022-05-28',0.00,0.00),(1400,9012,2,'2022-05-28',63.00,34.00),(1401,11458,2,'2022-05-28',0.00,0.00),(1402,10715,2,'2022-05-28',0.00,0.00),(1403,11979,2,'2022-05-28',0.00,0.00),(1404,11162,2,'2022-05-28',0.00,0.00),(1405,9847,2,'2022-05-28',0.00,0.00),(1406,11490,2,'2022-05-28',0.00,0.00),(1407,6278,2,'2022-05-28',13.00,30.00),(1408,12343,2,'2022-05-28',24.50,30.00),(1409,6367,2,'2022-05-28',0.00,0.00),(1410,11134,2,'2022-05-28',0.00,0.00),(1411,9385,2,'2022-05-28',0.00,0.00),(1412,12333,2,'2022-05-28',0.00,0.00),(1413,6290,2,'2022-05-28',2.00,20.00),(1414,9347,2,'2022-05-28',9.00,42.50),(1415,10265,2,'2022-05-28',0.00,0.00),(1416,6291,2,'2022-05-28',120.00,28.12),(1417,10573,2,'2022-05-28',0.00,0.00),(1418,11597,2,'2022-05-28',0.00,0.00),(1419,10181,2,'2022-05-28',0.00,0.00),(1420,9291,2,'2022-05-28',0.00,0.00),(1421,11237,2,'2022-05-28',0.00,0.00),(1422,9846,2,'2022-05-28',0.00,0.00),(1423,10549,2,'2022-05-28',0.00,0.00),(1424,5983,2,'2022-05-28',195.00,21.00),(1425,5986,2,'2022-05-28',0.00,0.00),(1426,5984,2,'2022-05-28',0.00,0.00),(1427,5985,2,'2022-05-28',0.00,0.00),(1428,9066,2,'2022-05-28',12.50,25.00),(1429,6193,2,'2022-05-28',34.25,25.00),(1430,5992,2,'2022-05-28',34.00,46.76),(1431,5993,2,'2022-05-28',2.00,38.28),(1432,5994,2,'2022-05-28',0.00,0.00),(1433,5991,2,'2022-05-28',28.00,29.90),(1434,10220,2,'2022-05-28',1.00,44.75),(1435,5988,2,'2022-05-28',14.00,58.24),(1436,5989,2,'2022-05-28',0.00,0.00),(1437,10320,2,'2022-05-28',0.00,0.00),(1438,9024,2,'2022-05-28',19.00,39.90),(1439,5996,2,'2022-05-28',60.00,62.36),(1440,5997,2,'2022-05-28',0.00,0.00),(1441,5995,2,'2022-05-28',0.00,0.00),(1442,10402,2,'2022-05-28',0.00,0.00),(1443,9923,2,'2022-05-28',0.00,0.00),(1444,10940,2,'2022-05-28',0.00,0.00),(1445,6162,2,'2022-05-28',395.00,7.50),(1446,10217,2,'2022-05-28',14.00,20.78),(1447,9754,2,'2022-05-28',0.00,0.00),(1448,9757,2,'2022-05-28',0.00,0.00),(1449,6043,2,'2022-05-28',814.00,10.00),(1450,9582,2,'2022-05-28',0.00,0.00),(1451,5998,2,'2022-05-28',0.00,0.00),(1452,5115,2,'2022-05-28',0.00,0.00),(1453,9887,2,'2022-05-28',0.00,0.00),(1454,12250,2,'2022-05-28',0.00,0.00),(1455,10671,2,'2022-05-28',0.00,0.00),(1456,11536,2,'2022-05-28',0.00,0.00),(1457,6356,2,'2022-05-28',0.00,0.00),(1458,11615,2,'2022-05-28',0.00,0.00),(1459,11616,2,'2022-05-28',0.00,0.00),(1460,12052,2,'2022-05-28',0.00,0.00),(1461,10930,2,'2022-05-28',0.00,0.00),(1462,10712,2,'2022-05-28',0.00,0.00),(1463,11651,2,'2022-05-28',0.00,0.00),(1464,11408,2,'2022-05-28',0.00,0.00),(1465,5910,2,'2022-05-28',0.00,0.00),(1466,10984,2,'2022-05-28',0.00,0.00),(1467,5659,2,'2022-05-28',57.00,10.84),(1468,11416,2,'2022-05-28',0.00,0.00),(1469,11417,2,'2022-05-28',0.00,0.00),(1470,9537,2,'2022-05-28',0.00,0.00),(1471,5911,2,'2022-05-28',36.00,13.20),(1472,11897,2,'2022-05-28',0.00,0.00),(1473,9132,2,'2022-05-28',0.00,0.00),(1474,9786,2,'2022-05-28',0.00,0.00),(1475,9060,2,'2022-05-28',0.00,0.00),(1476,11778,2,'2022-05-28',0.00,0.00),(1477,10733,2,'2022-05-28',0.00,0.00),(1478,6008,2,'2022-05-28',1.00,52.00),(1479,12327,2,'2022-05-28',0.00,0.00),(1480,10914,2,'2022-05-28',0.00,0.00),(1481,5962,2,'2022-05-28',0.00,0.00),(1482,10519,2,'2022-05-28',58.00,5.34),(1483,6002,2,'2022-05-28',0.00,0.00),(1484,10902,2,'2022-05-28',0.00,0.00),(1485,11097,2,'2022-05-28',90.00,7.00),(1487,6119,2,'2022-05-28',99.00,7.00),(1488,6120,2,'2022-05-28',0.00,0.00),(1489,11189,2,'2022-05-28',320.00,7.00),(1490,10387,2,'2022-05-28',0.00,0.00),(1491,10754,2,'2022-05-28',0.00,0.00),(1492,12232,2,'2022-05-28',0.00,0.00),(1493,12298,2,'2022-05-28',0.00,0.00),(1494,11053,2,'2022-05-28',0.00,0.00),(1495,9394,2,'2022-05-28',0.00,0.00),(1496,6194,2,'2022-05-28',0.00,0.00),(1497,6270,2,'2022-05-28',0.00,0.00),(1498,10798,2,'2022-05-28',0.00,0.00),(1499,9044,2,'2022-05-28',0.00,0.00),(1500,10282,2,'2022-05-28',0.00,0.00),(1501,11800,2,'2022-05-28',0.00,0.00),(1502,6271,2,'2022-05-28',60.00,37.00),(1503,10015,2,'2022-05-28',0.00,0.00),(1504,12363,2,'2022-05-28',0.00,0.00),(1505,9789,2,'2022-05-28',104.00,37.00),(1506,12152,2,'2022-05-28',0.00,0.00),(1507,11733,2,'2022-05-28',0.00,0.00),(1508,10678,2,'2022-05-28',0.00,0.00),(1509,10679,2,'2022-05-28',0.00,0.00),(1510,11306,2,'2022-05-28',0.00,0.00),(1511,10841,2,'2022-05-28',0.00,0.00),(1512,11305,2,'2022-05-28',0.00,0.00),(1513,12202,2,'2022-05-28',0.00,0.00),(1514,12203,2,'2022-05-28',0.00,0.00),(1515,9868,2,'2022-05-28',0.00,0.00),(1516,11039,2,'2022-05-28',0.00,0.00),(1517,9367,2,'2022-05-28',0.00,0.00),(1518,11351,2,'2022-05-28',0.00,0.00),(1519,9956,2,'2022-05-28',0.00,0.00),(1520,9905,2,'2022-05-28',0.00,0.00),(1521,12248,2,'2022-05-28',0.00,0.00),(1522,12247,2,'2022-05-28',0.00,0.00),(1523,12249,2,'2022-05-28',0.00,0.00),(1524,9522,2,'2022-05-28',0.00,0.00),(1525,11077,2,'2022-05-28',0.00,0.00),(1526,11352,2,'2022-05-28',0.00,0.00),(1527,10236,2,'2022-05-28',0.00,0.00),(1528,10837,2,'2022-05-28',0.00,0.00),(1529,12275,2,'2022-05-28',0.00,0.00),(1530,10266,2,'2022-05-28',142.00,32.00),(1531,9945,2,'2022-05-28',163.00,32.00),(1532,11340,2,'2022-05-28',47.00,32.00),(1533,10409,2,'2022-05-28',32.00,32.00),(1534,11418,2,'2022-05-28',0.00,0.00),(1535,10288,2,'2022-05-28',0.00,0.00),(1536,11955,2,'2022-05-28',0.00,0.00),(1537,11860,2,'2022-05-28',0.00,0.00),(1538,11708,2,'2022-05-28',0.00,0.00),(1539,11936,2,'2022-05-28',0.00,0.00),(1540,10925,2,'2022-05-28',0.00,0.00),(1541,5135,2,'2022-05-28',0.00,0.00),(1542,9761,2,'2022-05-28',0.00,0.00),(1543,10760,2,'2022-05-28',0.00,0.00),(1544,9289,2,'2022-05-28',10.00,20.37),(1545,5858,2,'2022-05-28',0.00,0.00),(1546,5859,2,'2022-05-28',23.00,30.64),(1547,5861,2,'2022-05-28',9.00,60.72),(1548,9168,2,'2022-05-28',0.00,0.00),(1549,9210,2,'2022-05-28',0.00,0.00),(1550,9301,2,'2022-05-28',0.00,0.00),(1551,10893,2,'2022-05-28',0.00,0.00),(1552,5736,2,'2022-05-28',0.00,0.00),(1553,11661,2,'2022-05-28',0.00,0.00),(1554,9776,2,'2022-05-28',0.00,0.00),(1555,9973,2,'2022-05-28',0.00,0.00),(1556,9738,2,'2022-05-28',0.00,0.00),(1557,11006,2,'2022-05-28',0.00,0.00),(1558,10465,2,'2022-05-28',0.00,0.00),(1559,12068,2,'2022-05-28',0.00,0.00),(1560,11172,2,'2022-05-28',0.00,0.00),(1561,9908,2,'2022-05-28',0.00,0.00),(1562,9867,2,'2022-05-28',2.00,15.95),(1563,9869,2,'2022-05-28',0.00,0.00),(1564,10425,2,'2022-05-28',0.00,0.00),(1565,11623,2,'2022-05-28',0.00,0.00),(1566,10874,2,'2022-05-28',0.00,0.00),(1567,11601,2,'2022-05-28',0.00,0.00),(1568,9422,2,'2022-05-28',0.00,0.00),(1569,11313,2,'2022-05-28',0.00,0.00),(1570,11539,2,'2022-05-28',0.00,0.00),(1571,11537,2,'2022-05-28',0.00,0.00),(1572,11911,2,'2022-05-28',0.00,0.00),(1573,11538,2,'2022-05-28',0.00,0.00),(1574,11540,2,'2022-05-28',0.00,0.00),(1575,11541,2,'2022-05-28',0.00,0.00),(1576,11807,2,'2022-05-28',0.00,0.00),(1577,12015,2,'2022-05-28',0.00,0.00),(1578,11383,2,'2022-05-28',0.00,0.00),(1579,10875,2,'2022-05-28',0.00,0.00),(1580,11650,2,'2022-05-28',0.00,0.00),(1581,12008,2,'2022-05-28',0.00,0.00),(1582,12007,2,'2022-05-28',0.00,0.00),(1583,10912,2,'2022-05-28',0.00,0.00),(1584,12213,2,'2022-05-28',0.00,0.00),(1585,11585,2,'2022-05-28',0.00,0.00),(1586,10802,2,'2022-05-28',0.00,0.00),(1587,6225,2,'2022-05-28',0.00,0.00),(1588,6226,2,'2022-05-28',0.00,0.00),(1589,9054,2,'2022-05-28',134.00,22.00),(1590,6059,2,'2022-05-28',0.00,0.00),(1591,11701,2,'2022-05-28',0.00,0.00),(1592,6056,2,'2022-05-28',1.00,40.50),(1593,6082,2,'2022-05-28',164.00,31.00),(1594,11748,2,'2022-05-28',0.00,0.00),(1595,12098,2,'2022-05-28',1.83,33.00),(1596,10363,2,'2022-05-28',0.00,0.00),(1597,5421,2,'2022-05-28',0.00,0.00),(1598,10253,2,'2022-05-28',0.00,0.00),(1599,10782,2,'2022-05-28',38.00,11.50),(1600,11311,2,'2022-05-28',0.00,0.00),(1601,6034,2,'2022-05-28',48.00,15.23),(1602,11598,2,'2022-05-28',0.00,0.00),(1603,6035,2,'2022-05-28',0.00,0.00),(1604,10394,2,'2022-05-28',0.00,0.00),(1605,10543,2,'2022-05-28',0.00,0.00),(1606,10567,2,'2022-05-28',0.00,0.00),(1607,9822,2,'2022-05-28',0.00,0.00),(1608,10828,2,'2022-05-28',0.00,0.00),(1609,10749,2,'2022-05-28',0.00,0.00),(1610,6042,2,'2022-05-28',0.00,0.00),(1611,5009,2,'2022-05-28',1.00,80.20),(1612,10788,2,'2022-05-28',0.00,0.00),(1613,11783,2,'2022-05-28',0.00,0.00),(1614,11782,2,'2022-05-28',0.00,0.00),(1615,12047,2,'2022-05-28',0.00,0.00),(1616,11678,2,'2022-05-28',0.00,0.00),(1617,10262,2,'2022-05-28',0.00,0.00),(1618,5273,2,'2022-05-28',0.00,0.00),(1619,11705,2,'2022-05-28',0.00,0.00),(1620,9894,2,'2022-05-28',0.00,0.00),(1621,9895,2,'2022-05-28',0.00,0.00),(1622,9896,2,'2022-05-28',0.00,0.00),(1623,9893,2,'2022-05-28',0.00,0.00),(1624,9346,2,'2022-05-28',0.00,0.00),(1625,9323,2,'2022-05-28',3.17,76.80),(1626,12061,2,'2022-05-28',0.00,0.00),(1627,9561,2,'2022-05-28',0.00,0.00),(1628,9175,2,'2022-05-28',0.00,0.00),(1631,10165,2,'2022-05-28',0.00,0.00),(1632,11292,2,'2022-05-28',0.00,0.00),(1633,9648,2,'2022-05-28',0.00,0.00),(1634,12362,2,'2022-05-28',0.00,0.00),(1635,6069,2,'2022-05-28',0.00,0.00),(1636,10526,2,'2022-05-28',0.00,0.00),(1637,9280,2,'2022-05-28',0.00,0.00),(1638,11556,2,'2022-05-28',0.00,0.00),(1639,11527,2,'2022-05-28',0.00,0.00),(1640,9249,2,'2022-05-28',20.00,37.49),(1641,10685,2,'2022-05-28',0.00,0.00),(1642,11544,2,'2022-05-28',0.00,0.00),(1643,11260,2,'2022-05-28',0.00,0.00),(1644,11975,2,'2022-05-28',0.00,0.00),(1645,10886,2,'2022-05-28',0.00,0.00),(1646,10887,2,'2022-05-28',0.00,0.00),(1647,10885,2,'2022-05-28',1.00,3.60),(1648,6163,2,'2022-05-28',160.00,7.50),(1649,10219,2,'2022-05-28',82.00,20.48),(1650,10128,2,'2022-05-28',0.00,0.00),(1651,12334,2,'2022-05-28',0.00,0.00),(1652,10648,2,'2022-05-28',0.00,0.00),(1653,6086,2,'2022-05-28',0.00,0.00),(1654,11802,2,'2022-05-28',0.00,0.00),(1655,12157,2,'2022-05-28',0.00,0.00),(1656,9795,2,'2022-05-28',0.00,0.00),(1657,10031,2,'2022-05-28',0.00,0.00),(1658,10352,2,'2022-05-28',0.00,0.00),(1659,10814,2,'2022-05-28',0.00,0.00),(1660,9380,2,'2022-05-28',0.00,0.00),(1661,11421,2,'2022-05-28',0.00,0.00),(1662,6087,2,'2022-05-28',0.00,0.00),(1663,6088,2,'2022-05-28',8.17,16.50),(1664,12117,2,'2022-05-28',0.00,0.00),(1665,10314,2,'2022-05-28',5.70,42.00),(1666,9169,2,'2022-05-28',20.00,49.26),(1667,10899,2,'2022-05-28',1.00,42.00),(1668,5838,2,'2022-05-28',0.00,0.00),(1669,5813,2,'2022-05-28',4.00,25.37),(1670,5843,2,'2022-05-28',21.00,54.31),(1671,9747,2,'2022-05-28',0.00,0.00),(1672,5849,2,'2022-05-28',4.00,19.49),(1673,9455,2,'2022-05-28',4.00,33.70),(1674,10510,2,'2022-05-28',16.00,32.45),(1675,5851,2,'2022-05-28',12.00,15.00),(1676,5855,2,'2022-05-28',0.00,0.00),(1677,10839,2,'2022-05-28',0.00,0.00),(1678,5940,2,'2022-05-28',0.00,0.00),(1679,12001,2,'2022-05-28',14.00,101.02),(1680,9762,2,'2022-05-28',0.00,0.00),(1681,9402,2,'2022-05-28',2.00,30.24),(1682,5811,2,'2022-05-28',29.00,51.19),(1683,6344,2,'2022-05-28',5.00,30.77),(1684,6345,2,'2022-05-28',0.00,0.00),(1685,6085,2,'2022-05-28',13.00,71.91),(1686,5981,2,'2022-05-28',0.00,0.00),(1687,6362,2,'2022-05-28',10.00,40.05),(1688,5442,2,'2022-05-28',38.00,37.85),(1689,6364,2,'2022-05-28',8.00,49.08),(1690,9369,2,'2022-05-28',0.00,0.00),(1691,10066,2,'2022-05-28',1.00,0.00),(1692,12100,2,'2022-05-28',0.00,0.00),(1693,9456,2,'2022-05-28',0.00,0.00),(1694,11055,2,'2022-05-28',0.00,0.00),(1695,12080,2,'2022-05-28',0.00,0.00),(1696,9874,2,'2022-05-28',0.00,0.00),(1697,11149,2,'2022-05-28',0.00,0.00),(1698,9556,2,'2022-05-28',0.00,0.00),(1699,6093,2,'2022-05-28',0.00,0.00),(1700,10901,2,'2022-05-28',0.00,0.00),(1701,9782,2,'2022-05-28',0.00,0.00),(1702,9410,2,'2022-05-28',0.00,0.00),(1703,11812,2,'2022-05-28',0.00,0.00),(1704,6346,2,'2022-05-28',0.00,0.00),(1705,6095,2,'2022-05-28',0.00,0.00),(1706,9984,2,'2022-05-28',0.00,0.00),(1707,12374,2,'2022-05-28',0.00,0.00),(1708,11479,2,'2022-05-28',0.00,0.00),(1709,11837,2,'2022-05-28',0.00,0.00),(1710,9135,2,'2022-05-28',12.00,50.00),(1711,11504,2,'2022-05-28',0.00,0.00),(1712,9055,2,'2022-05-28',0.00,0.00),(1713,9038,2,'2022-05-28',40.00,0.99),(1714,10151,2,'2022-05-28',0.00,0.00),(1715,10817,2,'2022-05-28',2.00,17.99),(1716,11600,2,'2022-05-28',0.00,0.00),(1717,12020,2,'2022-05-28',0.00,0.00),(1718,11599,2,'2022-05-28',0.00,0.00),(1719,12239,2,'2022-05-28',0.00,0.00),(1720,6113,2,'2022-05-28',0.00,0.00),(1721,10360,2,'2022-05-28',9.00,83.95),(1722,10607,2,'2022-05-28',0.00,0.00),(1723,10617,2,'2022-05-28',0.00,0.00),(1724,9981,2,'2022-05-28',0.00,0.00),(1725,10189,2,'2022-05-28',0.00,0.00),(1726,10177,2,'2022-05-28',0.00,0.00),(1727,9969,2,'2022-05-28',1.00,17.00),(1728,11321,2,'2022-05-28',0.00,0.00),(1729,11818,2,'2022-05-28',0.00,0.00),(1730,6117,2,'2022-05-28',0.00,19.99),(1731,10021,2,'2022-05-28',82.79,48.00),(1732,9883,2,'2022-05-28',0.00,48.00),(1733,6275,2,'2022-05-28',0.00,0.00),(1734,10033,2,'2022-05-28',31.00,2.50),(1735,12237,2,'2022-05-28',0.00,0.00),(1736,10178,2,'2022-05-28',0.00,0.00),(1737,10179,2,'2022-05-28',0.00,0.00),(1738,9043,2,'2022-05-28',1.17,52.00),(1739,10192,2,'2022-05-28',0.00,0.00),(1740,11067,2,'2022-05-28',0.00,0.00),(1741,11088,2,'2022-05-28',0.00,0.00),(1742,11435,2,'2022-05-28',0.00,0.00),(1743,5036,2,'2022-05-28',43.00,42.95),(1744,9161,2,'2022-05-28',0.00,0.00),(1745,5872,2,'2022-05-28',2.00,33.00),(1746,5873,2,'2022-05-28',8.00,35.29),(1747,11595,2,'2022-05-28',0.00,0.00),(1748,6230,2,'2022-05-28',6.40,33.00),(1749,6231,2,'2022-05-28',5.00,35.29),(1750,11596,2,'2022-05-28',0.00,33.00),(1751,11436,2,'2022-05-28',0.00,0.00),(1752,10809,2,'2022-05-28',0.00,0.00),(1753,10807,2,'2022-05-28',0.00,0.00),(1754,10808,2,'2022-05-28',0.00,0.00),(1755,10804,2,'2022-05-28',0.00,0.00),(1756,10805,2,'2022-05-28',0.00,0.00),(1757,10806,2,'2022-05-28',0.00,0.00),(1758,10803,2,'2022-05-28',0.00,0.00),(1759,12136,2,'2022-05-28',0.00,0.00),(1760,11092,2,'2022-05-28',0.00,0.00),(1761,6115,2,'2022-05-28',2.00,32.00),(1762,6125,2,'2022-05-28',6.00,50.00),(1763,10967,2,'2022-05-28',0.00,0.00),(1764,11110,2,'2022-05-28',0.00,0.00),(1765,9233,2,'2022-05-28',0.00,0.00),(1766,11338,2,'2022-05-28',0.00,0.00),(1767,9253,2,'2022-05-28',0.00,0.00),(1768,11339,2,'2022-05-28',0.00,0.00),(1769,11359,2,'2022-05-28',0.00,0.00),(1770,10974,2,'2022-05-28',0.00,0.00),(1771,11083,2,'2022-05-28',0.00,0.00),(1772,11714,2,'2022-05-28',0.00,0.00),(1773,11709,2,'2022-05-28',0.00,0.00),(1774,11085,2,'2022-05-28',0.00,0.00),(1775,11715,2,'2022-05-28',0.00,0.00),(1776,11713,2,'2022-05-28',0.00,0.00),(1777,11712,2,'2022-05-28',0.00,0.00),(1778,10963,2,'2022-05-28',0.00,0.00),(1779,11086,2,'2022-05-28',0.00,0.00),(1780,11084,2,'2022-05-28',0.00,0.00),(1781,11912,2,'2022-05-28',0.00,0.00),(1782,10216,25,'2022-05-28',66.00,0.00),(1783,11610,2,'2022-05-28',0.00,0.00),(1784,9546,2,'2022-05-28',0.00,0.00),(1785,10274,2,'2022-05-28',0.00,0.00),(1786,5871,2,'2022-05-28',22.00,85.00),(1787,9333,2,'2022-05-28',0.00,0.00),(1788,5789,2,'2022-05-28',0.00,0.00),(1789,9972,2,'2022-05-28',0.00,0.00),(1790,10385,2,'2022-05-28',0.00,0.00),(1791,12277,2,'2022-05-28',0.00,0.00),(1792,9538,2,'2022-05-28',0.00,0.00),(1793,11425,2,'2022-05-28',0.00,0.00),(1794,5912,2,'2022-05-28',0.00,0.00),(1795,12025,2,'2022-05-28',0.00,0.00),(1796,11377,2,'2022-05-28',0.00,0.00),(1797,11364,2,'2022-05-28',0.00,0.00),(1798,5680,2,'2022-05-28',53.50,98.00),(1799,10811,2,'2022-05-28',0.00,0.00),(1800,5521,2,'2022-05-28',0.00,0.00),(1801,4736,2,'2022-05-28',0.00,0.00),(1802,9108,2,'2022-05-28',0.00,0.00),(1803,6247,2,'2022-05-28',12.00,38.00),(1804,9015,2,'2022-05-28',38.33,78.00),(1805,6266,2,'2022-05-28',0.00,0.00),(1806,10958,2,'2022-05-28',0.00,0.00),(1807,12058,2,'2022-05-28',0.00,0.00),(1808,11360,2,'2022-05-28',1.00,62.00),(1809,10260,2,'2022-05-28',0.00,0.00),(1810,12219,2,'2022-05-28',0.00,0.00),(1811,5601,2,'2022-05-28',0.00,0.00),(1812,12224,2,'2022-05-28',0.00,0.00),(1813,6130,2,'2022-05-28',0.00,0.00),(1814,4846,2,'2022-05-28',29.00,16.10),(1815,11028,2,'2022-05-28',0.00,0.00),(1816,6253,2,'2022-05-28',0.00,0.00),(1817,10180,2,'2022-05-28',0.00,0.00),(1818,9064,2,'2022-05-28',0.00,0.00),(1819,5639,2,'2022-05-28',8.00,15.25),(1820,6131,2,'2022-05-28',0.00,0.00),(1821,9825,2,'2022-05-28',0.00,0.00),(1822,11078,2,'2022-05-28',0.00,0.00),(1823,5718,2,'2022-05-28',0.00,0.00),(1824,10381,2,'2022-05-28',0.00,0.00),(1825,5648,2,'2022-05-28',203.00,35.21),(1826,5717,2,'2022-05-28',276.00,45.26),(1827,5958,2,'2022-05-28',3.00,36.52),(1828,11739,2,'2022-05-28',0.00,0.00),(1829,12371,2,'2022-05-28',0.00,0.00),(1830,12370,2,'2022-05-28',0.00,0.00),(1831,12372,2,'2022-05-28',0.00,0.00),(1832,11931,2,'2022-05-28',0.00,0.00),(1833,10483,2,'2022-05-28',22.00,72.00),(1834,11361,2,'2022-05-28',0.00,0.00),(1835,6263,2,'2022-05-28',0.00,0.00),(1836,10931,2,'2022-05-28',0.00,0.00),(1837,10396,2,'2022-05-28',0.00,0.00),(1838,9272,2,'2022-05-28',0.00,0.00),(1839,4983,2,'2022-05-28',0.00,0.00),(1840,9332,2,'2022-05-28',1.00,37.50),(1841,12138,2,'2022-05-28',0.00,0.00),(1842,11930,2,'2022-05-28',0.00,0.00),(1843,12050,2,'2022-05-28',0.00,0.00),(1844,11546,2,'2022-05-28',0.00,0.00),(1845,11545,2,'2022-05-28',0.00,0.00),(1846,11809,2,'2022-05-28',0.00,0.00),(1847,11690,2,'2022-05-28',0.00,0.00),(1848,11577,2,'2022-05-28',0.00,0.00),(1849,9268,2,'2022-05-28',0.00,0.00),(1850,10074,2,'2022-05-28',0.00,0.00),(1851,9057,2,'2022-05-28',164.50,16.00),(1852,9213,2,'2022-05-28',0.00,0.00),(1853,6187,2,'2022-05-28',4.50,32.00),(1854,11046,2,'2022-05-28',120.00,1.60),(1855,11154,2,'2022-05-28',0.00,0.00),(1856,11155,2,'2022-05-28',0.00,0.00),(1857,11153,2,'2022-05-28',0.00,0.00),(1858,11998,2,'2022-05-28',0.00,0.00),(1859,11996,2,'2022-05-28',0.00,0.00),(1860,9739,2,'2022-05-28',0.00,0.00),(1861,10168,2,'2022-05-28',0.00,0.00),(1862,10169,2,'2022-05-28',0.00,0.00),(1863,10167,2,'2022-05-28',0.00,0.00),(1864,11507,2,'2022-05-28',28.00,20.90),(1865,11622,2,'2022-05-28',0.00,0.00),(1866,10574,2,'2022-05-28',0.00,0.00),(1867,6134,2,'2022-05-28',0.00,0.00),(1868,5540,2,'2022-05-28',0.00,6.95),(1869,9142,2,'2022-05-28',1.00,30.00),(1870,10072,2,'2022-05-28',0.00,0.00),(1871,9239,2,'2022-05-28',0.00,0.00),(1872,11468,2,'2022-05-28',0.00,0.00),(1873,6168,2,'2022-05-28',0.00,0.00),(1874,11127,2,'2022-05-28',0.00,0.00),(1875,10514,2,'2022-05-28',8.00,42.50),(1876,11629,2,'2022-05-28',0.00,0.00),(1877,10834,2,'2022-05-28',0.00,0.00),(1878,10206,2,'2022-05-28',0.00,0.00),(1879,9296,2,'2022-05-28',0.00,0.00),(1880,11003,2,'2022-05-28',0.00,0.00),(1881,10968,2,'2022-05-28',0.00,0.00),(1882,6341,2,'2022-05-28',0.00,0.00),(1883,9872,2,'2022-05-28',0.00,0.00),(1884,9061,2,'2022-05-28',0.00,0.00),(1885,10975,2,'2022-05-28',0.00,0.00),(1886,10201,2,'2022-05-28',0.00,0.00),(1887,10203,2,'2022-05-28',0.00,0.00),(1888,10202,2,'2022-05-28',0.00,0.00),(1889,9083,2,'2022-05-28',0.00,0.00),(1890,12307,2,'2022-05-28',0.00,0.00),(1891,11151,2,'2022-05-28',0.00,0.00),(1892,10878,2,'2022-05-28',0.00,0.00),(1893,10433,2,'2022-05-28',0.00,0.00),(1894,10434,2,'2022-05-28',0.00,0.00),(1895,4715,2,'2022-05-28',35.00,32.50),(1896,9573,2,'2022-05-28',36.00,26.50),(1897,6142,2,'2022-05-28',0.00,0.00),(1898,5113,2,'2022-05-28',0.00,0.00),(1899,11407,2,'2022-05-28',0.00,0.00),(1900,10591,2,'2022-05-28',49.00,20.10),(1901,11779,2,'2022-05-28',0.00,0.00),(1902,10259,2,'2022-05-28',154.00,20.10),(1903,9072,2,'2022-05-28',68.00,40.00),(1904,10590,2,'2022-05-28',0.00,0.00),(1905,11584,2,'2022-05-28',0.00,0.00),(1906,11224,2,'2022-05-28',0.00,0.00),(1907,10609,2,'2022-05-28',0.00,0.00),(1908,11580,2,'2022-05-28',0.00,0.00),(1909,11576,2,'2022-05-28',0.00,0.00),(1910,9062,2,'2022-05-28',0.00,0.00),(1911,11139,2,'2022-05-28',0.00,0.00),(1912,9137,2,'2022-05-28',0.00,0.00),(1913,11082,2,'2022-05-28',0.00,0.00),(1914,9106,2,'2022-05-28',0.00,0.00),(1915,10858,2,'2022-05-28',0.00,0.00),(1916,12103,2,'2022-05-28',0.00,0.00),(1917,12104,2,'2022-05-28',0.00,0.00),(1918,12105,2,'2022-05-28',0.00,0.00),(1919,10490,2,'2022-05-28',0.00,0.00),(1920,10432,2,'2022-05-28',0.00,0.00),(1921,10999,2,'2022-05-28',0.00,0.00),(1922,12091,2,'2022-05-28',0.00,0.00),(1923,6028,2,'2022-05-28',2.00,60.00),(1924,11562,2,'2022-05-28',67.00,102.00),(1925,5919,2,'2022-05-28',8.00,43.00),(1926,6202,2,'2022-05-28',172.80,74.00),(1927,9756,2,'2022-05-28',0.00,0.00),(1928,10644,2,'2022-05-28',0.00,0.00),(1929,6200,2,'2022-05-28',0.00,0.00),(1930,12059,2,'2022-05-28',0.00,0.00),(1931,5522,2,'2022-05-28',168.00,40.00),(1932,11770,2,'2022-05-28',0.00,0.00),(1933,10417,2,'2022-05-28',0.00,0.00),(1935,9710,2,'2022-05-28',54.00,44.00),(1936,9033,2,'2022-05-28',0.00,0.00),(1937,9709,2,'2022-05-28',90.40,40.00),(1938,12281,2,'2022-05-28',0.00,0.00),(1939,10092,2,'2022-05-28',0.00,0.00),(1940,12198,2,'2022-05-28',0.00,0.00),(1941,12329,2,'2022-05-28',0.00,0.00),(1942,11459,2,'2022-05-28',0.00,0.00),(1943,9035,2,'2022-05-28',0.00,0.00),(1944,11004,2,'2022-05-28',0.00,0.00),(1945,10793,2,'2022-05-28',0.00,0.00),(1946,11239,2,'2022-05-28',0.00,0.00),(1947,11191,2,'2022-05-28',0.00,0.00),(1948,10669,2,'2022-05-28',0.00,0.00),(1949,10487,2,'2022-05-28',4.00,72.00),(1950,11786,2,'2022-05-28',0.00,0.00),(1951,9056,2,'2022-05-28',0.00,0.00),(1952,9732,2,'2022-05-28',3.00,22.50),(1953,11758,2,'2022-05-28',0.00,0.00),(1954,10765,2,'2022-05-28',0.00,0.00),(1955,9279,2,'2022-05-28',0.00,0.00),(1956,12125,2,'2022-05-28',0.00,0.00),(1957,5291,2,'2022-05-28',0.00,0.00),(1958,11506,2,'2022-05-28',0.00,0.00),(1959,6132,2,'2022-05-28',2.00,20.50),(1960,6050,2,'2022-05-28',32.00,26.20),(1961,6051,2,'2022-05-28',3.00,30.83),(1962,11281,2,'2022-05-28',11.00,36.00),(1963,11183,2,'2022-05-28',40.00,75.00),(1964,11192,2,'2022-05-28',0.00,75.00),(1965,9386,2,'2022-05-28',0.00,0.00),(1966,11909,2,'2022-05-28',0.00,0.00),(1967,11990,2,'2022-05-28',0.00,0.00),(1968,11991,2,'2022-05-28',0.00,0.00),(1969,10816,2,'2022-05-28',0.00,0.00),(1970,6331,2,'2022-05-28',7.00,22.00),(1971,11997,2,'2022-05-28',0.00,0.00),(1972,10170,2,'2022-05-28',0.00,0.00),(1973,10890,2,'2022-05-28',6.00,29.00),(1974,11963,2,'2022-05-28',0.00,0.00),(1975,9139,2,'2022-05-28',0.00,0.00),(1976,10851,2,'2022-05-28',0.00,0.00),(1977,10331,2,'2022-05-28',0.00,0.00),(1978,5246,2,'2022-05-28',0.00,0.00),(1979,9903,2,'2022-05-28',38.49,11.00),(1980,9902,2,'2022-05-28',0.00,0.00),(1981,12336,2,'2022-05-28',0.00,0.00),(1982,9970,2,'2022-05-28',0.00,0.00),(1983,10690,2,'2022-05-28',0.00,0.00),(1984,9276,2,'2022-05-28',0.00,0.00),(1985,11977,2,'2022-05-28',0.00,0.00),(1986,11144,2,'2022-05-28',0.00,0.00),(1987,5924,2,'2022-05-28',0.00,0.00),(1988,9677,2,'2022-05-28',0.00,0.00),(1989,10505,2,'2022-05-28',0.00,0.00),(1990,8758,2,'2022-05-28',4.50,52.00),(1991,5947,2,'2022-05-28',0.00,0.00),(1992,6091,2,'2022-05-28',154.00,37.99),(1993,10629,2,'2022-05-28',0.00,0.00),(1994,12288,2,'2022-05-28',0.00,0.00),(1995,12339,2,'2022-05-28',0.00,0.00),(1996,12287,2,'2022-05-28',0.00,0.00),(1997,9560,2,'2022-05-28',0.00,42.99),(1998,5032,2,'2022-05-28',33.50,45.00),(1999,10676,2,'2022-05-28',0.00,0.00),(2000,10673,2,'2022-05-28',0.00,0.00),(2001,5034,2,'2022-05-28',15.25,165.00),(2002,11558,2,'2022-05-28',0.00,0.00),(2003,10315,2,'2022-05-28',1.00,68.50),(2004,11087,2,'2022-05-28',0.00,0.00),(2005,12126,2,'2022-05-28',0.00,0.00),(2006,10347,2,'2022-05-28',0.00,0.00),(2007,5233,2,'2022-05-28',560.00,37.99),(2008,12155,2,'2022-05-28',0.00,0.00),(2009,12012,2,'2022-05-28',0.00,0.00),(2010,11477,2,'2022-05-28',0.00,0.00),(2011,10515,2,'2022-05-28',9.00,88.00),(2012,6004,2,'2022-05-28',0.00,0.00),(2013,5794,2,'2022-05-28',0.00,0.00),(2014,11090,2,'2022-05-28',0.00,0.00),(2015,12356,2,'2022-05-28',0.00,0.00),(2016,9925,2,'2022-05-28',0.00,0.00),(2017,5272,2,'2022-05-28',46.75,26.15),(2018,9953,2,'2022-05-28',0.00,0.00),(2019,10420,2,'2022-05-28',0.00,0.00),(2020,10340,2,'2022-05-28',0.00,0.00),(2021,10726,2,'2022-05-28',0.00,0.00),(2022,10370,2,'2022-05-28',0.00,0.00),(2023,11072,2,'2022-05-28',6.00,31.50),(2024,11223,2,'2022-05-28',0.00,0.00),(2025,9143,2,'2022-05-28',0.00,0.00),(2026,10354,2,'2022-05-28',0.00,0.00),(2027,9682,2,'2022-05-28',0.00,0.00),(2028,6320,2,'2022-05-28',8.00,41.50),(2029,11146,2,'2022-05-28',0.00,0.00),(2030,6083,2,'2022-05-28',173.67,21.00),(2031,11161,2,'2022-05-28',0.00,0.00),(2032,11839,2,'2022-05-28',0.00,0.00),(2033,9716,2,'2022-05-28',0.00,0.00),(2034,9004,2,'2022-05-28',185.00,31.00),(2035,11002,2,'2022-05-28',0.00,0.00),(2036,9091,2,'2022-05-28',0.00,0.00),(2037,9979,2,'2022-05-28',0.00,0.00),(2038,12121,2,'2022-05-28',0.00,0.00),(2039,10750,2,'2022-05-28',0.00,0.00),(2040,10635,2,'2022-05-28',0.00,0.00),(2041,9692,2,'2022-05-28',0.00,0.00),(2042,10624,2,'2022-05-28',0.00,0.00),(2043,10127,2,'2022-05-28',0.00,0.00),(2044,10153,2,'2022-05-28',0.00,0.00),(2045,11193,2,'2022-05-28',0.00,0.00),(2046,11133,2,'2022-05-28',0.00,0.00),(2047,10956,2,'2022-05-28',2.00,45.00),(2048,11363,2,'2022-05-28',0.00,0.00),(2049,11817,2,'2022-05-28',0.00,0.00),(2050,11588,2,'2022-05-28',0.00,0.00),(2051,11262,2,'2022-05-28',0.00,0.00),(2052,9003,2,'2022-05-28',19.00,29.00),(2053,9853,2,'2022-05-28',0.00,0.00),(2054,9852,2,'2022-05-28',0.00,0.00),(2055,9851,2,'2022-05-28',0.00,0.00),(2056,10383,2,'2022-05-28',0.00,0.00),(2057,10484,2,'2022-05-28',0.00,0.00),(2058,10494,2,'2022-05-28',8.00,14.00),(2059,11902,2,'2022-05-28',10.00,19.00),(2060,10335,2,'2022-05-28',57.00,49.00),(2061,12181,2,'2022-05-28',0.00,0.00),(2062,9840,2,'2022-05-28',0.00,0.00),(2063,9476,2,'2022-05-28',15.00,1.90),(2064,11514,2,'2022-05-28',0.00,0.00),(2065,11136,2,'2022-05-28',0.00,0.00),(2066,5656,2,'2022-05-28',13.00,27.85),(2067,11324,2,'2022-05-28',0.00,0.00),(2068,10971,2,'2022-05-28',0.00,0.00),(2069,10973,2,'2022-05-28',0.00,0.00),(2070,10972,2,'2022-05-28',0.00,0.00),(2071,5264,2,'2022-05-28',0.00,0.00),(2072,11431,2,'2022-05-28',0.00,0.00),(2073,11430,2,'2022-05-28',0.00,0.00),(2074,12316,2,'2022-05-28',0.00,0.00),(2075,12037,2,'2022-05-28',0.00,0.00),(2076,9314,2,'2022-05-28',0.00,0.00),(2077,5799,2,'2022-05-28',76.00,65.00),(2078,9600,2,'2022-05-28',0.00,0.00),(2079,6150,2,'2022-05-28',0.00,0.00),(2080,10923,2,'2022-05-28',0.00,0.00),(2081,12361,2,'2022-05-28',0.00,0.00),(2082,10991,2,'2022-05-28',0.00,0.00),(2083,10534,2,'2022-05-28',0.00,0.00),(2084,6151,2,'2022-05-28',0.00,0.00),(2085,9519,2,'2022-05-28',0.00,0.00),(2086,6020,2,'2022-05-28',0.00,0.00),(2087,5739,2,'2022-05-28',0.00,0.00),(2088,12246,2,'2022-05-28',24.00,18.24),(2089,6156,2,'2022-05-28',0.00,0.00),(2090,9564,2,'2022-05-28',12.00,15.75),(2091,5802,2,'2022-05-28',0.00,0.00),(2092,11252,2,'2022-05-28',0.00,0.00),(2093,5801,2,'2022-05-28',16.00,21.00),(2094,10384,2,'2022-05-28',0.00,0.00),(2095,12044,2,'2022-05-28',0.00,0.00),(2096,12045,2,'2022-05-28',85.00,21.00),(2097,11096,2,'2022-05-28',0.00,0.00),(2098,11095,2,'2022-05-28',0.00,0.00),(2099,12270,2,'2022-05-28',0.00,0.00),(2100,12130,2,'2022-05-28',0.00,0.00),(2101,10718,2,'2022-05-28',4.00,63.00),(2102,12347,2,'2022-05-28',0.00,0.00),(2103,9797,2,'2022-05-28',0.00,0.00),(2104,10980,2,'2022-05-28',0.00,0.00),(2105,9832,2,'2022-05-28',0.00,0.00),(2106,5038,2,'2022-05-28',22.00,7.15),(2107,12358,2,'2022-05-28',0.00,0.00),(2108,11019,2,'2022-05-28',0.00,0.00),(2109,10588,2,'2022-05-28',0.00,0.00),(2110,9815,2,'2022-05-28',0.00,0.00),(2111,6276,2,'2022-05-28',0.00,0.00),(2112,11768,2,'2022-05-28',0.00,0.00),(2113,11959,2,'2022-05-28',0.00,0.00),(2114,9638,2,'2022-05-28',0.00,0.00),(2115,10572,2,'2022-05-28',2.00,24.00),(2116,10699,2,'2022-05-28',2.00,52.00),(2117,11024,2,'2022-05-28',0.00,0.00),(2118,11799,2,'2022-05-28',0.00,0.00),(2119,9831,2,'2022-05-28',0.00,0.00),(2120,11076,2,'2022-05-28',0.00,0.00),(2121,5037,2,'2022-05-28',31.00,3.00),(2122,11687,2,'2022-05-28',0.00,0.00),(2123,11121,2,'2022-05-28',0.00,0.00),(2124,11720,2,'2022-05-28',0.00,0.00),(2125,9704,2,'2022-05-28',0.00,0.00),(2126,9234,2,'2022-05-28',0.00,0.00),(2127,5793,2,'2022-05-28',77.00,40.00),(2128,6161,2,'2022-05-28',0.00,0.00),(2129,5390,2,'2022-05-28',0.00,0.00),(2130,11773,2,'2022-05-28',0.00,0.00),(2131,10773,2,'2022-05-28',0.00,0.00),(2132,5443,2,'2022-05-28',0.00,0.00),(2133,9107,2,'2022-05-28',51.00,24.30),(2134,9693,2,'2022-05-28',28.00,0.00),(2135,6337,2,'2022-05-28',0.00,0.00),(2136,6209,2,'2022-05-28',0.00,0.00),(2137,6352,2,'2022-05-28',9.00,20.05),(2138,9116,2,'2022-05-28',0.00,0.00),(2139,12344,2,'2022-05-28',0.00,0.00),(2140,11811,2,'2022-05-28',0.00,0.00),(2141,9252,2,'2022-05-28',0.00,0.00),(2142,11567,2,'2022-05-28',0.00,0.00),(2143,9030,2,'2022-05-28',0.00,0.00),(2144,9029,2,'2022-05-28',0.00,0.00),(2145,9997,2,'2022-05-28',0.00,0.00),(2146,9996,2,'2022-05-28',0.00,0.00),(2147,9995,2,'2022-05-28',0.00,0.00),(2148,9999,2,'2022-05-28',0.00,0.00),(2149,9653,2,'2022-05-28',0.00,0.00),(2150,9706,2,'2022-05-28',0.00,0.00),(2151,9998,2,'2022-05-28',0.00,0.00),(2152,10557,2,'2022-05-28',0.00,0.00),(2153,9948,2,'2022-05-28',0.00,0.00),(2154,10147,2,'2022-05-28',0.00,0.00),(2155,11511,2,'2022-05-28',0.00,0.00),(2156,11510,2,'2022-05-28',0.00,0.00),(2157,10626,2,'2022-05-28',0.00,0.00),(2158,10578,2,'2022-05-28',0.00,0.00),(2159,10627,2,'2022-05-28',0.00,0.00),(2160,11375,2,'2022-05-28',0.00,0.00),(2161,10400,2,'2022-05-28',0.00,0.00),(2162,10440,2,'2022-05-28',0.00,0.00),(2163,11512,2,'2022-05-28',0.00,0.00),(2164,11509,2,'2022-05-28',0.00,0.00),(2165,10620,2,'2022-05-28',0.00,0.00),(2166,10048,2,'2022-05-28',0.00,0.00),(2167,10146,2,'2022-05-28',0.00,0.00),(2168,9963,2,'2022-05-28',0.00,0.00),(2169,9947,2,'2022-05-28',0.00,0.00),(2170,9961,2,'2022-05-28',0.00,0.00),(2171,10625,2,'2022-05-28',3.00,50.04),(2172,9960,2,'2022-05-28',0.00,0.00),(2173,10622,2,'2022-05-28',0.00,0.00),(2174,10059,2,'2022-05-28',0.00,0.00),(2175,10596,2,'2022-05-28',0.00,0.00),(2176,10766,2,'2022-05-28',0.00,0.00),(2177,10102,2,'2022-05-28',0.00,0.00),(2178,6057,2,'2022-05-28',8.00,62.50),(2179,9036,2,'2022-05-28',3.00,40.00),(2180,6166,2,'2022-05-28',0.00,0.00),(2181,10249,2,'2022-05-28',0.00,0.00),(2182,10078,2,'2022-05-28',0.00,0.00),(2183,10248,2,'2022-05-28',0.00,0.00),(2184,10079,2,'2022-05-28',0.00,0.00),(2185,10250,2,'2022-05-28',0.00,0.00),(2186,12140,2,'2022-05-28',0.00,0.00),(2187,12229,2,'2022-05-28',0.00,0.00),(2188,11589,2,'2022-05-28',0.00,0.00),(2189,10010,2,'2022-05-28',4.33,58.90),(2190,10762,2,'2022-05-28',0.00,0.00),(2191,11337,2,'2022-05-28',0.00,0.00),(2192,11672,2,'2022-05-28',0.00,0.00),(2193,12271,2,'2022-05-28',0.00,0.00),(2194,10759,2,'2022-05-28',0.00,0.00),(2195,10764,2,'2022-05-28',0.00,0.00),(2196,9766,2,'2022-05-28',1166.46,2.75),(2197,12116,2,'2022-05-28',0.00,0.00),(2198,12106,2,'2022-05-28',0.00,0.00),(2199,10605,2,'2022-05-28',0.00,0.00),(2200,10677,2,'2022-05-28',0.00,0.00),(2201,11853,2,'2022-05-28',0.00,0.00),(2202,11854,2,'2022-05-28',0.00,0.00),(2203,9090,2,'2022-05-28',8.00,22.50),(2204,12373,2,'2022-05-28',0.00,0.00),(2205,11855,2,'2022-05-28',0.00,0.00),(2206,9992,2,'2022-05-28',0.00,0.00),(2207,5402,2,'2022-05-28',3075.38,1.68),(2208,10598,2,'2022-05-28',0.00,0.00),(2209,6172,2,'2022-05-28',3.00,70.00),(2210,11633,2,'2022-05-28',0.00,0.00),(2211,4759,2,'2022-05-28',0.00,0.00),(2212,11525,2,'2022-05-28',0.00,0.00),(2213,11222,2,'2022-05-28',0.00,43.50),(2214,9697,2,'2022-05-28',0.00,0.00),(2215,11519,2,'2022-05-28',0.00,0.00),(2216,9544,2,'2022-05-28',0.00,0.00),(2217,9391,2,'2022-05-28',0.00,1.59),(2218,9630,2,'2022-05-28',0.00,0.00),(2219,9174,2,'2022-05-28',0.00,0.00),(2220,11265,2,'2022-05-28',0.00,0.00),(2221,11852,2,'2022-05-28',0.00,0.00),(2222,11796,2,'2022-05-28',0.00,0.00),(2223,11494,2,'2022-05-28',99.21,0.99),(2224,6174,2,'2022-05-28',0.00,0.00),(2225,11704,2,'2022-05-28',0.00,0.00),(2226,9859,2,'2022-05-28',0.00,0.00),(2227,10564,2,'2022-05-28',0.00,0.00),(2228,9699,2,'2022-05-28',4.00,60.00),(2229,9700,2,'2022-05-28',0.00,0.00),(2230,10429,2,'2022-05-28',0.00,0.00),(2231,9349,2,'2022-05-28',1.41,106.50),(2232,4771,2,'2022-05-28',0.00,0.00),(2233,11286,2,'2022-05-28',0.00,0.00),(2234,12131,2,'2022-05-28',0.00,0.00),(2235,11927,2,'2022-05-28',0.00,0.00),(2236,11928,2,'2022-05-28',0.00,0.00),(2237,11285,2,'2022-05-28',0.00,0.00),(2238,11284,2,'2022-05-28',0.00,0.00),(2239,9698,2,'2022-05-28',0.00,0.00),(2240,10818,2,'2022-05-28',0.00,0.00),(2241,11819,2,'2022-05-28',0.00,0.00),(2242,11877,2,'2022-05-28',0.00,0.00),(2243,11801,2,'2022-05-28',0.00,0.00),(2244,11797,2,'2022-05-28',0.00,0.00),(2245,5352,2,'2022-05-28',0.00,0.00),(2246,11283,2,'2022-05-28',0.00,0.00),(2247,12233,2,'2022-05-28',0.00,0.00),(2248,6177,2,'2022-05-28',0.00,0.00),(2249,11093,2,'2022-05-28',0.00,0.00),(2250,11471,2,'2022-05-28',0.00,0.00),(2251,11885,2,'2022-05-28',0.00,0.00),(2252,11762,2,'2022-05-28',0.00,0.00),(2253,11764,2,'2022-05-28',0.00,0.00),(2254,12023,2,'2022-05-28',0.00,0.00),(2255,11256,2,'2022-05-28',0.00,0.00),(2256,6169,2,'2022-05-28',0.00,0.00),(2257,9162,2,'2022-05-28',0.00,0.00),(2258,11761,2,'2022-05-28',0.00,0.00),(2259,10743,2,'2022-05-28',0.00,0.00),(2260,9424,2,'2022-05-28',3.00,200.00),(2261,9684,2,'2022-05-28',0.00,0.00),(2262,10413,2,'2022-05-28',47.00,106.00),(2263,10028,2,'2022-05-28',0.00,0.00),(2264,9993,2,'2022-05-28',0.00,0.00),(2265,10026,2,'2022-05-28',0.00,0.00),(2266,5662,2,'2022-05-28',0.00,0.00),(2267,6319,2,'2022-05-28',0.00,0.00),(2268,5878,2,'2022-05-28',132.00,37.75),(2269,12018,2,'2022-05-28',0.00,0.00),(2270,5610,2,'2022-05-28',0.00,63.50),(2271,6029,2,'2022-05-28',6.00,27.00),(2272,10155,2,'2022-05-28',0.00,0.00),(2273,10156,2,'2022-05-28',0.00,0.00),(2274,10441,2,'2022-05-28',0.00,0.00),(2275,11674,2,'2022-05-28',0.00,0.00),(2276,11449,2,'2022-05-28',0.00,0.00),(2277,11051,2,'2022-05-28',0.00,0.00),(2278,10909,2,'2022-05-28',0.00,0.00),(2279,9680,2,'2022-05-28',0.00,0.00),(2280,11871,2,'2022-05-28',0.00,0.00),(2281,11135,2,'2022-05-28',0.00,0.00),(2282,12296,2,'2022-05-28',0.00,0.00),(2283,10255,2,'2022-05-28',0.00,0.00),(2284,10256,2,'2022-05-28',0.00,0.00),(2285,11543,2,'2022-05-28',0.00,0.00),(2286,10869,2,'2022-05-28',0.00,0.00),(2287,5600,2,'2022-05-28',168.00,41.00),(2288,11611,2,'2022-05-28',0.00,0.00),(2289,6178,2,'2022-05-28',2.00,14.40),(2290,5763,2,'2022-05-28',13.00,30.00),(2291,10783,2,'2022-05-28',0.00,0.00),(2292,11994,2,'2022-05-28',0.00,0.00),(2293,5829,2,'2022-05-28',0.00,0.00),(2294,6348,2,'2022-05-28',9.00,33.75),(2295,10800,2,'2022-05-28',0.00,0.00),(2296,10329,2,'2022-05-28',0.00,0.00),(2297,5808,2,'2022-05-28',72.00,47.50),(2298,11427,2,'2022-05-28',0.00,0.00),(2299,9849,2,'2022-05-28',0.00,0.00),(2300,9850,2,'2022-05-28',0.00,0.00),(2301,5271,2,'2022-05-28',0.00,0.00),(2302,9435,2,'2022-05-28',0.00,0.00),(2303,11876,2,'2022-05-28',0.00,0.00),(2304,10047,2,'2022-05-28',0.00,0.00),(2305,9231,2,'2022-05-28',0.00,0.00),(2306,9635,2,'2022-05-28',0.00,0.00),(2307,9344,2,'2022-05-28',0.00,0.00),(2308,9006,2,'2022-05-28',0.00,0.00),(2309,11656,2,'2022-05-28',0.00,0.00),(2310,5155,2,'2022-05-28',0.00,0.00),(2311,7308,2,'2022-05-28',0.00,0.00),(2312,9813,2,'2022-05-28',0.00,0.00),(2313,7303,2,'2022-05-28',0.00,0.00),(2314,5751,2,'2022-05-28',0.00,0.00),(2315,9202,2,'2022-05-28',0.00,0.00),(2316,10307,2,'2022-05-28',0.00,0.00),(2317,9104,2,'2022-05-28',0.00,0.00),(2318,11999,2,'2022-05-28',0.00,0.00),(2319,10879,2,'2022-05-28',0.00,0.00),(2320,7299,2,'2022-05-28',0.00,0.00),(2321,5132,2,'2022-05-28',0.00,0.00),(2322,11423,2,'2022-05-28',0.00,0.00),(2323,11327,2,'2022-05-28',0.00,0.00),(2324,9121,2,'2022-05-28',0.00,0.00),(2325,7309,2,'2022-05-28',0.00,0.00),(2326,9243,2,'2022-05-28',0.00,0.00),(2327,11887,2,'2022-05-28',0.00,0.00),(2328,5564,2,'2022-05-28',0.00,0.00),(2329,9727,2,'2022-05-28',0.00,0.00),(2330,11294,2,'2022-05-28',0.00,0.00),(2331,11319,2,'2022-05-28',0.00,0.00),(2332,10550,2,'2022-05-28',0.00,0.00),(2333,10864,2,'2022-05-28',0.00,0.00),(2334,11353,2,'2022-05-28',0.00,0.00),(2335,12174,2,'2022-05-28',0.00,0.00),(2336,10797,2,'2022-05-28',0.00,0.00),(2337,9916,2,'2022-05-28',0.00,0.00),(2338,9720,2,'2022-05-28',0.00,0.00),(2339,9781,2,'2022-05-28',0.00,0.00),(2340,11508,2,'2022-05-28',0.00,0.00),(2341,9569,2,'2022-05-28',0.00,0.00),(2342,10862,2,'2022-05-28',0.00,0.00),(2343,9810,2,'2022-05-28',0.00,0.00),(2344,11805,2,'2022-05-28',0.00,0.00),(2345,11329,2,'2022-05-28',0.00,0.00),(2346,9179,2,'2022-05-28',0.00,0.00),(2347,9235,2,'2022-05-28',0.00,0.00),(2348,12109,2,'2022-05-28',0.00,0.00),(2349,12090,2,'2022-05-28',0.00,0.00),(2350,9130,2,'2022-05-28',0.00,0.00),(2351,12208,2,'2022-05-28',0.00,0.00),(2352,9118,2,'2022-05-28',0.00,0.00),(2353,11410,2,'2022-05-28',0.00,0.00),(2354,10987,2,'2022-05-28',0.00,0.00),(2355,12225,2,'2022-05-28',0.00,0.00),(2356,5149,2,'2022-05-28',0.00,0.00),(2357,10639,2,'2022-05-28',0.00,0.00),(2358,9814,2,'2022-05-28',0.00,0.00),(2359,11542,2,'2022-05-28',0.00,0.00),(2360,10067,2,'2022-05-28',0.00,0.00),(2361,9736,2,'2022-05-28',0.00,0.00),(2362,6000,2,'2022-05-28',0.00,0.00),(2363,9752,2,'2022-05-28',0.00,0.00),(2364,9182,2,'2022-05-28',0.00,0.00),(2365,9103,2,'2022-05-28',0.00,0.00),(2366,9086,2,'2022-05-28',0.00,0.00),(2367,10863,2,'2022-05-28',0.00,0.00),(2368,9818,2,'2022-05-28',0.00,0.00),(2369,10511,2,'2022-05-28',0.00,0.00),(2370,10868,2,'2022-05-28',0.00,0.00),(2371,10537,2,'2022-05-28',0.00,0.00),(2372,10846,2,'2022-05-28',0.00,0.00),(2373,11522,2,'2022-05-28',0.00,0.00),(2374,9306,2,'2022-05-28',0.00,0.00),(2375,9629,2,'2022-05-28',0.00,0.00),(2376,9799,2,'2022-05-28',0.00,0.00),(2377,11384,2,'2022-05-28',0.00,0.00),(2378,12199,2,'2022-05-28',0.00,0.00),(2379,10824,2,'2022-05-28',0.00,0.00),(2380,10613,2,'2022-05-28',0.00,0.00),(2381,5156,2,'2022-05-28',0.00,0.00),(2382,9120,2,'2022-05-28',0.00,0.00),(2383,11303,2,'2022-05-28',0.00,0.00),(2384,11295,2,'2022-05-28',0.00,0.00),(2385,9612,2,'2022-05-28',0.00,0.00),(2386,9821,2,'2022-05-28',0.00,0.00),(2387,10407,2,'2022-05-28',0.00,0.00),(2388,9919,2,'2022-05-28',0.00,0.00),(2389,9804,2,'2022-05-28',0.00,0.00),(2390,11354,2,'2022-05-28',0.00,0.00),(2391,10408,2,'2022-05-28',0.00,0.00),(2392,11054,2,'2022-05-28',0.00,0.00),(2393,12161,2,'2022-05-28',0.00,0.00),(2394,11411,2,'2022-05-28',0.00,0.00),(2395,11974,2,'2022-05-28',0.00,0.00),(2396,9330,2,'2022-05-28',0.00,0.00),(2397,5628,2,'2022-05-28',0.00,0.00),(2398,10794,2,'2022-05-28',0.00,0.00),(2399,9788,2,'2022-05-28',0.00,0.00),(2400,9458,2,'2022-05-28',0.00,0.00),(2401,10371,2,'2022-05-28',0.00,0.00),(2402,9765,2,'2022-05-28',0.00,0.00),(2403,11707,2,'2022-05-28',0.00,0.00),(2404,9980,2,'2022-05-28',0.00,0.00),(2405,9188,2,'2022-05-28',0.00,0.00),(2406,9936,2,'2022-05-28',0.00,0.00),(2407,9924,2,'2022-05-28',0.00,0.00),(2408,11350,2,'2022-05-28',0.00,0.00),(2409,9160,2,'2022-05-28',0.00,0.00),(2410,9889,2,'2022-05-28',0.00,0.00),(2411,7302,2,'2022-05-28',0.00,0.00),(2412,9914,2,'2022-05-28',0.00,0.00),(2413,11104,2,'2022-05-28',0.00,0.00),(2414,9912,2,'2022-05-28',0.00,0.00),(2415,9773,2,'2022-05-28',0.00,0.00),(2416,9913,2,'2022-05-28',0.00,0.00),(2417,11505,2,'2022-05-28',0.00,0.00),(2418,10767,2,'2022-05-28',0.00,0.00),(2419,9921,2,'2022-05-28',0.00,0.00),(2420,12294,2,'2022-05-28',0.00,0.00),(2421,5136,2,'2022-05-28',0.00,0.00),(2422,11147,2,'2022-05-28',0.00,0.00),(2423,11105,2,'2022-05-28',0.00,0.00),(2424,10680,2,'2022-05-28',0.00,0.00),(2425,10727,2,'2022-05-28',0.00,0.00),(2426,9637,2,'2022-05-28',0.00,0.00),(2427,5383,2,'2022-05-28',0.00,0.00),(2428,9812,2,'2022-05-28',0.00,0.00),(2429,5154,2,'2022-05-28',0.00,0.00),(2430,12147,2,'2022-05-28',0.00,0.00),(2431,9870,2,'2022-05-28',0.00,0.00),(2432,10982,2,'2022-05-28',0.00,0.00),(2433,11373,2,'2022-05-28',0.00,0.00),(2434,9983,2,'2022-05-28',0.00,0.00),(2435,9880,2,'2022-05-28',0.00,0.00),(2436,11047,2,'2022-05-28',0.00,0.00),(2437,10927,2,'2022-05-28',0.00,0.00),(2438,10873,2,'2022-05-28',0.00,0.00),(2439,12178,2,'2022-05-28',0.00,0.00),(2440,10005,2,'2022-05-28',0.00,0.00),(2441,11330,2,'2022-05-28',0.00,0.00),(2442,10691,2,'2022-05-28',0.00,0.00),(2443,11971,2,'2022-05-28',0.00,0.00),(2444,9122,2,'2022-05-28',0.00,0.00),(2445,9911,2,'2022-05-28',0.00,0.00),(2446,10050,2,'2022-05-28',0.00,0.00),(2447,10825,2,'2022-05-28',0.00,0.00),(2448,9714,2,'2022-05-28',0.00,0.00),(2449,10228,2,'2022-05-28',0.00,0.00),(2450,10006,2,'2022-05-28',0.00,0.00),(2451,10056,2,'2022-05-28',0.00,0.00),(2452,11302,2,'2022-05-28',0.00,0.00),(2453,9937,2,'2022-05-28',0.00,0.00),(2454,9713,2,'2022-05-28',0.00,0.00),(2455,9753,2,'2022-05-28',0.00,0.00),(2456,5170,2,'2022-05-28',0.00,0.00),(2457,9563,2,'2022-05-28',0.00,0.00),(2458,10318,2,'2022-05-28',0.00,0.00),(2459,12292,2,'2022-05-28',0.00,0.00),(2460,11198,2,'2022-05-28',0.00,0.00),(2461,5171,2,'2022-05-28',0.00,0.00),(2462,10865,2,'2022-05-28',0.00,0.00),(2463,9636,2,'2022-05-28',0.00,0.00),(2464,9939,2,'2022-05-28',0.00,0.00),(2465,11385,2,'2022-05-28',0.00,0.00),(2466,10611,2,'2022-05-28',0.00,0.00),(2467,9708,2,'2022-05-28',0.00,0.00),(2468,10289,2,'2022-05-28',0.00,0.00),(2469,10977,2,'2022-05-28',0.00,0.00),(2470,9141,2,'2022-05-28',0.00,0.00),(2471,9593,2,'2022-05-28',0.00,0.00),(2472,11393,2,'2022-05-28',0.00,0.00),(2473,10150,2,'2022-05-28',0.00,0.00),(2474,9115,2,'2022-05-28',0.00,0.00),(2475,10827,2,'2022-05-28',0.00,0.00),(2476,10944,2,'2022-05-28',0.00,0.00),(2477,11457,2,'2022-05-28',0.00,0.00),(2478,9411,2,'2022-05-28',0.00,0.00),(2479,10670,2,'2022-05-28',0.00,0.00),(2480,12352,2,'2022-05-28',0.00,0.00),(2481,11102,2,'2022-05-28',0.00,0.00),(2482,10707,2,'2022-05-28',0.00,0.00),(2483,9823,2,'2022-05-28',0.00,0.00),(2484,9890,2,'2022-05-28',0.00,0.00),(2485,11280,2,'2022-05-28',0.00,0.00),(2486,12293,2,'2022-05-28',0.00,0.00),(2487,9102,2,'2022-05-28',0.00,0.00),(2488,10871,2,'2022-05-28',0.00,0.00),(2489,9745,2,'2022-05-28',0.00,0.00),(2490,10333,2,'2022-05-28',0.00,0.00),(2491,10317,2,'2022-05-28',0.00,0.00),(2492,10615,2,'2022-05-28',0.00,0.00),(2493,5935,2,'2022-05-28',0.00,0.00),(2494,5633,2,'2022-05-28',0.00,0.00),(2495,6318,2,'2022-05-28',0.00,0.00),(2496,12340,2,'2022-05-28',0.00,0.00),(2497,10336,2,'2022-05-28',0.00,0.00),(2498,10448,2,'2022-05-28',0.00,0.00),(2499,6277,2,'2022-05-28',20.00,38.00),(2500,11343,2,'2022-05-28',0.00,0.00),(2501,12011,2,'2022-05-28',0.00,0.00),(2502,10653,2,'2022-05-28',0.00,0.00),(2503,11879,2,'2022-05-28',0.00,0.00),(2504,11250,2,'2022-05-28',0.00,0.00),(2505,10593,2,'2022-05-28',0.00,0.00),(2506,10254,2,'2022-05-28',0.00,0.00),(2507,10257,2,'2022-05-28',0.00,0.00),(2508,10584,2,'2022-05-28',0.00,0.00),(2509,12113,2,'2022-05-28',0.00,0.00),(2510,12094,2,'2022-05-28',0.00,0.00),(2511,10428,2,'2022-05-28',0.00,51.00),(2512,10023,2,'2022-05-28',32.00,50.00),(2513,11402,2,'2022-05-28',0.00,0.00),(2514,11833,2,'2022-05-28',0.00,0.00),(2515,12223,2,'2022-05-28',0.00,0.00),(2516,10264,2,'2022-05-28',0.00,0.00),(2517,11500,2,'2022-05-28',0.00,0.00),(2518,11501,2,'2022-05-28',0.00,0.00),(2519,10799,2,'2022-05-28',461.00,38.00),(2520,12186,2,'2022-05-28',0.00,0.00),(2521,12187,2,'2022-05-28',0.00,0.00),(2522,11836,2,'2022-05-28',0.00,0.00),(2523,10775,2,'2022-05-28',0.00,0.00),(2524,11966,2,'2022-05-28',0.00,0.00),(2525,9124,2,'2022-05-28',0.00,0.00),(2526,11211,2,'2022-05-28',0.00,0.00),(2527,11210,2,'2022-05-28',0.00,0.00),(2528,11208,2,'2022-05-28',0.00,0.00),(2529,10207,2,'2022-05-28',0.00,0.00),(2530,10587,2,'2022-05-28',0.00,0.00),(2531,11401,2,'2022-05-28',0.00,0.00),(2532,12112,2,'2022-05-28',0.00,0.00),(2533,11400,2,'2022-05-28',0.00,0.00),(2534,11604,2,'2022-05-28',0.00,0.00),(2535,10377,2,'2022-05-28',0.00,0.00),(2536,11535,2,'2022-05-28',0.00,0.00),(2537,11199,2,'2022-05-28',0.00,0.00),(2538,11835,2,'2022-05-28',0.00,0.00),(2539,9039,2,'2022-05-28',0.00,0.00),(2540,11177,2,'2022-05-28',0.00,0.00),(2541,11631,2,'2022-05-28',0.00,0.00),(2542,10089,2,'2022-05-28',0.00,0.00),(2543,10087,2,'2022-05-28',0.00,0.00),(2544,10090,2,'2022-05-28',0.00,0.00),(2545,11658,2,'2022-05-28',0.00,0.00),(2546,9683,2,'2022-05-28',0.00,0.00),(2547,5918,2,'2022-05-28',94.00,32.00),(2548,9506,2,'2022-05-28',0.00,0.00),(2549,11602,2,'2022-05-28',0.00,0.00),(2550,11529,2,'2022-05-28',0.00,0.00),(2551,10269,2,'2022-05-28',10.00,0.00),(2552,11530,2,'2022-05-28',0.00,0.00),(2553,4875,2,'2022-05-28',0.00,0.00),(2554,11914,2,'2022-05-28',0.00,0.00),(2555,5733,2,'2022-05-28',747.00,31.99),(2556,11659,2,'2022-05-28',0.00,0.00),(2557,10091,2,'2022-05-28',0.00,0.00),(2558,11100,2,'2022-05-28',0.00,0.00),(2559,10535,2,'2022-05-28',0.00,0.00),(2560,12242,2,'2022-05-28',0.00,0.00),(2561,12241,2,'2022-05-28',46.00,51.00),(2562,9871,2,'2022-05-28',0.00,0.00),(2563,11440,2,'2022-05-28',0.00,0.00),(2564,9955,2,'2022-05-28',0.00,0.00),(2565,12185,2,'2022-05-28',0.00,0.00),(2566,9806,2,'2022-05-28',0.00,0.00),(2567,9886,2,'2022-05-28',0.00,0.00),(2568,5220,2,'2022-05-28',161.00,51.00),(2569,12038,2,'2022-05-28',0.00,0.00),(2570,11499,2,'2022-05-28',0.00,0.00),(2571,6157,2,'2022-05-28',0.00,0.00),(2572,9543,2,'2022-05-28',0.00,0.00),(2573,10152,2,'2022-05-28',0.00,0.00),(2574,9390,2,'2022-05-28',243.00,22.00),(2575,11986,2,'2022-05-28',0.00,0.00),(2576,10197,2,'2022-05-28',0.00,0.00),(2577,6135,2,'2022-05-28',67.00,47.36),(2578,10198,2,'2022-05-28',0.00,0.00),(2579,11603,2,'2022-05-28',0.00,0.00),(2580,9811,2,'2022-05-28',0.00,0.00),(2581,10088,2,'2022-05-28',0.00,0.00),(2582,9750,2,'2022-05-28',0.00,0.00),(2583,9282,2,'2022-05-28',0.00,0.00),(2584,6232,2,'2022-05-28',0.00,0.00),(2585,10506,2,'2022-05-28',0.00,0.00),(2586,5914,2,'2022-05-28',0.00,0.00),(2587,9481,2,'2022-05-28',0.00,0.00),(2588,11657,2,'2022-05-28',0.00,0.00),(2589,10306,2,'2022-05-28',0.00,0.00),(2590,10378,2,'2022-05-28',0.00,0.00),(2591,5583,2,'2022-05-28',16.00,42.00),(2592,12226,2,'2022-05-28',0.00,0.00),(2593,11549,2,'2022-05-28',0.00,0.00),(2594,11548,2,'2022-05-28',0.00,0.00),(2595,11670,2,'2022-05-28',0.00,0.00),(2596,4724,2,'2022-05-28',0.00,0.00),(2597,11954,2,'2022-05-28',0.00,0.00),(2598,10516,2,'2022-05-28',0.00,0.00),(2599,11827,2,'2022-05-28',0.00,0.00),(2600,11553,2,'2022-05-28',0.00,0.00),(2601,11554,2,'2022-05-28',0.00,0.00),(2602,10038,2,'2022-05-28',0.00,0.00),(2603,11021,2,'2022-05-28',0.00,0.00),(2604,11020,2,'2022-05-28',0.00,0.00),(2605,9661,2,'2022-05-28',55.00,18.30),(2606,10883,2,'2022-05-28',2.00,84.00),(2607,10024,2,'2022-05-28',2.00,84.00),(2608,10280,2,'2022-05-28',1.00,84.00),(2609,6197,2,'2022-05-28',0.00,0.00),(2610,10538,2,'2022-05-28',0.00,0.00),(2611,10488,2,'2022-05-28',2.00,78.00),(2612,10374,2,'2022-05-28',0.00,0.00),(2613,10501,2,'2022-05-28',0.00,0.00),(2614,6196,2,'2022-05-28',0.00,0.00),(2615,11152,2,'2022-05-28',0.00,0.00),(2616,12175,2,'2022-05-28',0.00,0.00),(2617,11071,2,'2022-05-28',0.00,0.00),(2618,11251,2,'2022-05-28',0.00,0.00),(2619,10052,2,'2022-05-28',0.00,0.00),(2620,11788,2,'2022-05-28',0.00,0.00),(2621,10389,2,'2022-05-28',0.00,0.00),(2622,11789,2,'2022-05-28',0.00,0.00),(2623,10388,2,'2022-05-28',0.00,0.00),(2624,11787,2,'2022-05-28',0.00,0.00),(2625,10053,2,'2022-05-28',0.00,0.00),(2626,9404,2,'2022-05-28',0.00,0.00),(2627,10507,2,'2022-05-28',0.00,0.00),(2628,10495,2,'2022-05-28',3.00,15.92),(2629,10296,2,'2022-05-28',0.00,0.00),(2630,5951,2,'2022-05-28',0.00,0.00),(2631,9101,2,'2022-05-28',0.00,0.00),(2632,11881,2,'2022-05-28',0.00,0.00),(2633,11166,2,'2022-05-28',0.00,0.00),(2634,11396,2,'2022-05-28',0.00,0.00),(2635,10290,2,'2022-05-28',0.00,0.00),(2636,9007,2,'2022-05-28',47.00,10.25),(2637,11089,2,'2022-05-28',0.00,0.00),(2638,11014,2,'2022-05-28',0.00,0.00),(2639,10191,2,'2022-05-28',0.00,0.00),(2640,11883,2,'2022-05-28',0.00,0.00),(2641,10761,2,'2022-05-28',0.00,0.00),(2642,9315,2,'2022-05-28',0.00,0.00),(2643,11115,2,'2022-05-28',0.00,0.00),(2644,11248,2,'2022-05-28',0.00,0.00),(2645,11117,2,'2022-05-28',0.00,0.00),(2646,11114,2,'2022-05-28',0.00,0.00),(2647,11101,2,'2022-05-28',0.00,0.00),(2648,11112,2,'2022-05-28',0.00,0.00),(2649,12314,2,'2022-05-28',0.00,0.00),(2650,12353,2,'2022-05-28',0.00,0.00),(2651,11116,2,'2022-05-28',0.00,0.00),(2652,12313,2,'2022-05-28',0.00,0.00),(2653,11247,2,'2022-05-28',0.00,0.00),(2654,12315,2,'2022-05-28',0.00,0.00),(2655,12366,2,'2022-05-28',0.00,0.00),(2656,11765,2,'2022-05-28',0.00,0.00),(2657,11564,2,'2022-05-28',0.00,0.00),(2658,11563,2,'2022-05-28',0.00,0.00),(2659,11497,2,'2022-05-28',0.00,0.00),(2660,9990,2,'2022-05-28',3.00,133.00),(2661,11496,2,'2022-05-28',0.00,0.00),(2662,9492,2,'2022-05-28',0.00,0.00),(2663,6094,2,'2022-05-28',0.00,0.00),(2664,11296,2,'2022-05-28',0.00,0.00),(2665,10136,2,'2022-05-28',0.00,0.00),(2666,9184,2,'2022-05-28',0.00,0.00),(2667,9052,2,'2022-05-28',0.00,0.00),(2668,9845,2,'2022-05-28',0.00,0.00),(2669,9328,2,'2022-05-28',0.00,0.00),(2671,12151,2,'2022-05-28',0.00,0.00),(2672,9477,2,'2022-05-28',0.00,0.00),(2673,5344,2,'2022-05-28',3.33,105.00),(2674,6218,2,'2022-05-28',0.00,0.00),(2675,10657,2,'2022-05-28',0.00,0.00),(2676,12204,2,'2022-05-28',0.00,0.00),(2677,10328,2,'2022-05-28',0.00,0.00),(2678,11438,2,'2022-05-28',0.00,0.00),(2679,6217,2,'2022-05-28',0.00,0.00),(2680,9356,2,'2022-05-28',9.00,267.00),(2681,9259,2,'2022-05-28',0.00,0.00),(2682,6021,2,'2022-05-28',0.00,0.00),(2683,12042,2,'2022-05-28',0.00,0.00),(2684,12043,2,'2022-05-28',45.00,3.00),(2685,12164,2,'2022-05-28',0.00,0.00),(2686,11307,2,'2022-05-28',0.00,0.00),(2687,9541,2,'2022-05-28',0.00,0.00),(2688,10422,2,'2022-05-28',0.00,0.00),(2689,9491,2,'2022-05-28',0.00,0.00),(2690,11618,2,'2022-05-28',0.00,0.00),(2691,11872,2,'2022-05-28',0.00,0.00),(2692,12216,2,'2022-05-28',30.35,170.00),(2693,10283,2,'2022-05-28',0.00,0.00),(2694,5015,2,'2022-05-28',0.00,0.00),(2695,10244,2,'2022-05-28',0.00,0.00),(2696,11367,2,'2022-05-28',0.00,0.00),(2697,12299,2,'2022-05-28',0.00,0.00),(2698,12215,2,'2022-05-28',0.00,0.00),(2699,10142,2,'2022-05-28',0.00,0.00),(2700,6073,2,'2022-05-28',21.00,5.78),(2701,12156,2,'2022-05-28',0.00,0.00),(2702,11868,2,'2022-05-28',0.00,0.00),(2703,10778,2,'2022-05-28',0.00,0.00),(2704,9631,2,'2022-05-28',31.00,9.00),(2705,11947,2,'2022-05-28',0.00,0.00),(2706,12360,2,'2022-05-28',0.00,0.00),(2707,9678,2,'2022-05-28',0.00,0.00),(2708,9401,2,'2022-05-28',0.00,0.00),(2709,12230,2,'2022-05-28',0.00,0.00),(2710,9046,2,'2022-05-28',0.00,0.00),(2711,9399,2,'2022-05-28',0.00,0.00),(2712,10542,2,'2022-05-28',5.00,10.70),(2713,10601,2,'2022-05-28',0.00,0.00),(2714,9178,2,'2022-05-28',0.00,0.00),(2715,11533,2,'2022-05-28',0.00,0.00),(2716,6139,2,'2022-05-28',0.00,0.00),(2717,9558,2,'2022-05-28',0.00,0.00),(2718,9928,2,'2022-05-28',0.00,0.00),(2719,6221,2,'2022-05-28',15.00,10.26),(2720,9920,2,'2022-05-28',0.00,0.00),(2721,12132,2,'2022-05-28',0.00,0.00),(2722,10081,2,'2022-05-28',0.00,0.00),(2723,12069,2,'2022-05-28',0.00,0.00),(2724,11557,2,'2022-05-28',0.00,0.00),(2725,9602,2,'2022-05-28',2.00,56.00),(2726,6222,2,'2022-05-28',0.00,0.00),(2727,9377,2,'2022-05-28',2.50,96.00),(2728,11111,2,'2022-05-28',0.00,0.00),(2729,6223,2,'2022-05-28',8.00,10.25),(2730,9442,2,'2022-05-28',3.00,137.00),(2731,10310,2,'2022-05-28',0.00,0.00),(2732,10173,2,'2022-05-28',7.00,137.00),(2733,6206,2,'2022-05-28',0.00,0.00),(2734,12163,2,'2022-05-28',0.00,0.00),(2735,6224,2,'2022-05-28',182.00,7.50),(2736,9816,2,'2022-05-28',0.00,0.00),(2737,6351,2,'2022-05-28',40.00,15.50),(2738,9494,2,'2022-05-28',0.00,0.00),(2739,11940,2,'2022-05-28',0.00,0.00),(2740,9177,2,'2022-05-28',0.00,0.00),(2741,10301,2,'2022-05-28',0.00,0.00),(2742,6233,2,'2022-05-28',0.00,0.00),(2743,4761,2,'2022-05-28',0.00,0.00),(2744,6234,2,'2022-05-28',0.00,0.00),(2745,4764,2,'2022-05-28',0.00,0.00),(2746,6235,2,'2022-05-28',0.00,0.00),(2747,6236,2,'2022-05-28',0.00,0.00),(2748,5016,2,'2022-05-28',0.00,0.00),(2749,9469,2,'2022-05-28',0.00,0.00),(2750,9526,2,'2022-05-28',0.00,0.00),(2751,9527,2,'2022-05-28',0.00,0.00),(2752,10650,2,'2022-05-28',0.00,0.00),(2753,12355,2,'2022-05-28',0.00,0.00),(2754,9741,2,'2022-05-28',0.00,0.00),(2755,9149,2,'2022-05-28',0.00,0.00),(2756,10240,2,'2022-05-28',0.00,0.00),(2757,9468,2,'2022-05-28',0.00,0.00),(2758,9665,2,'2022-05-28',0.00,0.00),(2759,9686,2,'2022-05-28',0.00,0.00),(2760,9793,2,'2022-05-28',0.00,0.00),(2761,12331,2,'2022-05-28',0.00,0.00),(2762,12332,2,'2022-05-28',0.00,0.00),(2763,10489,2,'2022-05-28',0.00,0.00),(2764,10493,2,'2022-05-28',70.00,86.40),(2765,10427,2,'2022-05-28',17.00,79.20),(2766,6239,2,'2022-05-28',0.00,0.00),(2767,6240,2,'2022-05-28',2.00,80.40),(2768,6241,2,'2022-05-28',0.00,0.00),(2769,12148,2,'2022-05-28',0.00,0.00),(2770,12060,2,'2022-05-28',0.00,0.00),(2771,11929,2,'2022-05-28',0.00,0.00),(2772,11916,2,'2022-05-28',0.00,0.00),(2773,6137,2,'2022-05-28',0.00,0.00),(2774,10722,2,'2022-05-28',0.00,0.00),(2775,9010,2,'2022-05-28',0.00,0.00),(2776,9967,2,'2022-05-28',0.00,0.00),(2777,10270,2,'2022-05-28',0.00,0.00),(2778,9398,2,'2022-05-28',2.00,54.50),(2779,9529,2,'2022-05-28',54.00,108.00),(2780,10499,2,'2022-05-28',0.00,0.00),(2781,10011,2,'2022-05-28',0.00,0.00),(2782,10880,2,'2022-05-28',0.00,0.00),(2783,5028,2,'2022-05-28',0.00,0.00),(2784,10497,2,'2022-05-28',0.00,0.00),(2785,9164,2,'2022-05-28',0.00,0.00),(2786,9304,2,'2022-05-28',0.00,0.00),(2787,9364,2,'2022-05-28',0.00,0.00),(2788,9490,2,'2022-05-28',8.00,168.00),(2789,10369,2,'2022-05-28',0.00,0.00),(2790,12158,2,'2022-05-28',0.00,0.00),(2791,11747,2,'2022-05-28',0.00,0.00),(2792,11944,2,'2022-05-28',0.00,0.00),(2793,9283,2,'2022-05-28',0.00,0.00),(2794,9331,2,'2022-05-28',0.00,0.00),(2795,10649,2,'2022-05-28',0.00,0.00),(2796,10068,2,'2022-05-28',3.00,132.00),(2797,12191,2,'2022-05-28',0.00,0.00),(2798,9466,2,'2022-05-28',6.00,210.00),(2799,10523,2,'2022-05-28',0.00,0.00),(2800,11201,2,'2022-05-28',0.00,0.00),(2801,9530,2,'2022-05-28',70.00,166.00),(2802,12217,2,'2022-05-28',0.00,0.00),(2803,9571,2,'2022-05-28',40.00,92.40),(2804,11202,2,'2022-05-28',0.00,0.00),(2805,4763,2,'2022-05-28',0.00,0.00),(2806,9531,2,'2022-05-28',0.00,0.00),(2807,9532,2,'2022-05-28',0.00,0.00),(2808,6245,2,'2022-05-28',0.00,148.00),(2809,9363,2,'2022-05-28',0.00,0.00),(2810,6237,2,'2022-05-28',0.00,0.00),(2811,5876,2,'2022-05-28',0.00,0.00),(2812,6269,2,'2022-05-28',0.00,0.00),(2813,9898,2,'2022-05-28',2.00,154.50),(2814,11437,2,'2022-05-28',0.00,0.00),(2815,9294,2,'2022-05-28',0.00,0.00),(2816,6238,2,'2022-05-28',0.00,0.00),(2817,9167,2,'2022-05-28',0.00,0.00),(2818,12211,2,'2022-05-28',0.00,0.00),(2819,12337,2,'2022-05-28',0.00,0.00),(2820,11943,2,'2022-05-28',0.00,0.00),(2821,11148,2,'2022-05-28',0.00,0.00),(2822,9715,2,'2022-05-28',0.00,0.00),(2823,9792,2,'2022-05-28',0.00,0.00),(2824,9643,2,'2022-05-28',0.00,0.00),(2825,12262,2,'2022-05-28',0.00,0.00),(2826,9027,2,'2022-05-28',0.00,0.00),(2827,9248,2,'2022-05-28',0.00,0.00),(2828,10735,2,'2022-05-28',0.00,0.00),(2829,9484,2,'2022-05-28',0.00,0.00),(2830,10312,2,'2022-05-28',0.00,0.00),(2831,9068,2,'2022-05-28',0.00,0.00),(2832,5884,2,'2022-05-28',46.00,6.00),(2833,5885,2,'2022-05-28',26.00,6.00),(2834,5886,2,'2022-05-28',50.00,5.00),(2835,9359,2,'2022-05-28',0.00,0.00),(2836,5887,2,'2022-05-28',30.00,5.20),(2837,10205,2,'2022-05-28',0.00,0.00),(2838,10955,2,'2022-05-28',0.00,0.00),(2839,10084,2,'2022-05-28',0.00,0.00),(2840,11681,2,'2022-05-28',0.00,0.00),(2841,11682,2,'2022-05-28',0.00,0.00),(2842,10083,2,'2022-05-28',0.00,0.00),(2843,9717,2,'2022-05-28',0.00,0.00),(2844,10284,2,'2022-05-28',0.00,0.00),(2845,10285,2,'2022-05-28',0.00,0.00),(2846,10101,2,'2022-05-28',0.00,0.00),(2847,10121,2,'2022-05-28',0.00,0.00),(2848,10182,2,'2022-05-28',0.00,0.00),(2849,10195,2,'2022-05-28',0.00,0.00),(2850,10194,2,'2022-05-28',0.00,0.00),(2851,10106,2,'2022-05-28',0.00,0.00),(2852,12284,2,'2022-05-28',0.00,0.00),(2853,10603,2,'2022-05-28',0.00,0.00),(2854,12285,2,'2022-05-28',0.00,0.00),(2855,10321,2,'2022-05-28',2.83,91.50),(2856,9966,2,'2022-05-28',0.00,0.00),(2857,12286,2,'2022-05-28',0.00,0.00),(2858,9826,2,'2022-05-28',0.00,0.00),(2859,12348,2,'2022-05-28',0.00,0.00),(2860,10322,2,'2022-05-28',4.00,91.50),(2861,10856,2,'2022-05-28',0.00,0.00),(2862,12297,2,'2022-05-28',1.00,193.00),(2863,11983,2,'2022-05-28',0.00,0.00),(2864,11757,2,'2022-05-28',0.00,0.00),(2865,9796,2,'2022-05-28',4.83,83.95),(2866,12279,2,'2022-05-28',0.00,0.00),(2867,12304,2,'2022-05-28',0.00,0.00),(2868,12172,2,'2022-05-28',0.00,0.00),(2869,11889,2,'2022-05-28',0.00,0.00),(2870,11888,2,'2022-05-28',0.00,0.00),(2871,11813,2,'2022-05-28',0.00,0.00),(2872,12280,2,'2022-05-28',0.00,0.00),(2873,12350,2,'2022-05-28',0.00,0.00),(2874,10366,2,'2022-05-28',3.00,91.50),(2875,10395,2,'2022-05-28',0.00,0.00),(2876,11528,2,'2022-05-28',0.00,0.00),(2877,12283,2,'2022-05-28',0.00,0.00),(2878,11744,2,'2022-05-28',0.00,0.00),(2879,10126,2,'2022-05-28',0.00,0.00),(2880,10504,2,'2022-05-28',0.00,0.00),(2881,9396,2,'2022-05-28',0.00,0.00),(2882,9336,2,'2022-05-28',1.00,46.00),(2883,9888,2,'2022-05-28',18.00,34.00),(2884,11081,2,'2022-05-28',0.00,0.00),(2885,9471,2,'2022-05-28',0.00,0.00),(2886,9472,2,'2022-05-28',0.00,0.00),(2887,11341,2,'2022-05-28',0.00,0.00),(2888,11961,2,'2022-05-28',0.00,0.00),(2889,11342,2,'2022-05-28',0.00,0.00),(2890,12092,2,'2022-05-28',0.00,0.00),(2891,5959,2,'2022-05-28',0.00,0.00),(2892,11663,2,'2022-05-28',0.00,0.00),(2893,10831,2,'2022-05-28',0.00,0.00),(2894,10674,2,'2022-05-28',0.00,0.00),(2895,9655,2,'2022-05-28',0.00,0.00),(2896,10359,2,'2022-05-28',5.00,7.20),(2897,10393,2,'2022-05-28',0.00,0.00),(2898,9897,2,'2022-05-28',0.00,0.00),(2899,10866,2,'2022-05-28',0.00,0.00),(2900,6053,2,'2022-05-28',0.00,0.00),(2901,9651,2,'2022-05-28',0.00,0.00),(2902,4988,2,'2022-05-28',0.00,0.00),(2903,9695,2,'2022-05-28',0.00,0.00),(2904,6070,2,'2022-05-28',0.00,0.00),(2905,6064,2,'2022-05-28',12.00,22.10),(2906,9885,2,'2022-05-28',0.00,0.00),(2907,11976,2,'2022-05-28',0.00,0.00),(2908,6060,2,'2022-05-28',10.00,24.50),(2909,10947,2,'2022-05-28',0.00,0.00),(2910,10957,2,'2022-05-28',0.00,0.00),(2911,12086,2,'2022-05-28',0.00,0.00),(2912,12099,2,'2022-05-28',0.00,0.00),(2913,11261,2,'2022-05-28',0.00,0.00),(2914,10732,2,'2022-05-28',111.68,10.85),(2915,4847,2,'2022-05-28',120.00,10.85),(2916,6061,2,'2022-05-28',105.00,43.06),(2917,9146,2,'2022-05-28',0.00,0.00),(2918,10950,2,'2022-05-28',0.00,0.00),(2919,11627,2,'2022-05-28',0.00,0.00),(2920,9244,2,'2022-05-28',0.00,0.00),(2921,6102,2,'2022-05-28',12.00,36.50),(2922,10576,2,'2022-05-28',17.00,40.00),(2923,6153,2,'2022-05-28',20.33,69.50),(2924,11263,2,'2022-05-28',0.00,0.00),(2925,10319,2,'2022-05-28',0.00,0.00),(2926,9128,2,'2022-05-28',16.00,69.50),(2927,12082,2,'2022-05-28',2.00,39.50),(2928,11664,2,'2022-05-28',0.00,0.00),(2929,5426,2,'2022-05-28',210.00,5.81),(2930,6071,2,'2022-05-28',0.00,0.00),(2931,11679,2,'2022-05-28',58.00,10.00),(2932,11987,2,'2022-05-28',0.00,0.00),(2933,6063,2,'2022-05-28',39.00,10.70),(2934,10051,2,'2022-05-28',0.00,0.00),(2935,6118,2,'2022-05-28',0.00,0.00),(2936,9581,2,'2022-05-28',14.00,27.00),(2937,11380,2,'2022-05-28',0.00,0.00),(2938,11439,2,'2022-05-28',0.00,0.00),(2939,11113,2,'2022-05-28',0.00,0.00),(2940,10293,2,'2022-05-28',0.00,0.00),(2941,10251,2,'2022-05-28',12.00,69.50),(2942,10895,2,'2022-05-28',0.00,0.00),(2943,11666,2,'2022-05-28',0.00,0.00),(2944,10819,2,'2022-05-28',0.00,0.00),(2945,9277,2,'2022-05-28',0.00,0.00),(2946,6303,2,'2022-05-28',16.00,32.50),(2947,12013,2,'2022-05-28',25.00,37.50),(2948,6305,2,'2022-05-28',18.00,35.00),(2949,12234,2,'2022-05-28',11.00,35.00),(2950,6308,2,'2022-05-28',14.00,30.00),(2951,9109,2,'2022-05-28',18.00,30.00),(2952,9240,2,'2022-05-28',0.00,0.00),(2953,9579,2,'2022-05-28',4.50,27.50),(2954,6058,2,'2022-05-28',10.50,19.50),(2955,6013,2,'2022-05-28',0.00,0.00),(2956,6014,2,'2022-05-28',25.00,33.00),(2957,6065,2,'2022-05-28',0.00,0.00),(2958,6066,2,'2022-05-28',450.00,30.31),(2959,12194,2,'2022-05-28',6.00,28.97),(2960,10482,2,'2022-05-28',0.00,0.00),(2961,10353,2,'2022-05-28',0.00,0.00),(2962,11619,2,'2022-05-28',0.00,0.00),(2963,9605,2,'2022-05-28',0.00,0.00),(2964,9604,2,'2022-05-28',0.00,0.00),(2965,9603,2,'2022-05-28',0.00,0.00),(2966,9606,2,'2022-05-28',8.40,66.90),(2967,12342,2,'2022-05-28',0.00,0.00),(2968,9607,2,'2022-05-28',0.00,0.00),(2969,5971,2,'2022-05-28',23.00,32.00),(2970,10303,2,'2022-05-28',0.00,34.50),(2971,4843,2,'2022-05-28',0.00,0.00),(2972,11848,2,'2022-05-28',0.00,0.00),(2973,10891,2,'2022-05-28',0.00,0.00),(2974,5943,2,'2022-05-28',126.00,12.00),(2975,9986,2,'2022-05-28',0.00,0.00),(2976,11526,2,'2022-05-28',0.00,0.00),(2977,5938,2,'2022-05-28',44.00,3.40),(2978,12101,2,'2022-05-28',0.00,0.00),(2979,5939,2,'2022-05-28',86.00,1.80),(2980,10933,2,'2022-05-28',0.00,0.00),(2981,10801,2,'2022-05-28',0.00,0.00),(2982,11026,2,'2022-05-28',0.00,0.00),(2983,12123,2,'2022-05-28',0.00,0.00),(2984,11368,2,'2022-05-28',0.00,0.00),(2985,9740,2,'2022-05-28',128.00,7.00),(2986,11369,2,'2022-05-28',0.00,0.00),(2987,9590,2,'2022-05-28',224.00,3.00),(2988,10723,2,'2022-05-28',0.00,0.00),(2989,5534,2,'2022-05-28',299.00,1.60),(2990,12168,2,'2022-05-28',0.00,0.00),(2991,5963,2,'2022-05-28',50.00,3.60),(2992,6012,2,'2022-05-28',3.47,2.50),(2993,9536,2,'2022-05-28',0.00,0.00),(2994,9220,2,'2022-05-28',205.00,4.80),(2995,9383,2,'2022-05-28',17.00,2.40),(2996,11023,2,'2022-05-28',0.00,0.00),(2997,11022,2,'2022-05-28',0.00,0.00),(2998,9689,2,'2022-05-28',58.00,1.90),(2999,5965,2,'2022-05-28',270.00,2.60),(3000,10709,2,'2022-05-28',0.00,0.00),(3001,6282,2,'2022-05-28',60.00,6.60),(3002,10725,2,'2022-05-28',0.00,0.00),(3003,11346,2,'2022-05-28',0.00,0.00),(3004,6261,2,'2022-05-28',187.00,9.00),(3005,6262,2,'2022-05-28',119.00,1.90),(3006,10098,2,'2022-05-28',0.00,0.00),(3007,11953,2,'2022-05-28',0.00,0.00),(3008,9257,2,'2022-05-28',27.00,14.00),(3009,11205,2,'2022-05-28',0.00,0.00),(3010,11660,2,'2022-05-28',0.00,0.00),(3011,9760,2,'2022-05-28',0.00,0.00),(3012,11406,2,'2022-05-28',0.00,0.00),(3013,9679,2,'2022-05-28',0.00,0.00),(3014,10903,2,'2022-05-28',0.00,0.00),(3015,10344,2,'2022-05-28',0.00,0.00),(3016,10541,2,'2022-05-28',0.00,0.00),(3017,9759,2,'2022-05-28',0.00,0.00),(3018,10922,2,'2022-05-28',0.00,0.00),(3019,12300,2,'2022-05-28',0.00,0.00),(3020,6259,2,'2022-05-28',134.42,24.50),(3021,10740,2,'2022-05-28',0.00,0.00),(3022,12102,2,'2022-05-28',0.00,0.00),(3023,11336,2,'2022-05-28',0.00,0.00),(3024,10907,2,'2022-05-28',0.00,0.00),(3025,9618,2,'2022-05-28',0.00,0.00),(3026,9475,2,'2022-05-28',0.00,0.00),(3027,11592,2,'2022-05-28',10.00,22.00),(3028,6165,2,'2022-05-28',101.00,7.50),(3029,11988,2,'2022-05-28',0.00,0.00),(3030,11561,2,'2022-05-28',0.00,0.00),(3031,9462,2,'2022-05-28',14.00,24.30),(3032,12218,2,'2022-05-28',0.00,0.00),(3033,11890,2,'2022-05-28',0.00,0.00),(3034,9778,2,'2022-05-28',0.00,0.00),(3035,11891,2,'2022-05-28',0.00,0.00),(3036,11722,2,'2022-05-28',0.00,0.00),(3037,10693,2,'2022-05-28',0.00,0.00),(3038,6164,2,'2022-05-28',466.00,7.50),(3039,10218,2,'2022-05-28',6.00,20.48),(3040,10592,2,'2022-05-28',0.00,0.00),(3041,10939,2,'2022-05-28',0.00,0.00),(3042,10784,2,'2022-05-28',10.00,20.48),(3043,9837,2,'2022-05-28',0.00,0.00),(3044,11322,2,'2022-05-28',0.00,0.00),(3045,10299,2,'2022-05-28',0.00,0.00),(3046,9755,2,'2022-05-28',0.00,0.00),(3047,6121,2,'2022-05-28',0.00,0.00),(3048,11325,2,'2022-05-28',0.00,0.00),(3049,11962,2,'2022-05-28',39.00,35.00),(3050,9705,2,'2022-05-28',0.00,0.00),(3051,5942,2,'2022-05-28',27.00,49.50),(3052,9045,2,'2022-05-28',0.00,0.00),(3053,11742,2,'2022-05-28',0.00,0.00),(3054,11741,2,'2022-05-28',0.00,0.00),(3055,10832,2,'2022-05-28',0.00,0.00),(3056,11850,2,'2022-05-28',0.00,0.00),(3057,10813,2,'2022-05-28',0.00,0.00),(3058,12354,2,'2022-05-28',0.00,0.00),(3059,10647,2,'2022-05-28',0.00,0.00),(3060,12182,2,'2022-05-28',0.00,0.00),(3061,11751,2,'2022-05-28',0.00,0.00),(3062,11195,2,'2022-05-28',0.00,0.00),(3063,9370,2,'2022-05-28',0.00,0.00),(3064,12005,2,'2022-05-28',0.00,0.00),(3065,11366,2,'2022-05-28',0.00,0.00),(3066,12305,2,'2022-05-28',0.00,0.00),(3067,9242,2,'2022-05-28',0.00,0.00),(3068,11196,2,'2022-05-28',0.00,0.00),(3069,10990,2,'2022-05-28',0.00,0.00),(3070,10900,2,'2022-05-28',0.00,0.00),(3071,9414,2,'2022-05-28',0.00,0.00),(3072,10368,2,'2022-05-28',0.00,0.00),(3073,4760,2,'2022-05-28',33.00,315.00),(3074,10771,2,'2022-05-28',0.00,0.00),(3075,10926,2,'2022-05-28',0.00,0.00),(3076,11130,2,'2022-05-28',0.00,0.00),(3077,5888,2,'2022-05-28',0.00,0.00),(3078,5889,2,'2022-05-28',0.00,0.00),(3079,9412,2,'2022-05-28',0.00,0.00),(3080,5890,2,'2022-05-28',0.00,0.00),(3081,5891,2,'2022-05-28',0.00,0.00),(3082,5892,2,'2022-05-28',0.00,0.00),(3083,9413,2,'2022-05-28',0.00,0.00),(3084,5893,2,'2022-05-28',0.00,0.00),(3085,9858,2,'2022-05-28',0.00,0.00),(3086,11235,2,'2022-05-28',0.00,0.00),(3087,11236,2,'2022-05-28',0.00,0.00),(3088,5110,2,'2022-05-28',1.50,36.00),(3089,5190,2,'2022-05-28',0.00,0.00),(3090,11572,2,'2022-05-28',0.00,0.00),(3091,11573,2,'2022-05-28',0.00,0.00),(3092,9470,2,'2022-05-28',0.00,0.00),(3093,11571,2,'2022-05-28',0.00,0.00),(3094,11038,2,'2022-05-28',0.00,0.00),(3095,10398,2,'2022-05-28',0.00,0.00),(3096,9775,2,'2022-05-28',0.00,0.00),(3097,11575,2,'2022-05-28',0.00,0.00),(3098,9467,2,'2022-05-28',0.00,0.00),(3099,9644,2,'2022-05-28',0.00,0.00),(3100,11424,2,'2022-05-28',0.00,0.00),(3101,11362,2,'2022-05-28',0.00,0.00),(3102,10836,2,'2022-05-28',0.00,0.00),(3103,5804,2,'2022-05-28',2.00,11.79),(3104,5728,2,'2022-05-28',3.00,11.49),(3105,11013,2,'2022-05-28',0.00,0.00),(3106,10117,2,'2022-05-28',8.56,56.00),(3107,6146,2,'2022-05-28',0.00,0.00),(3108,6207,2,'2022-05-28',78.00,80.00),(3109,5773,2,'2022-05-28',355.00,31.99),(3110,9610,2,'2022-05-28',0.00,0.00),(3111,10443,2,'2022-05-28',0.00,0.00),(3112,11816,2,'2022-05-28',0.00,0.00),(3113,6267,2,'2022-05-28',0.00,0.00),(3114,11830,2,'2022-05-28',0.00,0.00),(3115,9482,2,'2022-05-28',0.00,0.00),(3116,10277,2,'2022-05-28',0.00,0.00),(3117,11993,2,'2022-05-28',0.00,0.00),(3118,6268,2,'2022-05-28',0.00,0.00),(3119,10112,2,'2022-05-28',0.00,0.00),(3120,11128,2,'2022-05-28',0.00,0.00),(3121,11043,2,'2022-05-28',140.00,1.93),(3122,11138,2,'2022-05-28',279.00,2.02),(3123,9446,2,'2022-05-28',0.00,0.00),(3124,9464,2,'2022-05-28',0.00,0.00),(3125,9463,2,'2022-05-28',0.00,0.00),(3126,11870,2,'2022-05-28',0.00,0.00),(3127,12311,2,'2022-05-28',0.00,0.00),(3128,10222,2,'2022-05-28',4.00,0.00),(3129,5319,2,'2022-05-28',41.00,18.40),(3130,11091,2,'2022-05-28',0.00,0.00),(3131,9451,2,'2022-05-28',0.00,0.00),(3132,10867,2,'2022-05-28',0.00,0.00),(3133,10988,2,'2022-05-28',10.75,40.00),(3134,9032,2,'2022-05-28',0.00,0.00),(3135,11639,2,'2022-05-28',0.00,0.00),(3136,11695,2,'2022-05-28',0.00,0.00),(3137,11694,2,'2022-05-28',0.00,0.00),(3138,11696,2,'2022-05-28',0.00,0.00),(3139,5948,2,'2022-05-28',38.00,37.50),(3140,11794,2,'2022-05-28',0.00,0.00),(3141,11017,2,'2022-05-28',0.00,0.00),(3142,11355,2,'2022-05-28',0.00,0.00),(3143,6287,2,'2022-05-28',11.79,49.00),(3144,6288,2,'2022-05-28',6.20,105.00),(3145,10529,2,'2022-05-28',0.00,0.00),(3146,11952,2,'2022-05-28',0.00,0.00),(3147,9148,2,'2022-05-28',4.10,44.00),(3148,10300,2,'2022-05-28',0.00,0.00),(3149,11581,2,'2022-05-28',0.00,0.00),(3150,11031,2,'2022-05-28',0.00,0.00),(3151,9200,2,'2022-05-28',0.00,0.00),(3152,10700,2,'2022-05-28',0.00,0.00),(3153,11740,2,'2022-05-28',0.00,0.00),(3154,9836,2,'2022-05-28',0.00,0.00),(3155,11270,2,'2022-05-28',0.00,0.00),(3156,5917,2,'2022-05-28',0.00,0.00),(3157,12014,2,'2022-05-28',0.00,0.00),(3158,11578,2,'2022-05-28',0.00,0.00),(3159,10882,2,'2022-05-28',0.00,0.00),(3160,9580,2,'2022-05-28',0.00,0.00),(3161,9712,2,'2022-05-28',5.00,9.00),(3162,11478,2,'2022-05-28',0.00,0.00),(3163,9545,2,'2022-05-28',0.00,0.00),(3164,12276,2,'2022-05-28',2.00,56.00),(3165,9926,2,'2022-05-28',0.00,0.00),(3166,11734,2,'2022-05-28',0.00,0.00),(3167,9927,2,'2022-05-28',0.00,0.00),(3168,9219,2,'2022-05-28',0.00,0.00),(3169,9835,2,'2022-05-28',0.00,0.00),(3170,6022,2,'2022-05-28',0.00,0.00),(3171,6025,2,'2022-05-28',1.00,10.35),(3172,9878,2,'2022-05-28',0.00,0.00),(3173,11824,2,'2022-05-28',0.00,0.00),(3174,12319,2,'2022-05-28',205.00,6.95),(3175,12320,2,'2022-05-28',0.00,0.00),(3176,12221,2,'2022-05-28',0.00,0.00),(3177,12072,2,'2022-05-28',0.00,0.00),(3178,9144,2,'2022-05-28',7.00,9.00),(3179,9783,2,'2022-05-28',0.00,0.00),(3180,12324,2,'2022-05-28',0.00,0.00),(3181,5267,2,'2022-05-28',0.00,0.00),(3182,6090,2,'2022-05-28',1.00,25.96),(3183,6049,2,'2022-05-28',0.00,0.00),(3184,9300,2,'2022-05-28',4.76,45.00),(3185,10854,2,'2022-05-28',0.00,0.00),(3186,11049,2,'2022-05-28',0.00,0.00),(3187,12207,2,'2022-05-28',0.00,0.00),(3188,12325,2,'2022-05-28',0.00,0.00),(3189,10035,2,'2022-05-28',0.00,0.00),(3190,10406,2,'2022-05-28',0.00,0.00),(3191,11269,2,'2022-05-28',0.00,0.00),(3192,6048,2,'2022-05-28',5.00,55.00),(3193,12076,2,'2022-05-28',0.00,0.00),(3194,12074,2,'2022-05-28',0.00,0.00),(3195,10961,2,'2022-05-28',0.00,0.00),(3196,12323,2,'2022-05-28',0.00,0.00),(3197,9907,2,'2022-05-28',0.00,0.00),(3198,9833,2,'2022-05-28',0.00,0.00),(3199,9834,2,'2022-05-28',0.00,0.00),(3200,6143,2,'2022-05-28',0.00,0.00),(3201,9028,2,'2022-05-28',5.80,45.00),(3202,12073,2,'2022-05-28',0.00,0.00),(3203,10034,2,'2022-05-28',0.00,0.00),(3204,6144,2,'2022-05-28',4.50,55.00),(3205,12321,2,'2022-05-28',0.00,0.00),(3206,10405,2,'2022-05-28',0.00,0.00),(3207,11268,2,'2022-05-28',0.00,0.00),(3208,12222,2,'2022-05-28',0.00,0.00),(3209,10404,2,'2022-05-28',0.00,0.00),(3210,12326,2,'2022-05-28',0.00,0.00),(3211,12322,2,'2022-05-28',0.00,0.00),(3212,12075,2,'2022-05-28',0.00,0.00),(3213,9016,2,'2022-05-28',6.00,135.00),(3214,10951,2,'2022-05-28',0.00,0.00),(3215,12220,2,'2022-05-28',0.00,0.00),(3216,10403,2,'2022-05-28',0.00,0.00),(3217,11267,2,'2022-05-28',0.00,0.00),(3218,9751,2,'2022-05-28',0.00,0.00),(3219,11700,2,'2022-05-28',0.00,0.00),(3220,6068,2,'2022-05-28',3.00,53.26),(3221,11446,2,'2022-05-28',0.00,0.00),(3222,11443,2,'2022-05-28',0.00,0.00),(3223,11445,2,'2022-05-28',0.00,0.00),(3224,11495,2,'2022-05-28',0.00,0.00),(3225,11444,2,'2022-05-28',0.00,0.00),(3226,10423,2,'2022-05-28',0.00,0.00),(3227,10924,2,'2022-05-28',0.00,0.00),(3228,9266,2,'2022-05-28',0.00,2.44),(3229,11614,2,'2022-05-28',0.00,0.00),(3230,11613,2,'2022-05-28',0.00,0.00),(3231,11814,2,'2022-05-28',0.00,0.00),(3232,11308,2,'2022-05-28',0.00,0.00),(3233,10877,2,'2022-05-28',0.00,0.00),(3234,11156,2,'2022-05-28',0.00,0.00),(3235,11945,2,'2022-05-28',0.00,0.00),(3236,11946,2,'2022-05-28',0.00,0.00),(3237,11011,2,'2022-05-28',0.00,0.00),(3238,5147,2,'2022-05-28',149.00,17.00),(3239,9931,2,'2022-05-28',0.00,0.00),(3240,11042,2,'2022-05-28',0.00,0.00),(3241,12236,2,'2022-05-28',0.00,0.00),(3242,9256,2,'2022-05-28',0.00,0.00),(3243,11826,2,'2022-05-28',5.00,17.00),(3244,11921,2,'2022-05-28',0.00,0.00),(3245,12238,2,'2022-05-28',0.00,0.00),(3246,11012,2,'2022-05-28',0.00,0.00),(3247,5173,2,'2022-05-28',25.00,17.00),(3248,11920,2,'2022-05-28',0.00,0.00),(3249,9976,2,'2022-05-28',0.00,0.00),(3250,12251,2,'2022-05-28',0.00,0.00),(3251,12173,2,'2022-05-28',0.00,0.00),(3252,12165,2,'2022-05-28',0.00,0.00),(3253,5148,2,'2022-05-28',0.00,0.00),(3254,9070,2,'2022-05-28',0.00,0.00),(3255,9650,2,'2022-05-28',0.00,0.00),(3256,6312,2,'2022-05-28',0.00,0.00),(3257,10123,2,'2022-05-28',0.00,0.00),(3258,11662,2,'2022-05-28',0.00,0.00),(3259,9951,2,'2022-05-28',3.00,64.88),(3260,12291,2,'2022-05-28',30.00,3.71),(3261,11665,2,'2022-05-28',0.00,0.00),(3262,6313,2,'2022-05-28',0.00,0.00),(3263,9608,2,'2022-05-28',12.00,16.00),(3264,11347,2,'2022-05-28',0.00,0.00),(3265,6315,2,'2022-05-28',4.00,20.00),(3266,9784,2,'2022-05-28',0.00,0.00),(3267,6128,2,'2022-05-28',5.00,15.72),(3268,10904,2,'2022-05-28',0.00,0.00),(3269,12137,2,'2022-05-28',0.00,0.00),(3270,12055,2,'2022-05-28',4.00,56.01),(3271,12057,2,'2022-05-28',12.00,52.17),(3272,12056,2,'2022-05-28',48.00,52.17),(3273,12062,2,'2022-05-28',0.00,0.00),(3274,5852,2,'2022-05-28',0.00,0.00),(3275,10234,2,'2022-05-28',0.00,0.00),(3276,12351,2,'2022-05-28',0.00,0.00),(3277,5853,2,'2022-05-28',0.00,0.00),(3278,6353,2,'2022-05-28',0.00,0.00),(3279,10397,2,'2022-05-28',0.00,0.00),(3280,9667,2,'2022-05-28',0.00,0.00),(3281,10822,2,'2022-05-28',0.00,0.00),(3282,6297,2,'2022-05-28',0.00,0.00),(3283,11869,2,'2022-05-28',0.00,0.00),(3284,10552,2,'2022-05-28',0.00,0.00),(3285,10553,2,'2022-05-28',0.00,0.00),(3286,10843,2,'2022-05-28',0.00,0.00),(3287,11050,2,'2022-05-28',0.00,0.00),(3288,10820,2,'2022-05-28',0.00,0.00),(3289,11728,2,'2022-05-28',0.00,0.00),(3290,11727,2,'2022-05-28',0.00,0.00),(3291,9214,2,'2022-05-28',0.00,0.00),(3292,10823,2,'2022-05-28',0.00,0.00),(3293,9570,2,'2022-05-28',1021.00,36.46),(3294,9207,2,'2022-05-28',12.00,36.46),(3295,11492,2,'2022-05-28',0.00,0.00),(3296,10821,2,'2022-05-28',0.00,0.00),(3297,12040,2,'2022-05-28',0.00,0.00),(3298,10585,2,'2022-05-28',0.00,0.00),(3299,10586,2,'2022-05-28',0.00,0.00),(3300,6293,2,'2022-05-28',69.00,34.29),(3301,6294,2,'2022-05-28',36.00,50.91),(3302,6302,2,'2022-05-28',20.00,57.76),(3303,10070,2,'2022-05-28',9.00,92.72),(3304,6354,2,'2022-05-28',60.00,48.99),(3305,6355,2,'2022-05-28',52.00,48.99),(3306,9002,2,'2022-05-28',332.00,27.77),(3307,5816,2,'2022-05-28',219.00,27.77),(3308,12303,2,'2022-05-28',0.00,0.00),(3309,10556,2,'2022-05-28',0.00,0.00),(3310,6185,2,'2022-05-28',0.00,0.00),(3311,11763,2,'2022-05-28',0.00,0.00),(3312,10154,2,'2022-05-28',0.00,0.00),(3313,10953,2,'2022-05-28',0.00,0.00),(3314,10235,2,'2022-05-28',0.00,0.00),(3315,9565,2,'2022-05-28',0.00,0.00),(3316,9376,2,'2022-05-28',0.00,0.00),(3317,6249,2,'2022-05-28',0.00,0.00),(3318,10346,2,'2022-05-28',0.00,0.00),(3319,9438,2,'2022-05-28',0.00,0.00),(3320,12041,2,'2022-05-28',0.00,0.00),(3321,12209,2,'2022-05-28',0.00,0.00),(3322,10444,2,'2022-05-28',0.00,0.00),(3323,9688,2,'2022-05-28',0.00,0.00),(3324,9362,2,'2022-05-28',0.00,0.00),(3325,6283,2,'2022-05-28',3.06,40.00),(3326,6284,2,'2022-05-28',0.00,0.00),(3327,9535,2,'2022-05-28',2.00,43.00),(3328,9987,2,'2022-05-28',0.00,0.00),(3329,9988,2,'2022-05-28',0.00,0.00),(3330,11791,2,'2022-05-28',0.00,0.00),(3331,11792,2,'2022-05-28',0.00,0.00),(3332,12031,2,'2022-05-28',0.00,0.00),(3333,4711,2,'2022-05-28',1.00,10.00),(3334,5029,2,'2022-05-28',9.75,21.00),(3335,9099,2,'2022-05-28',15.00,51.57),(3336,11433,2,'2022-05-28',0.00,0.00),(3337,9929,2,'2022-05-28',0.00,0.00),(3338,11831,2,'2022-05-28',0.00,0.00),(3339,6273,2,'2022-05-28',0.00,0.00),(3340,11207,2,'2022-05-28',0.00,0.00),(3341,11264,2,'2022-05-28',0.00,0.00),(3342,12192,2,'2022-05-28',0.00,0.00),(3343,5322,2,'2022-05-28',0.00,0.00),(3344,9275,2,'2022-05-28',0.00,0.00),(3345,11173,2,'2022-05-28',0.00,0.00),(3346,9269,2,'2022-05-28',0.00,0.00),(3347,10857,2,'2022-05-28',0.00,0.00),(3348,10719,2,'2022-05-28',2.00,40.11),(3349,10186,2,'2022-05-28',0.00,0.00),(3350,6204,2,'2022-05-28',6.75,32.15),(3351,10183,2,'2022-05-28',0.00,0.00),(3352,11970,2,'2022-05-28',0.00,0.00),(3353,11832,2,'2022-05-28',0.00,0.00),(3354,11834,2,'2022-05-28',0.00,0.00),(3355,11574,2,'2022-05-28',0.00,0.00),(3356,5915,2,'2022-05-28',11.83,30.00),(3357,6272,2,'2022-05-28',0.00,0.00),(3358,10188,2,'2022-05-28',0.00,0.00),(3359,10185,2,'2022-05-28',0.00,0.00),(3360,11676,2,'2022-05-28',0.00,0.00),(3361,10498,2,'2022-05-28',0.00,0.00),(3362,11412,2,'2022-05-28',0.00,25.56),(3363,9645,2,'2022-05-28',0.00,0.00),(3364,11958,2,'2022-05-28',0.00,0.00),(3365,10184,2,'2022-05-28',0.00,0.00),(3366,10187,2,'2022-05-28',0.00,0.00),(3367,10486,2,'2022-05-28',0.00,0.00),(3368,12006,2,'2022-05-28',24.00,42.19),(3369,10171,2,'2022-05-28',0.00,0.00),(3370,10172,2,'2022-05-28',0.00,0.00),(3371,10500,2,'2022-05-28',0.00,0.00),(3372,9321,2,'2022-05-28',0.00,0.00),(3373,9297,2,'2022-05-28',0.00,0.00),(3374,6323,2,'2022-05-28',0.00,0.00),(3375,9354,2,'2022-05-28',5.00,22.00),(3376,11394,2,'2022-05-28',0.00,2.80),(3377,10161,2,'2022-05-28',0.00,0.00),(3378,6325,2,'2022-05-28',29.00,49.50),(3379,12139,2,'2022-05-28',6.00,51.00),(3380,9819,2,'2022-05-28',21.80,49.50),(3381,10870,2,'2022-05-28',0.00,0.00),(3382,11297,2,'2022-05-28',0.00,0.00),(3383,11689,2,'2022-05-28',0.00,0.00),(3384,11717,2,'2022-05-28',0.00,0.00),(3385,11636,2,'2022-05-28',0.00,0.00),(3386,11698,2,'2022-05-28',17.83,55.00),(3387,9620,2,'2022-05-28',0.00,0.00),(3388,10392,2,'2022-05-28',0.00,0.00),(3389,11777,2,'2022-05-28',0.00,0.00),(3390,5327,2,'2022-05-28',56.00,55.00),(3391,11638,2,'2022-05-28',0.00,0.00),(3392,4729,2,'2022-05-28',112.00,55.00),(3393,11637,2,'2022-05-28',0.00,0.00),(3394,11365,2,'2022-05-28',0.00,0.00),(3395,10566,2,'2022-05-28',0.00,0.00),(3396,10910,2,'2022-05-28',0.00,0.00),(3397,10979,2,'2022-05-28',0.00,0.00),(3398,11908,2,'2022-05-28',0.00,0.00),(3399,11254,2,'2022-05-28',0.00,0.00),(3400,9707,2,'2022-05-28',0.00,0.00),(3401,11989,2,'2022-05-28',0.00,0.00),(3402,6228,2,'2022-05-28',90.00,19.00),(3403,11702,2,'2022-05-28',0.00,0.00),(3404,6227,2,'2022-05-28',0.00,0.00),(3405,11290,2,'2022-05-28',0.00,0.00),(3406,11291,2,'2022-05-28',0.00,0.00),(3407,9483,2,'2022-05-28',0.00,0.00),(3408,12141,2,'2022-05-28',0.00,0.00),(3409,9617,2,'2022-05-28',103.00,19.00),(3410,9117,2,'2022-05-28',29.00,19.00),(3411,11669,2,'2022-05-28',0.00,0.00),(3412,12190,2,'2022-05-28',0.00,0.00),(3413,10829,2,'2022-05-28',0.00,0.00),(3414,11409,2,'2022-05-28',0.00,0.00),(3415,10881,2,'2022-05-28',0.00,0.00),(3416,9215,2,'2022-05-28',53.00,15.17),(3417,9312,2,'2022-05-28',12.00,37.55),(3418,9397,2,'2022-05-28',0.00,0.00),(3419,11415,2,'2022-05-28',4.00,16.50),(3420,10561,2,'2022-05-28',4.00,18.89),(3421,11917,2,'2022-05-28',0.00,0.00),(3422,9295,2,'2022-05-28',0.00,0.00),(3423,11075,2,'2022-05-28',0.00,0.00),(3424,9596,2,'2022-05-28',1.00,17.49),(3425,9594,2,'2022-05-28',0.00,0.00),(3426,10508,2,'2022-05-28',0.00,0.00),(3427,11491,2,'2022-05-28',3.00,9.96),(3428,10390,2,'2022-05-28',16.00,18.39),(3429,9150,2,'2022-05-28',16.00,20.29),(3431,10706,2,'2022-05-28',0.00,0.00),(3432,9307,2,'2022-05-28',5.00,19.50),(3433,9746,2,'2022-05-28',0.00,23.40),(3434,9313,2,'2022-05-28',12.00,23.40),(3435,12135,2,'2022-05-28',0.00,0.00),(3436,9861,2,'2022-05-28',6.00,29.12),(3437,9395,2,'2022-05-28',0.00,0.00),(3438,9583,2,'2022-05-28',0.00,0.00),(3439,9584,2,'2022-05-28',6.00,32.37),(3440,10058,2,'2022-05-28',0.00,0.00),(3441,10073,2,'2022-05-28',2.00,42.67),(3442,12134,2,'2022-05-28',0.00,0.00),(3443,10414,2,'2022-05-28',0.00,0.00),(3444,10908,2,'2022-05-28',20.00,63.50),(3445,10742,2,'2022-05-28',0.00,0.00),(3446,9434,2,'2022-05-28',0.00,0.00),(3447,9675,2,'2022-05-28',0.00,0.00),(3448,10391,2,'2022-05-28',0.00,0.00),(3449,9051,2,'2022-05-28',4.58,28.80),(3450,5101,2,'2022-05-28',2.00,38.00),(3451,11056,2,'2022-05-28',0.00,65.00),(3452,11995,2,'2022-05-28',0.00,0.00),(3453,5104,2,'2022-05-28',26.00,28.80),(3454,5744,2,'2022-05-28',2.00,38.00),(3455,10323,2,'2022-05-28',0.00,0.00),(3456,6333,2,'2022-05-28',8.00,28.80),(3457,11992,2,'2022-05-28',0.00,0.00),(3458,5103,2,'2022-05-28',2.00,38.00),(3459,11815,2,'2022-05-28',0.00,0.00),(3460,9351,2,'2022-05-28',1.00,50.33),(3461,9587,2,'2022-05-28',0.00,0.00),(3462,11903,2,'2022-05-28',0.00,0.00),(3463,11168,2,'2022-05-28',0.00,0.00),(3464,10141,2,'2022-05-28',0.00,0.00),(3465,9069,2,'2022-05-28',7.00,54.25),(3466,11590,2,'2022-05-28',0.00,0.00),(3467,12376,2,'2022-05-28',8.00,130.00),(3468,9020,2,'2022-05-28',64.00,30.00),(3469,12377,2,'2022-05-28',10.00,4.20),(3470,12378,2,'2022-05-28',3.00,16.25),(3471,12379,2,'2022-05-28',2.00,55.06),(3472,12380,2,'2022-05-28',96.80,7.00),(3473,12381,2,'2022-05-28',6.00,39.00),(3474,12382,2,'2022-05-28',11.00,25.00),(3475,12383,2,'2022-05-28',17.00,134.00),(3476,12384,2,'2022-05-28',185.00,35.00),(3477,9578,120,'2022-05-29',11.00,16.50),(3478,12385,2,'2022-05-28',4.70,44.00),(3479,12386,57,'2022-05-28',7.00,62.40),(3480,12387,2,'2022-05-28',44.00,169.40),(3481,12388,2,'2022-05-28',44.00,0.00),(3482,12390,2,'2022-05-28',6.00,220.00),(3483,12391,2,'2022-05-28',4.00,67.33),(3484,12392,2,'2022-05-28',16.00,35.00),(3485,12393,2,'2022-05-28',15.00,9.50),(3486,12394,2,'2022-05-28',17.00,25.67),(3487,12395,2,'2022-05-28',8.00,18.50);
/*!40000 ALTER TABLE `buylist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary view structure for view `calcu`
--

DROP TABLE IF EXISTS `calcu`;
/*!50001 DROP VIEW IF EXISTS `calcu`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `calcu` AS SELECT 
 1 AS `goodid`,
 1 AS `bignum`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `calcu2`
--

DROP TABLE IF EXISTS `calcu2`;
/*!50001 DROP VIEW IF EXISTS `calcu2`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `calcu2` AS SELECT 
 1 AS `invid`,
 1 AS `largenum`,
 1 AS `cost`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `catelist`
--

DROP TABLE IF EXISTS `catelist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `catelist` (
  `cateid` int DEFAULT NULL,
  `chcate` varchar(80) DEFAULT NULL,
  `encate` varchar(80) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `catelist`
--

LOCK TABLES `catelist` WRITE;
/*!40000 ALTER TABLE `catelist` DISABLE KEYS */;
INSERT INTO `catelist` VALUES (100,'蔬菜','Vegetable'),(200,'冰冻食品','FreezingFood'),(300,'干货','Dry goods'),(400,'饮料','Drink'),(500,'零食','Snacks'),(600,'调味料','Daily necessities'),(700,'日用品','123'),(800,'其他','Other');
/*!40000 ALTER TABLE `catelist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary view structure for view `cc`
--

DROP TABLE IF EXISTS `cc`;
/*!50001 DROP VIEW IF EXISTS `cc`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `cc` AS SELECT 
 1 AS `id`,
 1 AS `goodid`,
 1 AS `qty`,
 1 AS `price`,
 1 AS `time`,
 1 AS `casecost`,
 1 AS `itemcost`,
 1 AS `unit`,
 1 AS `total`,
 1 AS `csf`,
 1 AS `ch_name`,
 1 AS `en_name`,
 1 AS `orderdate`,
 1 AS `profit`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `cc2`
--

DROP TABLE IF EXISTS `cc2`;
/*!50001 DROP VIEW IF EXISTS `cc2`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `cc2` AS SELECT 
 1 AS `goodid`,
 1 AS `qty`,
 1 AS `profit`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `customlist`
--

DROP TABLE IF EXISTS `customlist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `customlist` (
  `id` int NOT NULL,
  `name` varchar(80) DEFAULT NULL,
  `phone` varchar(40) DEFAULT NULL,
  `addr` varchar(80) DEFAULT NULL,
  `city` varchar(20) DEFAULT NULL,
  `state` varchar(20) DEFAULT NULL,
  `zip` varchar(20) DEFAULT NULL,
  `tax` varchar(20) DEFAULT NULL,
  `note` varchar(250) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `customlist`
--

LOCK TABLES `customlist` WRITE;
/*!40000 ALTER TABLE `customlist` DISABLE KEYS */;
INSERT INTO `customlist` VALUES (1810,'Asian Garden (Reno)','(775) 825-5510','1945  S Virginia St','Reno','NV','89502','0.083','Fax: 825.1569/ck:342.9160; 342-9193'),(1811,'King Buffet (Reno)','(775) 828-7997','3650 Kietzke Lane','Reno','NV','89502','0.083','姜:997.8567/851-9888(H)/342.8828 (Brother) 陳:843.3051/Fax:828.7978/chen: 775 772 6876/王,vicky:813.9898,813.7888  龙飛510 209 2768,848.1784'),(1812,'Asian Wok (Mae Anne)','(775) 747-1368','2005 Sierra Highlands Dr #143','Reno','NV','89523','0.083','331.8786 (H)/Cel:453.8185,麗354.9220/747-1368(H)/ming:813.7075/chef:815.8258'),(1813,'Kim Son Restaurant 金山','(775) 322-2230','102 E 2nd St','Reno','NV','89501','0.083','Cel 230.3827 李生'),(1814,'Asian Garden (Grass Valley)','(530) 273-0666','12074 Nevada City Hwy','Grass Valley','CA','95945','0',''),(1815,'Atlantis Casino','(775) 825-4700','3800 S Virginia St','Reno','NV','89502','0.083','Chanel:775.335.4527杨福生626.465.8116/, 813-5390  cell, Fax:332.9191/ Larry:335.4526,  335.4527/Erik Miller:335.4529/a/p:Nila824.3214, Nancy:ext. 3079/Fax:827.8008  receiving772.4455 fax:825-5508 (3711) '),(1816,'Bangkok Cuisine','(775) 322-0299','55 Mt Rose St','Reno','NV','89509','0.083','(H-Fax):852.5454/Fax:322.6305/chris:846.7912 FAX: 284- 3805 /lu:(H)853.4158/cel:303.3992/chinta'),(1817,'Boomtown','(775) 345-6000','2100 Interstate Hwy 80 W','Verdi','NV','89439','0.083','a/p Sandy:345.8736/Fax:345.8776/Bev Demanovich/matt:345.8521fax:345.8692/Warran finke:ext.8785/teresa cohen'),(1818,'Blue Plate','(775) 786-3463','236 California Ave','Reno','NV','89509','0.083','Ellis Steven: 851.0787/448 ridge st. reno 89501/sarary:846.7369'),(1819,'Beijing Palace','(775) 882-8899','4250 Cochise St','Carson City','NV','89703','0.075','Fax:882.8819/cai,qingdong:291.9742(Cel)/shao,peter/sandy, 1510 Star Way,reno,nv 89511'),(1820,'Bamboo Garden','(775) 885-6868','4250 Cochise St','Carson City','NV','89703','0.075','Fax:885.6882/老板娘775.297.2146/2146(Cel):415.359.8274'),(1821,'Far East','(775) 247-3299','1300 DISC DRIVE','Sparks','NV','89000','0.083','Cel:247.3299'),(1822,'Montbleu (Tahoe)','775.586.2164','55 Hwy 50','Stateline','NV','89449','0.071','Fax 775.586.2082 /Vale,Isay,Mike:775.586.2133 cel:775.781.6654/Zale:775.790.7255/a/p:krina:888.496.3790/Grant:702.420.5309 Fax:775.586.2082/Krisha: 775.586.3515 ext.4412 A/P Fax:775.586.4670 Margie '),(1823,'Chinese Kitchen','(530) 257-6228','2455 Main St','Susanville','CA','96130','0','Cel:530.249.3637'),(1824,'Szechuan Express (Sun Valley) 四川','(775) 324-6686','2900 Clear Acre Lane #P','Reno','NV','89512','0.083','瞿晶晶:300.9611/chef Liu:636.2133'),(1825,'Chinese Village  岳阳楼','(775) 853-1998','18132 Wedge Pkwy','Reno','NV','89511','0.083','Cel.530 0347 /232.3771/425.4771(H)'),(1826,'C & M','(775) 787-3020','7935 Sugar Pine Ct','Reno','NV','89523','0.083',''),(1827,'China Express','(530) 546-7788','8501 N Lake Blvd','Kings Beach','CA','96143','0','Jimmy/lily 530.546.3288(H)'),(1828,'China Empire','(775) 824-0670','3226 S. McCarran Blvd','Reno','NV','89502','0.083','fax ;824.0215/lu:657.1281/685.0655'),(1829,'China Chef (Gardnerville)','(775) 782-8583','1329 US Hwy 395 N','Gardnerville','NV','89410','0.071','917.293.7915'),(1830,'China Chef (Carson City)','(775) 883-8887','3135 Highway 50 E','Carson City','NV','89701','0.075','Ana:775.790.5756/Fax.883.4688/626.320.7633'),(1831,'China Chef (Fernley)','(775) 575-4939','55 W. Main St','Fernley','NV','89408','0.071','黎山:916.621-8922/Chef:510.495.7470(wu)510.759.8916  Siney 775-742-9861,825.1877(w)(6640)'),(1832,'China Chef (Yerington)','(775) 463-7112','415 N Main St','Yerington','NV','89447','0.071','Candy wang775.980.9220/edward:775.301.3847/771.6894(Tim Cel)626.503.0370/Siney:742.9861,(w):825.1877/沈626.328.5243 p o box 198 yerington 89447'),(1833,'China Wok','(775) 833-3663','120 Country Club Dr #62','Incline Village','NV','89451','0.083','Cel:775.910.9534'),(1834,'China Clipper','(775) 331-7203','495 Greenbrae Dr','Sparks','NV','89431','0.083','359.3272'),(1835,'China Diner','(775) 786-3636','275 W St.','Reno','NV','89501','0.083','722.16369Mang)/hui Amy:415.640.7127/許:825.8250/chef:544.8805/Andy830.8449'),(1836,'Carson Valley Inn','(775) 782-9711','1627 US Hwy 395 N(1617 Water St. Bldg A)','Minden','NV','89423','0.071','Fax:775.782.5560/mario:775.772.0136/winn T'),(1837,'Chef Cheng s Chinese Restaurant','(775) 753-5788','1309 Idaho St','Elko','NV','89801','0.069','Fax:775.777.7049,paul:775.340.5753/father:775.340.5746/shao dapeng:775.401.0328'),(1838,'China East (Carson City)','(775) 885-6996','1810 E. William St.','Carson City','NV','89701','0.075','Fax.885.2138/(H):883.3579(H)/Edwina Cel:220.2002'),(1839,'Golden China','(775) 786-7232','1505 S Virginia St','Reno','NV','89502','0.083',''),(1840,'China East (Reno)好相蓬','(775) 348-7020','1086 S. Virginia St #A','Reno','NV','89502','0.083','于洋202.812.8892/348.1956 (Ming/Linda)'),(1841,'China Star','(775) 825-8777','160 W Plumb Lane','Reno','NV','89509','0.083',''),(1842,'Christy Hill','(530) 583-8551','115 Grove St.','Tahoe City','CA','96145','0','Fax:530.583.8046/chef cardio'),(1843,'China Garden (Winnemucca)','(775) 623-6777','1061 W 4th St','Winnemucca','NV','89445','0.071','wasabi:916.956.5890Quan:415.297.5980// 916.476.7266(Lo Kit)/Michael:626.233.7559/916.420.6320 (ho)/朱公:916.267.7290'),(1844,'China Garden (Truckee)','(530) 587-7625','11361 Deerfield Dr','Truckee','CA','96161','0','Cel:916.804.1493/jasmine:916.541.6858'),(1845,'Dragonfly','(530) 587-0557','10118 Donner Pass Rd #B','Truckee','CA','96161','0','CHEF (JOSH):508-274-5350   530.587.3185 (H)/530.412.1028 (Cel)/Fax:530.587.0291/chef Ramsey /Kaitlin(a/p)530.587.0557ext 7'),(1846,'Dragon Palace','(530) 335-3288','37345  Main St.','Burney','CA','96013','0','916.737.0545(Li)'),(1847,'Dynasty皇朝','(775) 786-5768','1185 California Ave','Reno','NV','89509','0.083','KEVIN: 510.260.6460'),(1848,'Eldorado Hotel & Casino','(775) 786-5700','345 N Virginia St','Reno','NV','89501','0.083','Fax3257288/348.9277/Diane/p453.7890/scott:325.7236/strech:336.8303/fax:3483763/receiv-brent:xt7213 fax;785.8552 Wrentmore:785.9060,Fax:348.9277/a/p:325.7151(patty allen)325.7494(skill)fax:348.3763'),(1849,'Egg Roll King #1 (Reno)','(775) 786-6966','635 Booth St','Reno','NV','89509','0.083','ray:813.3680/冯856.9600/Liao:240.8808'),(1850,'Egg Roll King #2 (Sparks)','(775) 358-8228','2253 Oddie Blvd','Sparks','NV','89431','0.083','yu:343.2869/H:787.8568'),(1851,'Egg Roll King #3 (Sparks)','(775) 358-5666','1450 E Prater Way #107','Sparks','NV','89434','0.083','helan/liu dun 老段 223 8760'),(1852,'East Ocean 东海','(775) 883-6668','1214 N. Carson St.','Carson City','NV','89701','0.075','文希:887.0317'),(1853,'Elko Diner Station','(775) 738-8528','1430 Idaho St','Elko','NV','89801','0.069',''),(1854,'Lucio s(Express Coffee Shop)','(530) 283-1949','875 E. Main St.','Quincy','CA','95971','0','p o box 3728/ Ling/Lucio Macias: p o box 1205, quicing, ca  95971/cel:530.927.7965'),(1855,'Flaming Wok','828.1788','5650 Meadowood Mall Circle','Reno','NV','89502','0.083','Margret:415-794-4298/tony:920.203.0538/martin:378.4038/378.1061(H)fax:602.412.3476/828.1778/Stacey  Johnston:602.312.1825office:480.832.4486/fax:306.445.6699'),(1856,'Oriental Kitchen','(775) 626-1115','1300 DISC DR. ','Sparks','NV','89512','0.083',''),(1857,'Fandango','(775) 886-1600','3800 S. Carson St.','Carson City','NV','89701','0.075','Fax 775.885.7008 / chef cezer:775.360.9611/Kim:886.1691/ Cel:842.0711 Eddie ext.668/Justin jackson:1692 ext:692 a/p:775.885.7008'),(1858,'Fusion Express','(775) 825-8878','5640 Meadowood Mall Circle','Reno','NV','89502','0.083','Fax 746.3627/247.1300(Cel)'),(1860,'Golden Flower Vietnamese 金花','(775) 323-1628','205 W 5th St','Reno','NV','89503','0.083','郭:250-4581/287.7575Lilly/Fax: 323.1664 /就 746.1921(Chef:219.4315)/H:851.7633'),(1861,'Golden Rice Bowl','(775) 423-7078','1760 W Williams Ave','Fallon','NV','89406','0.076','762.4000(cel) 848.7206/sister:775.945.1700,544.1972/Elsa Lee:775.217.3968/Susan:250.1788'),(1862,'Golden King','5302833338 ','1730 E. Main St.','Quincy','CA','95971','0','黃生530.927.8803'),(1863,'Green Ray','(775) 424-3115','P O Box 613','Sparks','NV','89453','0.083','Sai Hlape:232.3874/kai'),(1864,'Harvey s Tahoe Mgmt Co Inc','775.588.6611','Hwy 50 & Stateline Ave','Stateline','NV','89449','0.071','Fax: 775.586.6744/Cornis 775.586.6755,   Cel 691.4114,/Chef steven wong:775.221.2080/ Rich Miller:775.586.6756,cel775.691.0032 /Sam Jusrice:775.586.6748/Glen Lolli 7883158 Head:Cheryl:586.6702 '),(1865,'Hong Kong Restaurant (Portola)','(530) 832-1458','117 W. Sierra St.','Portola','CA','96122','0','530.927.9643'),(1866,'Headwall Cafe & Climbing Wall','(530) 583-7673','Cable Car Bldg','Olympic Valley','CA','96146','0',''),(1867,'Hunan Garden (SLT)','(530) 544-5868','900 Emerald Bay Rd','South Lake Tahoe','CA','96150','0','Sam'),(1868,'Hyatt Hotel & Casino','(775) 932-1234','111 Country Club Dr','Incline Village','NV','89451','0.083','Alfredo Bonce 775.886.6720 ,  A/P:775.886.6609(Ioana) fax:775.886.6803/  Purchasing:Mike,melissa:775.866.6738/ Chris:775.886.6738/Bob Smith: 775.886.6739'),(1869,'Happy Buddha','(775) 945-2727','570 Sierra Way','Hawthorne','NV','89415','0.071','Cel 842.9560'),(1870,'Hong Kong Diner 香港小馆 #1','828.3636','180 W Peckham Lane #1170','Reno','NV','89509','0.083','828.3636/shirly:800.3696/wendy:813.6218(W)/Fax:828.0254(H)'),(1871,'Hunan Garden (Gardnerville)','(775) 782-6068','1363 Lampe Dr','Gardnerville','NV','89410','0.071','Cel:775.790.9148/775.783.1876(H)'),(1872,'Hong Kong Kitchen (SLT)','(530) 544-5899','3330 Lake Tahoe Blvd','South Lake Tahoe','CA','96150','0','H:530.544.7178'),(1873,'Harrah s Reno','786.3232','','Reno','NV','89501','0.083','Fax:788.3150/ a/p:juanita:788.3194,fax:788.3149/david west:788.3159,775.586.6702/Glenn Lolli:788.3158 fax:788.3149/Laqui:788.3145/rich cel:224.0430'),(1874,'Harrah s Lake Tahoe Casino ','(775) 586-6756','Hwy 50','Lake Tahoe','NV','89449','0.077','(Belinda Sheryl)'),(1875,'Horizon Casino','775.5886211','50 Hwy 50','Stateline','NV','89449','0.071','ext2532(Rich)rio:530.307.1640 warehouse Fax:775.588.6741 / (Kathrine/A/P:vivian:ext.2229/cheryl:ext.2261/fax:775.586.4035  Fax 775.588.7761  '),(1876,'Hunan Buffet - Fallon','(775) 428-2686','FALLON','Fallon','NV','89512','0.076','Shelly 775.666.7700 Fax:775.428.2645/Lisa:415.636.1327,267.471.5148'),(1877,'Hunan Garden (Carson City)','(775) 883-5888','1480 N. Carson St.','Carson City','NV','89512','0.075','Cel:230.2616/230.8889/jingxian jia:1106 ivy ct./reno 89511 (Reni)/Jonathon Kimben:650.922.7095'),(1878,'Isan Thai Restaurant','(775) 359-3009','2855 N McCarran Blvd #108','Sparks','NV','89431','0.083','Tom/Bob/anne'),(1879,'Ichiban Japanese Steak House','(775) 323-5550','210 N Sierra St #2','Reno','NV','89501','0.083',''),(1880,'Jia s Wok (Plumb Lane Palaza )','(775) 827-1188','477 E Plumb Lane','Reno','NV','89502','0.083','麗:846.6777/ 997 Edgecliff Dr. Reno, NV 89523/mom:746.3627/746.1268(new) 小萍：9973635'),(1881,'Jia s Wok #2','(775) 359-4889','521  E Prater Way','Sparks','NV','89431','0.083',''),(1883,'Kung Food #1','(775) 852-1113','9410 Prototype Dr #2324','Reno','NV','89521','0.083',''),(1884,'Ko Sing Diner','(775) 852-2888','6405  S Virginia St #5','Reno','NV','89511','0.083',''),(1885,'King Buffet (Elko)','(775) 777-1077','1830 Idaho St.','Elko','NV','89801-4031','0.069','yao:775.389.0608/new:8433051 Fax:775.753.2454,775.340.0459  Son 王建:775.385-7577/5788'),(1886,'Kim Lee s Sushi (Carson City)','(775) 883-2372','319 N. Carson  St','Carson City','NV','89701','0.075','Sarah:775.338.4232/sarahh.suttle@gmail.com/Kevin775.276.9261/email:kimlee.sushi@gmail.com'),(1887,'Kim Lee Island Sushi (Keystone)','(775) 324-6666','953 W 5TH St.','Reno','NV','89503','0.083','303.1663 (Cel)'),(1888,'Chicago Express Corp. (Sparks)','(775) 425-1133','9744 Pyramid Lake Hwy(State Route 445)','Sparks','NV','89436','0.083','Ken Reddicl378.1940/Alex:233.0167(ken\'s dad)'),(1889,'Kyoto Restaurant 京都','(775) 825-9686','915 W Moana Lane','Reno','NV','89509','0.083','Dollys'),(1890,'Kazeko s','(775) 329-8999','Plumb Lane','Reno','NV','89512','0.083',''),(1891,'Mandalay Express','(801) 244-7039','U.N.R.    THINN   ','Reno','NV','89512','0.083','Jose:505.717.6295,jesica:505.730.9574/Thinn:801.244.7039/Fax801.676.9284/a/p801.244.7824/801.261.2885  SOILA NEW 351-5357'),(1894,'Ming s 明宫','(775) 887-8878','2330 S Carson St','Carson City','NV','89701','0.075','Fax:887.0570 /883.3721(H)/陳華友:720.3668'),(1895,'Monkey Sun ','(775) 738-5155','2594 Idaho St','Elko','NV','89512','0.069','肥仔timmy：4156247208/Ling(妻):415.615.2758/   916.835.1288 阿莲/ 杰:916.233.8732/chef:626.202.9506'),(1896,'Nugget','356.3300','1100 Nugget Ave','Sparks','NV','89431','0.083','Brian:356.3402/Danies356.4230/Rozlyn:356.3302/fax:356.4252/184869(new)/Fax 356.4250/cel:240.9423/fax:356.4250/Mike:3563407/Tish(a/p)356.3448,Linda:356.3463 Fax:356.4263/steve:356.3409'),(1898,'Orchids Thai Food','(530) 544-5541','2180 Lake Tahoe Blvd','South Lake Tahoe','CA','96150','0','Fx:530.544.5561/Ana551.404.9563,(supaporn/owner):312.613.3845,702.978.9565/one noodle:530.717.0651/530.721.0991/818.821.4424/Tom209.762.2298(manager)'),(1899,'Pho 777','(775) 323-7777','102 E. 2nd St.','Reno','NV','89501','0.08265','Don:775.622.7068 Win787.0803 (H)/ 232.2430 Becky'),(1900,'Palais De Jade  翠园','(775) 827-5233','960 W Moana Lane','Reno','NV','89509','0.083','Fax:827.5278/h fax828.0388(h)/Ron:843.1598/jan:830.3501,303,7222/lisa:815.5606,789.1652,chef刘510.387.1816'),(1901,'Panda Kitchen & Sushi ','(775) 882-8128','1986 US Hwy 50 E','Carson City','NV','89701','0.075','Fax:882.3236/兰626.550.9308/(H)884.4679 /Steve Lee:775.291.8555/2550 wellington north,89703,email:splee178@gmail.com'),(1902,'Potsticker House 锅贴屋','(775) 358-6338','2955 N McCarran Blvd #104','Sparks','NV','89431','0.083',''),(1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083','Fax: 689.7138,/Linda689.7458 or xt.7458/Jason:689.7208/a/p Geanne:689.7469/Goerge/joseph:689.7254(fax;8961)/rich:689.7469/vichien:689.7469 fax:689.7484/benny:830.2513/kc(wh mnger):689.7008 '),(1904,'P F Chang s','(775) 825-9800','5180 Kietzke Lane','Reno','NV','89511','0.083','Fax 825.9825(a/p:Tom825.9812,Lisa)/chef scott/rocky/Christan(manger)'),(1905,'Grand Sierra Resort','789.2000','2500 E 2nd St','Reno','NV','89502','0.083','CONIE:702.761.7354/ALMA:702.761.7340 Ryne:702.761.7352/Adriana:789-1653/Fax789.1654/tonya:789.2215/789.2218  ashley A/P:789-2012 Fax/phone:789.1196/maye Garrett:789.1656(gsr) Fax:789.2057'),(1906,'Rickshaw s Fine Asian Bistro','(775) 828-2335','4944 S Virginia St','Reno','NV','89502','0.083','fax:8281657/elour:470.4816'),(1908,'Rail City Casino','(775) 359-9440','2121 Victorian Ave.','Sparks','NV','89431','0.083','702.341.2461 Joe Biace(F.& B.Manager)/Tom:954.2216/ 4-7Receiving/a/p:rose mary:348.2270fax;359.0594/Grey(Head Chef):287.0307'),(1909,'Sundance Bookstore','(775) 786-1188','1155 W 4th St #106','Reno','NV','89503','0.083','Christin/Phillips/Paul/Lynn'),(1910,'Sushi Club','(775) 828-7311','294 E Moana Lane #1','Reno','NV','89502','0.083','FAX: 828.5426 Tony/Sterla:354.9696(Delarmoon)/Edgar:650.464.9467/sister daisy:408.334.3452/Jose:650.722.3181'),(1911,'Sushi Boat','(775) 829-2115','1999 1999 S Virginia St','Reno','NV','89502','0.083','853.6203/ck:342.9160'),(1912,'Siamese Hut','(775) 786-7747','1775 Mill St','Reno','NV','89502','0.083','Linda/Grey:247.3299/852.6569/fax:786.7472/gregg b. kruaval:570 wedge ln. fernley,89408/775.448.6729'),(1913,'Sizzling Cajun Grill','(775) 828-4558','5632 Meadowood Mall Circle','Reno','NV','89502','0.083','626.627.1080'),(1914,'Soochow 苏卅','(775) 359-5207','656 E Prater Way','Sparks','NV','89431','0.083','Cel:544.5669(David)/544.2948'),(1915,'Saigon Pearl','(775) 324-3244','239 W 2nd St','Reno','NV','89501','0.083','787.3199(H) (Nga)/560.5077'),(1916,'Shang Hai Restaurant 上海','(775) 358-1122','1269 Baring Blvd','Sparks','NV','89434','0.083','358.0318 Fax: 329.4045/ 雪儿:775.846.1534 997.5631(997.63790(H)/贾:830.7047,jason:830.7045/750.3692:廖/馬姐378.9672,60.5429'),(1917,'Sushi Time','(775) 331-1818','2868 Vista Blvd #116','Spark','NV','89434','0.083','Fax 331.8618 / Cel K:250.2338/alan:219.6420,(h):747.6710,Shermi(ex-wife):219.9251/4516 cobra dr.sparks,89436'),(1918,'Sushi Marina','(775) 359-4646','225 McCarran Blvd','Sparks','NV','89431','0.083','Peter, Shannon'),(1919,'Szechuan Garden 锦川','(775) 827-6333','903 W Moana Lane','Reno','NV','89512','0.083','Li/b.u(lady):762.0573/ fax:827.3829'),(1920,'Szechuan Express (Sparks) 四川','(775) 358-8866','203 N McCarran (& Victorian)','Sparks','NV','89431','0.083','王:303.5006'),(1921,'Szechuan Express (Carson City) 四川','(775) 884-2666','3697 S. Carson','Carson City','NV','','0.075',''),(1923,'Sushi Teri','(775) 827-9191','5000 Smithridge Dr #A25','Reno','NV','89502','0.083','830.4887/hugo/Jaime trujillo'),(1924,'Siena Hotel Spa & Casino','(775) 327-4362','1 S Lake St','Reno','NV','89501','0.083','Keven:321.5873/fax:321.5857/a/p:Miko:321.5801fax:321.5865,Colleen:ext.5804,fax:321.5865/chef leo:224.0268/fax:337.6608 (Fax:321.5894)/chini:338.5656'),(1925,'Sierra Gold (Lance)','(775) 848-7373','680 S Meadows Pkwy','Reno','NV','89512','0.083','772.9381(Cel) Jeff:313.8436/Tony'),(1926,'Sushi Pier #1','(775) 825-6776','1290 E Plumb Lane #J','Reno','NV','89502','0.083','johny:636.2002/kimberley: 287.6269/kim heejin(chongok)/Justy:342.5069,3665 Cashill blvd. reno 89509/Mark(mager):336.8898/fax:333.0800'),(1927,'Sushi Pier #2 ','(775) 825-5225','1507 So. Virginia St.(Mt. Rose)','Reno','NV','89502','0.083','chris tompson:858.336.4480(new owner)Fax:333.0800/342.5069(H)/Kimberley 2876269 Jason250.6036/Jeff:971-8805/Jason Thompson:2030 Brisbane Ave. 89503'),(1928,'Silver Legacy Resort Casino','(775) 325-7369','407 N Virginia St','Reno','NV','89501','0.083','Sue Stockton:325-7369,Fax:325.7288/Andy Woo:329.4777-cafe central/Hal Wrentmore(Director), A/P: Ext.7153/Leya:3257154(短付)/Dina: 3257109/fax:3257114 (Merlin)'),(1929,'Tony s Caf�','(775) 423-5588','255 S Maine St','Fallon','NV','89406','0.076',''),(1930,'Thai Royal House','(775) 827-1515','3335 Kietzke Lane','Reno','NV','89502','0.083','Tom/Cel.229.1589/Joy'),(1931,'Thai Spice Kitchen','(775) 841-8999','111 E. Telegraph St.','Carson City','NV','89701','0.075','Fax 841.9099,  885.0779(H) Tina/new owner:Jeff:338.1218(H)775.782.5669 & Jan:'),(1932,'Taste Of Thai','(775) 828-6400','915 W Moana Ln','Reno','NV','89509','0.083','fax.324.3550/sanicha hansen:775.224.2254 Sam:746.9483/303.4098/pat'),(1933,'Taiwan Restaurant 台湾饭店','775.221.7328','5150 Mae Anne Ave #208','Reno','NV','89523','0.083','DANNY:903.806.5123/老李:786.8828(h)'),(1934,'Two Guys From Hong Kong(聚香園)','(775) 851-3030','6015 S Virginia St #B','Reno','NV','89502','0.083','Fax: 851.7142 cel:5445669/ New owner: helen:626.327.9646/9648'),(1935,'Twin Dragon (Reno) 双龙','(775) 829-0488','3652 S Virginia St #C1','Reno','NV','89502','0.083','micheal:870.8118/好：544 8668 Ken:813.1113'),(1936,'Twin Dragon (Sparks) 双龙','(775) 358-0488','2312 Oddie Blvd','Sparks','NV','89431','0.083','ashley:219.8614'),(1937,'Thai Nakorn','(530) 550-0503','10770 Donner Pass Rd #101','Truckee','CA','96161','0','Cel 225.2860/ 747.4634(H)/Kidd Narin:775.313.7561/Lim Dollaya:815.8828,786.7747/FAX:530.550.0509'),(1938,'Thai Basil','(775) 841-6100','311 N. Carson St.','Carson City','NV','89701','0.075','Fax 246.1402, ( Nam, Paul, Bob: 246.1400  bookeeping)'),(1939,'The One 一家','(775) 322-8878','440C N. VIRGINIA ST.','Reno','NV','89512','0.083','232.1001/5548 junction peak dr. sparks 89436'),(1940,'Tien Hu Chinese Cuisine 天湖','(530) 583-9262','950 N Lake Blvd','Tahoe City','CA','96145','0','Fax:530.583.5392/ Liu:831.406.9330/奇偉(Liu)831.247.9818'),(1941,'Twin Wok','(775) 625-8388','1105 W 4th St','Winnemucca','NV','89445','0.071','775.291.8893(cell)'),(1942,'Teriyaki House','(530) 257-2818','35 Ash St','Susanville','CA','96130','0','馮生916.494.2039/陳生:510.388.1123 (Cel)'),(1943,'The Flame','(775) 829-2788','3005 Skyline Blvd #100','Reno','NV','89509','0.083','Cel:830.9818/(new)303.1543/303.1057(ortiz modesto)'),(1944,'Tokyo Grill - Reno 东京','(775) 829-9977','5620 Meadowood Mall Circle','Reno','NV','89502','0.083','Fax 829.9978  Fax 415.242.9086 (Kan) 2326 36th Ave.  San  Francisco, CA 94116 Fax: 650.994.5728,   Ben 415.202.3539 Michael: 650-745-5638'),(1945,'Viet Pho (Shopper Sq)','(775) 329-8889','289 E Plumb Lane','Reno','NV','89502','0.083','女老板:775-742-8977 Richard tran 240.7072,10505 Dillingham Dr. reno,89521'),(1946,'Twin Dragon (Golden Valley)  双龙','(775) 677-2929','1075 N Hills Blvd #200','Reno','NV','89506','0.083','TOM:775.741.8829 南232.2005/(Ming):762.2068 欣姐：2324792'),(1947,'Water Wheel','(775) 883-7826','4239 N. Carson St.','Carson City','NV','89706','0.075',''),(1948,'Water Wheel','(775) 588-0555','195 E. William St. (915 U.S. Hwy 50)','Carson City','NV','89701','0.075',''),(1949,'Wolfdale s Cuisine Unique','(530) 583-5700','640 N Lake Blvd','Tahoe City','CA','96145','0','530.583.5714/dogaras:530.448.3633'),(1950,'Western Village Inn & Casino','(775) 331-1069','815 Nichols Blvd','Sparks','NV','89434','0.083','Linda Wolff'),(1951,'Young Sing Restaurant 羊城','(530) 257-2826','1350 Main St','Susanville','CA','96130','0.071','chen:775.393.0116/ 530.310.1339(Cel)/530.310.1340 (floren)'),(1952,'Yoshimi Sushi','(775) 831-2777','882 Tahoe Blvd','Incline Village','NV','89451','0.083','510.301.6882Ernic & Arnie 771.4691/544.2660,240.2074'),(1953,'Yen Ching 燕京','(775) 825-2451','565 W Moana Lane','Reno','NV','89512','0.083','853.6025(H)/Man Hwa Byi:905 Pinebrook Rd. reno 89509'),(1954,'Thai Chili Restaurant','(775) 786-7878','1030 S Virginia St','Reno','NV','89502','0.083','Fax:866.734.7316/Jeff:250.0476/Narin Prachunbarn'),(1955,'Twin Dragon (Auburn) 双龙','(530) 888-6190','520 Auburn Ravine Rd','Auburn','CA','95603','0',''),(1957,'Aloha Sushi','775-828-9611','3338 Kietzke Lane','Reno','NV','89502','0.083','544.1537'),(1959,'Test User','(800) 123-4567','123 Go Rd.','Reno','NV','89512','0.083','Wes, Paula - do not add tax'),(1966,'Wong s Genghis Khan 成吉思汗','(775) 857-3388','5485 Equity Ave','Reno','NV','89502','0.083',''),(1968,'Baldini s Sports Casino','(775) 358-0116','865 So.Rock Blvd','Sparks','NV','89431','0.083','(Mike:ext.226)Fax 358.0330/warehouse: Willian/wells '),(1970,'Circus Circus','775329.0711','500 N Sierra St','Reno','NV','89503','0.083','Barber:325.7235/Janice:328.9348/Email:jmcroberts@circusreno.com/fax:322.6748,janet:328.9409,Dee/ fax322.6748, rthorson@mrgmail.com /Chef Darrin:221.1909/(Rizel)a/p Tel:328.9240(Joyce) fax:328.9262'),(1971,'Arrowcreek Country Club','775-850-4653','2905 Arrowcreek Pkwy','Reno','NV','89511','0.083','Cel:750.3261/Shakka:850.2582ext.217 or212(Marthe)'),(1972,'Riva Grill On the Lake','(530) 542-2600','900 Ski Run Blvd #3','South Lake Tahoe','NV','96150','0.077',''),(1973,'River Peak','(775) 324-8913','135 N Sierra St','Reno','NV','','0.083','David/3241864'),(1974,'Silver Peak Restaurant','(775) 324-1864','124 Wonder St','Reno','NV','89502','0.083','David:342.8913 , Fax 324.3970/Sergil:762.6450'),(1975,'Rosie s Caf�','(530) 583-8504','571 N. Lake Blvd.','Tahoe City','CA','96145','0','rich:530.386.6172/b o box6900'),(1976,'Chartwells (Next to Mandalay)','(775) 784-6143','1664 N. Virginia St (Mail Stop 192)','Reno','NV','89557','0.083',''),(1977,'California Pizza (Joe)','329.4474','10 E. 4th Street','Reon','NV','89501','0.083','Joe:287.2408'),(1978,'Lulou s Restaurant','(775) 329-9979','1470 S Virginia St','Reno','NV','89502','0.083','287.3780/225.2974/choice:232.6133'),(1979,'Nationals Caf�','(775) 841-7377','444 East Wiliam St. #6','Carson City','NV','89701','0.075','Fax: 841.7377/juan a rea:775.671.8263 or775.350.6699'),(1980,'Thai\'d Up','(760) 934-7355','625 Old Mammoth Rd','Mammoth Lakes','CA','93546','0','760.709.1591 Mike Coco'),(1982,'Hong Kong Kitchen (Sparks) 香港小厨','(775) 359-4889','521 E. Prater Way','Sparks','NV','89431','0.083','Fax 775.359.7788/232.1899(cheng)'),(1983,'Cafe De Thai','(775) 829-8424','7499 Longley Lane','Reno','NV','89511','0.083','787.0999(H)/CEL:722.6653/fax853.4099'),(1984,'Pho Vac Hoa Viet','(775) 624-2163','143 S. Virginia','Reno','NV','89000','0.083','Kimmie Tat:232.7099/chef:woo'),(1985,'Chins Cafe','775.754.6674','923 Bush St.','Carlin','NV','89822','0.069','775.754.6435(H)775-385-4687(cel) 916.248.9479:johnson313.290.3713/lee/P o Box 372'),(1986,'Green Papaya','(775) 826-8116','4786 Caughlin Pkwy','Reno','NV','89509','0.083','Fax:825.8240/Jan:830.6947(new)/Cel: 771.9948(Anne/ta veeraon:4786 cavgalin pwy,89519)/steve chick(new owner)/dee:815.6748'),(1987,'Matsu Restaurant','(760) 934-8277','3711 Main St','Mammoth','CA','93546','0','760.914.3156'),(1989,'Wang s Chinese Rest','(775) 246-3030','801 Overland Loop Ste 103 & 104','Dayton','NV','89403','0.071','775.848.0244 (cel)/Steve/David:762.1526/Albert:220.9138 Aurand:775.721.4163/762.1526'),(1992,'Down Under Cafe (U.N.R.)','(775) 784-1168','1201 N. Virginia','Reno','NV','89000','0.083','784.1168 Richard'),(1993,'Happy Garden (Chester)','(530) 258-2395','605 Main Street','Chester','CA','96020','0','Cel530.816.0745/626.262.9558:heng,lacbat:85 B Derek Dr. Susanville, CA 96130'),(1994,'Thai Lotus','(775) 852-5033','6430 S Virginia','Reno','NV','89511','0.083','Michael Ellis, 825-8913, fax 825-8958/Fax 852.5044/Jan:772.1440,Sitt:771.3505/pat'),(1995,'Cafe Soleil','(775) 827-3111','4796 Caughlin Pkwy','Reno','NV','89509','0.083',''),(1997,'China Village (Incline/Enrique Remirez)','(775) 831-9090','882 Tahoe Blvd.','Incline Village','NV','89450','0.083','Enirque 775.831.7070/677.0281'),(1998,'The Wok  (Chi)','(775) 423-5588','255 S. Maine St','Fallon','NV','89406','0.076','775.217.0216(Cel)/fax:775.428.2491/jie:544.3493/jenifer:775.217.2119/chef:775.217.1184'),(1999,'Swenson Ice Cream ','(775) 825-3444','3340 Kietzke Land','Reno','NV','89502','0.083','848.9286/jackie'),(2000,'Ellegant Affair','530.318.3540','','Stateline','NV','','0.083',''),(2001,'AIDA s ','530-233-3243','107 2nd. ST','ALTURA','CA','94601','','Cell 626.287.8223, /Fax 626.287.6268 / Cel:626.485.1219'),(2002,'Top Of China Buffet','775.355.9998','2010 Oddie Blv.','Sparks','NV','89431','0.083','Ping/775.815.2378,  /Li 626.310.2625, /815.2379(H)/Fax:355.9999/646.373.6618  new:张先生'),(2003,'JM Restaurant','775.329.8003','1885 So. Virginia St.','Reno','NV','89502','0.083','232.6533'),(2004,'Wong s Garden(Truckee) 黄家园','530.587.1831','11430 Deerfield Dr.','Truckee','CA','96161','0','Fax 530.587.0283 (黎生:michael:916.509.1258)/Tony:916.670.0718'),(2005,'Francis\' Asian Bistro','775.827.3111','4796 caughlin parkway,  suite101','reno','nv','89509','0.083','Fax 775.827.3161/Cel:544.7642'),(2006,'King Wah 琼华','530.233.4657','404 W. 12trh St.','Altura','CA','96101','0','Cel 530.640.0137   伟'),(2007,'Pacific Crest','530.587.2626','10042 Donner Pass Rd.(Inside Of Bar Of America)','Truckee','CA','00000','0','Cel 530.386.1670/Joe:530.550.7594'),(2008,'Bangkok Cuisine Express','775.747.9999','6170 Mae Anne  Ste. #5','Reno','NV','89523','0.083','Fax:747.9990/Fax:322.6305 :775.846.7912,/tsing dao:233.2696/doom:219.0475'),(2009,'Fortune Palace  Restaurant 富苑','775.626.9888','1282 Disc Dr.','Sparks','NV','89436','0.083','Fax:626.9998/775.747.6537,  (Thay 泰:cel 775.287.8185) , Sharon Tien: 916.397.8126 '),(2010,'T Shirt Plus (Jake)','775.825.6644','5315 Measowwood Mall Circle(D 11Parking Lot/next to radio shack)','Reno','NV','89502','0.083','Jake'),(2012,'International Market ','775.825.5258','225 Gentry Way','Reno','NV','89502','0.083','(Jeff) 250.0476/Fax:866.734.7316/boom:225.9662'),(2014,'Asian Pacific Market','775.','1227 Baring Blvd.','Sparks','NV','89434','0.083','Salvaciom G. Mendoza'),(2015,'FAR EAST MOANA','(775) 825-9885','1295 EAST MOANA LANE','RENO','NV','89502','0.083','Cel:233.6666'),(2017,'King Buffet (Carson)','775.267.1688','3790 HWY 395 #201','Carson City','NV','89705','0.075','fax:775.267.5688/jenifer:775.980.9188/jason:527.0158/wang xiao:626.863.6626/223.8836(Chen)/347.933.3228/347.933.3228/775.742.9399/wang,quiping 917-291-3023(new)'),(2018,'Default','','','','','','0.083',''),(2019,'Knights Of Pythias','775.359.1962','980 Nevada St.','Reno','NV','89502','0.083','Frank'),(2020,'Scolaris','331.7700x 139','1300 Disc Dr.','Sparks','NV','89436','0.083','Robert Quintanilla,/a/p:331.7700x175 tinah/fax:331.2860 kathy steve)/  Fax: 331.1694 /Store:626.8765 Fax626.8880, Tel:626.1155'),(2021,'Moody s Bistro & Loge','530.587.5911','10007 Bridge St.(Inside Truckee Hotel)','Truckee','CA','96161','0','Mike, Julia, Mark:530.448.6021  Fax;530.587.8831'),(2022,'Sala Thai Authertic Thai Cuisine','530.541.8328','2543 Laketahoe Blve.','So. Lake Tahoe','CA','96150','0','Fax:530.541.8388, Jimmy:916.743.8114/Pat Cel:916.432.0100'),(2023,'Tasty Corporation','841.6100','331 N. Carson St.','Carson City','NV','89701','0.075','lynn/Fax: 246.1402 /Bob:246.1400/jeremy:291.8380(Phillip Paul, Nanthaporn:220.3062/2308767(cel abo) Inkavesvanitch:President/ Morakot Inkavesvanitch:Secretary, Morakot Inkavesvanitch:Treasurer)'),(2024,'Thai Recipe Holdings','775.831.4777','901 Tahoe Blvd (Next To 7/11)','Incline Village','NV','89451','0.083','LaEard Chongolnee818.919.3714/ Michael/jar:775.400.4440,(H):775.783.9284/MG:775.790.6399'),(2025,'Discount Office Supply','332.3290','727 W. 5th St.','Reno','NV','89503','0.083',''),(2026,'China Jade Horse','775.267.5188','963 Topsy Lane Suit #310','Carson City','NV','89705','0.075','Fax: 775.267.5511/775.450.2268 Alder/Jacky (Cel)'),(2027,'Thai One On ','775.586.8424','292 Kingsbury Grade #33','Stateline','NV','89449','0.071','Fax 775.586.1545/Niki:626.465.8245/P.O.Box 66,Zephyr Cove, NV 89448/Boyd Dangtingdee775.343.2595(Owner)/Dina:775.762.3611/gunslingerboyd@yahoo.com'),(2028,'Asian Wok (Stead)','775.972.5688','10555 Stead Blvd.#4','Reno','NV','89506','0.083','997.4585 (Su Hong/micheal)/Joyce:223.3578'),(2029,'Phet s Siam Market (Calderwood Plaza)','208.375.2030','8917 Overland  Road','Boise','ID','83709','','Fax:208.375.5234/Cel:208.371.3788/Saiphet & Boun Bounsombath:Owner'),(2030,'Uncommon Kitchen (Doug)','530.583.3663','505 W. Lake Blvd.','Tahoe City','CA','96145','0','Dawn:530.282.3248/(H)530.525.9948/chef530-282-3651'),(2031,'Panda House','673.9999','5055 Sun Valley Blvd. #200','Sun Valley','NV','89433','0.083','Li:420.6403/917.348.0895(Cel) 郑:219.6115/219 9882/NEW:May 775-720-7339'),(2032,'Best Choice Meat Sale Co.','510.635.0478','1110 98th Ave.','Oakland','CA','94603','0','Fax:510.635.5682'),(2033,'Pick Up Stix','714.855.7403','','Reno','NV','89000','0.083','714.855.7403(hing)'),(2034,'Viet Pho (Carson City)','883.6668','1214 N.Carson St.','Carson City','NV','89701','0.075','(Cel:450.2287) /Linda:415.216.7388/415.794..5629(new) Lvnevada2006@yahoo.com'),(2035,'Cash & Carry out','','','','','','0.083',''),(2036,'Jazmine','851.2888','9333 Double R  Blvd.','Reno','NV','89511','0.083','十:916-834-8018 Fax:851.3808/9:916.834.4058, 746.3441(h)/Guang:287.9230/12:813.1368 Tel:851.4462(Colleen) Fax:829.4463/6015 E. So. virginia st. #423, reno 89502/745.9752(AL)'),(2037,'Elegant Affair Catering LLC','','P.O.Box 4586','Stateline ','NV','89449','0','Greg Osborne'),(2038,'China Garden(Spring Creek)','775.777.8333','263 Spring Valley Pkway #G','Spring Creek','NV','89815','0.069','許:917.443.8880/415.672.1069(Micheal)'),(2039,'Asian Noodles(Next to Pier #1)','775.828.7227','1290 E Plumb Ln. Ste.I','Reno','NV','89509','0.083','shelly800.3696/815-8401/Micheal/Ervin Frank(Owner)843.8463,205 w.10th st. 89503 /Pat/kwok:843.5430 '),(2040,'Aidas Tasty Cafe','530.233.1130','107 W/ 2nd St.','Alturas','CA','96101','0','Hy Sam Tay:626.318.7784/626.506.0360(Tsu)/Fax:530.233.1131/Thomas'),(2041,'Dayton Valley Country Club','775.246.7888','101 Palmer Dr. ','Dayton','NV','89403','0.071','Chef Leo: 224.0268/ Putt/Debie:775.246.9894(fax)'),(2042,'Nikko Sushi (Wild Oats Sushi Bar)','229.1551','1234','Reno','NV','89502','0.083','Hsiao Lien Chao'),(2043,'Happy Garden (Susanville) 乐园','530.257.5553','1960 Main Street','Susanville','CA','96130','0','Fax:530.257.5554/Cel:530.816.0745/philli:925.719.3146'),(2044,'Sparkys (707)(C.C)','882.7530','2310 So. Carson St.','Carson City ','NV','89701','0.075','GM:Jeremy Root-Ferguson/ASTN M:Brandy Dultz/882.7560/450.0951'),(2045,'Sparkys (701)(Sparks & Prater)','356.6969','1450 E. Prater #117','Sparks','NV','89434','0.083','GM:Andrea/a/p:850.1000/Marko Boskovich:356.0101/224.4299'),(2046,'Sparkys (703)(4th & McCarran)','787.9669','9570 S McCarran Blvd.','Reno','NV','89503','0.083','GM:Rick Dinoso/Jed Ingalls:787.2121/250.0010'),(2047,'Sparkys (704)(Longley)','827.1550','4050 S. McCaran Blvd.','Reno','NV','89502','0.083','GM:Mathew Wehrman/Jasper Jacobs:827.4463/250.0010'),(2048,'Sparkys (705)(Mt. Rose)','851.3999','18603 Wedge Pkwy #A','Reno','NV','89511','0.083','GM:Bill Johnson/Tiffany Smith:851.6296/722.3605'),(2049,'House Of Hawaiian BBQ','852.1113','9410 Prototype Dr.','Reno','NV','89511','0.083','Fax: 852.5312'),(2050,'Golden Palace (陈富楼)','530.885.8889','4076 Grass Valley Hwy 49, Suite #1','Auburn','CA','95603','0','530.906.0395(Cel):530.320.0265'),(2051,'Mei s Diner','775.883.4303','248 E. Winnie Lane','Carson City','NV','89706','0.075','Jimmy'),(2052,'Fusion China','775 329.8988','1290 S Virginia','Reno','NV','89502','0.083','7753298885/老板cel:775.762.8977/636.2155(H)(Cel.- Miss) 老板娘：997-9917/小弟646.896.9918/lin 562 612 6295'),(2054,'Hong Le Restaurant','775.323.1888','143 N Virginia St.','Reno ','NV','89501','0.083','(Cel):762.9675/chef:916.606.5290'),(2055,'Jake s On The Lake ','530.583.0188','780 N. Lake Blvd.(Boatworks Mall)','Tahoe City','CA','96145','0','Fax:530.583.0203/Russell Coffman:760.413.0067/ Yopyk'),(2056,'Hoa Phat (华发)','322.8878','440 C N. Virginia St.','Reno','NV','89512','0.083','Kimmie Tat:232.7099/Chef:Wu'),(2057,'Peony Chinese Cuisine (福临门)','747.3288','6340 Mae Anne Ave.','Reno','NV','89523','0.083','fax:425.4388/Jenie 636-0828,7883976  /add:7405 Pah Rah Drive, Sparks, NV 89436/Charles:997.3168/313.7791/贵:303.5733富：3239598 雄:688.9495'),(2058,'China King ','775.835.8838','460 W. Main St. Ste #5&6','Fernley','NV','89408','0.071','SON:917.213.6970/Fax: 775.835.8839/老板:917.687.3688/(Lin)646.234.7171/219.5540'),(2059,'CaiE Foods','356.8838','1802 A Brierley Way','Sparks','NV','89434','0.083','Cel:771.2638/alan geoge:200.6866/chris:686.4490/Fax: 356.8822/E-mail: caiegeorge@aol.com/Chris(a/p)'),(2060,'Famous Grill','827.8879','5632 Meadowood mall Circle','Reno','NV','89502','0.083','stacy:480.471.5314fax:403.394.2460,jenny/Chef:225.3670/mark:928.710.3046 Debit/Leon chang:702.526.1343 lpchang@yahoo.com'),(2061,'Great Wall Express','775.777.7888','2503 Mountain City Highway Ste. 120','Elko','NV','89801','0.069','775.385.4199 /646.873.0552(Cel):施云飞/Fax:775.753.8644/chef:775.385.4198'),(2062,'Shangri- La Chinese Restaurant','530.753.3398','1750 E. 8th St.','Davis','CA','95616','0',''),(2063,'Thai Royal House #2','530.253.3333','3335 Kietzke Lane','Reno ','NV','89502','0.083','Tom/Joy (white house):229.1589/p o box 303,janesville, ca 96114'),(2064,'Sushi House','358.1122','1269 Baring Blvd.','Sparks','NV','89434','0.083','fax:358.1137/626.5881jason   new:8307047/waiter:378.9682'),(2065,'China Palace (中国酒楼)','775.273.7898','1525 Cornell Ave.','Lovelock','NV','89419','0.071','916.384.5453(Mae)/916.812.3988 (On, yi)'),(2066,'Ko ko s Teriyaki','842.4901','1408 Mount Grant Dr.','Reno','NV','89523','0.083','Chong-Suk Ko:842.4901(Ko Ko)/746.5290(H)/young ko(elder sister)762.4084/762.8433/Jessica Cooper:420-6602'),(2067,'R M Oriental Store & Gift Shop','324.7666','485 E. Plumb Lane','Reno','NV','89502','0.083','Rachael'),(2068,'Thai Delicacy','530.550.1269','11253 Brockway Rd  Ste.#101','Truckee','CA','96161','0','Siri(Sayul女儿):775.360.8899 Sayul:775.400.4440/Jenny(chidchuar chongolnee):775.762.8289'),(2069,'Elegant Affair Catering','775.588.7170','183 1/2 Shady Lane Industrail Park','Stateline','NV','89449','0','p o box 4586, stateline  NV 89449/fax:775.588.7062/Chef Craig Schmidt\'s:530.416.1710'),(2070,'Sushi 7','827.1515','5030 Las Brisas Blvd. Ste. B6','Reno','NV','89523','0.083','Kwon:233.5220/Myong Shepherd:219.6261/matt:232.2431,355.1810'),(2071,'Honey Bakery (甜心饼家)','322.6668','403 Keystone Ave','Reno','NV','89503','0.083','Denny:848.0408'),(2072,'Eureka Cafe','775.237.7628','90 N Main','Eureka','NV','89316','0.069','Jerry yu/angel:650.922.0592'),(2073,'Pinoy Zone','786.3564','325 Claremont St.','Reno','NV','89502','0.083','Agnes Hallmark/Fax:786.3565'),(2074,'CJ Palace China Bistro-Sushi (皇城)','626.8878','129 Los Altos Parkway #119','Sparks','NV','89436','0.083','Fax:851.7285/友:376-2983;Kelly:842.7855/fax:626.9388(851.7285)/Donne:916.207.2746/kellylieng@sbcglobal.net'),(2077,'China Gourmet','530.233.1130','107 W. 2nd St.','Alturas','CA','96101','0','wong ANDY :541.892.0593, 916 544.2276 andy(new)/jack:530.310.6791/fax:530.233.1131'),(2078,'L L Hawaiian B.B.Q(Mae Anne)','322.8888','5150 Mae Anne Ave. #204','Reno','NV','89523','0.083','billy:775.720.8189 Jesica:775.443.0452/jeremiah:832.272.4800,Tracy: 760-851-8167/Ron:391.9337, '),(2079,'Fresh Mex (Keystone)','322.6866','985 W. 5th St.','Reno','NV','89503','0.083','Fax::324.0118/freshmexreno@sbcglobal.net'),(2080,'Icebox','336.5200','9333 Dbl R Blvd #600','Reno','NV','89521','0.083','Gino/Dave richardson'),(2081,'Thai Jasmine','775.783.8625','1328 Highway 395 Ste.#204(next to cayote bar)','Gardnerville','NV','89410','0.071','fax:775.783.8627/Goff:775.781.7309/818.919.3714(cel)/jar:775.220.8845 (cel)/antie:pabao'),(2083,'Golden Dragon(金龙饭庄)','882.8988','3250 Retail Dr. Ste. 145$150','Carson City','NV','89706','0.075','848.0244(陈健国)/厨师230-9715/老板娘：6009207'),(2084,'Lake Tahoe Tourist & Wedding Info','775.267.3370','P.O BOX 10315','ZEPHYR COVE','NV','89448','0.077','Jassy Grant:775.790.2130'),(2085,'Amerikan Ni (Wasabi) ','775.783.1112','1657 Lucerne St.','Minden','NV','89423','0.071','Fax:775.215.5891/fax:775.783.9476/Sherry:775,220,1122,775.266.3821/Czar RUWAY: 775-233-6601/amerikanni@gmail.com'),(2086,'Brew House Pub & Grill','828.2700','6395 So. McCarran','Reon ','NV','89501','0.083','Fax:828.2716/Jac Chabdker'),(2087,'Noodle Cafe','626.9898','113 Los Altos Pkwy #109','Sparks','NV','89436','0.083','Uncle:224-6359; Kelly:560.2065   sandy 7426640 E-mail:sandyl102@yahoo.com Loi/tea cup, llc'),(2088,'Ikoma Sushi','801.244.7039','UNR','Reno','NV','89512','0.083','Min Naing:682.1252chu ching:379.1253  Philip Win: 602-295-1849 Wife : 602-471-0735'),(2089,'Saigon 88','358.9988','654 N McCarran Blvd. ','Sparks','NV','89431','0.083','Henry Huynh'),(2090,'S K Noodle','(   ) 358-6338','2955 N McCarrant BLVD.#104','Sparks','NV','89431','0.083','Tony:800.6599'),(2092,'Pho 21 LLC','424.2121','10580 N McCarran Blvd. Ste. 108','Reno ','NV','89503','0.083','Fax:424.2130/Becky Ngvyen:232.2430/FIN:74-3213135/bus. lic.105154'),(2093,'Spanish Springs Sushi, LLC','626.2229','222 Los Altos Pwy #112-114','Sparks','NV','89436','0.083','Fax:398.2089/424.1410/Jerry Kiger:691.5355/martin:250.1936/fax;424.3764'),(2094,'Tsunami','(916) 230-7483','1020 Johnson Ln','So. Lake Tahoe','CA','96150','0','Fax:530.544.3692/wanna916.230.7483Alex:530-314-0539 909.268.0482-dad:530.307.0845/win aung:650.438.2605/David:510.789.8941/348 Gunsmoke dr. diamond bar CA 91765/grass valley:650.438.2605'),(2095,'Bangkok Tokyo Market','882.8833','200 E. Winnie Ln','Carson City','NV','89706','0.075','Brian/boom:225.9662'),(2096,'White House','530.253.3333','463-795 Main St.','Janesville','CA','96114','0','tom:229.1589'),(2097,'Chutney Indian ','','','Reno','NV','89502','0.083',''),(2098,'New Moon Natural Foods','530.587.7426','11357 Donner Pass Rd. Ste.C','Truckee','CA','96161','0','Fax:530.587.0654/Tony: 787.2483 (H)nmn@sbcglobal.net/ account payable:Kevin '),(2099,'Sushi Moto','853.4246','748 S. Meadows Pkwy #A-11','Reno','NV','89521','0.083','Fax: 853.4247/Won:830.1329'),(2100,'Reno Laundry','527.0979','108 E Grove St.','Reno','NV','89502','0.083','Howard Ung'),(2101,'Happy Garden (Ely)','775.289.3313','558 Aultman St.','Ely','NV','89301','0.077','沈麗:775.686.3259/Sindy:510.213.4333/'),(2102,'Pho','852.6100','6775 Sierra Center Pkwy #600','Reno','NV','89511','0.083','LIAM: 775-971-8029,Lina:619.994.4849 DatVong:848.8111/848.8112dob9.23/559.917.3847/黃志海(黃十):559.313.1180/magie:206.819.4783'),(2103,'Wasabi Sushi Bar & Pacific Cuisine','530.542.4451','2244 Lake Tahoe Blvd. ','So. Lake Tahoe','CA','96150','0','Bun Chan/Nujaree:775.292.0247'),(2104,'Sushimi s','829.2788','3005 Skyline Blvd. #100','Reno','NV','89509','0.083','Steve gertsma:772.5869, Chrition303.9730'),(2105,'Royal Seafood Buffet 皇朝','827.9666','3255 So. Virginia St.','Reno','NV','89502','0.083',''),(2106,'Hosoda Bros. Inc','415.648.7144','1444 Tenessee St.','San Francisco','CA','94107','0','Fax:415.282.6336'),(2107,'Louie s China Bistro 重臨閣','835.6655','1360 Hwy 95A,#7','Fernley','NV','89408','0.071','835.6685/楊生:835.3650/Lories:544.8398'),(2108,'Sushi Lover LLC','323.8899','400 W. 5th St. #102','Reno','NV','89503','0.083','K:250.2338'),(2109,'Ijji Sushi ','356.8668','685 E. Prater Way Ste. 101','Sparks','NV','89431','0.083','A/P:940 matley Ln #16 Reno 89502 Brenda997.9838/Jr:997.8361,WEN:771-6888 Fax:356.8558/fax ;201.0133/230.2616 (Winnie:230.8889)/超敏230.2616'),(2113,'Genghix Asian Fusion (成吉思汗)','887.8883','1480 N Carson St.','Carson City','NV','89512','0.075','Paul:223.0460'),(2114,'Misaki Sushi','853.8988','7485 Longley Ln. Ste. A','Reno','NV','89511','0.083','Lee:636.2120/iva'),(2115,'Thai India Cuisine','530.318.7623','195 Hwy 50','So. Lake tahoe','CA','96150','0',''),(2116,'Bertha Miranda s Mexican Food Restaurant & Cantina','786.9697','336 Mill St.','Reno','NV','89501','0.083','Fax:786.2525/Freddy Miranda/Diana (女),Dera(妻)'),(2117,'Ottolini Transportation Inc','209.931.6888','P O Box 690008','Stockton','CA','95269','0','Fax:209.931.3767'),(2119,'Weber Quality Meats Inc.','510.635.9892','990 Carden St.','San Leandro','CA','94577','0',''),(2120,'Pho Country','882.0200','2495 So. 395 Hwy','Carson City','NV','89706','0.075','fax:882.0243/thomas:291.8191,fax:714.418.0803/chef:775.443.2221/phong t tran:775.220.2010'),(2121,'Egg Roll King #4','677.2808','194 Lemmon Dr.','Reno','NV','89506','0.083','段: 223-8760'),(2122,'Chinese Duck House (鸭店)','829.7001','2960 So. Virginia St.','Reno','NV','89502','0.083','Ken:224.3859/Tung唐:/ Boss: 2304735, Chris'),(2123,'R T Foods','329.9102','635 Ryland','Reno','nv','89502','0.083','fax:329.9103/354.8595 (terisa,alex)/335.6980'),(2124,'Fil - Asian Market','348.8338','709 E. 2nd St. (Wells)','Reno','NV','89502','0.083','Fax:359.3490/Mary'),(2125,'Pearl Of The East','830.4274','3004 Kietzke Ln','Reno','NV','89502','0.083','Aris'),(2126,'Mermaids Sushi &Saki Bar(Men s Club)','342.3280','270 Lake St.','Reno','NV','89501','0.083','a/p:786.1662 jenifer or massiel/Fax:786.1882/Roberto:342.3366/Dickinson/chef rick:342.3280/steve772.5869/al:848.7318 '),(2127,'The Grove At Southcreek','324.7683','95 Foothill Rd.','Reno','NV','89511','0.083','Fax:324.7684/Bud Rymer'),(2128,'Drunken Monkey Sushi','530.582.9755','11253 Brockway Rd. #105','Truckee','CA','96161','0','Fax:530.587.2022/Marco:530.448.3588/a/p Stacy:530.414.1466/Fax:5305872022/Shawn530.263.2210.matt:408.393.0280'),(2129,'Parisa s Cuisine','359.5545','380 Freeport Blvd. #2','Sparks','NV','89431','0.083','815.1479'),(2130,'Kim Lee Sushi (Gardnerville)','775.782.3400','1329 Hwy 395  Ste.#2','Gardnerville','NV','89410','0.071','tony:771.8573'),(2131,'Hong Kong Express','425.6888','9708 State Route 445 Pyramid Way','Sparks','NV','89441','0.083','fax:425.6889/boby:240.2626'),(2132,'Orchid s Authentic Thai Cuisine II, LLC','775.588.5888','177 Hyway 50 Stateline #101','Zephyr Cove','NV','89448','0.071','a/p:Triss,702.979.9898,cel:702.241.3770/email:tjincometax@gmail.com,fax:702.586.8898 add:6370 w. flamingo rd.#28, LV,89103'),(2133,'Jade Garden ','851.8600','199 Damonte Ranch Pkwy #8M','Reno ','NV','89521','0.083','Joe Wong:745.2567/Sara:720.488.7689/Anne'),(2134,'Los Osos Trading Co.','530.307.8379','3510 Pinecrest Ave','So. Lake Tahoe','CA','96150','0','Castro 775.781.4018Teodoro'),(2135,'Bangkok Cuisine South','284.3802','5851 So. Virginia St.','Reno','NV','89000','0.083','Fax:284.3805/846.1109/Chris:846.7912 / Chef:742-1425'),(2136,'Stage Stop Bakery','775.463.3707','11 N. Hwy 95 A','Yerington','NV','89447','0.071','Fax:775.463.5748/Gustavo Novoa:775.294.0170/(h):512 madden lane'),(2137,'Sierra Meat & Seafood','322.4073','1330 Capital Blvd.','Reno','NV','89502','0.083','Pat.'),(2138,'Asian Noodle Too','775.831.8317','868 Tahoe Blvd. 18-19','Incline Village','NV','89450','0.083','Harwin:775.813.4563/Indu'),(2139,'Nikkis Chaat Cafe','530.541.3354','3469 Lake Tahoe Blvd.(Next to Longs drugs at Bijou Center)','So. Lake Tahoe','CA','96150','0','Dave:530.318.4312'),(2140,'Rickshaw s Fine Asian Bistro #2','853.8988','7485 Longley Ln. Ste. A','Reno','NV','89511','0.083','Roseanna:336.9998/Hao:544.8668/Jan:771.7997'),(2141,'Little Saigon','246.3030','801 Overland Loop Ste.103','Dayton','NV','89403','0.071','Fax:246.9953/ LEE: 721-9036 , 19 manzanita Terrace,CC,/Truong 大仔  Nick 细仔'),(2142,'Lulus Taco','240.2038','5630 Meadowwood Mall Circle','Reno','NV','89502','0.083','Micheal:240.2038'),(2143,'Juicy s Giant Hamberger','358.7300','104 Glendale Ave.','Sparks','NV','89431','0.083','Byong Yoon'),(2144,'La Burrita Marinera','815.2154','500 Kietzke Ln.','Reno','NV','89502','0.083','Gabriel Olivera'),(2145,'Wonderful House','775.623.5997','1105 W. 4th St.','Winnemacca','Nv','89445','0.071','Kevin Cun:626.310.2858/Alan Wong(chef)'),(2146,'Fuji Sushi','829.8898','5015 Pyramid Way','Sparks','NV','89436','0.083','Fax: 829.8808'),(2147,'Ella s Global Food &Gift Market','223.8226','628 Mill St.','Reno','NV','89502','0.083','Shella:775.200.8375/mila '),(2148,'BBQ On Stick','313.4254','5640 Meadowwood Mall Circle','Reno','NV','89502','0.083','Mark J Cancino/Joel Cancino:354.9016(dad)/fax:823.9755'),(2149,'Pho Country #2','786.0777','440 C So. Virginia St.','Reno','NV','89501','0.083','fax:786.0770/Duke Ly:721.9157'),(2150,'Oriental Express 東方快餐','359.9888','970 So. McCarran Blvd.#102','Sparks','NV','89431','0.083','fax:359.9886/chef:葉/bossCobey:劉/janie/ 7713587李 肥仔'),(2151,'Sushi Pier Tahoe','775.588.8588','177 So. Tahoe Blvd. #102 (Hyway 50)','Stateline','NV','89449','0.077','fax:775.588.2588/phio:530.307.9475/kimberley:287.6269/brand530.208.7529/jason thompson:4915 mountainshyre rd. reno,89519.0965 BLUETIDES@GMAIL.COM'),(2152,'Tha Joint Sushi & Grill','626.8677','222 Los Altos Pkway #112','Sparks','NV','89436','0.083','Tae:313.1304/ chon/tony:287.3759'),(2153,'Sands Regency','348.2271','345 N. Arlington Ave.','Reno','NV','89501','0.083','Rosemarry:997.7721,Gloria:997.7721/Kelly:348.2270/348.2271, 348.2262 fax: 348 2206'),(2154,'Blue Ribbon Meat Co','358.8116','1436 Prater Way','Sparks','NV','89431','0.083','Fax: 358.0992/sale:al tomasino/owner:scott'),(2155,'Lili s Restaurant ','826.7777','2325 Kietze Lane (& Glove)','Reno','NV','89502','0.083','Tony'),(2158,'Rim (Inside Grand Sierra by Coffee Shop)','123.4567','1230','Reno','NV','89000','0.083','lisa 劉:815.5606/wong joe:815.9389 8184586030 tommy'),(2159,'Lilys China Bristro','885.8080','1280 S. Carson St.','Carson City','NV','89701','0.075','lily:775.315.9434/775.450.2538/James Gotchy 3540 E.nye lane,c c 89706'),(2160,'Thai Nakorn #2','530.544.3232','2108 Lake Tahoe Blvd.','So. Lake Tahoe','CA','96150','0','art:313.7561 Fax:530-544-3268/dollaya lim:815.8828'),(2161,'Ming Dynasty(明宮)','775.635.8638','146 E. Front St.','Battle Mountain ','NV','89820','0.071','Fax:775.635.8279/jenny'),(2162,'CaiE Oriental Cafe','853.9668','770 So. Meadows Pky #101','Reno','NV','89511','0.083','Fax:356.8822/Francisco(Chef):501.1008/cai e:771.2638/庄小姐: 8151843/文:376.2460 '),(2163,'Shwe Min Thar LLC','650.438.2605','335 Mill St. Apt.G','Grass Valley','CA','95945-6718','0','Fax:530.272.8621/Min:650.438.2605'),(2167,'China King #2','626.1738','2473 Wingfield Hill Rd.#150','Sparks','NV','89436','0.083','老板娘：2236276/林775.420.9589'),(2168,'Hana Garden','351.1616','1605 Sullivan Ln','Sparks','NV','89431','0.083','Robert: 213-344-9500 Esther:240.8896'),(2169,'Szechuan Express #4','826.8829 ','3979 S. McCarran Blvd.','Reno ','NV','89502','0.083','Su hong J'),(2170,'Simply Thai','(   ) 425-5000','15 Eagle Canyon Dr. #C101','Sparks','NV','89441','0.083','Sai:232.3874 Kai:232.3754/Ana:775.846.9759'),(2171,'CKM Food LLC (simply good take out)','322.2800','3080 Mill St.','Reno','NV','89502','0.083','Fax: 322.2522/Christopher:220.5873'),(2172,'Saroni Food Service','510.465.6010','1301 26th St.','Oakland','CA','94607','0','Fax:510.465.6020'),(2173,'Win Woo Trading, LLC','510.259.1888','31056 Genstar Rd.','Hayward','CA','94544','0','Fax:510.259.0888/dong:510.363.0572/a/p:vivian:626.538.9191ext350,fax:909.718.87222/a/r Lina '),(2174,'Sawasdee Thai Restaurant','359.3009','2855 N. McCarran Blvd. #108','Sparks','NV','89431','0.083','Fax:359./453.8688/jan:772.1440/Bim (new):'),(2175,'Thai Corner Cafe','327.4333','100 W. 2nd St.','Reno','NV','89501','0.083','Tom:544.5666'),(2176,'Gold Ranch Casino-Dayton','123.4567','755 US Hwy 50 East','Dayton','NV','89403','0.071','rosemary:348.2272'),(2177,'New Comback Internation','510.483.2388','1981 West Ave.140th','San Leandro','CA','94577','0','Fax:510.483.2999冬:510.282.6818/acct#05454-49838'),(2178,'Ruby Thai Kitchen','823.9959','5610 Meadowood Mall Circle #110','Reno','NV','89000','0.083','Roni:813.7685,邓生626.383.7106 DK:813.325.9805/margret:717.333.7350/Sam:916.804.3897/209.204.6471/Fx:770.794.0179a/p:717.333.7350南:240.7113/Mare JESUS 378-1617'),(2179,'Clay Oven','775.831.8317','868 Tahoe Blvd.#18-19','Incline Village','NV','89451','0.083','CHEEMA:6503155510 Jarry: 775.451.4439 sherma:775.409.0795/Barlly:916.225.2496 Ruwan:775.742.2685,manager/Manila:775.339.1553'),(2180,'JACL','747.3886','4120 Falling Water Dr.','Reno','NV','89519','0.083',''),(2181,'Sushi Moto Fernley','775.575.6672','1360 US Hwy 95A #1','Fernley','NV','89408','0.071','Yong Chew:247.8887'),(2182,'China Noodles','358.8866','203 N McCarran(& Victorian/B St.)','Sparks','NV','89431','0.083','Jhon; 232-6423'),(2183,'Nik-N-Willies Pazza','775.265.2775','751 Tillman Lane','Gradnerville','NV','89460','0.071','Roland Martinez:775.265.2126(H)'),(2184,'Cadillac Ranch','331.2000','1330 Scheels Dr. #258','Sparks','NV','89434','0.083','Chanin Settewong:527.7321'),(2185,'Rey Rey ','825.2464','2301 Valley Road','Reno','NV','89512','0.083','maniu:691-6048 Fax:825.2483, Ariana/jose'),(2186,'Thai Thai','775.883.7905/775.392.2929','1300 So. Stewart St.','Carson City','NV','89701','0.075','Kong:775.400.4415/Panida775.720.7902'),(2187,'Orchid Noodle World','530.600.0770','2180 Lake Tahoe Blvd. #7','So. Lake Tahoe','CA','96150','0','Owner:lee alex312.613.8704,Ana:312.613.3845/a/p:trish J:312.613.8704,fax:702.650.9830/Patirce:702.979.9898,fax;702.586.8898/Fax:530.600.0740'),(2188,'Java Sushi','530.582.1144','11357 Donner Passs Rd. Ste. F','Truckee','CA','96161','0','Amin Patel:530.412.3660/Fax:530.214.8202/e mail:sierra sushi@yahoo.com'),(2189,'Yang s Kitchen  (楊家小館)','888.6889','111 E. Telegraph St. ','Carson City','NV','89701','0.074','Fax:882.6899 /楊:848.3188'),(2190,'Sushi Delight','888.2007','111 E. Telegraph St.','Carson City','NV','89701','0.074','Fax:888.2005/林:881.8771'),(2191,'Asian Noodle House ','530.257.0577','1600 Main St.','Susanville','CA','96130','0','Fax:530.257.9170 Kevin Heng:530.816.0745'),(2192,'Thai Kitchen','530.583.1784','877 North Lake Blvd.','Tahoe City','CA','96145','0','rose:424.644.7557/530.414 5824/Boon:530.412.0494'),(2193,'Kenjis','247.3299','314 4th St.','Sparks','NV','89431','0.083','250.0182'),(2194,'Thai Diner','775.623.5050','1038 Grass Valley Rd.','Winnemucca','NV','89445','0.071','Katie:775.625.0631'),(2195,'Carniceria Tres Auigos','324.2122','2145 Sutro St. #4&5','Reno','NV','89512','0.083','Sergio:750.2331'),(2196,'Kim Lee Sushi (Dayton)','246.5555','770 E. Hwy 50','Dayton','NV','89403','0.071',''),(2197,'Casa Baeza Mexican Food','530.587.2161','10004 Bridge & Church St.','Truckee','CA','96160','0','Andres & Noeila Baeza:530.545.1264'),(2198,'Louie s Mandarin Gourmet','775-392.3664','1779 Ironwood Dr.','Minden','NV','89423','0.071','小李:420-6403 louie:544.8398,H:835.6685/Steve:775.230.5393'),(2199,'Ijji Sushi #2','825.6688','4955 So. Virginaia St. ','Reno','NV','89502','0.083','谭846.2996/A/P:940 matley Ln #16 Reno 89502 超敏:230.2616 FAX:201-0133/concord:925.435.6909'),(2200,'Rolls & Spicy','829.2115','1999 So. Virginia St.','Reno','NV','89502','0.083','David:301.312.7191'),(2201,'Woo Chon Sushi','825.2552','5085 So. McCarran Blvd.','Reno','NV','89502','0.083','Wiston:219.5577'),(2202,'Thai Spice Express (Clarkson Plaza)','825.8399','3004 Kietzke  Lane','Reno','NV','89705','0.083','Tina:220.8058'),(2203,'Pho Noodle - Donut Bristro','853.4009','465 So. Meadows Pkway','Reno ','NV','89521','0.083','Chris:800.9000  Sherry:800.3696/chef liu:916.397.3888'),(2204,'La Fonda Restaurant (Niel & Peckham)','284.2950','4385 Neil Rd. #109','Reno','NV','89502','0.083','Sterler:342.5552'),(2205,'Hong Kong Diner  香港小馆# 2','775-852-1113','9410 Prototype Dr #23','Reno','NV','89521','0.083',''),(2206,'Kim Lee Sushi (Yerington)','775.463.1950','211 N. Main St.','Yerington','NV','89447','0.071',''),(2207,'Asian Pho','(   ) 825-5954','4997 Longley Lane','Reno','NV','89511','0.083','小凯997.8566/NGA Ly: (775)313,2489/tamy(Lady)/chef ngan:842.4668'),(2208,'Blue Moon Sushi','775.777.8788','1430 Idaho St.','Elko','NV','89801-3106','0.069','Fax:775.777.8086/王見操:775.385.7577/陳飛:843.3051/羌生妹夫:775.813.7888/new age restaurant llc'),(2209,'101 Taiwanese Cuisine','657.6144','400 W. 5th St. #104','Reno','NV','89503','0.08265','Brett Lin:916.600.6858/小龍775.335.7164'),(2210,'Mylos Greek Food Cafe','825.5492','4200 meadowwood Mall Circle #239 ','Reno','NV','89502','0.083','Mahdi:916.865.7079/DK:813.325.9805'),(2211,'Ling & Louies Asian Bar & Grill','826.5464','4965 So. Virginia St.','Reno','NV','89502','0.083','Fax:201.0272/Tommy Rawlings:544.0971'),(2212,'KitzMo Sushi','826.6789','3335 Kietzke Lane','Reno','NV','89502','0.083','ReillyErnie:742.3517 ,Fax:201.0266/jason:762.6187'),(2213,'Full Belly Deli','530.550.9516','10825 Pioneer Trail Suite#103','Truckee','CA','96161','0','Gregg DAmato:815.9195'),(2214,'Mount Mogrit Gourmet','775-219.5509','5837 Nebula Ct.','Sun Valley','NV','89433','0.083',''),(2215,'Asian Noodle Express','331.7447','970 So. McCarran Blvd. #102','Sparks','NV','89431','0.083','hellen'),(2216,'Armani Chef (Mae Anne)','787.3888','6280 Sharland Ave. #102','Reno','NV','89523','0.083','Fax:787.8006小平:815.2379 小平老公：233-9104 '),(2217,'Asian Paradise','870.1788','1131 Steamboat Pkwy #810-820','Reno','NV','89521','0.083','Fax:870.1799/Tony:925.899.9168/D.Gao(manager):772.3534'),(2218,'Calvada Food Sales','359.4740','950 Southern Way','Sparks','NV','89431','0.083',''),(2219,'Armani Chef (Meadowwood Mall)','(   ) 828-8080','5640 Meadowwood Mall Circle\n','Reno','NV','89502','0.083','ping: 815-2379'),(2220,'#102 AFC/Raley s Chinese Food Counter','775-353.8802','2895 N. McCarran Blvd.','Sparks','NV','89431','0.083','Luies:230.3523/Ruben:720.4570,347.644.3699/陈领导619.890.5780/Paul:813.313.7799'),(2221,'China King #3','355.8885','754 N McCarran Blvd.','Sparks','NV','89431','0.083','Fax:355.8886/Lin:646.234.7171'),(2223,'#105 AFC/Raley s Chinese Food Counter','746.6400','1630 Robb Drive','Reno','NV','89523','0.083','Ebgar:745.2065/Maggie:510.255.9102/Kevin:510.825.9960/linda:510.255.9098'),(2224,'Mthai','(   ) 826-8116','4786 Caughlin Pkwy\n','Reno','NV','89509','0.083','Jan: 8306947'),(2225,'Golden Dragon #2','246.9988','9 Retail Road Ste.9','Dayton','NV','89403','0.071','Fax:246.9989/Linda Lu:230.2688/chen:848.0244/老板娘:230.2688'),(2226,'#059 AFC/Smith s Sushi Bar','123.4567','175 Lemmon Dr.','Reno','NV','89506','0.083','珊珊:510.936.4171/Maggie:510.255.9102'),(2227,'Castle Foods','333.9466','2555 Dickerson Rd.','Reno','NV','89503','0.083','Fax:333.2811/Shawn Chalmers'),(2228,'Kei Sushi','775.841.1102','3220 Hyway 50 E.','Carson City','NV','89701','0.075','Silvia:530 318 0733'),(2229,'JFE Sushi (Inside Smith s)','208.941.7771','750 So. Meadows Pkwy','Reno ','NV','89521','0.083','Jason 714.726.6011/Ron:775.400.9585/Sandra chef:208.941.7771'),(2230,'Reef Sushi & Sake Bar','800.1388','50 N. Sierra St.','Reno','NV','89501','0.083','Fax:800.1389/patty:412.7853'),(2231,'Wild West Wing','828.2199','5000 #1 Meadowood Circle','Reno','NV','89502','0.083','Fax:201.0133/Luis Farnandez:848.6698'),(2232,'Kubuki Sushi ','775.777.3474','2525 Mountain City Hwy Ste. 107','Elko','NV','89801','0.069','Monzon joes gabriel:997.5035/alba(妻) M.zamudio.k@gmail.com'),(2233,'Sushi Minato','825.2552','5085 S. McCarran Blvd.','Reno','NV','89502','0.083','Tai:530.9553'),(2234,'#127 Chinese AFC/Raley s','510.918.6144','1040 Emerald Bay Rd.','So. Lake Tahoe','CA','96150','0','Sisi:510.918.6144/牛:2875305/Jin guey510.676.3803 maggie:510.255.9102/Alex:530.314.0539,909.268.0482'),(2235,'What The Pho (Next to Mcdonald)','232.0138','5640 Meadowood Mall Circle','Reno','NV','89502','0.083','Flank:232.0138/ Nam:771-5321 new/771-3506,Linze(wife):771.3219'),(2236,'JJs Sushi ','359.0888','2868 Vista Blvd. #116','Sparks','NV','89434','0.083','Fax:359.1188周:224.4676,Jessie:224.3181'),(2237,'Fresh Creations Cafe & Culinary School','284.1080','800 W. 2nd St.','Reno','NV','89503','0.083','Pim Murshall:772.3523'),(2238,'Silver Chop Stick (銀筷餐館)','424.2121','10580 N. McCarran Bvld. #108','Reno','NV','89503','0.083','Bill:219.6592'),(2239,'Yama Noodles','530-542-9262','3330 Lake Tahoe Blvd. #15','South Lake Tahoe','CA','96150','0','Keith:530.400.2820/Cesar Soresca: 530-318-1702'),(2240,'Cafe De Thai (New)','829.8424','7499 Longley Lane','Reno','NV','89511','0.083','Alex:971.7497'),(2241,'Egg Roll King #5','323.8188','1220 So. Wells Ave.','Reno','NV','89502','0.083','于343.2869/于太：636.0291'),(2242,'Tres Amigos Carniceria','284.2275','550 E. Prater Way','Sparks','NV','89431','0.083','Sergio:750.2331'),(2244,'#127 Sushi AFC/Raley s','510.918.6144','1040 Emerald Bay Rd.','So. Lake Tahoe','CA','96150','0','Sisi:510.918.6144 Maggie:510.255.9102/Kevin:510.825.9960/linda:510.255.9098'),(2245,'Chopstix','246.9999','9 Retail Road Ste.9','Dayton','NV','89000','0.071','李光绪老板:775-815-0443  林：775.220.6309'),(2246,'White House # 2','530-257-6666','3085 Johnstonville Rd','Susanville','CA','96130','0','Joyce 775-682.0001/Tom:775.229.1589'),(2247,'Ijji Sushi #3 (Wing Lung LLC)','851.8668','199 Damonte Ranch Parky Way Ste.#8M','Reno','NV','89521','0.083','A/P:940 matley Ln #16 Reno 89502 /Kirtis 谭846.2996/Alan:848.9568/Picardo 775.351.5784 Luis:775.848.6698'),(2248,'#119 Sushi AFC/Raley s','530.262.9343','4000 Lake Tahoe Blvd #6 ','So. Lake Tahoe','CA','96150','0','Sisi:510.918.6144 Candy:530.262.9343'),(2249,'Got Pho','775-771-3219','13967 S. Virginia Suite 910','Reno','NV','89511','0.083','Nam 771-3219'),(2250,'Mammoth Mountain Ski Area,LLC','760.934.2571x3484','P O Box24/1000 Minaret Road','Mammoth Lakes','CA','93546','0','Fax:760.934.0612/Charles D.Smith:314.276.2206/email:csmith@mammoth-mtn.com'),(2251,'#119 Chinese AFC/Raley s','775.450.2698','4000 Lake Tahoe Blvd #6 ','So. Lake Tahoe','CA','96150','0','Don'),(2252,'Sakana','376.1454','7655 Town Square Way #112','Reno','NV','89523','0.083','sakanaclubreno@gmail.com/clay lee(gm)412.3225,Owner:sue lee,nancy lee'),(2253,'#115 AFC/Raley s (Golden Valley) (Anita Sushi)','351.5933','1075 North Hills Blvd. # 270','Reno','NV','89506','0.083','Anita:351.5933'),(2254,'China Kitchen','(   ) 787-3888','6280 Sharland Av. #102','Reno','NV','89523','0.083','Fax:787.8006/Annie:354-8634,May:720.7339'),(2255,'The Wok LLC (Sparks)','(   ) 355-5835','1825 Silverado Blvd.','Sparks','NV','89512','0.083','Marty Liu:315.6190'),(2256,'Magic Gourmet','650.239.9068','375 Adrian Rd.','Millbrae','CA','94030','0','Fax:650.239.9071/Sara'),(2257,'Sierra Gold Seafood','775-352.9595','1335 Greg St. Suite 106','Sparks','NV','89431','0.083','David West,Scott Lee:3595700 Fax 3529577 Email:scott@sierragoldseafood.com'),(2258,'Danny s Kopper Kettle','530.258.2698','243 Main St.','Chester','CA','96020','0','Danny (michelle)Leung:530.249.3838/chef:415.860.7923'),(2259,'Red Lantern','760.934.9432','248 Old Mammoth Road','Mammoth Lakes','CA','93546','0','Jeremy Graham:480.818.1627, A/P:Nancy cassidy:760.934.2515/ Nacy 310-210-5700 sierra nv resort'),(2260,'Tomo Sushi & Grill','775.297.3581','135 Clearview Dr. #127','Carson City','NV','89701','0.075','MG: 7752408836Kwok:233-5220'),(2261,'Crawfish Asian Cuisine (小龍蝦)','622.6802','1296 E. Plumb Ln. #H','Reno','NV','89502','0.083','Ken:815.2828/雄:688-9495 Fu:323.9598'),(2264,'My Thai','530.544.3232','2108 Lake Tahoe Blvd.','So. Lake Tahoe','CA','96150','0','hot pot:775-586-8883 lift:9094993062/chef julius:909.343.3877'),(2265,'Pho ChopStix','775.783.8888','1329 N. 395 Hwy #8','Gardnerville','NV','89410','0.071','Thins(son775.430.2595),Lien: 775.720.9462 tommy:220.9590/Chef Henry:916.248.1129'),(2266,'VN Pho','775.428.5858','2183 W Williams Ave','Fallon','NV','89406','0.076','强(Kevin/Jenny)775.666.7663,Nhan(哎丫);775.475.1177'),(2267,'Cargill Food','209.923.6444','P O Box 749481','Los Angeles','CA','90074-4212','0','Linda'),(2268,'Siam Classic Thai Cuisine','775.721.8182','4250 Cochise St. #40','Carson City','NV','89703','0.075','Jidapa Kreck:775.291.6691'),(2269,'Whitney Peak Hotel LLC','398.5400','255 N. Virginia St.','Reno ','NV','89501','0.083','chef:7735625606 steven773.562.5606'),(2270,'Jane s Sushi Inc.(Inside Smiths)','775.527.2534','175 Lemmon Dr.','Reno ','NV','89506','0.083','Nick Smith:775.527.2534'),(2271,'Szechuan Express (Fallon) 四川','775.423.8300','610 W. William ','Fallon','NV','89512','0.076','Tom:530.965.3306'),(2272,'Gold Ranch','348.2271','320 I-80 West',' Verdi','NV','89439','0.077',''),(2274,'Pho Kietzke','870.9488','3004 Kietzke Lane','Reno','NV','89502','0.083','LOC NGUYEN775 229 5889/ 10181DANNAY DR. Reno, 89521/Bruce:303.829.0905/TJ:400.5060'),(2275,'Moo Dang (牡丹)','775-420-4267','1565 S. Virginia St.','Reno','NV','89502','0.083','Opal:357.2924/John'),(2276,'The Twisted Fork','(775) 853-6033','1191 Steamboat Pkwy','Reno','NV','89521','0.083','Sergio: 775-544-3497'),(2277,'2 - D Wok (土地锅)','622.3098','2303 So. Virginia St. #5','Reno','NV','89502','0.083','Shawn Lin:527.2013'),(2278,'L L Hawaiian B.B.Q(Dayton)','775-246-2313','6 Pinecone Road,Suite 5','Dayton','NV','89403','0.071','Jeremiah: 997.8768 Taylor: 775-219-4683 '),(2279,'Food Truck-Starkeys -Tahoe LLC','530.412.3853','15231 Donnington Lane','Truckee','CA','94000','0','David Starkey'),(2280,'Himiko Steak House & Sushi','775.777.8744','780 W. Sliver St. #108','Elko','NV','89801','0.069','Miguel: 7753978699 Himikoap@gmail.com PepeJoseGabrel :997-5035 Wife:775.813.7560'),(2281,'Thai Asian','(909) 499-3062','15 US-50 Stateline','Stateline','NV','89449','0.077',''),(2282,'Saigon Diner (Shopper Sq.)','(   ) 440-5337','289 E. Plumb Lane','Reno','NV','89502','0.083','Diane:762.8303,Bob:544.7602/email:ngoedoanthu@yahoo.com'),(2283,'Viet Pho (On Moana)','329.8889','315 Moana Lane','Reno','NV','89502','0.083','Lilly:742.8977,Richard:240.7072'),(2284,'Pho Cali','470.8272','440 C So. Virginia St.','Reno','NV','89501','0.083','Tuan Nguyen:2096276639'),(2285,'Agave Restaurant & Bar','775.753.8857','232 Silver St.','Elko','NV','89801','0.069','ALBA7758137560'),(2286,'Tokyo Sushi','775.825.8828','1999 So. Virginia St. Set A','Reno','NV','86502','0.083','Crystal775.815.8258/ Chao:530.9873'),(2287,'Asia Reno Market','775-359-3636','2152 Prater Way','Sparks','NV','89431','0.083','Kam:287.1449 /Long Thai:408-250-1885/Lily:287.1449'),(2288,'#17 Winco Sushi Bar','513-226-1978','2855 Northtowne Ln','Reno','NV','89512','0.083','Don Kim'),(2289,'Leontine Gourmet Foods','775-846-8868','390 Freeport Blvd, Unit 8','Sparks','NV','89431','0.083',''),(2290,'Lotus Pho','530-600-0258','3838 Lake Tahoe Blvd.','So. Lake Tahoe','CA','96150','0','Ken 775.901.2222'),(2291,'Original Thai Restaurant','775-343-5001','2995 Vista Blvd','Sparks','NV','89434','0.083','Bob 775.343.5001'),(2292,'S F Kitchen','775-786-7747','1775 Mill St','Reno','NV','89502','0.083','846.6168(San Vong)/Fiona春'),(2293,'Liberty Sports Bar & Grill','760.709.1591','3399 Main St.','Mammoth Lakes','CA','93546','0','mike:760.709.1591'),(2294,'Koi Sushi','775-298-2091','874 Tahoe Blvd. #26','Incline Village','NV','89415','0.083','Won Chong:775.830.1329'),(2295,'Ijji Sushi #4','775-507-4554','10580 N Mccarran Blvd #102','Reno','NV','89503','0.083','yang jie:846.3827or650.600.8634, jayreno@gmail.com/ijjicorp@gmail.com/A/P:940 matley Ln #16 Reno 89502'),(2296,'Uchi Ramen','775-237-9637','400 W 5Th St 105','Reno','NV','89509','0.083','Peng Yang 775 237 9637'),(2297,'Chopsticks (JP) ','775-833-3663','120 Country Club Dr #62','Incline Village','NV','89451','0.083','KIM:843-7001   JP:200-6558'),(2298,'999 Pho LLC','775.686.6599','2309 Kietzke Ln','Reno','NV','89502','0.083','Luu,thai quang:775.297.6540'),(2299,'My Thai & Noodle','775.586.8757','177 Suite 101 Highway 50','Stateline','NV','89449','0.077','lift:9094993062/chef julius:909.343.3877'),(2300,'Siu Korean BBQ','775.502.3333/3222','754 N. Mc Carran Blvd.','Sparks','NV','89431','0.083','富哥：775.323.9598'),(2302,'Sweet Barrel','775-997-5035 ','1500 College Pkwy','Elko','NV','89801','0.069',''),(2303,'Poke King','502.3422','10490 N. Mccarran Blvd','Reno','NV','89503','0.083','Long:408.250.1885/Daniel 510.436.5738'),(2306,'Cece s Cafe','775-217-2653','1555 South Taylor St','Fallon','NV','89406','0.076','Cecilia 75 217 2653'),(2307,'Codfathers Fish & Chips','843-789-4649','1350 Stardust St #3','Reno','NV','89503','0.083','Christ: 419-788-2615'),(2308,'L L Hawaiian BBQ (Sparks)','775.384.1940','1495 E Prater Way #125','Sparks','NV','89434','0.083','kyle:760.774.6725/jeremiah:997.8768,'),(2309,'Cafe Zenon','530-583-1517','251 N Lake Blvd.','Tahoe City','CA','96145','0','Suzanne Nguyen: 541.868.5028'),(2310,'Sushi One','(775) 828-2335','4944 S Virginia St','Reno','NV','89502','0.083','CHOO:7756361451 Jessie:400.3930/Angel:771.5042 Jan:772.1440,Site:771.3505/'),(2311,'Lotus Pho 2','530.600.3244','3330 Lake Tahoe Blvd. #15','So. Lake Tahoe','CA','96150','0','Tommy Nguyen:220.9590/Ken775.901.2222/chef Lanh:808.250.7474 '),(2312,'Creazian Restaurant','775-657-8135','425 S Virginia St','Reno','NV','89502','0.083','LIAM: 775-971-8029,Lina:619.994.4849 '),(2313,'Kei Sushi Reno','775.657.9257','5085 So McCarran Blvd.','Reno','NV','89502','0.083','manager:Efrain Dela Rosa:412.1222/owner:Sylvia Dela rose:530.318.0733'),(2314,'Walker Restaurant (Wok & Grill)','530-257-8199','1600 Main Street','Susanville','CA','96130','0','Gary:2092043923华:6263530985.亮:6262464874Michell:415.909.9305/Benny梁: 530.249.3838 许师傅:775.848.1851'),(2315,'#1824 Sushi Bar in Safeway (Tahoe)','510.918.6144','1020 Johnson Blvd','So. Lake Tahoe','CA','96150','0','Jimmy:510-388 1393 Wanna:9162307483 crissy'),(2316,'House Of Mexica','775.384.1690','3600 Warren Way','Reno','NV','89509','0.083','Luis: 775.848.6698/Patricia Patino (owner):846.3028'),(2317,'Chinese Wok N Rolls','760-924-2646','549 Old Mammoth Rd. Ste.101','Mammoth','CA','93546','0','Ana Galvan:760.718.0682'),(2319,'William Mccullough','530-412-1028','P.O Box 10223','Truckee','CA','96162','0','Billy'),(2320,'Hiroba Sushi (Sparks)','775-470-8177','1495 E. Prater Way #113','Sparks','NV','89434','0.083','young:240.8994'),(2321,'#1210 AFC/SafeWay','646-387-1231','5150 Mae Anne Ave','Reno','NV','89523','0.083','阿姨:6265594422 Saphie/谢小姐'),(2322,'Gusto Catering & Meals','775-247-5573','1385 Gault Way','Sparks','NV','89431','0.083',''),(2323,'Bluefin Poke','775.683.3288','170 So. Virginia St.#102','Reno','NV','89501','0.083','Ken:775.815.2828'),(2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083','Billy(MG)775.720.8189/Kyle: (GM):760.774.6725'),(2325,'Tofu House','775.657.9181','294 E. Moana Ln #1','Reno','NV','89502','0.083','Kwon:233.5220/Young: 775240.8994'),(2326,'Finbomb Sushi','775.343.9037','1081 South Virginia Street','Reno','NV','89502','0.083','Michael: 7753439037'),(2327,'Roundabout Catering','775.747.2090','631 Dunn Circle','Sparks','NV','89434','0.083','Colin Smith:775.745.4331'),(2328,'Twenty Two Bistro LLC','530.584.6170','1995 Squaw Valley Road','Olympic Valley','CA','96146','0','Alex:5303180197'),(2329,'Tahoe City Sushi (TC Sushi)','530.414.4731','690 N Lake Blvd','Tahoe City','CA','96145','0','Vanessa:530.414.8544/530.807.7384/gabriel:530.721.0647'),(2330,'Roshi','515.661.2431','750 So. Meadows (Inside Smiths)','Reno ','NV','89521','0.083','Helly Sui:515.661.2431, Van Ceu Lion:515.491.7118'),(2331,'Kwok s Bistro Fine Asian Cuisine','775.507.7270','275 W. St','Reno','NV','89501','0.083','Denie:343.9861 (Quoc):771.6558'),(2332,'Siam Cuisine','530.550.0503','10770 Donner Pass Rd. Suite 101','Truckee','CA','96161','0','5303868824 Saengsri Natchaya'),(2333,'Krem Cream Cake & Pie','775.685.8695','115 E. Moana Ln #102','Reno','NV','89502','0.083','Casey: 626.533.5033'),(2334,'Cedarling','530.283.2000','2061 East Main Street','Quincy','CA','95971','0','Ling:530.816.0050'),(2335,'Tacos Jausco Cantina & Grill','775.737.9905','9105 Lemon Dr.','Reno','NV','89506','0.083','Maria Herrera:530.386.0511,Rigo Uribe:530.386.5080'),(2336,'Alibi Ale Works','530.536.5029','10069 Bridge St.','Truckee','CA','96161','0','Rylan Cordova (GM)303.803.4266'),(2337,'Famous Beijing Wok LLC (Flaming Wok)','775.878.1788/683.3988','5650 Meadowood Mall Circle','Reno','NV','89502','0.083','Billy 洪：253.886.0618， Miss刘:917.650.3500'),(2338,'China Wok (Sparks)','775.501.5778','2835 Vista Blvd Ste 106','Sparks','NV','89434','0.083','jacky:775.881.8771'),(2339,'Arario Midtown','(775) 870-8202','777 S Center St #200','Reno','NV','89501','0.083','CHO:7752333300'),(2340,'An-Asian Kitchen & Bar','775.852.6320','7499 Longley Ln. Reno, NV 89511','Reno','NV','89511','0.083','KEN:775.901.2222'),(2341,'Kopper Kettle Cafe',' (530).257.2966','2535 Main St','Susanville','CA','96130','0','Michelle:415.909.9305'),(2342,'Bonanza Produce Co.','358.2442','1925 Freeport Blvd.','Sparks','NV','89432','0.083','alain Kocher:650.458.1586'),(2343,'La Mint - Vietnamese Kitchen','(775) 470-8400','770 S Meadows Pkwy #101','Reno','NV','89521','0.083','Micheal220.9298/Tony:830-1165,Tommy:220.9590'),(2344,'Suko Yama Sushi','530.584.6020','1850 Village South Rd','Squaw Valley','CA','96149','0','Rich:530.414.8544'),(2346,'Analees Cafe','775.294.6303','66 W Center St','Fallon','NV','89406\n','0.076','analee:619.787.9664'),(2347,'Glends Venue','775-378-6460','1587 Vassar St','Reno','NV','89502','',''),(2348,'Tandoori Flames','775.399.1208','1760 W Williams Ave.','Fallon','NV','89406','0.076','916.390.7056'),(2349,'Thai On Ski Run','530.420.8424','1169 Ski Run Blvd','South Lake Tahoe','CA','96150','0','Thanya:310.658.3328'),(2350,'Busy Bee Kitchen','510.388.6066','8230 US-50 E','Stagecoach','NV','89429','0.071','Marco:510.513.2405/Mimi'),(2351,'MB Grill','775.384.1626','121 Los Altos Pkwy #107','Sparks','NV','89436','0.083','702.234.8886'),(2352,'Five Star Indian Cuisine','509.730.1825','1555 So. Tylor St.(By Gas Station)','Fallon','NV','89406','0.076','Aman:509.730.1825'),(2353,'China Lee','775.501.5778','2838 Vista Blvd','Sparks','NV','89434','0.083','Yan Owen 775.354.9006'),(2354,'Nagmori Trade LLC','281.506.7819','15360 Vantage Pkwy ','Houston','TX','77032','',''),(2355,'Capital City Sushi','775.883.2372','319 N. Carson  St','Carson','NV','89435','0.075','Brad Armstrong 775.722.2334'),(2356,'Bowls N Go LLC','775.267.0005','963 Topsy Ln','Carson','NV','89705','0.075','Kwon:233.5220'),(2357,'Teppanyaki Fresh Japanese Grill','775.777.8688','1924 Idaho St','Elko','NV','89801','0.069','AIHONG:530.355.5873'),(2358,'Hoang Chinese Restaurant','530.233.6770','204 W 12th St STE 2-3','Alturas','CA','96101\n','0','Lien:530.640.3425 CHI:916.698.7409'),(2359,'Oishi Sushi','775.515.4375','111 E telegraph St','Carson','NV','89701','0.075','77529767323\n'),(2360,'OA Chinese','775.824.0670','3326 S McCarran Blvd','Reno','NV','89502','0.083','Ming:685.3717'),(2361,'Tee Jay s Corner Cafe','775.434.7277','420 N Carson St','Carson','NV','89701','0.075','775.287.1395'),(2362,'Sakura (MK Sakura LLC)','775.233.5220','1352 U.S. Hwy 395 N #112','Gardnerville','NV','89410','0.071',''),(2363,'Luis&Celedonia  Santos','530.283.0591','90 E. Main St.','Quincy','CA','95971','0',''),(2364,'#110 AFC/Raleys','775.399.3881','2389 wingfield hills road','Sparks','NV','89436\n','0.083','Stephanie珊珊 775.399.3881'),(2365,'#188 AFC/SAFEWAY','775.399.3881','1031 Steamboat Pkwy','Reno','NV','89521','0.083','黄:6265594422'),(2366,'Sip of Saigon','714.398.5375','1272 Disc dr.','Sparks','NV','89441','',''),(2367,'Asian Mart - Yang','(775) 409-4002','115 E. Moana Ln','Reno','NV','89502','0.083','杨 916.250.8800'),(2368,'Os Poke LLC','775.233.5220','5005 Landybank ct','Reno','NV','89519','0.083',''),(2369,'#114 Raley s','916.671.2380','3701 S Carson St','Carson City','NV','89701','0.075','梁 916.803.8899'),(2370,'Bambu Sushi Ramen Inc','775.997.5035','1400 W. Winnemucca Blvd.','Winnemucca','NV','89445','0.071','Jose Gabrel:775.997.5035'),(2371,'China Palace','775.291.1582','3135 Highway 50 East','Carson City','NV','89706','0.075','Joshua Verde:775.291.1582, Cesar Verde>775.630.9611'),(2372,'Asian Mart- Jeremmiah','775.315.0320','','Reno','NV','','0.0826','');
/*!40000 ALTER TABLE `customlist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `inventorylist`
--

DROP TABLE IF EXISTS `inventorylist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `inventorylist` (
  `inv_id` int NOT NULL,
  `en_name` varchar(200) DEFAULT NULL,
  `Caseprice` decimal(12,2) DEFAULT NULL,
  `CATEGORY` int DEFAULT NULL,
  `ch_name` varchar(80) DEFAULT NULL,
  `Itempercase` int DEFAULT NULL,
  `Itemprice` decimal(12,2) DEFAULT NULL,
  `Taxable` tinyint(1) DEFAULT NULL,
  `caseunit` varchar(20) DEFAULT NULL,
  `itemunit` varchar(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `inventorylist`
--

LOCK TABLES `inventorylist` WRITE;
/*!40000 ALTER TABLE `inventorylist` DISABLE KEYS */;
INSERT INTO `inventorylist` VALUES (12345,' Eel Coating Sauce(Nippon Shokken)  6/5.2#',0.00,100,'寿司鳗鱼酱',1,0.00,0,'',''),(5123,'A-1 Steak Sauce 2/1g',97.00,100,'',2,50.00,0,'cs','gal'),(10350,'Abalone - Fresh Froz, 3-4',60.00,400,'鲜冻鲍鱼只',1,60.00,0,'lb','lb'),(5863,'Abalone - Giant Top Shellfish 24 cans/15oz',168.00,100,'鲍鱼只',24,7.50,0,'cs','can'),(11767,'Abalone - Sauce (LLK)  12/18.9oz ',75.00,100,'鲍鱼汁',1,7.99,0,'cs','btl'),(9025,'Almond Cookie 12#',26.00,100,'杏仁饼',1,21.00,0,'cs','bag'),(4751,'Almond Halves 25#',150.00,100,'杏仁片',1,6.00,0,'cs','bag'),(9073,'Almond Halves 5#',33.25,100,'杏仁片',1,6.65,0,'bag','bag'),(10642,'Almond Powder',4.95,100,'杏仁粉',1,4.95,0,'lb','lb'),(11238,'Almond Powdered Dessert (Torto) 20/5.2oz',2.19,100,'多多杏仁糊',1,2.19,0,'box','box'),(9566,'Apron - Plastic   10/100',39.95,100,'胶围裙',1,39.95,0,'cs','cs'),(12269,'Apron - Poly Disposable (LDPE) 10/50pcs',1.00,100,'一次性围裙',1,1.00,0,'box','box'),(9965,'Apron - Poly Disposable 24 x42   10/100pcs',6.50,100,'一次性围裙',1,6.50,1,'box','box'),(9957,'Apron - Vinly (Blue/Yellow)',13.95,100,'生胶围裙',1,13.95,1,'ea','ea'),(11480,'Arrow Root Starch 50/8oz',95.00,100,'葛粉',1,1.99,0,'cs','pkg'),(11278,'Assembly - Cold Stem Heavy Duty',23.00,100,'冷水水龙头',1,23.00,1,'ea','ea'),(11279,'Assembly - Hot Stem Heavy Duty',23.00,100,'热水水龙头',1,23.00,1,'ea','ea'),(9809,'Assorted Cookies (30)',1.00,100,'贺年糖果',1,1.00,0,'ea','ea'),(9559,'Bacon -  30#',58.50,300,'咸烟肉',1,1.95,0,'cs','cs'),(5096,'Bags - #12 Brown (80959/13603) 2/500 pcs ',30.00,100,'纸袋',1,30.00,0,'bundl','bundl'),(5440,'Bags - #16 Brown (80976/13201565) 2/500 pcs',42.00,100,'纸袋',1,42.00,0,'bundl','bundl'),(9127,'Bags - #2 Brown (80005) 500 pcs',9.95,100,'纸袋',1,9.95,0,'bundl','bundl'),(10781,'Bags - #20 Brown (80082) 500pcs(1/8)',21.95,100,'纸袋',1,21.95,0,'bundle','bundle'),(9764,'Bags - #25 Brown (80980/18428) 2/500pcs',54.00,100,'纸袋',1,54.00,0,'bundl','bundl'),(9080,'Bags - #4 Brown (81007) 8/500 pcs',19.50,100,'纸袋',1,19.50,0,'bundl','bundl'),(10964,'Bags - #420 Brown (13604) 500pc',25.00,100,'紙袋',1,25.00,0,'bundle','bundle'),(9181,'Bags - #46 Brown(18061/18062)  500pcs (1/6 /12x7x17)',78.00,100,'紙袋',1,78.00,0,'bundl','bundl'),(10020,'Bags - #735  (52#) 500pcs',37.95,100,'纸袋',1,37.95,0,'bundle','bundle'),(5439,'Bags - #8 Brown (80984/13602 35#) 4/500 pcs',27.00,100,'纸袋',1,27.00,0,'bundl','bundl'),(11245,'Bags - Flat Clear 10x12  1k',1.00,100,'',1,1.00,0,'cs','cs'),(11246,'Bags - Flat Clear 14x20  1k',1.00,100,'',1,1.00,0,'cs','cs'),(11432,'Bags - Flat Clear 6x10 (1.0mil)  1k',1.00,100,'透明胶袋',1,1.00,0,'cs','cs'),(11861,'Bags - Flat Clear 6x12 (2.0mil)  2k',1.00,100,'透明胶袋',1,1.00,0,'cs','cs'),(11243,'Bags - Flat Clear LD 8x15 (2.0 mil)1k ',1.00,100,'透明胶袋',1,1.00,0,'cs','cs'),(9943,'Bags - Foil Quart Chinese 1kpcs',88.95,100,'锡纸袋',1,82.50,0,'cs','cs'),(12122,'Bags - Hot Dog Waxed  3.5x1.5x8.5   6k',145.00,100,'热狗袋',1,145.00,0,'cs','cs'),(10708,'Bags - Hot Dog Waxed  3x1.75x9   2k',30.00,100,'热狗袋',1,30.00,0,'cs','cs'),(9374,'Bags - Merchandise 12x3x18  500/cs (White) ',18.00,100,'商用胶袋',1,15.00,0,'cs','cs'),(9373,'Bags - Merchandise 14x3x21(Yellow) 500/cs (M)',24.50,100,'商用胶袋',1,24.50,0,'cs','cs'),(9372,'Bags - Merchandise 17x4x24 (Red) 500/cs(L)',26.00,100,'商用胶袋',1,26.00,0,'cs','cs'),(9748,'Bags - Merchandise 8.5x11 (Red) 1m/cs',13.00,100,'商用胶袋',1,13.00,0,'cs','cs'),(5834,'Bags - Plastic (L)  12x7x23',25.00,100,'大背心袋',1,23.00,0,'cs','cs'),(9382,'Bags - Plastic (L) 1000pcs ( Blue Box)',18.00,100,'大背心袋',1,18.00,0,'cs','cs'),(6114,'Bags - Plastic (M)   10.5x6x19 (0.59mil)',27.95,100,'中背心袋',1,30.50,0,'cs','cs'),(12144,'Bags - Plastic (Reusable/L) 12x7x21.5 300cts',21.00,100,'环保背心袋',1,21.00,0,'cs','cs'),(6248,'Bags - Plastic (S)  8x5x17  (0.47mil)',25.95,100,'小背心袋',1,25.95,0,'cs','cs'),(9186,'Bags - Plastic Clear 5 x3.5 x13  1000 pcs',13.95,100,'小胶袋',1,13.95,0,'cs','cs'),(5089,'Bags - Plastic Roll   11 x14   4/1Roll',25.00,100,'卷袋',4,10.00,0,'cs','roll'),(9578,'Bags - Plastic Roll  11 x14  4/1Roll (HP/1.2mic)',25.00,100,'薄卷袋',1,10.00,0,'cs','roll'),(9674,'Bags - Plastic Roll Long 11 x17  (HP/China) 28#',38.00,100,'薄长卷袋',1,7.50,0,'cs','roll'),(5194,'Bags - Plastic Roll Long 11 x17  4/1Roll 28#',38.00,100,'长卷袋',1,7.50,0,'cs','roll'),(11583,'Bags - Plastic Roll Long 11 x19  4/1(LD/1.25mic)',23.00,100,'薄长卷袋',1,7.50,0,'cs','roll'),(9649,'Bags - Plastic Roll Long 11 x19  4/1roll (China)',25.00,100,'长卷袋',1,7.50,0,'cs','roll'),(5098,'Bags - Wax #19 (#6534)  2m',45.00,100,'蜡纸袋',1,45.00,0,'cs','cs'),(9170,'Bags - Wax #25',25.50,100,'蜡纸袋',1,25.50,0,'cs','cs'),(11429,'Baking Powder (Arm&Hammer) 24/16oz',26.00,100,'锤仔粉',1,1.29,0,'box','box'),(4841,'Baking Powder (Clabber Girl) 6/5#',60.00,100,'發粉',6,12.00,0,'cs','can'),(11099,'Baking Powder (Kraft-Calumet) 6/5#',73.00,100,'红番头發粉',1,14.00,0,'cs','can'),(11942,'Baking Soda (Arm&Hammer) 24/16oz',1.29,100,'锤仔粉',1,1.29,0,'box','box'),(5883,'Baking Soda (Clabber Girl)  6/5#',32.00,100,'苏打粉',1,6.50,0,'cs','can'),(9805,'Bamboo - Pith (Bamboo Fungus) 3.5oz/pkg',13.95,100,'竹笙',1,13.95,0,'pkg','pkg'),(9681,'Bamboo - Sour Sliced 30/16oz',1.39,100,'酸筍衣',1,1.39,0,'cs','pkg'),(10349,'Bamboo - Spring Froz. 20/16oz',45.00,400,'冷冻春筍',1,2.75,0,'cs','pkg'),(10348,'Bamboo - Winter Froz. 20/16oz',45.00,400,'冷冻冬筍',1,2.75,0,'cs','pkg'),(9904,'Bamboo Leaves 40/12oz',2.99,100,'竹叶',1,2.99,0,'pkg','pkg'),(12308,'Bamboo Shoot - Baby Tip (JHC) 36/16oz',52.00,100,'小笋尖',1,2.49,0,'cs','pkg'),(4731,'Bamboo Shoot - Diced 6/5#',30.00,100,'筍丁',6,5.99,0,'cs','can'),(9771,'Bamboo Shoot - Slender (DF) 24/28oz',40.00,100,'小竹笋',1,1.99,0,'cs','jar'),(4732,'Bamboo Shoot - Sliced 6/5#',30.00,100,'筍片',6,5.99,0,'cs','can'),(10571,'Bamboo Shoot - Strip (Dragonfly) 24/28.5oz',30.50,100,'小罐筍丝',1,1.89,0,'cs','btl'),(11692,'Bamboo Shoot - Strip (WC) 24/19oz',2.99,100,'小罐筍丝',1,2.99,0,'can','can'),(5184,'Bamboo Shoot - Strip 6/5#',30.00,100,'筍丝',6,5.99,0,'cs','can'),(10324,'Bamboo Shoot - Tip 24/19oz',2.99,100,'筍尖',1,2.99,0,'can','can'),(6329,'Bamboo Shoot - Winter 24/552g',28.95,100,'小罐冬筍',1,2.99,0,'cs','can'),(10965,'Bamboo Shoot - Winter 6/5#',29.00,100,'大罐冬筍',1,5.50,1,'cs','can'),(5894,'Banana Leaves Froz. 30/16oz',39.00,400,'冻香蕉叶(方）',25,2.50,0,'cs','pkg'),(12176,'Banana Leaves Round Froz. 30/16oz',2.29,400,'冻香蕉叶（圆）',1,2.29,0,'pkg','pkg'),(10166,'Bansankan Sauce For Eel (Unagi) 3/10/7.4fz',1.00,100,'寿司鳗鱼醬',1,1.00,0,'cs','box'),(9238,'Baran Ebi - Sushi Decoration',10.50,100,'寿司虾饰',1,10.00,0,'box','box'),(9237,'Baran Yamagata - Sushi Decoration 1000pcs',6.95,100,'寿司山饰',1,6.95,0,'box','box'),(9860,'Basin - Plastic 21x9 ',22.50,100,'大胶盆',1,22.50,1,'ea','ea'),(5437,'Bathroom Tissue - 48 Rolls',25.00,100,'卫生卷紙',1,25.00,1,'cs','roll'),(5895,'Bathroom Tissue - 96 Rolls',60.00,100,'卫生卷紙',1,45.00,1,'cs','roll'),(5896,'Bathroom Tissue - Jumbo 12 Roll  (3.75 /1kFeet/roll)',33.50,100,'大卫生卷紙',1,33.50,1,'cs','roll'),(4818,'Bathroom Toilet Seat Cover 20/250pcs (J1040038)',33.00,100,'马桶垫紙',1,2.29,1,'cs','pkg'),(6075,'BBQ Sauce - Korean Bulgogi 12/13oz (LKK)',31.50,100,'韩国烧烤酱',1,2.99,0,'cs','can'),(11230,'BBQ Sauce - Korean Bulgogi Marinade For Meat (Hanasia) 12/980g',55.00,100,'韩亚烧烤酱',1,5.99,0,'cs','btl'),(11025,'BBQ Sauce - Korean For Short Rib (Wang/#10757) 12/29.63oz',40.00,100,'韩国烧烤酱',1,3.79,0,'cs','jar'),(10852,'BBQ Sauce (ASN/TAS)  12/26oz',65.00,100,'东之味沙茶酱',1,6.95,0,'cs','can'),(5920,'BBQ Sauce (Bullhead) 12/26oz',115.00,100,'沙茶酱',12,11.99,0,'cs','can'),(5921,'BBQ Sauce (Bullhead) 6/7#',121.00,100,'沙茶酱',1,24.00,0,'cs','can'),(9433,'Bean - Black Dry  50/14oz',35.50,100,'黑豆',50,1.89,0,'cs','pkg'),(9319,'Bean - Black Eye',1.19,100,'眉豆',1,1.19,0,'lb','lb'),(11849,'Bean - Black Soy Dried 50#',1.09,100,'黑黃豆',1,1.09,0,'lb','lb'),(11098,'Bean - Lentils Red 25#',34.00,100,'红扁豆',1,34.00,0,'cs','lb'),(10547,'Bean - Mung  50#',75.00,100,'绿豆',1,2.00,0,'sk','lb'),(11759,'Bean - Mung 10/5#',7.95,100,'绿豆',1,7.95,0,'bag','bag'),(9318,'Bean - Mung 50/12oz',65.00,100,'绿豆',1,1.50,0,'bag','bag'),(9882,'Bean - Mung Peeled 50#',88.00,100,'去衣绿豆',1,2.39,0,'sk','lb'),(10602,'Bean - Mung Peeled 50/12oz',69.50,100,'去衣绿豆',1,1.59,0,'cs','pkg'),(10698,'Bean - Mung Peeled 8/5#',65.00,100,'去衣绿豆',1,8.50,0,'cs','pkg'),(11428,'Bean - Mung Powder (YiFeng) 12/200g',21.00,100,'绿豆粉',1,1.95,0,'cs','pkg'),(11103,'Bean - Red 10/5#',7.50,100,'红豆',1,7.50,0,'pkg','pkg'),(9095,'Bean - Red Dried 50#',2.89,100,'红豆',1,2.89,0,'lb','lb'),(11395,'Bean - Red Dried 65/12oz',1.39,100,'红豆',1,1.39,0,'pkg','pkg'),(11932,'Bean - Red Paste In Heavy Syrup 24/16.58oz (Wang/#1116477)',84.00,100,'红豆罐头',1,3.99,0,'cs','can'),(11069,'Bean - Red Small ',2.99,100,'赤小豆',1,2.99,0,'lb','lb'),(4801,'Bean - Salted Black 40/17oz/jar',60.00,100,'豆豉',40,1.99,0,'cs','jar'),(10889,'Bean - Soy Dried 60#',1.29,100,'黃豆',1,1.29,0,'lb','lb'),(9440,'Bean - Sweetened Red Paste 24/19oz',35.00,100,'红豆沙',24,1.89,0,'cs','can'),(11907,'Bean Curd - Preserved Red  12/500g',76.50,100,'招财上海南乳',1,7.50,0,'cs','jar'),(6184,'Bean Curd - Preserved Red  36/8.8oz',49.00,100,'伏中南乳',1,3.89,0,'cs','jar'),(11397,'Bean Curd - Preserved w. Chili White (DF)24/10.5oz',42.00,100,'四川辣腐乳',1,1.95,0,'cs','jar'),(11489,'Bean Curd - Preserved w. Chili White 24/16oz',1.95,100,'陈满记辣腐乳',1,1.95,0,'jar','jar'),(10099,'Bean Curd - Preserved w. Chili White 36/12oz',43.00,100,'辣腐乳',1,1.95,0,'cs','jar'),(6180,'Bean Curd - Preserved White 36/13oz',43.00,100,'腐乳',36,1.95,0,'cs','jar'),(10683,'Bean Curd Sheet Fresh Froz. 40/16oz',8.00,300,'鮮冻腐皮',1,8.00,0,'pkg','pkg'),(12197,'Bean Curd Skin (Dragon Brand) 16oz/pkg',7.99,100,'鲜腐皮',1,7.99,0,'pkg','pkg'),(10989,'Bean Curd Stick 10/600g',8.49,100,'散裝腐竹',1,7.99,0,'lb','pkg'),(12115,'Bean Curd Stick 20/14oz',6.99,100,'香菊腐竹',1,5.99,0,'pkg','pkg'),(9180,'Bean Curd Stick 50/6oz',1.99,100,'腐竹',1,3.50,0,'pkg','pkg'),(10100,'Bean Curd w.Rice Sce 24/13oz',1.00,100,'甜酒腐乳',1,1.00,0,'cs','cs'),(9641,'Bean Paste - Black  12/2.2# (Korean)',45.95,100,'韩国黑豆炸酱',1,3.99,0,'cs','jar'),(9461,'Bean Paste - Black 4.62lb/jar (korean)',7.99,100,'韩国黑豆炸酱',1,5.99,0,'jar','jar'),(11968,'Bean Paste - Black Fermented  12/1.1# (Korean/Jja Jang)',1.00,100,'韩国黑豆炸酱',1,1.00,0,'cs','jar'),(9157,'Bean Paste - Hot (Korean) 12/1.1#',30.50,100,'韩辣豆酱',1,2.95,0,'cs','jar'),(9156,'Bean Paste - Hot Korean 12#',25.00,100,'韩辣豆醬',1,25.00,0,'cs','cs'),(11515,'Bean Paste - Red (Companion) 24/18oz',67.50,100,'良友颗粒红豆沙',1,3.50,0,'cs','can'),(11119,'Bean Paste - Red (Korean) 24/16.58oz',3.29,100,'韩国红豆醬',1,3.29,0,'can','can'),(11969,'Bean Paste - Red Sweetened (Companion) 24/18oz',4.50,100,'冰糖红豆沙',1,4.50,0,'ea','ea'),(11323,'Bean Paste - RedSweetened (Wu Chung) 18oz',3.99,100,'伍中冰糖红豆沙',1,3.99,0,'can','can'),(10545,'Bean Paste -Red  4/11#',40.00,300,'红豆沙',1,40.00,0,'bag','bag'),(12124,'Bean Paste -Red  500g/pkg (WZH)',2.99,300,'红豆沙',1,2.99,0,'pkg','pkg'),(11185,'Bean Paste Soy (Har Har) 24/16oz',58.00,100,'哈哈豆醬',1,2.79,0,'cs','jar'),(11184,'Bean Paste Soy Hot (Har Har) 24/16oz',58.00,100,'哈哈辣豆醬',1,2.79,0,'cs','jar'),(11711,'Bean Sauce - (KC) 24/13oz',43.50,100,'原晒豉',1,2.35,0,'cs','jar'),(9479,'Bean Sauce - (KC) 6/5#',30.95,100,'原晒豉',1,5.95,0,'cs','can'),(12258,'Bean Sauce - (Union) 24/8oz',1.00,100,'联合小瓶豆醬',1,1.00,0,'btl','btl'),(10071,'Bean Sauce - (Union) 4/1gal',48.00,100,'联合豆醬',1,15.00,0,'cs','gal'),(11118,'Bean Sauce - Fermented Soybean (DF)24/13oz',2.19,100,'潮州豆瓣',1,2.19,0,'jar','jar'),(9616,'Bean Sauce - Ground (KC) 24x13oz.',36.95,100,'冠珍磨原豉',1,1.99,0,'cs','btl'),(6055,'Bean Sauce - Ground (KC) 6/5#',38.00,100,'冠珍磨原豉',6,7.50,0,'cs','can'),(11094,'Bean Sauce - Hot (Union) 24/8oz',30.50,100,'小瓶辣豆瓣醬',1,1.79,0,'cs','btl'),(6285,'Bean Sauce - Sweet Szechuan 24/15oz',55.00,100,'四川甜醬',1,2.95,0,'cs','jar'),(6279,'Bean Sauce - Szechuan (Yellow) 48/16oz',125.00,100,'四川豆瓣酱',1,3.59,0,'cs','can'),(10193,'Bean Sauce Black - Garlic (DY) 12/7oz',1.00,100,'蒜蓉豆豉醬',1,1.00,0,'cs','cs'),(6079,'Bean Sauce Black - Garlic (LKK) 12/13oz',42.00,100,'蒜蓉豆豉醬',1,3.99,0,'cs','jar'),(9293,'Bean Sauce Black - Garlic (LKK) 6/5#',52.50,100,'蒜蓉豆豉酱',6,9.95,0,'cs','can'),(5730,'Bean Sauce -Hot  (Union) 4/1gal',48.00,100,'联合辣豆醬',4,15.00,0,'cs','gal'),(6281,'Bean Sauce Hot - Szechuan (Blue)48/16oz',125.00,100,'四川辣豆瓣醬',1,3.59,0,'cs','can'),(5252,'Bean Sprouts 20#/cs',20.00,300,'芽菜',4,20.00,0,'cs','bag'),(9008,'Bean Sprouts 5#/bag',5.25,300,'芽菜',1,5.25,0,'bag','bag'),(7307,'Bean Sprouts Soy 10#',1.59,300,'大豆芽',10,1.59,0,'lb','lb'),(10095,'Bean Thread (DFLY/Green) (2J7/87)50/14oz',1.00,100,'青色粉丝',1,1.00,0,'cs','cs'),(10096,'Bean Thread (DFLY/Red)(2L5/099)50/14oz',1.00,100,'龙口粉丝(红)',1,1.00,0,'cs','cs'),(12289,'Bean Thread (DHi) 50/8/2oz',125.00,100,'台湾冬粉',1,3.50,0,'cs','pk'),(10094,'Bean Thread (DHi/16pcs) 20/21oz',61.00,100,'台湾冬粉',1,4.99,0,'cs','pkg'),(5898,'Bean Thread (Pink) 50/10.5oz',90.00,100,'小扎粉丝',1,2.79,0,'cs','pkg'),(9322,'Bean Thread 100/8.8oz',60.00,100,'粉丝',50,1.00,0,'cs','pkg'),(10453,'Bean Thread 250/100g',0.39,100,'小扎粉丝',1,0.39,0,'pkg','pkg'),(5374,'Bean Thread 50/17.6oz',75.00,100,'大扎粉丝',50,1.99,0,'cs','pkg'),(11925,'Bean Thread Vemicelli (G.Deer) 30/17.6oz',75.00,100,'龙口粉丝',1,3.50,0,'cs','pkg'),(12160,'Beef - 2   Center Cut Leg Bone 30#',65.70,400,'多骨髓牛骨',1,2.29,0,'cs','lb'),(12107,'Beef - Aorta',7.49,500,'黄喉/牛心椗',1,7.49,0,'lb','lb'),(11300,'Beef - Back Rib (Choice)',1.99,500,'牛排骨',1,1.99,0,'lb','lb'),(10687,'Beef - backrib Circle-T   20#',30.00,400,'牛排骨',1,1.50,0,'cs','lb'),(10688,'Beef - Bnls Loin Wing',2.30,500,'牛腰肉',1,2.30,0,'lb','lb'),(10230,'Beef - Brisket',4.50,500,'牛胸肉',1,4.50,0,'lb','lb'),(11910,'Beef - Chinese Cut 20#',40.00,500,'中式切片牛肉',1,2.00,0,'cs','lb'),(10435,'Beef - Chuck Roll Sliced 40#',99.60,400,'切片牛肉',1,2.49,0,'cs','lb'),(5743,'Beef - Chuck Tender',3.55,500,'嫩牛颈肉',60,3.55,0,'lb','lb'),(5902,'Beef - Cut Leg Bone ',0.69,500,'牛骨',1,0.69,0,'lb','lb'),(10634,'Beef - Diced Stew',2.29,500,'牛粒',1,2.29,0,'lb','lb'),(5903,'Beef - EyeRound',3.39,500,'牛眼肉',1,3.39,0,'lb','lb'),(12128,'Beef - Fingers Meat Rib',6.99,500,'牛肋条（腩）',1,6.99,0,'lb','lb'),(10608,'Beef - Fully Cooked Stewa Meat  30#',39.00,400,'熟牛肉',1,1.30,0,'cs','lb'),(11293,'Beef - Fzn Rough FLK (Packerland)',4.09,500,'小包裝牛腩',1,4.09,0,'lb','lb'),(10520,'Beef - Honeycomb Tripe 22#',61.38,400,'牛肚',1,2.79,0,'cs','lb'),(9352,'Beef - Knuckle (Sirloin Tips)',3.99,500,'牛肉',1,3.99,0,'lb','lb'),(12245,'Beef - Knuckle Sliced (Sirloin Tips)',4.99,500,'切片牛',1,4.99,0,'lb','lb'),(12108,'Beef - Omasum',7.49,500,'牛肚/毛肚',1,7.49,0,'lb','lb'),(9485,'Beef - Oxtail  15#',59.85,400,'牛尾',1,3.99,0,'cs','lb'),(10776,'Beef - Oxtail  Cut 30#',239.70,400,'切段牛尾',1,7.99,0,'cs','lb'),(11001,'Beef - Oxtail Joint Cut ',12.99,500,'单独包牛尾骨',1,12.99,0,'lb','lb'),(9646,'Beef - Pectoral ',4.09,500,'牛肉',1,4.09,0,'lb','lb'),(10640,'Beef - Peeled Skirt Steak',2.39,500,'牛肉',1,2.39,0,'lb','lb'),(11358,'Beef - Ribeye Central 6/Up',5.50,500,'牛肋眼',1,5.50,0,'lb','lb'),(10631,'Beef - Rough Flank Bulk Central ',2.59,500,'便牛腩',1,2.59,0,'lb','lb'),(5905,'Beef - Shank Banana',4.39,500,'牛腱',1,4.39,0,'lb','lb'),(11960,'Beef - Shank Banana Heel Muscle (Swift/2pc)',4.50,500,'小包牛腱',1,4.50,0,'lb','lb'),(10815,'Beef - Short Rib Center Cut (3/8 cc) 30#',257.70,400,'牛仔骨',1,8.59,0,'cs','lb'),(5906,'Beef - Short Rib End Cut (3/8) 40#',290.00,400,'牛仔骨',1,7.25,0,'cs','lb'),(11935,'Beef - Short Rib Prime Center Cut (3/8 cc) 10#',62.90,400,'牛仔骨',1,6.29,0,'cs','lb'),(10689,'Beef - Shortrib Cow  5/16',3.75,500,'牛仔骨',1,3.75,0,'lb','lb'),(12087,'Beef - Shortrib Cut  41#',184.50,400,'牛仔骨 切',1,4.50,0,'cs','lb'),(10548,'Beef - Sirloin',2.50,500,'牛肉',1,2.50,0,'lb','lb'),(10554,'Beef - Sirloin Tips',2.50,500,'牛肉',1,2.50,0,'lb','lb'),(9093,'Beef - Slice 4mm (Knuckle)',3.95,500,'切片牛',40,3.95,0,'lb','lb'),(10758,'beef - Small Intestine (Tripas)   30#',46.50,400,'牛肠',1,1.55,0,'cs','lb'),(5907,'Beef - Special Trim',3.89,500,'牛肉',1,3.89,0,'lb','lb'),(10757,'Beef - Spleen Centtral  ',1.25,500,'牛膀',1,1.25,0,'lb','lb'),(5908,'Beef - Stew Meat (Flank Tip)',3.99,500,'牛腩',1,3.99,0,'lb','lb'),(11061,'Beef - Strip Loin 100% Greenlea NZ',4.29,500,'牛肉',1,4.29,0,'lb','lb'),(12146,'Beef - Strip Loin NY Steak',4.50,500,'牛肉',1,4.50,0,'lb','lb'),(10582,'Beef - Striploin  ',3.35,500,'牛外脊肉',1,3.35,0,'lb','lb'),(11065,'Beef - Striploin 100% Packerland USA',4.19,500,'牛肉',1,4.19,0,'lb','lb'),(10308,'Beef - Tenderloin 5Up Central',7.99,500,'牛柳肉',1,7.99,0,'lb','lb'),(5909,'Beef - Tendon  10#',79.90,400,'牛筋',22,7.99,0,'cs','lb'),(11204,'Beef - Tongue Froz. White Caviness #1',5.95,500,'牛舌',1,5.95,0,'lb','lb'),(11034,'Beef - Top Sirlion ',3.49,500,'牛里脊肉',1,3.49,0,'lb','lb'),(11035,'Beef - Top Sirlion/Topbutt (ET)',4.29,500,'牛肉',1,4.29,0,'lb','lb'),(9855,'Beef - Tri Tip ',2.95,500,'炒牛肉',1,2.95,0,'lb','lb'),(5901,'Beef - Tripe (AA) 22#',61.38,400,'牛柏叶',20,2.79,0,'cs','lb'),(12243,'Beef - Wagyu Ribeye Bulk',25.00,500,'和牛',1,25.00,0,'lb','lb'),(5900,'Beef Ball (Great Wall) (311) 20/11oz',80.00,400,'牛肉丸',20,4.50,0,'cs','pkg'),(12021,'Beef Ball (Kim Son) 24/10oz',85.00,400,'金山牛肉丸',1,4.50,0,'cs','pkg'),(10013,'Beef Ball (WC)  30/8oz',55.00,400,'牛肉丸',1,2.00,0,'cs','pkg'),(9317,'Beef Ball (Xihu) 5/5#/cs',125.00,400,'西湖牛肉丸',25,6.00,0,'cs','lb'),(9125,'Beef Ball Tip',2.49,500,'牛肉',1,2.49,0,'lb','lb'),(9597,'Beef Ball w.Tendon (Great Wall) (312) 20/11oz',80.00,400,'牛筋丸',1,5.79,0,'cs','pkg'),(12022,'Beef Ball w.Tendon (Kim Son)  24/10oz',85.00,400,'金山牛筋丸',1,4.50,0,'cs','pkg'),(12024,'Beef Ball w.Tendon (Kim Son)  5/4#',95.00,400,'金山牛筋丸',1,18.00,0,'cs','pkg'),(9224,'Beef Base',2.99,100,'牛精',1,2.99,0,'jar','jar'),(11878,'Beef Corned (OX&Palm) (L) 24/15oz',145.00,100,'咸牛肉',1,699.00,0,'cs','pkg'),(9040,'Beef Meat Ball (WC) 30/8oz',50.00,400,'味全牛丸',1,2.00,0,'cs','pkg'),(9701,'Beef Meat Ball (Xihu) 24/14oz',75.00,400,'西湖牛丸',1,3.75,0,'cs','pkg'),(9702,'Beef Meat Ball (Xihu) w/Tendon 24/14oz',75.00,400,'西湖牛筋丸',1,3.75,0,'cs','pkg'),(9486,'Beef- Sirloin Butt',0.00,400,'牛后腰脊肉',1,0.00,0,'',''),(12077,'Beef Sliced (Chinese) ',4.50,100,'中式炒牛肉片',1,4.50,0,'lb','lb'),(11420,'Beef Sliced (Hot Pot) ',8.95,100,'火锅牛肉片',1,8.95,0,'lb','lb'),(10039,'Berta Marie Cookies 24/7oz',0.99,100,'甜饼干',1,0.99,0,'pkg','pkg'),(10418,'Bird s Nest Concentrate',59.95,100,'浓缩燕窩',1,59.95,0,'ea','ea'),(10419,'Bird s Nest W. Rock Sugar (2 Btl)',55.00,100,'冰糖燕窩',1,55.00,0,'ea','ea'),(9071,'Black Pepper Sauce 12/8.1oz',26.50,100,'黑椒酱',1,2.45,0,'cs','jar'),(5735,'Bleach  6/gal',22.00,100,'漂白水',1,4.29,1,'cs','btl'),(10638,'Board - Cutting Plastic White 12 x18 x1 ',18.50,100,'砧板',1,18.50,1,'ea','ea'),(10701,'Board - Cutting Round Wood Chop 20 x4 ',53.00,100,'木砧板',1,53.00,1,'ea','ea'),(10148,'Board - Cutting Rubber 12 x18 x1 ',23.00,100,'寿司砧板',1,23.00,1,'ea','ea'),(11058,'Board - Cutting Rubber 15 x20 x1 ',26.50,100,'白胶砧板',1,26.50,1,'ea','ea'),(10225,'Board - Cutting Rubber 15 x28 ',49.50,100,'寿司砧板',1,49.50,1,'ea','ea'),(10224,'Board - Cutting Rubber 15 x37 ',60.00,100,'寿司砧板',1,60.00,1,'ea','ea'),(10229,'Board - Cutting Rubber 18 x24 x1 ',48.00,100,'寿司砧板',1,45.00,1,'ea','ea'),(10212,'Board - Cutting Rubber 18 x24 x1/2 ',25.95,100,'寿司砧板',1,29.95,1,'ea','ea'),(12272,'Board - Cutting Rubber 20 x48 x3/4 ',250.00,100,'白胶砧板',1,250.00,0,'ea','ea'),(12030,'Boba - 16oz Cup (H042113/JH500Y) 20/100 ct',85.00,100,'波霸机饮杯',1,5.99,0,'cs','pkg'),(11864,'Boba - 16oz Cup 1k ct',1.00,100,'波霸饮杯',1,1.00,0,'cs','cs'),(11863,'Boba - 24oz Cup (H042142) 50x20 ct',70.00,100,'波霸机饮杯',1,1.99,0,'cs','pkg'),(12183,'Boba - Black Tea 10/1.32lb/pkg',9.99,100,'阿萨姆红茶',1,9.99,0,'pkg','pkg'),(12162,'Boba - Bubble Ice Coffee Powder 20/2.2#',13.00,100,'泡沫冰咖啡粉',1,13.00,0,'pkg','pkg'),(11752,'Boba - Coffee Creamer 12/2.2#',82.50,100,'咖啡奶精',1,7.99,0,'cs','pkg'),(11753,'Boba - Fructose  55#',53.00,100,'果糖',1,53.00,0,'cs','cs'),(11880,'Boba - Jasmine Green Tea Superfind 10/600g',16.00,16,'波霸绿茶葉',1,16.00,0,'bag','bag'),(12184,'Boba - Jasmine Tea 1.32lb/pkg',14.99,100,'茉莉绿茶',1,14.99,0,'pkg','pkg'),(11746,'Boba - Juice Lychee  6/5.5#',69.00,100,'荔枝汁',1,11.95,0,'btl','btl'),(11754,'Boba - Juice Mango  6/5.5#',69.00,100,'芒果汁',1,11.95,0,'cs','btl'),(11716,'Boba - Lychee Natate Coco 4/8.36oz',18.00,100,'荔枝椰果',1,18.00,0,'jar','jar'),(12278,'Boba - Magic Original 6/4.4lb',12.99,100,'魔力晶球(原味)',1,12.99,0,'pkg','pkg'),(12169,'Boba - Popping Lychee 4/7.04#',17.25,100,'波霸爆爆珠（荔枝）',1,17.25,0,'btl','btl'),(11699,'Boba - Powder Avocado 20/2.2#',13.00,100,'牛油果粉',1,13.00,0,'bag','bag'),(11898,'Boba - Powder Coconut 20/2.2#',220.00,100,'椰子粉',1,13.00,0,'cs','bag'),(11729,'Boba - Powder Green Tea 20/2.2#',220.00,100,'绿茶粉',1,13.00,0,'cs','bag'),(12088,'Boba - Powder Honeydew 20/2.2#',220.00,100,'绿哈密瓜粉',1,13.00,0,'cs','pkg'),(12170,'Boba - Powder Mango 20/2.2#',14.00,100,'芒果牛奶粉',1,14.00,0,'pkg','pkg'),(11899,'Boba - Powder Melon20/2.2#',220.00,100,'哈密瓜粉',1,13.00,0,'cs','pkg'),(11905,'Boba - Powder Strawberry 20/2.2#',220.00,100,'草莓粉',1,11.95,0,'cs','pkg'),(11776,'Boba - Powder Taro 20/2.2#',220.00,100,'芋头粉',1,11.95,0,'cs','pkg'),(12171,'Boba - Powder Thai Tea 20/2.2#',13.00,100,'泰式奶茶粉',1,13.00,0,'pkg','pkg'),(11703,'Boba - Rainbow Agar 4/8.36oz',18.00,100,'彩虹椰果',1,18.00,0,'jar','jar'),(11856,'Boba - Sealing Film PP 450m 6roll/cs',40.00,100,'波霸封口膠纸',1,40.00,0,'roll','roll'),(10064,'Boba - Straw 18cm For Boba 100/45ct',51.00,100,'波霸吸管',1,0.99,0,'cs','box'),(12129,'Boba - Straw 21cmx12mm Wrapped 9/250cts',32.00,100,'有包波霸吸管',1,4.59,0,'cs','pkg'),(11857,'Boba - Straw 22cm For Boba 100/45ct',51.00,100,'波霸吸管',1,0.99,0,'cs','pkg'),(11858,'Boba - Straw 22cm For Boba Wrapped 40/40ct',0.99,100,'有包波霸吸管',1,32.50,0,'cs','pkg'),(11867,'Boba - Straw Unwrapped  100/50ct',65.00,100,'波霸吸管',1,65.00,0,'cs','cs'),(11874,'Boba - Straw Wrapped 10mm/7.5   50/40ct (C9002s)',49.00,100,'有包波霸吸管',1,49.00,0,'cs','cs'),(11873,'Boba - Straw Wrapped 10mm/9   40/40ct (C9060S)',62.00,100,'有包波霸吸管/長',1,62.00,0,'cs','cs'),(11866,'Boba - Straw Wrapped Black 70/50ct',78.00,100,'有包波霸吸管',1,78.00,0,'cs','cs'),(11865,'Boba - Straw Wrapped Color 70/50ct',78.00,100,'有包波霸吸管',1,78.00,0,'cs','cs'),(11732,'Boba - Strawberry Juice 6/5.5#',69.00,100,'草莓汁',1,11.95,0,'cs','btl'),(11635,'Bonito Flake - Hanakatsuo 2/10/2.82oz/bag',4.50,100,'小包柴鱼片',1,4.50,0,'bag','bag'),(9098,'Bonito Flake - Hanakatsuo 5/1#/bag',20.00,100,'柴鱼片',1,20.00,0,'bag','bag'),(12097,'Bowl -  Wood For Sushi Rice24  ',310.00,100,'24寸木盘',1,310.00,1,'ea','ea'),(5836,'Bowl - 12oz Foam (82100)(Th10012) 8/125pcs',29.95,100,'小碗',1,21.51,0,'cs','cs'),(9453,'Bowl - 12oz Foam 300pcs',8.79,100,'小碗',1,6.74,0,'cs','cs'),(11828,'Bowl - 21oz Swirl Blue Bamboo (5306BB)12/dz',27.48,100,'6寸蓝竹汤碗',1,2.29,1,'dz','ea'),(6301,'Bowl - 22oz Teriyaki (T0022) 500pcs',55.00,100,'饭碗',1,55.00,0,'cs','cs'),(10897,'Bowl - 22oz Teriyaki 6/50 ',49.95,100,'饭碗',1,49.95,0,'cs','cs'),(11070,'Bowl - 24oz  150ct (ERD-24B)',37.00,100,'饭碗',1,37.00,0,'cs','cs'),(10838,'Bowl - 24oz  600ct (D700)',86.95,100,'饭碗',1,86.95,0,'cs','cs'),(9950,'Bowl - 24oz Plastic w. Lid 150sets',45.95,100,'带盖饭碗',1,45.95,0,'cs','cs'),(11845,'Bowl - 25oz Rice Blue Bamboo (5206BB)12/dz',26.28,100,'蓝竹饭碗',1,2.19,1,'cs','cs'),(11392,'Bowl - 32oz 6 7/8  Blue Bamboo (5307BB)',35.88,100,'32oz蓝竹碗',1,3.60,1,'dz','dz'),(9554,'Bowl - 32oz Melemine 7 1/4  (5275)',35.00,100,'大汤碗',1,3.25,1,'dz','ea'),(9019,'Bowl - 36oz 300ct',68.00,100,'大碗',1,62.85,0,'cs','cs'),(9949,'Bowl - 36oz Plastic w. Lid 150sets',58.95,100,'胶碗连盖',1,58.95,0,'cs','cs'),(11948,'Bowl - 36oz Plastic w. Lid 200sets (CBL36)',59.00,100,'云吞圆胶汤碗',1,59.00,0,'cs','cs'),(12267,'Bowl - 38oz Plastic w. Lid (B-38B)150sets Black',62.00,100,'黑色云吞圆胶汤碗',1,62.00,0,'cs','cs'),(12268,'Bowl - 38oz Plastic w. Lid (B-38W)150sets White',62.00,100,'白色云吞圆胶汤碗',1,62.00,0,'cs','cs'),(11846,'Bowl - 39oz Rice Blue Bamboo (5207BB)12/dz',38.28,100,'蓝竹饭碗',1,3.29,1,'cs','cs'),(11372,'Bowl - 4 3/4 x 4 3/4  Round Square (PS3105W) 12pc/box',46.20,100,'方口圆碗',1,3.85,1,'dz','dz'),(11348,'Bowl - 4 3/8  Blue Bamboo (3006BB) 12pc/box',21.00,100,'蓝竹汤碗',1,1.75,1,'box','ea'),(10763,'Bowl - 4.5   China White w. Blue Fish',2.25,100,'瓷饭碗',1,2.25,1,'ea','ea'),(10941,'Bowl - 4.5  China White (21099) 4dz/cs',62.50,100,'瓷饭碗',1,1.50,1,'cs','ea'),(11893,'Bowl - 42oz 8 1/2  Black (5185JBR)',43.00,100,'黑色大汤碗',1,43.00,1,'dz','dz'),(10595,'Bowl - 45oz Melemine 8.25  (5285TB)',3.75,100,'蓝花大汤碗',1,3.75,1,'ea','ea'),(12375,'Bowl - 48oz Plastic w. Lid (B-48W) 150sets White',65.00,100,'白色云吞圆胶汤碗',1,65.00,0,'cs','cs'),(11847,'Bowl - 56oz Rice Blue Bamboo (5208BB)12/dz',59.88,100,'蓝竹饭碗',1,4.99,1,'cs','cs'),(11015,'Bowl - 6.25  Eggplant (Ep506k) 12pc/box',41.00,100,'汤碗',1,3.89,1,'box','ea'),(10226,'Bowl - Green Soup (5285J)',50.95,100,'大胶汤碗',1,4.35,1,'dz','ea'),(9843,'Boxs - #1 Black(Paper) 2.5x4-3/8x3.5  450cts',59.95,100,'一号纸盒',1,59.95,0,'cs','cs'),(9844,'Boxs - #8  Black(Paper)   300cts',53.95,100,'八号纸盒',1,53.95,0,'cs','cs'),(11157,'Bread - Froz. Hand-Pull Layered  w.Onion (3pcs) 20/450g',45.00,400,'葱抓饼/一窝丝',1,2.95,0,'cs','pkg'),(9892,'Bread - Froz. Indian (Roti Paratha) 24/5pc ',35.00,100,'印度薄饼',1,1.99,0,'cs','pkg'),(11158,'Bread - Froz. Roti Paraha w.Onion 24/5pcs',35.00,400,'印度洋葱烙餅',1,1.99,0,'cs','pkg'),(6005,'Bread - Froz. Thai (Roti Prathas) 24/6ps',45.00,400,'香酥抓餅',1,1.99,0,'cs','pkg'),(10769,'Bread - Garlic Toste   125pc',22.00,300,'蒜味面包',1,20.50,0,'cs','cs'),(9270,'Brush - Bamboo 11  ',3.99,100,'竹刷',1,2.69,1,'ea','ea'),(9147,'Brush - Long Handle',3.95,100,'长柄刷',1,3.95,1,'ea','ea'),(9493,'Brush - Short Handle 12ct/cs',3.99,100,'鲍鱼刷',1,3.99,1,'ea','ea'),(10919,'Burner - 20 Tip w.Cover 10 ',69.00,100,'20 眼中空炉头',1,69.00,1,'ea','ea'),(11005,'Burner - 20 Tip w.Cover 9  Jet (wrjbc9)',49.00,100,'20 眼中炉头',1,49.00,1,'ea','ea'),(10935,'Burner - 23 JK-23 9  (Irbr002cn)',42.00,100,'23 眼9inches 炉头',1,38.00,1,'ea','ea'),(9938,'Burner - Butane Torch ',42.00,100,'喷火枪',1,42.00,1,'ea','ea'),(10662,'Burner - Gas Stove JK-20 Tip',47.50,100,'20 孔炉头',1,47.50,1,'ea','ea'),(10663,'Burner - Jet Tip TF (JB32)',2.69,100,'炉头眼',1,2.69,1,'ea','ea'),(11175,'Burner Portable (B0029)',15.95,100,'火锅炉',1,15.95,1,'ea','ea'),(9673,'Butane Cartridge (Gas) 7/4/pkg',6.99,100,'火锅煤汽罐',1,6.99,1,'pkg','pkg'),(12145,'Cake - Matcha Green Tea Tiramisu 20pc/box 4.25lb',40.00,400,'抹茶提拉米苏',1,40.00,0,'box','box'),(5817,'Can Liner  45gal  100pcs',25.95,100,'垃圾袋',1,25.95,1,'cs','cs'),(11242,'Can Liner 15x9x32  500cts',35.50,100,'垃圾袋',1,35.50,0,'cs','cs'),(5922,'Can Liner 16gal  1k pcs',25.95,100,'垃圾袋',1,25.95,1,'cs','cs'),(11241,'Can Liner 23x10x39  200cts',10.00,100,'垃圾袋',1,10.00,1,'cs','cs'),(5818,'Can Liner 33/40gal 100pcs',25.95,100,'垃圾袋',1,23.50,1,'cs','cs'),(5923,'Can Liner 55gal  100pcs',25.95,100,'垃圾袋',1,25.95,1,'cs','cs'),(11735,'Candy - American Ginseng (Original Favor) 48/8oz',8.99,100,'花旗参糖',1,8.99,0,'box','box'),(11473,'Candy - Assorted Crispy (HFC) 20/328g',4.50,100,'徐福记什锦酥心糖',1,4.50,0,'pkg','pkg'),(9292,'Candy - Botan Rice 20/20/0.75oz',18.00,100,'日本小吃',12,18.00,0,'box','box'),(10998,'Candy - Caramel Chocolate (I-Mei) 12/100g',18.00,100,'巧克力牛奶糖',1,1.59,0,'pkg','pkg'),(11896,'Candy - Coconut (CG) 40/5.6oz',1.95,100,'春光椰子糖',1,1.95,0,'pkg','pkg'),(12029,'Candy - Coconut Sticky Jelly(CG) 30/200g',2.99,100,'春光椰糯糕',1,2.99,0,'pkg','pkg'),(11474,'Candy - Corn Soft (HFC) 20/376g',4.50,100,'徐福记玉米软糖',1,4.50,0,'pkg','pkg'),(11900,'Candy - Ginger/Coconut (CG) 40/5.6oz',60.00,100,'春光姜椰子糖',1,1.99,0,'cs','pkg'),(11795,'Candy - Guava (HY) 30/350g',59.00,100,'宏源番石榴糖',1,2.49,0,'cs','pkg'),(11570,'Candy - KitKat Geen Tea (Nestle) 12/4.78oz ',5.95,100,'日本小吃',1,5.95,0,'pkg','pkg'),(11772,'Candy - Kopiko Coffee 24/5.25oz',31.00,100,'咖啡糖',1,1.79,0,'cs','cs'),(6099,'Candy - Lucky 30/12.5oz',110.00,100,'利是糖果',1,3.99,0,'cs','pkg'),(9726,'Candy - Mango Gummy  24/500g/pkg',3.99,100,'芒果软糖',1,3.99,0,'pkg','pkg'),(10937,'Carro Paste w. Chili (Kimura Momiji Oroshi) 4/12/6.3oz',49.50,300,'日本红萝卜辣醬',1,4.25,0,'btl','btl'),(9014,'Cashew Nuts (320) 25#/cs',157.25,100,'腰果',25,6.29,0,'cs','lb'),(9227,'Cashewnut 5#',34.95,100,'腰果',1,6.99,0,'bag','bag'),(11333,'Cassava Froz. Peeled (Myriad) 30/1#',30.00,400,'冻木薯',1,1.29,0,'cs','pkg'),(11957,'Cassava Grated Froz. (Myriad) 30/1#',1.29,400,'冻木薯漿',1,1.29,0,'pkg','pkg'),(11965,'Cast Iron Board 3pc set IRBB001',19.99,100,'铁板烧',1,19.99,1,'ea','ea'),(10792,'Changfun - Fresh Plain ',2.99,300,'斋肠粉',1,2.99,0,'pkg','pkg'),(10791,'Changfun - Fresh w. Shrimp & Onion ',2.99,300,'虾肠粉',1,2.29,0,'pkg','pkg'),(10703,'Char Siu Seasoning Mix (NOH)  24/2.5oz',42.96,100,'卢牌叉烧粉',1,1.79,0,'cs','pkg'),(6080,'Char Sui Sauce (LKK) 12/14oz',54.00,100,'叉烧醬',1,4.99,0,'cs','jar'),(10421,'Chee Hou Sauce (KC) 24/15oz',47.00,100,'柱侯醬',1,2.50,0,'cs','btl'),(6054,'Chee Hou Sauce (KC) 6/5#',48.00,100,'柱侯醬',6,8.50,0,'cs','can'),(5498,'Cheese - Cream  10/3#/pkg',73.00,400,'忌廉芝士',9,7.79,0,'cs','pkg'),(10581,'Cheese - Cream  30# Bulk',38.00,400,'忌廉芝士',1,32.00,0,'cs','cs'),(10645,'Cheese - Cream 4/3#',18.00,400,'忌廉芝士',1,4.95,0,'cs','pkg'),(10338,'Cheese - Shredded Mild  6/5#',78.00,400,'黃芝士',1,13.00,0,'cs','bag'),(10785,'Cheese - Shredded Mozz  6/5#',72.00,400,'白芝士',1,12.00,0,'cs','pkg'),(6107,'Cherry - Maraschino Halves 6/half gal',55.00,100,'半开车哩子',1,9.50,0,'cs','jar'),(6108,'Cherry - Maraschino No Stem 9#4oz',65.00,100,'无柄车哩子',1,18.00,0,'cs','jar'),(6106,'Cherry - Maraschino Whole 6/half gal',65.00,100,'全车喱子',1,18.00,0,'cs','jar'),(9989,'Cherry - Whole w. Stemless 4/1gal',65.00,100,'无柄车哩子',1,18.00,0,'cs','jar'),(9737,'Chestnut - Dried',4.99,100,'栗肉干',1,4.99,0,'bag','lb'),(9474,'Chestnut - Peeled Roasted 50/3.5oz',1.50,100,'即食inches珍珠甘栗仁inches',1,1.50,0,'pkg','pkg'),(10876,'Chestnut - W. Shell Roasted 40/150g',1.99,100,'即食甘栗子',1,1.99,0,'pkg','pkg'),(10986,'Chia Seed - Raw',10.50,100,'奇异籽',1,10.50,0,'lb','lb'),(9096,'Chicken -  Diced Meat  40#',40.00,400,'鸡腿肉',40,40.00,0,'cs','cs'),(9094,'Chicken - Base (Budget) 30#/bkt',66.00,100,'鸡精',30,48.80,0,'bkt','bkt'),(9785,'Chicken - Base 4/5# Foil Bags (Kari - out)',45.00,100,'锡纸袋鸡精',1,12.00,0,'cs','bag'),(5505,'Chicken - Bone 40#',27.60,400,'鸡骨',1,0.69,0,'cs','lb'),(9521,'Chicken - Breast Bone 40#',19.95,400,'鸡骨',1,16.00,0,'cs','lb'),(11045,'Chicken - Breast Meat (T/P)',1.95,500,'包裝鸡胸肉',1,1.95,0,'lb','lb'),(5823,'Chicken - Breast Meat 40#',94.00,400,'鸡胸肉',1,2.35,0,'cs','lb'),(11120,'Chicken - Breast Meat Half 40#',70.00,400,'半块鸡胸肉',1,1.75,0,'cs','lb'),(11617,'Chicken - Breast Meat Mis Cut 40#',42.00,400,'小块鸡胸肉',1,1.05,0,'cs','lb'),(11913,'Chicken - Breast Meat Sliced 40#',40.00,400,'切片鸡胸肉',1,1.00,0,'cs','lb'),(9408,'Chicken - Cooked',13.00,400,'贵妃鸡 熟',1,11.50,0,'pc','pc'),(11821,'Chicken - Cornish (Game) Hen 24/22oz',85.00,400,'童子鸡',1,3.79,0,'cs','ea'),(10614,'Chicken - Drummettes',1.05,500,'小整鸡腿',1,1.05,0,'lb','lb'),(9628,'Chicken - Feet (Paws) 44.1#',1.99,500,'鸡爪',1,1.99,0,'lb','lb'),(11738,'Chicken - Feet Boneless  40#',238.00,500,'去骨鸡脚',1,5.95,0,'cs','lb'),(11862,'Chicken - Feet Roaster (Paws) 22.05#',2.19,500,'大鸡爪',1,2.19,0,'lb','lb'),(12317,'Chicken - Fried Loaf (Great Wall) 20/11oz',4.50,400,'炸鸡肉扎',1,4.50,0,'pkg','pkg'),(4766,'Chicken - Fryer',0.79,500,'中鸡',1,0.79,0,'lb','lb'),(10242,'Chicken - Granlated Borillon (Totole) 6/5#',113.00,100,'太太乐鸡精',1,25.99,0,'cs','bag'),(10768,'Chicken - Heart   20.32#',23.37,400,'鸡心',1,1.15,0,'cs','lb'),(6265,'Chicken - Hen Baking (Top Bee)',1.35,500,'老母鸡',1,1.35,0,'lb','lb'),(4826,'Chicken - Leg Meat  40#',75.60,400,'无水鸡腿肉',1,1.89,0,'cs','cs'),(11282,'Chicken - Leg Meat Skin On  30#',32.70,400,'有皮鸡腿肉',1,1.09,0,'cs','lb'),(5929,'Chicken - Leg Quarter 30#',15.00,500,'大鸡腿',1,0.98,0,'cs','cs'),(9696,'Chicken - Silkie Black Whole 10pcs',14.50,400,'乌鸡',1,13.50,0,'ea','ea'),(11309,'Chicken - Stewing Hen (Chinese)',1.99,500,'唐人老鸡',1,1.99,0,'lb','lb'),(11774,'Chicken - Whole Head On (Kui Fei) 16ct',14.95,400,'贵妃鸡',1,14.50,0,'ea','ea'),(11775,'Chicken - Whole Head On (Rooster)',14.95,400,'大鸡公',1,13.50,0,'ea','ea'),(9452,'Chicken - Whole Head On 12ct',15.95,400,'黄毛鸡',1,13.50,0,'ea','ea'),(11470,'Chicken - Whole Head On Pearl (Guinea Fowl) 12pcs',14.95,400,'珍珠鸡',1,14.95,0,'ea','ea'),(11266,'Chicken - Whole Leg (Drumstick) (T/P)',0.99,500,'小包裝全鸡腿',1,0.99,0,'lb','lb'),(5931,'Chicken - Whole Leg 30#',31.50,400,'整鸡腿',1,1.05,0,'cs','cs'),(10672,'Chicken - Whole Wogs (1.75-2#/ea)(Pilgrim)',1.20,400,'全鸡',1,1.20,0,'lb','lb'),(10462,'Chicken - Wing (Mis cut) 40#',35.60,400,'切断鸡翼',1,0.89,0,'cs','lb'),(10563,'Chicken - Wing (Party) 8/5#',78.00,400,'聚会鸡翼',1,1.95,0,'cs','lb'),(11299,'Chicken - Wing (Whole) (T/P) ',1.95,500,'小包裝全鸡翼',1,1.95,0,'lb','lb'),(5932,'Chicken - Wing (Whole) 40#',151.60,400,'全鸡翅膀',1,3.79,0,'cs','lb'),(10261,'Chicken - Wing Cooked Italian 10#',15.00,400,'中段熟鸡翼',1,1.50,0,'cs','lb'),(12193,'Chicken - Wing Midjoint (IQF)  8/5# ',3.99,400,'中段鸡翼',1,3.99,0,'lb','lb'),(4980,'Chicken - Wing Midjoint (Pilgrim) 4/10# ',103.60,400,'中段鸡翼',40,2.59,0,'cs','cs'),(9577,'Chicken - Wing Midjoint 44.1# ',175.95,400,'中段鸡翼',1,3.99,0,'cs','cs'),(11798,'Chicken - Wog Yellow 8ct',5.99,400,'无头走地鸡',1,5.99,0,'ea','ea'),(11231,'Chicken - Wogs Froz. (1.5-2#) 16hd',1.50,400,'童子鸡',1,1.50,0,'lb','lb'),(11033,'Chicken _ Leg Meat Skin On 30#',38.70,400,'有皮无骨鸡腿肉',1,1.29,0,'cs','lb'),(11390,'Chicken Bouillon (Totole) 12/2.2#',89.00,100,'太太乐鸡精',1,8.99,0,'cs','can'),(10129,'Chicken Boullon (Knorr) 24/6pkg',1.00,100,'家乐鸡精(盒裝)',1,1.00,0,'cs','cs'),(11593,'Chicken Broth No MSG (New Choice) 12/14oz ',9.50,100,'鸡汤',1,0.99,0,'cs','can'),(11498,'Chicken Mushroom Ball (Great Wall) 20/12oz',4.50,400,'香菇鸡肉丸',1,4.50,0,'pkg','pkg'),(10238,'Chicken Nuggets 20#',24.00,500,'鸡块',1,1.20,0,'cs','lb'),(5870,'Chicken Powder (Ajinomoto) 4/6#',75.00,100,'上鸡调味粉',4,24.00,0,'cs','jar'),(9611,'Chicken Powder (Kari-Out) 4/5#',45.00,100,'鸡精',1,12.00,0,'cs','can'),(5195,'Chicken Powder (Knorr) 12/2.2#',130.00,100,'家乐鸡精',16,13.00,0,'cs','can'),(6081,'Chicken Powder (LKK) 12/1kg',86.00,100,'李锦记鸡精',1,9.50,0,'cs','can'),(12067,'Chicken Powder (LKK/No MSG) 12/1kg',89.00,100,'李锦记鸡精（无味精）',1,10.00,0,'cs','can'),(10054,'Chicken Thigh - Bone-In Skin On',0.90,500,'有骨鸡大腿',1,0.90,0,'lb','lb'),(10415,'Chicken Thigh - Skin On 40#',54.00,400,'有皮鸡大腿肉',1,1.35,0,'cs','cs'),(9023,'Chicken Thigh Meat 40#/cs',63.60,400,'鸡大腿肉',1,1.59,0,'cs','cs'),(12252,'Chicken Thigh Meat Boneless Skinless 40#',1.23,400,'无皮无骨鸡大腿肉',1,1.23,0,'lb','lb'),(5968,'Chili - Crushed Dry 10/ 5#',90.00,100,'辣椒碎',10,14.00,0,'cs','pkg'),(12180,'Chili - Cut Dried Red 6/5#',79.00,100,'切段红椒干',1,14.95,0,'cs','pkg'),(10661,'Chili - Red Thai Froz. Stemless (DF) 20/500g',69.00,400,'急冻紅辣椒',1,3.99,0,'cs','pkg'),(11806,'Chili - Red Thai Froz. Stemless 20/2#',133.00,400,'急冻紅辣椒',1,7.50,0,'cs','pkg'),(11331,'Chili - Red Whole Froz.(Myriad) 40/7oz',2.49,400,'急冻紅辣椒',1,2.49,0,'pkg','pkg'),(5321,'Chili - Whole Dry Red 6/5#',80.00,100,'干辣椒',6,17.95,0,'cs','bag'),(9670,'Chili Garlic Sauce - (VN) 24/8oz ',29.75,100,'越南蒜蓉辣醬',1,1.65,0,'cs','btl'),(6321,'Chili Garlic Sauce (VN) 12/18oz',30.00,100,'越南蒜蓉辣醬',1,2.49,0,'cs','btl'),(6322,'Chili Garlic Sauce (VN) 3/1gal',38.00,100,'越南蒜蓉辣醬',1,15.00,0,'cs','gal'),(11253,'Chili Garlice Sauce Extra Hot (VN)(Union) 12/16oz',30.00,100,'特辣越南蒜蓉辣椒酱',1,2.99,0,'cs','btl'),(9632,'Chili Paste - Hot Pepper (Gochu-jang/Korean) 12/1.1#(6309484)',40.00,100,'韩国辣醬',1,3.95,0,'cs','jar'),(10954,'Chili Paste - Hot Pepper (Gochu-jang/Korean) 12/2.2#',55.50,100,'韩国辣醬',1,5.50,0,'cs','jar'),(9633,'Chili Paste - Hot Pepper (Korean ) 3/12#',59.50,100,'韩国辣醬',1,19.95,0,'cs','jar'),(9854,'Chili Paste - Hot Pepper (Korean) 4/6.6#',52.50,100,'韩国辣醬',1,15.50,0,'cs','jar'),(10942,'Chili Paste - Hot Pepper (Korean) 6/4.4#',50.50,100,'韩国辣醬',1,10.00,0,'cs','btl'),(11978,'Chili Paste - Hot Pepper In Tin (Korean) 30.8#/14kg (#6316901)',35.00,100,'韩国辣醬',1,35.00,0,'cs','cs'),(10452,'Chili Paste In Oil (Nampri Pao) 4/1gal',113.00,100,'泰辣椒膏',1,30.00,0,'cs','can'),(6133,'Chili Paste In Oil (Namprik Pao) 12/16oz',39.50,100,'泰辣椒膏',1,3.89,0,'cs','btl'),(9685,'Chili Paste In Oil (Namprik Pao) 24x17.6oz.',84.50,100,'泰辣椒膏',1,3.95,0,'cs','jar'),(5925,'Chili Powder -  Cayeanne 5#',19.50,100,'重辣椒粉',1,19.50,0,'jar','jar'),(9568,'Chili Powder - Paprika 4/5#',20.50,100,'轻辣椒粉',1,18.00,0,'jar','jar'),(11178,'Chili Powder (Korean - Coarse) 6/5#',95.00,100,'南韩辣椒粉',1,18.50,0,'cs','pkg'),(6076,'Chili Powder (Korean- Coarse) 10/3#',130.00,100,'南韩辣椒粉',1,13.50,0,'cs','bag'),(11895,'Chili Powder (Korean- Coarse) 22/1#',4.99,100,'小包韩国辣椒粉',1,4.99,0,'pkg','pkg'),(9517,'Chili Powder (Korean- Fine) 10/3#',130.00,100,'韩国辣椒粉',1,13.50,0,'cs','pkg'),(11894,'Chili Powder (Korean- Fine) 22/1#',4.99,100,'小包韩国辣椒粉',1,4.99,0,'pkg','pkg'),(6220,'Chili Powder (Togarashi) 30/10.5oz/pkg',10.50,100,'日本七味粉',1,10.50,0,'bag','bag'),(10316,'Chili Powder (Togarashi) In BTL 16/10/0.52oz',18.50,100,'瓶裝七味粉',1,18.50,0,'box','box'),(12295,'Chili Sauce - Bean 12/13oz (LKK)',4.79,100,'李锦记辣豆瓣酱',1,4.79,0,'jar','jar'),(6258,'Chili Sauce - Glass Bottle (Sriracha/Shark) 12/25oz',30.00,100,'瓶装辣醬',1,30.00,0,'cs','btl'),(11160,'Chili Sauce - Guilin Style 12/13oz',3.99,100,'桂林辣椒醬',1,3.99,0,'jar','jar'),(6077,'Chili Sauce - Korean',2.00,100,'韩国辣酱',1,2.00,0,'btl','btl'),(11981,'Chili Sauce - Pixian Broadbean Paste with Chili Oil (CLH)  1kg',5.99,100,'川老汇郫县豆瓣',1,5.99,0,'jar','jar'),(11228,'Chili Sauce - Spice Thick Bean (CLH)  15/500g',2.99,100,'川老汇红油豆瓣',1,2.99,0,'jar','jar'),(10116,'Chili Sauce - Sweet (Fish)(DFLY) 12/29oz',1.00,100,'甜辣炸魚醬',1,1.00,0,'cs','cs'),(10115,'Chili Sauce - Sweet (L) (DFLY) 12/29oz',1.00,100,'甜鸡醬(大瓶)',1,1.00,0,'cs','cs'),(10114,'Chili Sauce - Sweet (S) (DFLY)24/12oz',1.00,100,'甜鸡醬(小瓶)',1,1.00,0,'cs','cs'),(10025,'Chili Sauce - Sweet 12/31.4oz (Pantai) ',34.00,100,'甜鸡酱',1,34.00,0,'cs','cs'),(9037,'Chili Sauce - Sweet Chicken (Mae Ploy) 12/32oz',38.00,100,'甜辣酱',12,3.99,0,'cs','btl'),(11257,'Chili Sauce - Sweet Pkg 8# (SK)',13.00,100,'甜辣醤包',1,13.00,0,'cs','cs'),(10113,'Chili Sauce - Sweet Spring Roll (DFLY) 12/29oz',1.00,100,'甜辣春卷醬',1,1.00,0,'cs','cs'),(6280,'Chili Sauce - Szechuan (Black) 48/15oz',125.00,100,'四川辣醬',24,3.59,0,'cs','can'),(10630,'Chili Sauce (Golden Bowl) 24/17oz',25.00,100,'是拉差辣醬',1,25.00,0,'cs','cs'),(6036,'Chili Sauce (Hunan) 12/16oz',22.00,100,'湖南辣酱',1,2.15,0,'cs','jar'),(6037,'Chili Sauce (Hunan) 4/1gal',48.00,100,'湖南辣醬',1,14.00,0,'cs','gal'),(10292,'Chili Sauce (Hunan/Uncle) 4/1gal',36.00,100,'湖南辣醬',1,32.50,0,'cs','gal'),(9614,'Chili Sauce (Lingham) 12/12oz',35.00,100,'林肯辣酱',1,35.00,0,'cs','cs'),(9691,'Chili Sauce (Lingham) 4/2.9kg',49.50,100,'林肯辣酱',1,49.50,0,'cs','cs'),(11810,'Chili Sauce (Sambal Oeleck) 12/18oz',27.00,100,'素辣醬',1,2.55,0,'cs','btl'),(6216,'Chili Sauce (Sambal Oeleck) 3/1gal',33.00,100,'素辣醬',1,15.00,0,'cs','gal'),(11129,'Chili Sauce (Sambal Oeleck/S K) 4/1gal',30.00,100,'盛记素辣酱',1,30.00,0,'cs','gal'),(9378,'Chili Sauce (Shark) 12/25oz',48.00,100,'辣椒汁(鲨鱼)',12,4.29,0,'cs','btl'),(11915,'Chili Sauce (Sriracha) (Shark Brand) 12/25oz',41.88,100,'鲨鱼牌是拉差辣酱',1,4.39,0,'cs','btl'),(9668,'Chili Sauce (Sriracha) (Uncle Chen) 12/17oz',22.00,100,'是拉差辣酱',1,2.19,0,'cs','btl'),(6256,'Chili Sauce (Sriracha) 12/17oz',27.00,100,'是拉差辣醬',12,2.95,0,'cs','btl'),(6257,'Chili Sauce (Sriracha) 12/28oz',35.00,100,'是拉差辣酱',12,3.79,0,'cs','btl'),(9694,'Chili Sauce (Uncle Chen) 24/8oz',27.95,100,'鲜纯辣椒酱',1,1.69,0,'cs','btl'),(9744,'Chili sauce (Uncle Chen) 4/1gal',38.00,100,'素辣酱',1,38.00,0,'cs','gal'),(12257,'Chili Sauce (Union) 24/8oz',1.00,100,'联合小瓶辣醬',1,1.00,0,'btl','btl'),(9126,'Chili Sauce (Union) 4/1gal',46.00,100,'联合辣醬',1,15.00,0,'cs','gal'),(10450,'Chili Sauce Pkg (Kari out) 500pc',9.95,100,'辣醬包',1,9.95,0,'cs','cs'),(9774,'Chili Sauce Pkg 10# (Sriracha/Uncle)',19.95,100,'辣酱包',1,19.95,0,'cs','cs'),(10004,'Chili Sauce Pkg 420/9g (SK)',18.00,100,'辣酱包',1,18.00,0,'cs','cs'),(9749,'Chili Seasoning  150g/pkg',1.59,100,'麻辣佐料',1,1.59,0,'pkg','pkg'),(10994,'Chili Thread  20g',3.99,100,'辣椒干丝',1,3.99,0,'bag','bag'),(11784,'Chinese Char Xiu Powder (LEE) 60/75g',66.00,100,'叉烧粉',1,1.10,0,'cs','pkg'),(11467,'Chinese New Year - Crispy Puff Cookie 24/10.6oz ',2.99,100,'油角',1,2.99,0,'pkg','pkg'),(11466,'Chinese New Year - Crispy Sesa Cookie 10.6oz',2.99,100,'笑口枣',1,2.99,0,'pkg','pkg'),(11461,'Chinese New Year - Sweet Lotus Seeds 50/120g',1.99,100,'糖莲子',1,1.99,0,'pkg','pkg'),(11462,'Chinese New Year - Sweetened Carrot 5oz',1.99,100,'糖红萝卜',1,1.99,0,'pkg','pkg'),(11465,'Chinese New Year - Sweetened Dong Gua 120g',1.99,100,'糖冬瓜',1,1.99,0,'pkg','pkg'),(11463,'Chinese New Year - Sweetened Lotus Root 5oz',1.99,100,'糖莲藕',1,1.99,0,'pkg','pkg'),(11464,'Chinese New Year - Sweetened Water Chestnut 120g',1.99,100,'糖馬蹄',1,1.99,0,'pkg','pkg'),(4982,'Chinese Vegetable - Jie Lan',1.00,300,'唐人芥蘭',1,1.00,0,'cs','item'),(9495,'ChopStick - Chinese (White Melamine) 10/10/10pairs/pkg',3.50,100,'筷子',1,3.50,1,'pkg','pkg'),(12200,'ChopStick - Plastic Wrapped 9  20/100ct',47.00,100,'蝴蝶牌筷子',1,47.00,0,'cs','cs'),(10666,'ChopStick - Plastic Wrapped Togo 3000p ',25.00,100,'胶袋筷子',1,0.99,0,'cs','pkg'),(5193,'ChopStick - Red Env ',18.00,100,'紅封套筷',1,2.19,0,'cs','pkg'),(9465,'ChopStick - Tempura  45cm',2.99,100,'长筷子',1,2.99,1,'pair','pair'),(5649,'ChopStick - White Env ',37.00,100,'白套筷',1,37.00,0,'cs','cs'),(6324,'ChopStick (Warabashi) 4000',55.00,100,'木筷',1,1.99,0,'cs','pkg'),(10231,'ChopStick Env.  4000pcs',35.00,100,'筷子套',1,32.00,0,'cs','cs'),(9964,'ChopStick Holder',6.35,100,'瓷筷子架',1,0.55,1,'dz','ea'),(11016,'Chopstick Holder Stainless (Slch007)',13.00,100,'不锈钢三格筷子架',1,13.00,1,'ea','ea'),(9009,'Choy Sum',1.00,300,'菜心',1,1.00,0,'cs','cs'),(6182,'Chung Choy - Preserved',2.00,100,'冲菜',1,2.00,0,'cs','pkg'),(10470,'Clams - Baby Canned 12/28oz',4.89,100,'蚬仔',1,4.89,0,'can','can'),(10049,'Clams - Breaded Meat 6/1.5#',15.00,400,'炸蚬',1,1.67,0,'cs','lb'),(12079,'Clams - Cooked Hard Shell (10-20) 10/2#',32.00,400,'花蛤',1,32.00,0,'cs','cs'),(10063,'Clams - Cooked Hard Shell (21-30) 10/2#',30.00,400,'花蛤',1,1.50,0,'cs','lb'),(12214,'Clams - Cooked White Hard Shell (60/80) (#33012) 10/2#',40.00,400,'白花蛤',1,40.00,0,'cs','cs'),(10651,'Clams - Geoduck  50#',142.50,400,'貴妃蚌',1,2.85,0,'cs','lb'),(5941,'Clams - In Shell Cooked Steamer 20/1#',16.50,400,'熟蛤',1,1.65,0,'cs','lb'),(9423,'Clams - Sea Clam  Shell Off',12.00,100,'无壳蚬',1,12.00,0,'pkg','pkg'),(9113,'Clams - Surf Hoki Gai 24/400g',10.00,400,'北极贝',1,10.00,0,'box','box'),(11926,'Clams - Surf Hoki Gai 4/2.5kg',39.00,400,'北极贝',1,39.00,0,'pkg','pkg'),(10524,'Cocktail Sauce  2/1gal',35.00,100,'鸡尾酒酱',1,19.00,0,'cs','gal'),(10077,'Coconut Butter Cookei 20/8.11oz',18.50,100,'可口奶滋',1,18.50,0,'cs','cs'),(10513,'Coconut Cream (Dragonfly)  24/19oz',23.95,100,'純椰浆',1,1.25,0,'cs','can'),(11688,'Coconut Cream (Savoy)  24/14oz',59.00,100,'椰浆',1,3.29,0,'cs','can'),(12188,'Coconut Meat Young In Syrup (Strip) 24/20oz',45.00,100,'椰青肉丝',1,45.00,0,'cs','cs'),(10233,'Coconut Meat Young In Syrup 24/20oz',43.00,100,'鲜椰青肉',1,2.29,0,'cs','can'),(10780,'Coconut Milk - (Parrot)   6/5#',1.00,100,'椰奶',1,1.00,0,'cs','can'),(5926,'Coconut Milk (Chaokoh) 24/13.5oz',45.00,100,'小椰奶',24,2.29,0,'cs','can'),(5927,'Coconut Milk (Chaokoh) 6/5#',73.00,100,'大椰奶',6,15.00,0,'cs','can'),(11060,'Coconut Milk (Chaokoh)24/19oz',40.00,100,'椰奶',1,1.95,0,'cs','can'),(6101,'Coconut Milk (Mae Ploy) 24/19oz',58.00,100,'椰奶',1,2.99,0,'cs','can'),(10738,'Coconut Milk (Parrot)  24/13.5oz',25.00,100,'椰奶',1,1.50,0,'cs','can'),(11287,'Coconut Sport Strings (Macapuno) 24oz',7.59,100,'突變体椰子肉',1,7.59,0,'jar','jar'),(10896,'Coffee - Cafe Du Monde 24/15oz',6.99,100,'法國咖啡',1,6.99,0,'can','can'),(10036,'Coffee - DBL French Roast Ground 2/5#',69.50,100,'越南咖啡',1,69.50,0,'cs','cs'),(11520,'Coffee - Pronto 9 Ct 2.88oz',9.99,100,'咖啡包',1,9.99,0,'box','box'),(9230,'Coffee - Thai Oliang Powder Mixed (Pantai)  30/16oz',158.00,100,'泰咖啡',30,6.99,0,'cs','pkg'),(11949,'Coffee - Trung Nguyen 20/1.1# (6847)',93.00,100,'越南咖啡',1,5.99,0,'cs','cs'),(12114,'Coffee - Trung Nguyen(3 In1) 24/24/25g (6849)',6.99,100,'越南咖啡(3合1)',1,6.99,0,'pkg','pkg'),(11565,'Coffee Filter Vietnamness Stlye(SLCF001) 12pcs',4.99,100,'越南咖啡滤杯',1,4.99,1,'ea','ea'),(9865,'Conch (Periwinkle Meat)  1#/bag',4.50,400,'鲜冻螺头肉',1,4.50,0,'bag','bag'),(10341,'Container - 1 Com. Clear  8x8x2.29   200ct (Yc18-1120)',37.50,100,'透明外卖盒',1,33.69,0,'cs','cs'),(12003,'Container - 12oz (S-12/PCM) Combo 250sets',35.00,100,'胶湯杯',1,35.00,0,'cs','cs'),(12210,'Container - 12oz Paper #2 (Kraft/Ttgcw2) 200/cs',44.00,100,'12oz纸盒',1,44.00,0,'cs','cs'),(11721,'Container - 16oz  (ERT-16B) 150sets',36.00,100,'黑底小一格盒',1,22.50,0,'cs','cs'),(11840,'Container - 16oz  (RC-16/TY-S16) 150sets',30.00,100,'黑圆胶盒16oz',1,30.00,0,'cs','cs'),(12255,'Container - 16oz Paper Hot & Cold(PS/75000866) 20/25ct',52.00,100,'纸杯',1,52.00,0,'cs','cs'),(11841,'Container - 24oz  (RC-24) 150sets',37.00,100,'黑圆胶盒24oz',1,37.00,0,'cs','cs'),(9971,'Container - 24oz Combo 250 Sets (D24/SC24)',57.50,100,'胶湯杯',1,49.95,0,'cs','pc'),(11843,'Container - 28oz  (T-28/MC6610B) 150sets',38.00,100,'黑长方胶盒28oz',1,32.00,0,'cs','cs'),(9875,'Container - 28oz Single Com. Combo 150 Sets (Clear Lid/Black Buttom)(NC-868-B)',72.50,100,'胶湯杯',1,72.50,0,'cs','cs'),(9659,'Container - 30oz 2 Com. Combo 150 Sets (Clear Lid/Black Buttom) (NC-8288-B)',92.50,100,'胶湯杯',1,95.50,0,'cs','cs'),(12051,'Container - 32oz  (RC-32) 150sets',33.00,100,'黑圆胶盒32oz',1,33.00,0,'cs','cs'),(11842,'Container - 32oz  (T-32) 150sets',36.00,100,'黑长方胶盒32oz',1,34.00,0,'cs','cs'),(9647,'Container - 38oz  (ERT-38B) 150sets',42.21,100,'黑底大一格盒',1,42.21,0,'cs','cs'),(11844,'Container - 38oz  (T-38) 150sets',38.00,100,'黑长方胶盒38oz',1,36.00,0,'cs','cs'),(12153,'Container - 38oz 3 Com. BLK (DT-339) 150sets',50.00,100,'黑底三格盒',1,50.00,0,'cs','cs'),(12049,'Container - 56oz Paper Brown #3 (PS3K) 200ct',60.00,100,'沙拉纸合',1,60.00,0,'cs','cs'),(10030,'Container - 8oz Combo 250sets',28.95,100,'胶湯杯',1,28.95,0,'cs','cs'),(12081,'Container - 8oz Paper Hot & Cold(PS/75000864) 20/25ct',46.00,100,'小纸杯',1,46.00,0,'cs','cs'),(11647,'Container - Aluminum 10 x13 x3 ',0.89,100,'锡紙盆',1,0.89,1,'ea','ea'),(11653,'Container - Aluminum Half Size Steam Pan Deep 100cts (Y6132h)',0.89,100,'中深锡紙盆',1,0.89,1,'ea','ea'),(11655,'Container - Aluminum Half Size Steam Pan Shallow 100cts (Pactiv/Y6012xh)',0.89,100,'中浅锡紙盆',1,0.89,1,'ea','ea'),(11654,'Container - Aluminum Steam Pan Half Med. Deep 100cts (Y6112xh)',0.89,100,'中中锡紙盆',1,0.89,1,'ea','ea'),(10579,'Container - Bucket White w. Cover (52046)',17.99,100,'胶桶',1,17.99,1,'ea','ea'),(10342,'Container - Clear (CHC)  8x3 250ct',45.00,100,'透明一格盒',1,45.00,0,'cs','cs'),(5946,'Container - Pint 16oz Combo 250 Set',42.00,100,'外卖胶杯',1,29.95,0,'cs','cs'),(5945,'Container - Quart  32oz Combo 10/25 Set',59.50,100,'外卖胶杯',1,59.50,0,'cs','cs'),(10003,'Container - Sushi   18/50pcs',1.00,100,'寿司盒',1,1.00,0,'cs','pkg'),(10779,'Container - Sushi  (HP- 01) 800sets',109.50,100,'寿司小盒',1,109.50,0,'cs','cs'),(10018,'Container - Sushi  5 x7.25  (J-8510) 400sets ',78.00,100,'寿司盒',1,78.00,0,'cs','cs'),(10022,'Container - Sushi  5.25 x8.25  (J-8515) 400sets Anti Fog',90.00,100,'寿司盒',1,90.00,0,'cs','cs'),(10027,'Container - Sushi  6.5 x4.75 (HP-03)400sets ',78.00,100,'寿司小盒',1,78.00,0,'cs','cs'),(10268,'Container - Sushi 10.5 x10.5 100sets (J-8307)',52.50,100,'黑底多格寿司盒',1,50.95,0,'cs','cs'),(9941,'Container - Sushi 3.75 x9  (HP-02)400sets ',83.00,100,'寿司长盒',1,83.00,0,'cs','cs'),(10001,'Container - Sushi 4.5x6.5 24/50pcs (0.8)',1.00,100,'寿司盒',1,1.00,0,'cs','pkg'),(10211,'Container - Sushi 5 Com.9.5 x7.5  (J-8305) 400sets',83.50,100,'黑底多格寿司盒',1,49.95,0,'cs','cs'),(10002,'Container - Sushi 5 x7.5   24/50pcs (1.0)',205.00,100,'寿司盒',1,1.00,0,'cs','pkg'),(9940,'Container - Sushi 5 x7.5  (HP-05)400sets ',86.00,100,'寿司中盒',1,86.00,0,'cs','cs'),(10014,'Container - Sushi 5.5 x8.5   900sets (1.5)',255.00,100,'寿司盒',1,255.00,0,'cs','cs'),(9942,'Container - Sushi 5.5 x8.5  (HP-07) 400sets',99.00,100,'寿司大盒',1,99.00,0,'cs','cs'),(10017,'Container - Sushi 8 x 5.5 (J-8520) 400sets ',97.00,100,'寿司盒',1,97.00,0,'cs','cs'),(10364,'Container - Sushi 9.25 x5.75 (HP-09) 400sets',115.00,100,'寿司大盒',1,115.00,0,'cs','cs'),(10041,'Container - Sushi Bdy (CF-1.0/Kamon) 1200pcs',130.95,100,'寿司盒',1,1.00,0,'cs','cs'),(10043,'Container - Sushi Bdy (CF-1.5) 1200pcs',84.50,100,'寿司盒',1,42.50,0,'cs','cs'),(10042,'Container - Sushi Lid For CF-1.0/Kamon 400pcs',47.00,100,'寿司盒盖',1,1.00,0,'cs','cs'),(10044,'Container - Sushi Lid For CF-1.5) 600pcs',38.50,100,'寿司盒盖',1,48.00,0,'cs','cs'),(10787,'Container - Sushi Round 10.5 x2  Deep(W147823)',28.50,100,'寿司盘',1,28.50,1,'ea','ea'),(12318,'Container - Ttgcw #8 Wht Paper 300/cs',49.50,100,'8号纸饭盒',1,49.50,0,'cs','cs'),(11048,'Container - w Lid In Black  8 x6  (Mc63108) 150 Sets',1.00,100,'黑底一格盒',1,1.00,0,'cs','cs'),(10309,'Container - w Lid In Black 3 Com. 30oz 150sets (C33B/Co33B)',46.50,100,'黑底三格盒',1,46.50,0,'cs','cs'),(10271,'Container - w. Lid  (RE28B) 150sets',37.00,100,'一格盒',1,37.00,0,'cs','cs'),(10273,'Container - w. Lid (F-24W/RO24B) 150sets',38.50,100,'一格盒',1,38.50,0,'cs','cs'),(10272,'Container - w.Lid 7.5x5x1.25(F-16W/MTC)3/50sets',33.95,100,'一格盒',1,32.95,0,'cs','css'),(10962,'Container - White w.Cover (M) Brute',18.95,100,'白胶桶',1,18.95,1,'set','set'),(10313,'Container -(FG26B)w.Lid In Black8.25x5.5x1.5 3Com.150sets',39.00,100,'黑底三格盒',1,39.00,0,'cs','cs'),(10786,'Container- Sushi Round 14.6 x 2  Deep(W147826)',42.00,100,'寿司盘',1,42.00,1,'ea','ea'),(10633,'Cooker - Induction  1800w, 110v,15(37066)',199.00,100,'电磁炉',1,199.00,1,'ea','ea'),(11756,'Cooker - Rice (Zojirushi/Nsrnc-10Fz) 5.5Cup',99.00,100,'象牌家用电饭煲',1,99.00,0,'ea','ea'),(11755,'Cooker - Rice (Zojirushi/Nsrnc-18A) 10Cup',105.50,100,'象牌家用电饭煲',1,105.50,1,'ea','ea'),(10412,'Cooker - Rice 10 Cups (House)',125.00,100,'家用电饭煲',1,125.00,1,'ea','ea'),(10334,'Cooker - Rice 23 cup  (SR42HZP/Panasonic) (Power)',199.00,100,'电饭暖煲',1,199.00,1,'ea','ea'),(10696,'Cooker - Rice 28 Cup (Cuchen) WM281AE',179.00,100,'电饭煲',1,179.00,1,'ea','ea'),(10221,'Cooker - Rice 33 cup w. Warmer (Power) Bjc-282',175.00,100,'电饭暖煲',1,175.00,1,'ea','ea'),(10411,'Cooker - Rice 5.5 Cups (House)',115.00,100,'家用电饭煲',1,115.00,1,'ea','ea'),(10439,'Cooker - Rice w. Warmer (Oyama) 30cup',175.00,100,'电饭暖煲',1,175.00,1,'ea','ea'),(11288,'Cooker - Rice w. Warmer 20 Cups (Tiger/Japan)',299.00,100,'电饭暖煲',1,299.00,1,'ea','ea'),(9425,'Cooker - Rice-23 Cup (Power) SR-42FZ',160.00,100,'电饭煲',1,155.00,1,'ea.','ea.'),(10008,'Cooker - Rice-28 Cups (Power)',175.00,100,'电饭煲',1,175.00,1,'ea','ea'),(11513,'Cooker - Rice-30 Cup (Nsf) Sej3201',329.00,100,'电饭煲',1,219.00,1,'ea','ea'),(10969,'Cooker - Rice-30 Cup (Power) (RC-S300)',195.00,100,'电饭暖煲',1,195.00,1,'ea','ea'),(9729,'Cooker - Rice-30 Cup (Power) Sej50RC',195.00,100,'电饭煲',1,195.00,1,'ea','ea'),(11029,'Cooker - Rice-33 Cups S/S (sej60000) 30CUP',320.00,100,'电饭煲',1,240.00,1,'ea','ea'),(9640,'Cooker - Rice-55 Cups (Gas) (Rinnai)',499.00,100,'煤气饭煲',1,425.00,1,'ea','ea'),(10463,'Cookie - Palmiers (Butterfly) 2.4lb',7.50,100,'蝴蝶酥',1,7.50,0,'pkg','pkg'),(11389,'Cookie - Phoenix Egg Rolls 10.6oz',9.95,100,'咀香園鳳凰卷',1,9.95,0,'box','box'),(11475,'Cookie - Sachima Egg Flavor  (HFC) 526g',3.50,100,'徐福记沙琪玛',1,3.50,0,'pkg','pkg'),(11476,'Cookie - Sachima Sesame Flavor  (HFC) 469g',3.50,100,'徐福记沙琪玛',1,3.50,0,'pkg','pkg'),(11376,'Cookie - Sun 8pcs',10.50,100,'太陽饼',1,10.50,0,'box','box'),(11334,'Cookie - Wafers (Garden) 16oz',1.79,100,'嘉顿忌廉威化',1,1.79,0,'pkg','pkg'),(11225,'Cookie - Wafers In Can (Garden) 24.7oz',6.99,100,'嘉顿忌廉威化',1,6.99,0,'can','can'),(10728,'Cooking - 12  Tong ',2.29,100,'胶夾子',1,2.29,1,'ea','ea'),(12048,'Cooking - 24oz Tow Piece Ladle SLTL001',7.99,100,'大汤勺',1,7.99,1,'ea','ea'),(11289,'Cooking - 3 Comp Sink 18 x24  w.2Dbs 18 ',1.00,100,'厨房三格盆',1,1.00,0,'ea','ea'),(10623,'Cooking - 3 Hand Roll Rack(98144)',8.95,100,'寿司手卷架',1,8.95,1,'ea','ea'),(10929,'Cooking - 50# Deep Fryer S/N#130318-c0',699.00,100,'炸油炉',1,699.00,1,'ea','ea'),(11933,'Cooking - 9  Tong (SS)',2.50,100,'不銹鋼夹子',1,2.50,1,'ea','ea'),(12120,'Cooking - Bamboo Basket Thai ',3.99,100,'庄竹蒸蓝',1,3.99,1,'ea','ea'),(11859,'Cooking - Basket 8  Round (SLCB008C)',12.99,100,'8寸平圆底罩',1,12.99,1,'ea','ea'),(12266,'Cooking - Basket 8  Round Fine Mesh(SLCB008F)',8.99,100,'8寸圆形油炉罩',1,8.99,1,'ea','ea'),(10637,'Cooking - Basting Spoon 13  Plastic Hdl',2.29,100,'不锈钢长勺',1,2.29,1,'ea','ea'),(12009,'Cooking - BBQ Pork Pin 24  (ST24PP)',8.95,100,'叉烧针',1,8.95,1,'ea','ea'),(11685,'Cooking - BBQ Skin Punch Round',10.99,100,'圓型扎豬皮针',1,10.99,1,'ea','ea'),(11684,'Cooking - BBQ Skin Punch Square',10.99,100,'方型扎豬皮针',1,10.99,1,'ea','ea'),(11259,'Cooking - Bouffant Cap White (Hair Net) 10/100pcs',55.00,100,'厨师蓬松白帽',1,7.95,0,'cs','pkg'),(10859,'Cooking - Cake Turner   8  x 3 ',17.95,100,'平板炉长铲',1,17.95,1,'ea','ea'),(9935,'Cooking - Chef Hat Paper 1/10/100ct',105.00,100,'厨师帽',1,11.50,0,'cs','box'),(11040,'Cooking - Chinese Faucet w.14  Spout',64.00,100,'水龙頭',1,64.00,1,'ea','ea'),(11030,'Cooking - Colander 16 Qt w. Handle & Base(al0116bh)',29.95,100,'金属过水盆',1,29.95,1,'ea','ea'),(11608,'Cooking - Culinary Basket 10  Coarse Mesh (SLCB010C)',13.99,100,'圆形油炉油罩',1,13.99,1,'ea','ea'),(11607,'Cooking - Culinary Basket 8  Coarse Mesh (SLCB008C)',12.99,100,'圆形油炉油罩',1,12.99,1,'ea','ea'),(11240,'Cooking - Deep Fryer 50#',879.00,100,'炸油炉',1,879.00,0,'ea','ea'),(11171,'Cooking - Electic Skillet Gourmet D Expert10-1/2x21/4 D',99.00,100,'大象牌電炒锅',1,99.00,1,'ea','ea'),(12264,'Cooking - Fry Basket 11  #SLFB001',15.99,100,'圆形11寸油炉罩',1,15.99,1,'ea','ea'),(10281,'Cooking - Fry Basket 13 ',15.00,100,'油炉方型油罩',1,15.00,1,'ea','ea'),(10562,'Cooking - Fry Basket 13x6.5x5  #SLFB004',17.95,100,'方型油炉油罩',1,15.00,1,'ea','ea'),(10697,'Cooking - Fry Basket 13x6.5x5 (FB126PH)',12.50,100,'方型油炉油罩',1,12.50,1,'ea','ea'),(12235,'Cooking - Fry Basket 13x9x5.5 #SLFB006',17.95,100,'圆形14寸油炉罩',1,17.95,1,'ea','ea'),(11964,'Cooking - Fry Basket 8   #SLFB003',15.95,100,'圆形8寸油炉罩',1,12.95,1,'ea','ea'),(11980,'Cooking - Fry Basket 9  #SLFB002',15.99,100,'圆形9寸油炉罩',1,15.99,1,'ea','ea'),(10357,'Cooking - Fry Basket Round 11.5 ',12.50,100,'平底圓型水罩',1,12.50,1,'ea','ea'),(10492,'Cooking - Fry Basket Round 9.5 /(S/S)',22.50,100,'平底圓型水罩',1,22.50,1,'ea','ea'),(10860,'Cooking - Hamberger Turner  5  x 4 ',17.95,100,'平板炉短铲',1,17.95,1,'ea','ea'),(11405,'Cooking - Hand Sink Faucet w.5  Spout',59.00,100,'水龙头',1,59.00,1,'ea','ea'),(9722,'Cooking - Hangiri Wooden 60cm',165.00,100,'寿司木饭盆',1,165.00,1,'ea','ea'),(10731,'Cooking - Headband White Sun Shape',7.95,100,'寿司头饰',1,7.95,1,'ea','ea'),(11683,'Cooking - Hook DBL Duck 9  S/S',4.99,100,'双鸭钩',1,4.99,1,'ea','ea'),(11310,'Cooking - Hook Duck 8  S/S',3.99,100,'鸭钩',1,3.99,1,'ea','ea'),(11594,'Cooking - Hot Pot S/S w.DV 30cm (Sheder)',31.50,100,'鸳鸯火锅煲',1,31.50,1,'ea','ea'),(12206,'Cooking - Ladle 32oz Sltl012',9.99,100,'大汤勺',1,9.99,1,'ea','ea'),(10372,'Cooking - Leader (Wok Holder) 8 -10 ',3.99,100,'锅垫架',1,3.99,1,'ea','ea'),(10447,'Cooking - Mixing Bowl 18 ',12.95,100,'沙拉盆',1,12.95,1,'ea','ea'),(9723,'Cooking - Miyajima (Wooden Spatula) 48cm',12.95,100,'寿司木铲',1,12.95,1,'ea','ea'),(10446,'Cooking - Pan 6 Deep 6th Size',7.99,100,'馬盆',1,7.99,1,'ea','ea'),(11386,'Cooking - Pan Clear 4  Deep 6th (Sp7604)',4.99,100,'馬檯盆',1,4.99,1,'ea','ea'),(10770,'Cooking - Pilot Tip & Tube Cooper  20 ',14.95,100,'炉头铜管',1,14.95,1,'ea','ea'),(11320,'Cooking - Pin Duck 8  (S/S)',0.99,100,'鸭针',1,0.99,1,'ea','ea'),(10695,'Cooking - Plastic Colander Round 14.5 ',2.99,100,'胶笠',1,2.99,1,'ea','ea'),(10913,'Cooking - Rack Base 25 Com.(RBC25)',22.00,100,'洗碗机杯架',1,22.00,1,'ea','ea'),(10915,'Cooking - Rack Extender 25 Com.(REC25)',13.00,100,'洗碗机上加杯架',1,13.00,1,'ea','ea'),(12010,'Cooking - Rice Container S',23.00,100,'小饭煲',1,23.00,1,'ea','ea'),(12335,'Cooking - Rice Cooker/Warmer Nonstick 30cups (Sej50000T)',249.00,100,'电饭/暖饭锅',1,249.00,1,'ea','ea'),(10705,'Cooking - Rice Warmer  140Cups (Oyama)',185.00,100,'暖饭煲',1,185.00,1,'ea','ea'),(11137,'Cooking - Rice Warmer 30 Cups (SEJ18000) Stainnless Steel',309.00,100,'暖饭煲',1,309.00,1,'ea','ea'),(12357,'Cooking - Rice Warmer 50cups (sej20000)',329.00,100,'暖饭煲',1,329.00,1,'ea','ea'),(9450,'Cooking - Rice Warmer 50cups (sej22000)',335.00,100,'暖饭煲',1,335.00,1,'ea','ea'),(9881,'Cooking - Sauce Pan 2 3/4 Qt',9.95,100,'水勺',1,9.95,1,'ea','ea'),(9856,'Cooking - Sauce Pan 2Qt.',7.99,100,'水勺',1,7.99,1,'ea','ea'),(9229,'Cooking - Scoop (Ladle)  (XL/5.5 ) #0 10oz',13.95,100,'炒菜手勺特大',1,13.95,1,'each','ea'),(11226,'Cooking - Scoop (Ladle) (L/5 ) #1 8oz',12.95,100,'炒菜手勺 大',1,12.95,1,'ea','ea'),(9310,'Cooking - Scoop (Ladle) (M/4.75 ) #2 6oz',12.45,100,'炒菜手勺 中',1,12.45,1,'ea.','ea'),(9311,'Cooking - Scoop (Ladle) (S/4.25 ) #3 6oz',10.95,100,'炒菜手勺 小',1,10.95,1,'ea','ea'),(9497,'Cooking - Skimmer  10  (Yellow)',17.95,100,'大孔过水罩',1,17.95,1,'ea','ea'),(9427,'Cooking - Skimmer - 10  Round Metal w. 6  Handle (Steel)',22.95,100,'短柄过水罩',1,22.95,1,'pc','pc'),(10326,'Cooking - Skimmer - 10  w. Wood Handle',10.95,100,'不锈钢隔油罩',1,10.95,1,'ea','ea'),(9500,'Cooking - Skimmer  10 /26cm S/S w.Bamboo Handle HD',19.95,100,'小孔过水罩',1,18.95,1,'ea','ea'),(9498,'Cooking - Skimmer  12  (Yellow)',12.95,100,'大孔过水罩',1,4.85,1,'ea','ea'),(9384,'Cooking - Skimmer - 12  Rd Metal w.6 Handle (Steel/Slos002) ',22.95,100,'短柄过水罩',1,22.95,1,'pc','pc'),(11677,'Cooking - Skimmer  14  (White)',17.95,100,'大孔过水罩',1,14.95,1,'ea','ea'),(9505,'Cooking - Skimmer  6  (White)',3.95,100,'大孔过水罩',1,3.95,1,'ea','ea'),(9504,'Cooking - Skimmer  6  (Yellow)',4.95,100,'大孔过水罩',1,4.95,1,'ea','ea'),(9263,'Cooking - Skimmer - 6  Round  Metal',3.95,100,'油渣过滤罩',1,3.95,1,'pc','pc'),(9598,'Cooking - Skimmer  6.5  DBL Mesh w. Wire Handle (Slskr65)',5.50,100,'小过油渣罩',1,4.95,1,'ea','ea'),(12328,'Cooking - Skimmer  7  DBL Mesh w. Wire Handle (Slskr70)',6.95,100,'小过油渣罩',1,6.95,1,'ea','ea'),(9503,'Cooking - Skimmer  8  (White)',14.95,100,'大孔过水罩',1,14.95,1,'ea','ea'),(9502,'Cooking - Skimmer  8  (Yellow)',14.95,100,'大孔过水罩',1,14.95,1,'ea','ea'),(11934,'Cooking - Skimmer - 8  Round  Metal w.13.5  Handle(S0520)',5.99,100,'油渣过滤罩',1,5.99,0,'ea','ea'),(12110,'Cooking - Skimmer  8.75  DBL Mesh w. Wire Handle (Slskr875)',8.95,100,'小过油渣罩',1,7.49,1,'ea','ea'),(11170,'Cooking - Skimmer 12 /28cm S/S w.Bamboo Handle HD(SSOSHD12)',25.00,100,'小孔过水罩',1,23.00,1,'ea','ea'),(9511,'Cooking - Skimmer 12 w.DBL Mesh (China) (Yellow)',12.95,100,'小孔过水罩',1,6.20,1,'ea','ea'),(9599,'Cooking - Skimmer 8  DBL Mesh w.Wire Handle',5.00,100,'大过油渣罩',1,5.00,1,'ea','ea'),(9862,'Cooking - Skimmer 8  Rd Metal w.Steel Handle',2.89,100,'',1,2.89,1,'ea','ea'),(9512,'Cooking - Skimmer 8 w.DBL Mesh (China) (White)',7.95,100,'小孔过水罩',1,2.35,1,'ea','ea'),(9513,'Cooking - Skimmer 8 w.DBL Mesh (China) (Yellow)',8.95,100,'小孔过水罩',1,4.45,1,'ea','ea'),(9863,'Cooking - Skimmer 9  Rd Metal w.Steel Handle',3.49,100,'',1,3.49,1,'ea','ea'),(9449,'Cooking - Skimmer w. Double Mesh w. Handle 10 ',15.95,100,'双层过水勺',1,15.95,1,'ea','ea'),(9448,'Cooking - Skimmer w. Fine Mesh w.Handle10 ',18.95,100,'单层过水勺',1,13.95,1,'ea','ea'),(10386,'Cooking - Soup Ladle Stainless 4oz',3.35,100,'汤勺',1,3.35,1,'ea','ea'),(9731,'Cooking - Soup Scoop (Stainlee)',3.99,100,'不锈钢有柄汤勺',1,3.99,1,'ea','ea'),(9153,'Cooking - Spatula/Shovel (L) #2   5 ',13.50,100,'锅铲',1,12.95,1,'spat','spat'),(9152,'Cooking - Spatula/Shovel (M) #3  4.75 ',12.95,100,'锅铲',1,12.95,1,'spat','spat'),(9151,'Cooking - Spatula/Shovel (S)#4     4 ',10.95,100,'锅铲',1,10.95,1,'spat','spat'),(10619,'Cooking - Squeezer Btl  16oz   6ct',5.99,100,'胶酱瓶',1,5.99,1,'pkg','pkg'),(10209,'Cooking - Strainer Basket (China Cap)',20.95,100,'尖底水锅罩',1,20.95,1,'ea','ea'),(10717,'Cooking - Strainer Basket 11 x6  w. Flat Btm',17.95,100,'大孔过水罩',1,17.95,1,'ea','ea'),(10736,'Cooking - Strainer Basket 14  w. Flat Btm',19.95,100,'大孔过水罩',1,19.95,1,'ea','ea'),(11745,'Cooking - Strainer Double/Fine (SLSTN3206)',5.79,100,'',1,5.79,1,'ea','ea'),(10976,'Cooking - Strainer For Noodle  (Slns001)5.5 x5.5 ',7.99,100,'云吞面漏勺',1,6.99,1,'ea','ea'),(11605,'Cooking - Strainer For Noodle  (Slns002) Round Handle',12.99,100,'圆柄云吞面漏勺',1,12.99,1,'ea','ea'),(11568,'Cooking - Strainer For Noodle Flat Bottom Round Stainless  (Slns536) 5.5 x6 ',12.59,100,'云吞面漏勺',1,12.59,1,'ea','ea'),(11569,'Cooking - Strainer For Noodle Flat Bottom Round Stainless  (Slns553) 5. x5.25 ',9.95,100,'云吞面漏勺',1,9.95,1,'ea','ea'),(11356,'Cooking - Strainer For Sink 3  w.2.5  Stopper',1.29,100,'水池过滤罩',1,1.29,1,'ea','ea'),(9508,'Cooking - Strainer10 w. Dbl Mesh(SLSTN3310R)',19.95,100,'小孔过水罩',1,18.00,1,'ea','ea'),(10665,'Cooking - Sushi Case 5  ',2750.00,100,'寿司雪柜',1,2750.00,1,'ea','ea'),(10667,'Cooking - Sushi Tray w.Hole 7 7/8  x 4  (White China)(161-597)',8.50,100,'有孔白瓷碟',1,8.50,1,'ea','ea'),(10267,'Cooking - Sushi Warmer 60cups(SEJ7300)',349.00,100,'壽司暖煲',1,349.00,1,'ea','ea'),(11399,'Cooking - Tea Ball (Sltb006)13cm 5 1/4',12.99,100,'',1,12.99,1,'ea','ea'),(9779,'Cooking - Tea Pot (china) (32oz)',9.99,100,'强化瓷茶壶',1,9.50,1,'ea','ea'),(10618,'Cooking - Tea Pot 20oz Mental',7.50,100,'金属茶壶',1,7.50,1,'ea','ea'),(10000,'Cooking - Tea Pot Melemine (1 Person)',1.00,100,'单人茶壶',1,1.00,1,'ea','ea'),(10992,'Cooking - Tea Pot S/S 32oz(Sltp002)',8.99,100,'不锈钢茶壶',1,8.99,1,'ea','ea'),(11381,'Cooking - Tortilla Warmer 8.5  (TK85)',7.95,100,'',1,7.95,1,'ea','ea'),(9974,'Cooking - Turning Slicer',1.00,100,'刨菜器',1,1.00,1,'ea','ea'),(11697,'Cooking - Vegetable Peeler',2.39,100,'削皮刀',1,2.39,0,'ea','ea'),(9432,'Cooking - Water Ladle ( 8  Bowl w.4  Handle)',7.99,100,'水勺',1,7.99,1,'pc','pc'),(11413,'Cooking - White Bus Tub Lid ',9.99,100,'大胶盆蓋',1,9.99,1,'ea','ea'),(10632,'Cooking - White Freezer Box Cover(52173)',3.99,100,'胶盆蓋',1,3.99,1,'ea','ea'),(5879,'Corn - Baby 24/15oz',15.00,100,'整支小玉米',1,1.00,0,'cs','cs'),(9459,'Corn - Baby 6/5#  150 up',38.00,100,'小玉米',1,7.99,0,'cs','can'),(5880,'Corn - Baby Cut 6/5#',30.00,100,'切段玉米',1,6.50,0,'cs','can'),(9172,'Corn - Cob Froz. Organic Waxy 24/11.6oz',35.00,400,'冻玉米',1,2.49,0,'cs','pkg'),(11332,'Corn - Cob Froz.(Myriad) 30/3pc',1.69,400,'冻糯米粟',1,1.69,0,'pkg','pkg'),(10853,'Corn - Froz. Cooked Colr Sweet 24/3/170g',2.39,400,'多色冻甜玉米',1,2.39,0,'pkg','pkg'),(9000,'Cornstarch 50#',22.00,200,'生粉',1,22.00,0,'sk','sk'),(9828,'Crab - Claw 30#',79.80,400,'蟹钳',1,3.99,0,'cs','cs'),(5949,'Crab - Cluster 30#',186.00,400,'蟹脚',30,6.20,0,'cs','lb'),(10575,'Crab - Dungness Cripple Sections 50#',180.00,400,'蟹块',1,3.65,0,'cs','cs'),(10276,'Crab - Flake (Ozaki Kani) 22# (10/2.2#)',1.00,400,'寿司蟹肉片',1,1.00,0,'cs','pkg'),(6039,'Crab - Imitation Flake 15/2#',65.00,400,'假蟹片',30,2.79,0,'cs','lb'),(10367,'Crab - Imitation Meat Shredded Style 12/2.5# ',92.00,400,'假蟹碎',1,3.09,0,'cs','lb'),(12263,'Crab - Imitation Meat Shredded Style 12/2.5#(Tetsujin)',65.00,400,'假蟹碎(铁人)',1,65.00,0,'cs','cs'),(9496,'Crab - Imitation Stick 6/5#',41.00,400,'假蟹条',1,1.50,0,'cs','lb'),(9572,'Crab - Imitation Stick 6/5# 30# (Firm)',43.50,400,'实心假蟹条',1,1.45,0,'cs','lb'),(9794,'Crab - Imitation Stick(Marusei) 22#(20/1.1#)',65.78,400,'假蟹条',1,2.99,0,'cs','lb'),(9203,'Crab - Real Meat  48/0.5#/jar 24#',7.50,400,'真蟹肉',1,7.50,0,'jar','jar'),(11667,'Crab - Real Meat Claw & Body 40/14oz',300.00,400,'真蟹肉',1,7.95,0,'cs','pkg'),(10032,'Crab - Real Meat Snow  6/5#',225.00,400,'真雪蟹肉',1,7.50,0,'cs','lb'),(9899,'Crab - Softshell (Hotel) 6/18ea/box',216.00,400,'软壳蟹',1,38.00,0,'cs','box'),(11875,'Crab - Softshell (Jumbo)  4/2dz',140.00,100,'大软壳蟹',1,36.00,0,'cs','box'),(6250,'Crab - Softshell (Prime)  4/2dz',280.00,400,'软壳蟹',4,70.00,0,'cs','bx'),(5024,'Crab - Stick (Ozaki Kani) 22#(20/1.1#)',147.40,400,'寿司蟹肉条',22,6.70,0,'cs','lb'),(11312,'Crab Paste w. Soy Oil (XL) (DF) 24/7oz',86.00,100,'蟹膏醬',1,4.99,0,'cs','jar'),(11781,'Cracker - Black Sesame (DF) 48/6oz',56.00,100,'黑芝麻脆饼',1,1.50,0,'cs','pkg'),(11780,'Cracker - White Sesame (DF) 48/6oz',56.00,100,'白芝麻脆饼',1,1.50,0,'cs','pkg'),(10643,'Crawfish (16/22) 10#',28.00,400,'小龙虾',1,28.00,0,'cs','cs'),(9421,'Cream - Heavy (Quart)',3.00,300,'重奶油',1,3.00,0,'btl','btl'),(5780,'Cream of Corn  24/15oz',30.00,100,'玉米浆',1,1.99,0,'cs','can'),(5950,'Creamer 1000pcs',19.95,100,'咖啡伴侣',1,19.95,0,'cs','cs'),(4858,'Cup - (10J10) 10oz Fit (10sj) 40/25',29.50,100,'杯子',1,22.00,0,'cs','cs'),(9183,'Cup - (12J12) 12oz (Dart) Fit (12SL) 25/40 pcs',53.00,100,'杯子',1,53.00,0,'cs','cs'),(5837,'Cup - (12SJ20) 12oz  500/cs Fit 20JL',43.95,100,'杯子',1,43.95,0,'cs','cs'),(5839,'Cup - (14C18) 14oz 1m Fit (L18S/L18V/DT18)',70.00,100,'杯子',1,70.00,0,'cs','cs'),(5840,'Cup - (16C18) 16oz Fit (L18S/L18v)(Drink/Soup)  20/25cts',40.00,100,'杯子',1,40.00,0,'cs','cs'),(5812,'Cup - (16J16) 16oz 1000pc Drinking For 16sl',69.00,100,'杯子',1,69.00,0,'cs','cs'),(5841,'Cup - (16MJ20) 16oz Fit (20JL) 20/25',47.50,100,'杯子',1,47.50,0,'cs','sleeve'),(5842,'Cup - (20C18) 20oz  Fit(L18S) 25/20',51.00,100,'杯子',1,51.00,0,'cs','cs'),(11298,'Cup - (20J16) 20/25pc Fit (16SL)',36.00,100,'水杯',1,36.00,0,'cs','cs'),(5844,'Cup - (24C18) 24oz  Fit L18v/L18s 300pc',34.00,100,'杯子',1,34.00,0,'cs','cs'),(5847,'Cup - (32MJ48) 32oz Fit 48JL (Dart) 20/25',85.00,100,'杯子',1,85.00,0,'cs','cs'),(5848,'Cup - (32TJ32) 32oz  Fit 32JL 500pc',66.50,100,'杯子',1,66.50,0,'cs','cs'),(5850,'Cup - (6J6) 6oz 1000 (6J6)',24.95,100,'杯子',1,24.95,0,'cs','cs'),(5854,'Cup - (8J8) 8oz/Fit (8JL) 1000',30.00,100,'杯子',1,19.00,0,'cs','cs'),(5856,'Cup - (8SJ20) 8oz fit 20Jl 1m',59.00,100,'杯子',1,59.00,0,'cs','cs'),(9770,'Cup - (C12A) 12oz Hot Fit (L18S/L18V) 25/40',25.50,100,'杯子',1,22.00,0,'cs','cs'),(10981,'Cup - (CKC16U) 16oz Clear Fit (626TS) 20/50',70.00,100,'胶水杯',1,70.00,0,'cs','cs'),(10833,'Cup - (CKC24U) 24oz Clear Fit (626TS) 12/50pc',70.00,100,'胶水杯',1,70.00,0,'cs','cs'),(5845,'Cup - (Dcc24MJ48) 24oz Fit 48JL(Dart)  20/25',75.00,100,'杯子',1,75.00,0,'cs','cs'),(5972,'Cup - (F12) 12oz  20/25pc',46.00,100,'杯子',1,46.00,0,'cs','cs'),(5973,'Cup - (F16) 16oz  20/25pcs',52.00,100,'杯子',1,52.00,0,'cs','cs'),(5091,'Cup - (F32) 32oz  25/10 pcs',41.00,100,'杯子',1,41.00,0,'cs','cs'),(5974,'Cup - (F4) 4oz  25/40 Fit L6v ',40.00,100,'杯子',1,40.00,0,'cs','cs'),(5975,'Cup - (F6) 6oz  1000pcs Fit FL6v',59.00,100,'杯子',1,59.00,0,'cs','cs'),(5336,'Cup - (F8) 8oz  500pcs',40.00,100,'杯子',1,40.00,0,'cs','cs'),(12000,'Cup - (H4325-2050) 32 oz Soup Paper 500pc Fix CH32A',85.00,100,'32oz纸汤杯',1,85.00,0,'cs','cs'),(6357,'Cup - (P075SN) 3/4 oz Portion  10/250ct Fit PL100N',42.00,100,'杯子',1,42.00,0,'cs','cs'),(6358,'Cup - (P100N) 1oz Portion  10/250ct Fit PL100N',39.00,100,'小杯',1,39.00,0,'cs','cs'),(5814,'Cup - (P200N) 2oz   10/250pcs Fit PL200N',39.00,100,'杯子',1,39.00,0,'cs','sleev'),(6360,'Cup - (P325N) 3 1/4 oz Portion 2.5k Fit PL4',64.00,100,'杯子',1,64.00,0,'cs','cs'),(6361,'Cup - (P400N) 4oz Portion 10/250pcs/Fit Pl4',69.00,100,'杯子',1,69.00,0,'cs','cs'),(10399,'Cup - (TP16) 16oz Clear For Boba 1m/cs',72.50,100,'杯子',1,68.95,0,'cs','cs'),(12118,'Cup - 0.5oz Portion Paper (F050) 20/250cts',46.00,100,'纸小杯子',1,46.00,0,'cs','cs'),(10509,'Cup - 20oz Clear 1000pc',90.50,100,'胶水杯',1,90.50,0,'cs','cs'),(10245,'Cup - 20oz Clear Tumblur 12/6pc (Plthtb020)',80.50,100,'胶水杯',1,14.50,0,'cs','dz'),(10365,'Cup - 5 1/2oz Portion 21/125cts',59.50,100,'杯子',1,59.50,0,'cs','cs'),(9217,'Cup - Sake  Small  (1.5 ) 160/45ml',14.95,100,'日本酒杯(小)',1,12.50,1,'dz','dz'),(10055,'Cup - Sake (S-1.5 ) (Green &Grey) (32306)',35.88,100,'青灰日本酒杯',1,35.88,1,'dz','dz'),(10210,'Cup - Sake (S-2 ) 8/1dz  (White/710-69)',16.00,100,'日本酒杯(小)',1,15.00,1,'dz','dz'),(9790,'Cup - Sake Large (2 /60ml)',16.50,100,'日本酒杯(大)',1,1.69,1,'dz','ea'),(10628,'Cup - Tea (Blue Bamboo/63098)',21.95,100,'蓝竹茶杯',1,2.15,1,'dz','ea'),(10594,'Cup - Tea 3  White 4oz (China/SS79)',1.50,100,'白色瓷茶杯',1,1.50,1,'ea','ea'),(11456,'Cup - Tea Dine In China 72/5oz (280-29)',100.00,100,'瓷茶杯',1,1.49,0,'cs','ea'),(10568,'Cup - Tea Sushi (718T-E) #68057',21.95,100,'茶杯',1,1.99,1,'dz','ea'),(9050,'Curry - (Patak) 6/10oz',27.00,100,'印度咖喱',1,4.85,0,'cs','jar'),(10164,'Curry - (SB Gldn) Hot 6/10/8.4oz',5.69,100,'咖喱',1,5.69,0,'cs','box'),(10163,'Curry - (SB Gldn) Medhot 6/10/8.4oz',5.69,100,'咖喱',1,5.69,0,'cs','box'),(10162,'Curry - (SB Gldn) Mild 6/10/8.4oz',5.69,100,'咖喱',1,5.69,0,'cs','box'),(9389,'Curry - Ca Ri Dau An Do (Madras) 12/8oz',27.95,100,'成功咖喱酱',12,21.00,0,'cs','cs'),(9721,'Curry - Garam Masala Powder 14oz',5.50,100,'',1,5.50,0,'pkg','pkg'),(12309,'Curry - Green (DF) 24/8oz',45.00,100,'绿咖喱酱(蜻蜓)',1,2.49,0,'cs','jar'),(6019,'Curry - Green (Mae Ploy) 24/14oz',57.00,100,'绿咖喱酱',24,3.99,0,'cs','tub'),(9524,'Curry - In Gravy (L) (DFLY) 24/13.5oz',36.00,100,'蜻蜓牌咖喱汁',1,22.50,0,'cs','cs'),(11064,'Curry - Masaman (Mae Anong) 20/16oz',75.00,100,'馬沙曼咖喱醬',1,4.50,0,'cs','jar'),(10589,'Curry - Masaman (Mae Ploy) 12/35oz',55.00,100,'咖喱醬',1,5.50,0,'cs','jar'),(6112,'Curry - Masaman (Mae Ploy) 24/14oz',57.00,100,'馬沙曼咖哩醬',1,3.99,0,'cs','jar'),(9666,'Curry - Masaman (Maesri) 48/4oz',41.50,100,'咖喱酱',1,0.95,0,'cs','can'),(12227,'Curry - Panang  (Mae Ploy) 12/35oz',53.00,100,'花生咖喱醬',1,53.00,0,'cs','cs'),(6148,'Curry - Panang  (Mae Ploy) 24/14oz',57.00,100,'花生咖喱醬',24,3.99,0,'cs','tub'),(10681,'Curry - Panang (Mae Anong)  20/16oz',55.00,100,'花生咖喱醬',1,5.50,0,'cs','jar'),(6147,'Curry - Panang (Masari) 48/4oz',41.50,100,'花生咖喱醬',1,0.95,0,'cs','can'),(6192,'Curry - Red (Mae Ploy) 24/14oz',57.00,100,'紅咖喱',24,3.99,0,'cs','tub'),(9326,'Curry - Red (Maeploy) 12/35oz',55.00,100,'',12,5.50,0,'cs','jar'),(6191,'Curry - Red (Masari) 48/4oz',46.00,100,'',48,0.95,0,'cs','can'),(6334,'Curry - Yellow  (Mae Ploy) 24/14oz',56.00,100,'黃咖喱',24,3.00,0,'cs','tub'),(9327,'Curry - Yellow  (Maeploy) 12/35oz',55.00,100,'',12,5.50,0,'cs','jar'),(10442,'Curry - Yellow (Mae Ploy) 48/4oz',30.50,100,'黃咖喱醬',1,0.79,0,'cs','can'),(10302,'Curry - Yellow (Masari) 48/4oz',37.50,100,'黃咖喱醬',1,37.50,0,'cs','can'),(10702,'Curry - Yellow Sour Paste (Maesri) 48/4oz',45.00,100,'黃酸咖喱醬',1,1.29,0,'cs','can'),(11469,'Curry Powder (S&B) 6/4.4#',61.00,100,'日本咖喱秎',1,61.00,0,'can','can'),(5952,'Curry Powder 5#',20.00,100,'咖喱粉',1,20.00,0,'jar','jar'),(5953,'Custard Powder (Lion) 4/7.7#',85.00,100,'吉士粉',4,23.00,0,'cs','can'),(11559,'Custard Powder 24/12oz',70.00,100,'吉士粉',1,3.59,0,'cs','can'),(9876,'Cutting Fee',1.00,100,'',1,1.00,0,'lb','lb'),(10850,'Cuttlefish - #8K U1 Whole  22.05#',99.00,400,'全只墨魚',1,4.50,0,'cs','lb'),(11620,'Cuttlefish - 1/2 Whole  22.05#',99.00,400,'全只墨魚',1,4.50,0,'cs','ib'),(10016,'Cuttlefish - Ball (Ho Ho) 30/1#',90.00,400,'花枝丸',1,6.49,0,'cs','pkg'),(5014,'Cuttlefish Fillet (Ika) For Sushi (Mongo)14/700g',21.00,400,'寿司墨鱼片',1,19.00,0,'pkg','pkg'),(9341,'Cuttlefish Fillet 13-20  20/1.5#',149.70,400,'墨鱼片',24,4.99,0,'cs','lb'),(9355,'Cuttlefish Fillet 21-30  20/1.5#',285.00,400,'墨鱼片',24,9.50,0,'cs','lb'),(5954,'CuttleFish Fillet 31-40 20/1.5#',285.00,400,'墨鱼片',24,9.50,0,'cs','lb'),(9542,'Cuttlefish Fillet 41-60 24#',76.80,400,'墨鱼片',1,3.20,0,'cs','lb'),(11378,'Cuttlefish Fillet 8/12  30#',172.50,400,'墨鱼片',1,5.75,0,'cs','lb'),(9772,'Dace  Fried 48/6.5oz',135.00,100,'鲜炸鲮鱼',1,3.59,0,'cs','can'),(9078,'Dace with Black Bean 48/6.5oz',135.00,100,'豆豉鲮鱼',1,3.59,0,'cs','can'),(9158,'Dace with Preserved Vegetable 48/6.5oz',135.00,100,'梅菜鲮鱼',1,3.59,0,'cs','can'),(11652,'Dates - Black',4.50,100,'黑枣',1,4.50,0,'lb','lb'),(9076,'Dates - Red ',3.75,100,'红枣',1,3.75,0,'lb','lb'),(9087,'Dates - Sweet',3.99,100,'蜜枣',1,3.99,0,'lb','lb'),(5966,'Dehydrated Cole - Dry(Mustard Green) 100/150g',1.69,100,'菜干',1,1.69,0,'pkg','pkg'),(4754,'Detergent Powder (Laundry/70250) 50#',26.00,100,'洗潔粉',1,26.00,1,'cs','cs'),(10451,'Dim Sum - 8 Treasures Glutinous Rice Cake 100/50g',22.00,400,'八宝粽',1,0.28,0,'cs','ea'),(11956,'Dim Sum - AH- Mocha Jelly Roll 5/bun',60.00,400,'摩卡慕斯蛋卷',1,60.00,0,'cs','cs'),(11142,'Dim Sum - Baked Roast Pork Bun 15/6pcs',51.00,400,'焗叉烧包',1,3.99,0,'cs','pkg'),(9656,'Dim Sum - BBQ Pork Bun  50/2oz (Otasty) (#32112)',25.00,400,'叉烧包',1,21.00,0,'cs','cs'),(10239,'Dim Sum - BBQ Pork Buns 3/60pcs',49.95,400,'美味极叉烧包',1,18.00,0,'cs','bag'),(10362,'Dim Sum - BBQ VeggiePork Bun 12/20pc',34.50,400,'素叉烧包',1,3.50,0,'cs','pkg'),(9416,'Dim Sum - Beancurd Roll w/Minced Fish 24g/40/4pkg',35.00,400,'腐皮卷',4,11.00,0,'cs','pkg'),(11924,'Dim Sum - Beef & G. Onion Dumpling (WC/MJ) 12/21oz',62.00,400,'牛肉京葱水饺',1,6.99,0,'cs','pkg'),(10527,'Dim Sum - Bun w.Mushroom & Onion 6/25pcs',28.00,400,'冬菇香葱包',1,4.95,0,'cs','pkg'),(5445,'Dim Sum - Char Sui Bun  (WC) 10/8pcs24oz',55.00,400,'味全叉烧包',1,7.50,0,'cs','bag'),(11829,'Dim Sum - Char Sui Bun  (WC) 2/57.2oz',26.00,400,'味全叉烧包',1,15.00,0,'cs','pkg'),(11646,'Dim Sum - Char Sui Bun HK Stlye (WC) 10/8pcs24oz',55.00,400,'港式叉烧包',1,7.50,0,'cs','pkg'),(11642,'Dim Sum - Chicken Veg. w. Mushroom Dumplings (WC)  12/21oz',47.50,400,'鸡肉冬菇饺',1,4.99,0,'cs','pkg'),(11823,'Dim Sum - Chinese Cruller 17/3pcs (Sweet Garden)',3.99,300,'乐园油条',1,3.99,0,'pkg','pkg'),(11442,'Dim Sum - Chive & Shrimp Sui Gow (WC)  12/21oz',1.00,400,'韭菜鲜虾水饺',1,1.00,0,'cs','pkg'),(5864,'Dim Sum - Chive Cake w.Shrimp (ACC) 10/24pcs',59.00,400,'韭菜餅',1,6.95,0,'cs','pkg'),(10774,'Dim Sum - Coconut Cake (H-Canada) 5/bun',35.00,400,'椰丝蛋糕',1,35.00,0,'cs','cs'),(12002,'Dim Sum - Cream Jelly Roll (A-Canada) 5/bun',56.00,400,'奶油蛋卷',1,56.00,0,'cs','cs'),(9418,'Dim Sum - Crystal Coconut Cake  (ACC) 8/24pcs',36.00,400,'椰蓉水晶角',8,5.99,0,'cs','cs'),(9798,'Dim Sum - Custard Bun 20/6pc (WC)',1.00,400,'奶黄包',1,1.00,0,'cs','pkg'),(9419,'Dim Sum - Custard Buns (ACC) 6/25pcs',30.00,400,'奶黄包',6,6.99,0,'cs','pkg'),(10139,'Dim Sum - Deep Fried Donut (Fz) 24/8.8oz',1.00,400,'急冻鲜炸油条',1,1.00,0,'cs','cs'),(11141,'Dim Sum - Deluxe Meat Bun 8/8pcs',41.00,400,'一品包',1,5.95,0,'cs','pkg'),(5865,'Dim Sum - Egg Custard Tarts (ACC) 10/16pc',28.00,400,'蛋挞',1,3.95,0,'cs','pkg'),(9343,'Dim Sum - Fried Stick (chinese long donus) 16/170g',3.99,400,'油条',17,3.99,0,'pkg','pkg'),(9443,'Dim Sum - Fried Stick (L)',1.75,400,'炸油条',1,1.75,0,'ea.','ea.'),(11140,'Dim Sum - Fuzhou Chives&Pork Bun 12/12pcs',49.00,400,'福州生煎包',1,4.95,0,'cs','pkg'),(11982,'Dim Sum - G- Carrot Cake w. Walnut',47.00,400,'合桃红萝卜旦糕',1,47.00,0,'cs','cs'),(10215,'Dim Sum - Glutinous Rice Dumpling 6/20pc',48.95,400,'糯米鸡',1,8.95,0,'cs','pkg'),(9791,'Dim Sum - Glutinous Rice Dumpling w. Red Beanpaste 90pc',35.00,400,'红豆沙粽子',1,0.39,0,'cs','ea'),(9154,'Dim Sum - Golden Bag (ACC) 16/16 pcs',29.95,400,'金钱袋',1,29.95,0,'cs','cs'),(5866,'Dim Sum - Hargow (ACC) 8/31pcs',55.00,400,'虾饺',1,7.50,0,'cs','pkg'),(5877,'Dim Sum - Hargow (Amoy) 240 pcs',69.50,400,'虾饺',1,69.50,0,'cs','cs'),(10502,'Dim Sum - Hargow (Kimbo) 12/20pcs',68.82,400,'金宝虾饺',1,5.95,0,'cs','pkg'),(9595,'Dim Sum - Hargow (WC) 20/10pc',39.00,400,'味全虾饺',1,2.00,0,'cs','pkg'),(10906,'Dim Sum - Hargow Shrimp(Savory Exp.)20/20pc',120.00,400,'好味快车虾饺',1,7.95,0,'cs','pkg'),(9417,'Dim Sum - Hedgehog Shaped Bun (ACC) 30g/30/6',21.50,400,'刺猬包',30,21.50,0,'cs','cs'),(10884,'Dim Sum - J - Black Forest Cake 5/2.25#',60.00,400,'黑森林蛋糕',1,46.95,0,'cs','cs'),(9342,'Dim Sum - Jumbo Pork & Veggie Bun (Myriad)  30/5oz',33.00,400,'美味极大肉包',30,1.20,0,'cs','ea.'),(11063,'Dim Sum - L- Mocha Mousse Cake 5/bun',60.00,400,'咖啡慕斯蛋糕',1,60.00,0,'cs','cs'),(11941,'Dim Sum - Leek Bun (WC)  20/6pc',2.19,400,'韭菜包',1,2.19,0,'pkg','pkg'),(10455,'Dim Sum - Lotus (Folded) Bun (DK) 22/12pc',79.00,400,'荷叶包(登高)',1,4.99,0,'cs','cs'),(9324,'Dim Sum - Lotus Leaf (Cutted) Bun  16/24pcs  ',38.00,400,'荷叶包',16,2.99,0,'cs','pkg'),(11215,'Dim Sum - Lotus Leaf Bun (Big/WC) 12/12pc',58.00,400,'大块荷叶包',1,5.99,0,'cs','pkg'),(9420,'Dim Sum - Lotus Seed Paste Bun (ACC) 30g/25pc/6',23.50,400,'莲蓉包',6,4.25,0,'cs','pkg'),(9429,'Dim Sum - Milk Crispy Tarts  16/10pkg',23.00,400,'巧克力奶挞',16,23.00,0,'cs','cs'),(12306,'Dim Sum - Milky Twist Steamed Bread (DK) 18/16oz',1.00,400,'牛奶螺丝卷',1,1.00,0,'pkg','pkg'),(6122,'Dim Sum - Mini Steam Bun 10/8pcs',26.50,400,'桂冠小馒头',1,2.99,0,'cs','pkg'),(10019,'Dim Sum - Mini Steamed Bun 6/30 (ACC)',24.95,400,'小馒头',1,4.50,0,'cs','pkg'),(11922,'Dim Sum - Mushroom/Spinach Bun 20/6pc',38.00,400,'荠菜冬菇包',1,2.19,0,'cs','pkg'),(12364,'Dim Sum - Onion Roll (DK) 22/12oz',3.99,400,'登高花卷',1,3.99,0,'pkg','pkg'),(9131,'Dim Sum - Peach Bun 6/35pcs (ACC)',39.00,400,'寿桃包',1,7.50,0,'cs','bsg'),(11967,'Dim Sum - Phoenix Bun (Likofu) 16/9pc',87.84,400,'流沙包/利口福',1,5.49,0,'cs','pkg'),(11217,'Dim Sum - Pie Green Onion (WC) 20/5pc',3.19,400,'香葱抓饼',1,3.19,0,'pkg','pkg'),(11159,'Dim Sum - Pie Radish Froz. 20/4pcs',3.19,400,'萝卜丝饼',1,3.19,0,'pkg','pkg'),(11124,'Dim Sum - Pie Red Bean (WC) 20/4pc',3.19,400,'红豆煎饼',1,3.19,0,'pkg','pkg'),(11218,'Dim Sum - Pie Spring Onion (WC) 20/4pc',3.19,400,'葱花煎饼',1,3.19,0,'pkg','pkg'),(11234,'Dim Sum - Pie Sweet Potato (WC) 20/4pcs',3.19,400,'地瓜煎饼',1,3.19,0,'pkg','pkg'),(11216,'Dim Sum - Pie Taro (WC)  20/4pc',3.19,400,'香芋煎饼',1,3.19,0,'pkg','pkg'),(11586,'Dim Sum - Pork & Cabbage Steamed Bun (WC) 10/24oz',51.50,400,'高丽菜包',1,6.79,0,'cs','pkg'),(11451,'Dim Sum - Pork & Chinese Spinach Dumplings (WC)  12/21oz',49.00,400,'猪肉荠菜水饺',1,5.99,0,'cs','pkg'),(11643,'Dim Sum - Pork & Chinese Spinach Wonton (WC)  10/16oz',47.50,400,'猪肉荠菜云吞',1,5.99,0,'cs','pkg'),(11923,'Dim Sum - Pork & G. Onion Dumpling (WC/MJ) 12/21oz',50.00,400,'猪肉京葱水饺',1,4.50,0,'cs','pkg'),(11628,'Dim Sum - Pork & Green Bean Steamed Bun (WC)  10/24oz',51.50,400,'四季豆肉包',1,6.79,0,'cs','pkg'),(11645,'Dim Sum - Pork & Green Onion Bun (WC)  10/24oz',59.50,400,'青葱猪肉包',1,7.50,0,'cs','pkg'),(11453,'Dim Sum - Pork & Napa Dumplings (WC)  12/21oz',45.00,400,'猪肉白菜水饺',1,4.50,0,'cs','pkg'),(11641,'Dim Sum - Pork Corn&Cabbage Dumplings (WC/SD) 12/21oz',47.50,400,'猪肉玉米包菜饺',1,4.99,0,'cs','pkg'),(11454,'Dim Sum - Pork Leek Dumplings (WC/SD)  12/21oz',45.00,400,'猪肉韭菜水饺',1,4.50,0,'cs','pkg'),(11450,'Dim Sum - Pork Leek Shrimp Dumplings (WC/MJ)  12/21oz',62.00,400,'韭菜虾水饺',1,6.99,0,'cs','pkg'),(9609,'Dim Sum - Pork Mini Bun (WC)  12/20oz',50.00,400,'小笼包',1,6.50,0,'cs','bag'),(11552,'Dim Sum - Pork Mini Bun w.Crab Meat (WC)  12/20oz',50.00,400,'蟹肉小笼包',1,6.50,0,'cs','bag'),(11452,'Dim Sum - Pork Shrimp & Scallop Dumplings (WC)  12/21oz',59.00,400,'干贝虾水饺',1,6.99,0,'cs','pkg'),(11668,'Dim Sum - Pork Shrimp & Snow Pea Sprout Dumplings (WC)  12/21oz',59.00,400,'豆苗猪肉虾水饺',1,6.99,0,'cs','pkg'),(11644,'Dim Sum - Pork Shrimp Wonton HKStlye (WC)  10/14oz',57.00,400,'港式猪肉虾云吞',1,7.39,0,'cs','pkg'),(11673,'Dim Sum - Pork, Shrimps & Chinese Spinach Dumplings (WC)  12/21oz',59.00,400,'豬肉虾荠菜水饺',1,6.99,0,'cs','pkg'),(10730,'Dim Sum - Portugese Egg Tart',2.50,400,'葡挞',1,2.50,0,'pc','pc'),(11612,'Dim Sum - Pre-S Chicken Pork Dumplings (WC)  12/21oz',55.00,400,'莲藕鸡猪煎饺',1,5.50,0,'cs','pkg'),(11719,'Dim Sum - Pre-S Chicken Pork Gyoza (WC)  12/21oz',48.00,400,'鸡猪煎饺',1,4.95,0,'cs','bag'),(11447,'Dim Sum - Pre-S Veg.Chicken Dumplings (WC)  12/21oz',45.00,400,'味全鸡菜水饺',1,4.99,0,'cs','pkg'),(11455,'Dim Sum - Pre-S Veg.Chicken Dumplings (WC)  8/32oz',40.00,400,'鸡肉煎饺',1,5.95,0,'cs','pkg'),(11485,'Dim Sum - Radish Cake (Reg.) 24/23oz',2.99,300,'原味萝卜糕',1,2.99,0,'ea','ea'),(11488,'Dim Sum - Radish Cake (Turnip) 24/23oz',2.99,300,'腊味萝卜糕',1,2.99,0,'ea','ea'),(11486,'Dim Sum - Radish Cake (Veg.) 24/23oz',2.99,300,'素萝卜糕',1,2.99,0,'ea','ea'),(11314,'Dim Sum - Radish Cake 8/30pc',35.00,400,'萝卜糕',1,4.99,0,'cs','pkg'),(9711,'Dim Sum - Red Bean Bun (Baily) 10/20pcs',29.00,400,'百利红豆包',1,2.95,0,'cs','pkg'),(6189,'Dim Sum - Red Bean Bun (WC/#46364) 20/6pcs',58.00,400,'紅豆包',1,5.99,0,'cs','pkg'),(9489,'Dim Sum - Red Bean Past Puff 12/20pc',3.99,400,'红豆沙酥哈',1,3.99,0,'pkg','pkg'),(11190,'Dim Sum - Rice Ball (Black Pearl)(Synear)32/300g',2.59,400,'思念小黑芝麻汤圆',1,2.59,0,'pkg','pkg'),(11301,'Dim Sum - Rice Ball (Five Nuts) (Synear) 24/400g ',2.99,400,'思念五仁汤圆',1,2.99,0,'pkg','pkg'),(9329,'Dim Sum - Rice Ball (Peanut) (ACC)  10/20/20g',19.95,400,'花生汤圆',20,2.25,0,'cs','pkg'),(11524,'Dim Sum - Rice Ball (Peanut) (Laurel) 25/10pcs',42.00,400,'桂冠花生汤圆',1,2.49,0,'cs','pkg'),(11165,'Dim Sum - Rice Ball (Peanut) (Spring Home) 24/10pcs',32.00,400,'花生汤圆',1,1.99,0,'cs','pkg'),(11502,'Dim Sum - Rice Ball (Peanut/Purple) (Laurel) 25/10pcs',2.49,400,'桂冠黑米花生汤圆',1,2.49,0,'pkg','pkg'),(11018,'Dim Sum - Rice Ball (Purple Sesame)(Synear) 24/400g',53.00,400,'黑糯芝麻汤圆',1,2.59,0,'cs','pkg'),(11825,'Dim Sum - Rice Ball (Red Bean Paste) (Laurel) 25/10pcs',2.49,400,'桂冠红豆汤圆',1,2.49,0,'pkg','pkg'),(9724,'Dim Sum - Rice Ball (Red Bean) (Otasty) 24/10ps 10.5lb',23.00,400,'Otasty汤圆',1,1.50,0,'cs','pkg'),(11164,'Dim Sum - Rice Ball (Red Bean) (Spring Home) 24/10pcs',32.00,400,'红豆汤圆',1,1.99,0,'cs','pkg'),(11273,'Dim Sum - Rice Ball (Sesame&Peanut) (Synear) 20/454g',2.99,400,'思念花生芝麻汤圆',1,2.99,0,'pkg','pkg'),(9553,'Dim Sum - Rice Ball (Sesame) (ACC) 10/20/20g',19.95,400,'芝麻汤圆',1,2.25,0,'cs','pkg'),(11972,'Dim Sum - Rice Ball (Sesame) (Laurel) 25/250g',53.00,400,'迷你小汤丸',1,2.49,0,'cs','pkg'),(11163,'Dim Sum - Rice Ball (Sesame) (Spring Home) 24/10pcs',32.00,400,'芝麻汤圆',1,1.99,0,'cs','pkg'),(11271,'Dim Sum - Rice Ball (Sesame) (Synear) 24/400g',3.29,400,'思念黑芝麻汤圆',1,3.29,0,'pkg','pkg'),(10751,'Dim Sum - Rice Ball (Sesame) (WC)  24/10pc',32.00,400,'芝麻汤圆',1,1.99,0,'cs','pkg'),(10037,'Dim Sum - Rice Ball (Sesame)(Laurel) 25/10pcs',2.49,400,'桂冠芝麻汤圆',1,2.49,0,'cs','pkg'),(11503,'Dim Sum - Rice Ball (Sesame/Purple) (Laurel) 25/10pcs',2.49,400,'桂冠黑米芝麻汤圆',1,2.49,0,'pkg','pkg'),(9725,'Dim Sum - Rice Ball- Mini (Otasty) 10/24pkg 10.5lb',23.00,400,'小汤圆',1,23.00,0,'cs','pkg'),(11482,'Dim Sum - Rice Cake (Coconut) 16/25oz',3.99,300,'椰味年糕',1,3.99,0,'ea','ea'),(11484,'Dim Sum - Rice Cake (Red Bean) 16/25oz',3.99,300,'红豆年糕',1,3.99,0,'ea','ea'),(11481,'Dim Sum - Rice Cake (Reg.) 16/25oz',3.99,300,'原味年糕',1,3.99,0,'ea','ea'),(11483,'Dim Sum - Rice Cake (Taro) 16/25oz',3.99,300,'芋香年糕',1,3.99,0,'ea','ea'),(11108,'Dim Sum - Roasted Pork Bun 2/25pcs',25.00,400,'港式叉烧包',1,15.00,0,'cs','pkg'),(10528,'Dim Sum - Salty Rice Dumpling 5/20pcs',19.50,400,'咸粽',1,4.95,0,'cs','pkg'),(5820,'Dim Sum - Sesame Ball (ACC) 10/20pcs',19.00,400,'芝麻球',1,17.00,0,'cs','cs'),(5882,'Dim Sum - Sesame Ball (Baily) 10/20pcs',25.00,400,'芝麻球',1,2.99,0,'cs','cs'),(10945,'Dim Sum - Sesame Ball (Greenland) 10/24pc',27.00,400,'芝麻球',1,27.00,0,'cs','cs'),(9934,'Dim Sum - Sesame Ball (On On) 10/24pcs',19.00,400,'芝麻球',1,19.00,0,'cs','cs'),(10517,'Dim Sum - Sesame Ball (WC) 20/20/20g',31.50,400,'芝麻球',1,2.50,0,'cs','pkg'),(11531,'Dim Sum - Sesame Bun 20/6pcs (WC)',2.99,400,'爆浆芝麻包\n',1,2.99,0,'pkg','pkg'),(11122,'Dim Sum - Shao Bing (WC) 40/6pc',2.95,400,'烧饼',1,2.95,0,'pkg','pkg'),(11143,'Dim Sum - Shrimp&Pork w. Chives 10/10pc',47.50,400,'虾猪肉韭菜饼',1,5.50,0,'cs','pkg'),(9163,'Dim Sum - Siu Mai - Pork (Special) 400 pcs',85.00,400,'烧卖',1,85.00,0,'cs','cs'),(6246,'Dim Sum - Sliced Flour Roll',24.00,400,'银丝卷',1,24.00,0,'cs','item'),(11221,'Dim Sum - Steamed Bun Wheat (MF) 14/6pc',35.00,400,'美味极麦馒头',1,2.99,0,'cs','pkg'),(10616,'Dim Sum - Steamed Bun Wheat 24/19.7',68.00,400,'全麦馒头',1,2.99,0,'cs','pkg'),(11686,'Dim Sum - Steamed Bun White (MF) 14/6pc',35.00,400,'美味极白馒头',1,2.99,0,'cs','pkg'),(10652,'Dim Sum - Steamed Sponge 6/30pcs',34.00,400,'马拉盏',1,6.99,0,'cs','pkg'),(11109,'Dim Sum - Steamed Taro Paste Bun 6/25pcs',25.00,400,'芋蓉包',1,4.95,0,'cs','pkg'),(9428,'Dim Sum - Steamed Twisted Roll 12/25pc',33.00,400,'花卷',1,4.50,0,'cs','pkg'),(11950,'Dim Sum - Strawberry Cake 5/bun',60.00,300,'草莓蛋糕',1,60.00,0,'cs','cs'),(10157,'Dim Sum - Sui Mai - Beef(JFC) 20/7.6oz',52.00,400,'牛烧卖',1,2.79,0,'cs','cs'),(12282,'Dim Sum - Sui Mai - Chix & Water Chestnut(WC) 12/10oz',1.00,400,'鸡肉马蹄烧卖 (酱料)',1,1.00,0,'pkg','pkg'),(10243,'Dim Sum - Sui Mai - Pork (WC) 10/20pcs',41.25,400,'肉烧卖',1,4.50,0,'cs','cs'),(12093,'Dim Sum - Sui Mai - Pork Jumbo (Ajinomoto) 10/15.86oz',65.00,400,'猪肉烧卖',1,7.50,0,'cs','pkg'),(9634,'Dim Sum - Sui Mai - Pork&Shrimp 12/10oz (WC)',4.99,400,'猪肉虾烧麦',1,4.99,0,'pkg','pkg'),(10610,'Dim Sum - Sui Mai - Pork(Good Guy) 196pcs/18#',105.00,400,'肉烧卖',1,105.00,0,'cs','cs'),(10158,'Dim Sum - Sui Mai - Pork(JFC) 20/12pc7.6oz',52.00,400,'肉烧卖',1,2.79,0,'cs','cs'),(10057,'Dim Sum - Sui Mai - Pork(Otasty) 3/100pcs',39.95,400,'全美肉烧卖',1,15.00,0,'cs','pkg'),(5867,'Dim Sum - Sui Mai - Seafood 8/54pcs (ACC) ',65.00,400,'烧卖',1,11.95,0,'cs','pkg'),(10985,'Dim Sum - Sui Mai - Shrimp(JFC) 20/7.6oz',52.00,400,'虾烧卖',1,2.79,0,'cs','pkg'),(10905,'Dim Sum - Sui Mai - Shrimp(Savory Exp.) 20/20pc',120.00,400,'好味快车烧卖',1,7.95,0,'cs','pkg'),(10160,'Dim Sum - Sui Mai - Wasabi(JFC) 20/7.6oz',52.50,400,'芥辣烧卖',1,52.50,0,'cs','cs'),(10503,'Dim Sum - Sui Mai -Shrimp (Kimbo) 12/20pcs',65.00,400,'金宝烧卖',1,4.95,0,'cs','pkg'),(11609,'Dim Sum - Sweet Potato Bun (WC) 20/6pcs',45.00,400,'地瓜包',1,2.75,0,'cs','bag'),(11315,'Dim Sum - Szechuan Han s Pork Bun 8/8pcs',38.00,4400,'四川韩肉包',1,5.50,0,'cs','pkg'),(12026,'Dim Sum - T - Brownie Cake 5 box/bun (Canada)',50.00,400,'巧克力蛋糕',1,50.00,0,'cs','cs'),(11316,'Dim Sum - Taipei Pork & Veggie Bun 8/8pcs',38.00,400,'台北菜肉包',1,5.50,0,'cs','pkg'),(11487,'Dim Sum - Taro Cake (Veg.) 25/23oz',2.99,300,'素芋头糕',1,2.99,0,'ea','ea'),(9445,'Dim Sum - Taro Pudding  12 x12 /pc',20.00,400,'芋头糕',1,15.25,0,'pc','pc'),(9338,'Dim Sum - Thai Money Bag (Amoy) 5/6/8pc',35.00,400,'金钱袋',5,35.00,0,'cs','cs'),(11123,'Dim Sum - Tsung Yu Bing (WC) 30/4pc',2.79,400,'葱油饼',1,2.79,0,'pkg','pkg'),(11560,'Dim Sum - Twist Cruller (Peking) 20/3pcs',55.00,400,'油条',1,3.99,0,'cs','pkg'),(11551,'Dim Sum - Vegetable Bun  20/6pc (WC)',42.00,400,'素菜包',1,2.89,0,'cs','pkg'),(11357,'Dim Sum - W - Mango Mousse Cake 5/bun',60.00,400,'芒果慕斯蛋糕',1,60.00,0,'cs','cs'),(11176,'Dim Sum - Water Chestnut Pudding 8/36pc',29.00,400,'马蹄糕',1,4.95,0,'cs','pkg'),(11317,'Dim Sum - Yangzhou Diced Pork Bun 8/8pcs',38.00,400,'扬州三丁包',1,5.50,0,'cs','pkg'),(9621,'Dim Sum - Zhongzi (Sweet Rice Dumpling)',2.50,300,'粽子',1,1.89,0,'pc','pc'),(11272,'Dim Suml - Rice Ball (Mixed Nuts) (Synear) 20/454g',2.99,400,'思念八宝果仁汤圆',1,2.99,0,'pkg','pkg'),(11275,'Dim Suml - Rice Ball (Walnut&Sesame) (Synear) 20/454g',2.99,400,'思念核桃芝麻汤圆',1,2.99,0,'pkg','pkg'),(11820,'Dish - 12oz 10 3/8 Soup Plate (1110TR)',53.40,100,'12oz万寿无疆汤碟',1,4.45,1,'dz','ea'),(12244,'Dish - 8   Square  Jazz (SD3208J)',5.50,100,'8寸方碟',1,5.50,1,'ea','ea'),(9922,'Dish - Sauce (Green)',15.00,100,'小酱碟',1,1.35,0,'dz','ea'),(11391,'Dish - Sauce 1 1/2oz Blue Bamboo(0002BB)',19.08,100,'双酱油碟',1,19.08,1,'dz','dz'),(9958,'Dish - Sauce 2  x 3  (310-E/#130,Eggplate)',27.48,100,'小方酱碟',1,2.29,1,'dz','ea.'),(10621,'Dish - Sauce 3.5 x2.5  Blue Bamboo(0001BB)',15.00,100,'方醬碟',1,1.39,1,'dz','ea'),(11335,'Dish - Sauce 3oz Blue Bamboo(1036BB)',15.99,100,'蓝竹花形酱油碟',1,15.99,1,'dz','dz'),(11460,'Dish - Sauce 4oz 6 x3  Twin(19002WT)',15.00,100,'双酱碟',1,1.25,1,'dz','dz'),(11892,'Dish - Sauce 4oz Blue Bamboo(1002BB)',16.50,100,'蓝竹方形酱油碟',1,16.50,1,'dz','dz'),(11566,'Dish - Sauce Round 1oz 2.75  (1101TR/Longevity)',6.50,100,'红寿酱碟',1,0.59,1,'dz','ea'),(11318,'Dish - Sauce Round 1oz 2.75  (1101TW) (White)',6.50,100,'小圆白酱碟',1,0.59,1,'dz','ea'),(10061,'Dish - Sauce Round 3  (Btd27)',7.35,100,'圆酱碟',1,0.65,1,'dz','ea'),(11349,'Dish - Sauce Round 3oz 3.875  (1003TW) Imperial',11.40,100,'圆酱油碟（白）',1,0.85,1,'dz','dz'),(10540,'Dish - Sauce Round 4  (1003TB)(Blue Lotus)',11.40,100,'中圆醬碟',1,0.85,1,'dz','ea'),(10361,'Dish - Sauce Round 4  (326-E)',10.00,100,'圆醬碟',1,0.85,1,'dz','ea'),(9586,'Dish - Sauce w.2 com. (china)',1.00,100,'瓷小酱碟',1,1.00,1,'dz','dz'),(9585,'Dish - Sauce w.2 com. (Plastic)',8.50,100,'胶小酱碟',1,8.50,1,'dz','dz'),(11493,'Dish - Sauce w.2 com. (Plastic) 1102DL',1.59,100,'小酱碟',1,1.59,1,'ea','ea'),(5956,'Dish Cleaner #2 Blue 5gal (Spot Free Rinser/62705)',39.95,100,'洗碗机水 蓝',1,39.95,1,'bkt','bkt'),(5957,'Dish Cleaner #3 (Sanitizer)Yellow 5gal',39.95,100,'洗碗机水 黄',1,39.95,1,'bkt','bkt'),(10518,'Dish Detergen - Liquid (Lemon Gold)4/1gal',29.50,100,'洗潔精',1,8.99,1,'cs','gal'),(10469,'Dish Detergen - Liquid (Pink/AJAX) 4/1gal',33.50,100,'洗潔精',1,9.00,1,'cs','gal'),(11724,'Dish Detergen - Liquid (Pink/Cherry) 5 gal',25.95,100,'洗潔精',1,25.95,1,'bkt','bkt'),(5955,'Dish Detergent #1(62605) Red 5gal',39.95,100,'洗碗机水 红',1,39.95,1,'bkt','bkt'),(10539,'Dish- Sauce Round 2.75  (Blue Lotus)',4.80,100,'小圓醬碟',1,0.45,1,'dz','ea'),(11550,'Dispenser For Hand Soap Anti Leak Push Button 32oz',11.50,100,'洗手液架',1,11.50,1,'ea','ea'),(11037,'Dispenser For Multi-Fold Towel',22.00,100,'擦手紙外箱',1,22.00,1,'ea','ea'),(11036,'Dispenser For Toilet Cover (Tsc10)',8.50,100,'厕垫纸架',1,8.50,1,'ea','ea'),(12365,'Dressing - Japanese Sesame (Kewpie) 6/0.5g',20.00,100,'',1,20.00,0,'btl','btl'),(11125,'Dressing - Japanese Wasabi  6/60oz',17.00,100,'',1,17.00,0,'btl','btl'),(10748,'Dried - Chi Shi  1#',3.99,100,'茨实',1,3.99,0,'pkg','pkg'),(6342,'Dried - Chin Po Ling Dry Mix 100/5oz',1.50,100,'清补凉',1,1.50,0,'pkg','pkg'),(10849,'Dried - Coconut Flake  14oz',2.99,100,'椰丝',1,2.99,0,'bag','bag'),(5960,'Dried - Cole 100/5.29oz',1.69,300,'白菜干',1,1.69,0,'pkg','pkg'),(12036,'Dried - Dehydrated Cucumber (DF) 24/8.8oz',4.09,100,'黄瓜干',1,4.09,0,'pkg','pkg'),(9991,'Dried - Gow Ji (Fructus Lycii) 50/12oz',13.99,100,'枸杞子',1,13.99,0,'pkg','pkg'),(11884,'Dried - Gum Prunus Persica 16oz',19.99,100,'桃胶',1,15.00,0,'pkg','pkg'),(11582,'Dried - Haw 1#',4.95,100,'干山楂',1,4.95,0,'bag','bag'),(10426,'Dried - Huai Shen (Dioscoreae Yam) 52.8#',9.99,100,'干淮山',1,9.99,0,'lb','lb'),(9917,'Dried - Lily Bulb   ',9.99,100,'干百合',1,9.99,0,'lb','lb'),(6089,'Dried - Lily Flower 100/5oz',2.35,100,'甘针菜',1,2.35,0,'pkg','pkg'),(10756,'Dried - Longan Meat 22#',9.50,100,'桂圓肉',1,9.50,0,'lb','lb'),(9769,'Dried - Lotus Leaves 30/14oz',3.99,100,'干荷叶',1,3.99,0,'pkg','pkg'),(11169,'Dried - Lotus Seeds w. Red Skin 1#',6.95,100,'红莲子',1,6.95,0,'pkg','pkg'),(10356,'Dried - Lotus Seeds w/o Skin',9.95,100,'白莲子',1,9.95,0,'lb','lb'),(10358,'Dried - Luo Han Guo 20/box',0.99,100,'罗汉果',1,0.99,0,'ea','ea'),(11579,'Dried - Octopus (HT)  200g',19.00,100,'大章鱼',1,19.00,0,'pkg','pkg'),(10995,'Dried - Polygonatum',20.00,100,'玉竹片',1,20.00,0,'lb','lb'),(11027,'Dried - Radix Astragali  16oz',13.50,100,'北芪',1,13.50,0,'pkg','pkg'),(10848,'Dried - Raisins  4#',10.00,100,'葡萄干',1,10.00,0,'bag','bag'),(11009,'Dried - Rhizoma Smilacis Gladrae 16oz',8.95,100,'土茯苓厚片',1,8.95,0,'pkg','pkg'),(12039,'Dried - Rose 1.5oz',3.99,100,'玫瑰花',1,3.99,1,'pkg','pkg'),(10746,'Dried - Sea Coconut Meat  6oz',4.50,100,'海底椰',1,4.50,0,'pkg','pkg'),(10747,'Dried - Semen Coicis  50/16oz',5.95,100,'生薏米',1,5.95,0,'pkg','pkg'),(10424,'Dried - Sha Shen (Radix Glehnia Littoralis) 16oz',7.99,100,'沙参',1,7.99,0,'pkg','pkg'),(11725,'Dried - Sunflower Seed (Caramel)18/160g',2.89,100,'洽洽焦糖瓜子',1,2.59,0,'bag','bag'),(11726,'Dried - Sunflower Seed (Chinese Walnet)18/160g',2.89,100,'洽洽山核桃瓜子',1,2.59,0,'bag','bag'),(11232,'Dried - Sunflower Seed (Coconut) 18/250g',2.89,100,'洽洽葵瓜子/椰香',1,2.59,0,'bag','bag'),(10996,'Dried - Sunflower Seed (Original)18/250g',2.89,100,'洽洽葵花籽/原味',1,2.59,0,'bag','bag'),(11426,'Dried - Sunflower Seed (Premium) 22/98g',2.89,100,'洽洽原香瓜子',1,2.59,0,'bag','bag'),(11233,'Dried - Sunflower Seed (Spice) 18/250g',2.89,100,'洽洽香瓜子',1,2.59,0,'bag','bag'),(11973,'Dried - Wasabi Peas 20/4.23oz',1.49,100,'介未青豆',1,1.49,0,'pkg','pkg'),(10082,'Dried Attap Fruit (JHC) 50/',1.00,100,'包庄亚答积',1,1.00,0,'cs','cs'),(10343,'Dried Pearl Barley',2.95,100,'洋薏仁',1,2.95,0,'pkg','pkg'),(12035,'Drink -  Coconut (Mogu Mogu) 24/10.82oz',22.00,100,'椰子果汁',1,22.00,0,'cs','cs'),(12034,'Drink -  Mango (Mogu Mogu) 24/10.82oz',22.00,100,'芒果果汁',1,22.00,0,'cs','cs'),(12033,'Drink -  Strawberry (Mogu Mogu) 24/10.82oz',22.00,100,'草莓果汁',1,22.00,0,'cs','cs'),(10460,'Drink - Basil Seed 24/11oz (HV)',15.00,100,'珍珠果露',1,15.00,0,'cs','cs'),(10536,'Drink - Chrysanthemum Tea (Yeos) 24/11oz',18.00,100,'菊花茶',1,18.00,0,'cs','cs'),(11523,'Drink - Citron Honey Tea 12/1kg',76.95,100,'柚子蜜',1,7.95,0,'cs','jar'),(10892,'Drink - Coconut Juice (ChiaoKuo) 30/250ml',30.00,100,'原味天然椰奶',1,1.25,0,'cs','btl'),(5323,'Drink - Coconut Juice (Tas/S) 24/10.1oz',17.00,100,'小椰子汁',24,17.00,0,'cs','cs'),(10478,'Drink - Coconut Juice w Pulp 24/485ml (Parrot)',16.95,100,'帶肉椰子汁',1,0.99,0,'cs','can'),(10431,'Drink - Coconut Juice w. Meat (L) 24/17.5oz',20.00,100,'帶肉椰子水',1,1.15,0,'cs','btl'),(10110,'Drink - Coconut Juice w. Pulp(Tasco/L) 24/16.9oz',31.00,100,'大椰子汁',1,0.99,0,'cs','cs'),(10960,'Drink - Coconut Juice w.Pulp (Sunvoi) 24/17.5oz',22.00,100,'象陽椰子汁',1,0.99,0,'cs','btl'),(11258,'Drink - Coconut Water (100%) (Tas)24/16.9oz',32.00,100,'纯鲜椰子汁',1,32.00,0,'cs','can'),(5944,'Drink - Cocopalm Juice 24/12oz',17.95,100,'',1,16.95,0,'cs','cs'),(10076,'Drink - Cocorico Drink 24/12oz',21.00,100,'椰子苏打水',1,21.00,0,'cs','cs'),(6126,'Drink - Coffee - In Can 24/8.5oz',16.00,100,'冻咖啡',1,14.00,0,'cs','cs'),(11374,'Drink - Deluxe Grassjelly (AGV) 24/11.6oz',25.00,100,'冰烧仙草',1,1.19,0,'cs','can'),(11591,'Drink - Ginseng w. Root In Glass 5/10/4.05oz',17.50,100,'人参饮料',1,1.95,0,'box','btl'),(6016,'Drink - Grassjelly (HB) 24/11oz',18.00,100,'仙草蜜',1,18.00,0,'cs','can'),(10456,'Drink - Grassjelly W. Honey  (HV) 24/11oz',12.50,100,'凉粉(鸿运)',1,12.50,0,'cs','cs'),(10457,'Drink - Grassjelly W.Coconut (HV) 24/11oz',12.50,100,'凉粉(鸿运)',1,12.50,0,'cs','csss'),(6023,'Drink - Green Tea In Can (UCC) 24/9.1oz',26.50,100,'罐装绿茶饮',1,26.50,0,'cs','cs'),(6027,'Drink - Guava Juice 24/11oz',14.00,100,'石榴汁',1,13.50,0,'cs','cs'),(12301,'Drink - Guava Juice(HB/Pink/L)24/16.9oz',25.00,100,'(粉红)石榴汁',1,1.49,0,'cs','can'),(10943,'Drink - Herbal Jelly Soft Style (Original) 4/6/8oz',24.50,100,'龟苓爽',1,7.95,0,'cs','pkg'),(11882,'Drink - Herbal Tea (WLJ) 24/310ml',22.00,100,'王老吉涼茶',1,22.00,0,'cs','cs'),(10948,'Drink - Herbs & Reishi Mushroom Jelly 16/3/7oz',50.00,100,'龟苓膏',1,3.25,0,'cs','pkg'),(11626,'Drink - Ice Tea In Can (Noh Hawaiian) 24/11.5oz',19.95,100,'夏威夷冰茶',1,0.99,0,'cs','btl'),(10970,'Drink - Jarritos Mandarin Favor 24/12.5oz',13.58,100,'橙味汽水',1,13.58,0,'cs','cs'),(11277,'Drink - JDB Herbal Tea 4/6/310ml',25.00,100,'加多宝涼茶',1,7.50,0,'cs','pkg'),(11182,'Drink - Lemon Tea (Vita) 24/500ml',30.00,100,'維他柠檬茶',1,30.00,0,'cs','cs'),(10190,'Drink - Lipovitan 10/6/3.3oz',1.00,100,'維他命饮料',1,1.00,0,'cs','cs'),(10477,'Drink - Lychee 24/310ml (Parrot)',13.50,100,'荔枝饮',1,0.75,0,'cs','can'),(10459,'Drink - Mango Juice 24/11oz (HV)',12.50,100,'芒果汁',1,1.25,0,'cs','cs'),(10479,'Drink - Mango Juice 4/6/250ml (Jans)',13.50,100,'芒果汁',1,3.75,0,'cs','pkg'),(10461,'Drink - Milo  24/8oz (Nestle)',16.50,100,'美禄(雀巢)',1,16.50,0,'cs','cs'),(10458,'Drink - Mixed Fruit Juice 24/11oz (HV)',12.50,100,'什果汁',1,0.59,0,'cs','can'),(10476,'Drink - Mixed Fruit Juice 24/310ml (Parrot)',12.50,100,'什果汁',1,0.59,0,'cs','can'),(10668,'Drink - Mixed Oat Congee 24/380g',22.95,100,'八宝粥',1,1.29,0,'cs','can'),(10952,'Drink - Mung Bean Soup w.Oats & Koniac 4/6/11.5oz',27.00,100,'绿豆汤',1,7.95,0,'cs','pkg'),(10130,'Drink - Ovaltine (S) 12/14oz',1.00,100,'阿华田',1,1.00,0,'cs','cs'),(11073,'Drink - Pear&Sea Coconut (HFT) 24/17oz',28.00,100,'雪梨海底椰',1,1.50,0,'cs','btl'),(10512,'Drink - Plum  8/2L',3.25,100,'酸梅汤',1,3.25,0,'btl','btl'),(10918,'Drink - Ramune (Grape)  3/6/6.76Fz',22.00,100,'葡萄波子汽水',1,10.99,0,'cs','pkg'),(10531,'Drink - Ramune (Melon)  3/6/6.76Fz',22.00,100,'瓜味波子汽水',1,10.99,0,'cs','pkg'),(10533,'Drink - Ramune (Orange) 3/6/6.76Fz',22.00,100,'橙味波子汽水',1,10.99,0,'cs','pkg'),(10532,'Drink - Ramune (Strawberry) 3/6/6.76Fz',22.00,100,'草莓波子汽水',1,10.99,0,'cs','pkg'),(10530,'Drink - Ramune Sangaria 3/6/6.76Fz',24.00,100,'原味波子汽水',1,10.99,0,'cs','pkg'),(11547,'Drink - Soft Water (Calpico) 24/11.3 fz',26.95,100,'日本饮料',1,1.39,0,'cs','can'),(10480,'Drink - Soursop Juice 4/6/250ml (Jans)',13.50,100,'番荔枝汁',1,3.75,0,'cs','pkg'),(10111,'Drink - Soy Bean Milk(H.B) 24/12oz',1.00,100,'豆奶',1,1.00,0,'cs','cs'),(10959,'Drink - Soy Bean Milk(Taisun) 24/10.8oz',14.50,100,'泰山豆奶',1,0.89,0,'cs','can'),(5689,'Drink - Soy Bean Milk(Yeos) 24/10.1oz',20.00,100,'杨协成豆奶',24,20.00,0,'cs','cs'),(10744,'Drink - Soy Bean MilkFresh (Plain) 4.25#',3.50,300,'鲜豆奶',1,3.50,0,'btl','btl'),(10745,'Drink - Soy Bean MilkFresh (Sweet) 4.25#',3.50,300,'鲜豆奶',1,3.50,0,'btl','btl'),(10481,'Drink - Soy Milk 24/310ml (Parrot)',10.95,100,'豆奶',1,0.69,0,'cs','ea'),(11769,'Drink - Soy Milk In Glass (Vitamilk)  24/10.2oz ',21.00,100,'玻璃瓶豆奶',1,0.99,0,'cs','btl'),(11000,'Drink - Soy Milk Organic Unswt  12/32oz',16.00,100,'无糖有机豆奶',1,1.99,0,'cs','ctn'),(10916,'Drink - Soya Instant (Bingquan) 12.6oz',4.95,100,'冰泉速溶豆浆',1,4.95,0,'bag','bag'),(10949,'Drink - Thai Tea (Taste Nirvana) 24/9.5oz',42.00,100,'南洋奶茶',1,42.00,0,'cs','cs'),(11737,'Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',32.00,100,'大罐南洋奶茶',1,32.00,0,'cs','cs'),(6307,'Drink - Thai Tea In Can (H.B) 24/10.5oz',17.50,100,'泰茶罐装',1,17.50,0,'cs','cs'),(10332,'Drink - Thai Tea In Glass Btl 24/9.5oz',42.00,100,'玻璃瓶南洋奶茶',1,42.00,0,'cs','cs'),(10109,'Drink - Vitamin M-150 (Can) 24/25oz',1.00,100,'维他命饮料',1,1.00,0,'cs','cs'),(10978,'Drink - White Gourd Drink(Yeos) 24/10.1z',16.00,100,'冬瓜茶',1,16.00,0,'cs','cs'),(10812,'Drink - WLK Herbal Tea 4/6/310ml',25.00,100,'王老吉涼茶',1,7.50,0,'cs','pkg'),(12064,'Drink- Lychees (Mogu Mogu) 24/10.82',22.00,100,'荔枝果汁',1,22.00,0,'cs','cs'),(11680,'Drink -Shou Wu Chih Herbal Tea 24/500ml',4.50,100,'首乌汁',1,4.50,0,'btl','btl'),(10721,'Drinking Straw - 10.25  Giant Wrapped 1200ct',22.50,100,'长吸管',1,22.50,0,'cs','cs'),(9371,'Drinking Straw - 7.75  Paper Wrapped 24/500',75.00,100,'吸管',24,3.89,0,'cs','box'),(5650,'Drinking Straw - 7.75  Plastic Wrapped 24/500',75.00,100,'吸管',24,3.89,0,'cs','box'),(10045,'Drinking Straw - 7.75  Unwrapped 50/250cts',63.00,100,'无包装吸管',1,2.39,0,'cs','box'),(11010,'Drinking Straw - 8  Unwrapped Black 400ct',19.75,100,'无包装黑色吸管',1,19.75,0,'cs','cs'),(10046,'Drinking Straw - Wrapped 3000cts',10.95,100,'吸管',1,10.95,0,'cs','cs'),(10810,'Dry Ice',8.00,400,'干冰',1,8.00,0,'ea','ea'),(9817,'Dry Red Watermelon Seed',2.50,100,'红瓜子',1,2.50,0,'lb','lb'),(10844,'Duck - Breast Bls (10-12oz) 36ct',9.50,400,'鸭胸',1,9.50,0,'lb','lb'),(12046,'Duck - Cured Leg (KYJ) 40pcs',5.99,300,'腊鸭腿',1,5.99,0,'pkg','pkg'),(11126,'Duck - Feet  ',1.49,500,'鸭脚',1,1.49,0,'lb','lb'),(11648,'Duck - Feet  Boneless 4/10#',5.95,500,'去骨鸭脚',1,5.95,0,'lb','lb'),(5970,'Duck - Head On (4.5/5)',2.99,500,'有头鸭',1,2.99,0,'lb','lb'),(5202,'Duck - Headless',2.39,500,'无头鸭',1,2.39,0,'lb','lb'),(5434,'Duck - Mock 24/10oz.',35.00,100,'素鸭',24,1.99,0,'cs','can'),(11906,'Duck - Neck Bone  30#',75.00,400,'鴨脖子',1,2.79,0,'cs','lb'),(10196,'Duck - Sauce (DY) 12/7oz',1.00,100,'酸梅酱',1,1.00,0,'cs','btl'),(5334,'Duck - Sauce 5gal',25.00,100,'酸梅酱',1,24.00,0,'bkt','item'),(12089,'Duck - Tongues 1lb/pkg',15.99,500,'鸭舌',1,15.99,0,'pkg','pkg'),(10894,'Duck - Whole Legs (Pitman)',4.95,500,'鸭腿',1,4.95,0,'lb','lb'),(11041,'Duck - Wing  2 JT 20#',1.69,500,'鸭翼',1,1.69,0,'lb','lb'),(11379,'Durian - Froz. Seedless 40/14oz',7.99,400,'冻榴莲',1,7.99,0,'pkg','pkg'),(12150,'Durian - Froz. Seedless Musang King',12.99,400,'猫山王榴莲',1,12.99,0,'lb','lb'),(10133,'Eel - Spinny (Fz) 30/16oz',1.00,400,'泥鰍',1,1.00,0,'cs','cs'),(11532,'Eel - Yellow Froz.  300up  40/1pc',7.95,400,'黃鳝条',1,7.95,0,'pkg','pkg'),(11203,'Eel - Yellow Froz.  48/8oz',4.99,400,'黃鳝丝',1,4.99,0,'pkg','pkg'),(12273,'Eel (Unagi) 12oz 22#',264.00,400,'寿司鳗鱼',1,12.00,0,'cs','btl'),(5040,'Eel (Unagi) 22#',264.00,400,'寿司鳗鱼',22,12.00,0,'cs','pkg'),(6317,'Eel (Unagi) 22# (Kobe)',264.00,400,'寿司鳗鱼',22,12.00,0,'cs','lb'),(12346,'Eel Coating Sauce (Nippon Shokken/thick)6/5.2#',95.00,100,'鳗鱼酱',1,18.00,0,'cs','btl'),(11229,'Egg - Cooked Salted Duck 24/6pcs',3.79,300,'熟咸蛋',1,3.79,0,'box','box'),(11145,'Egg - Cooked Salted Yolk 20/12pc',4.95,100,'熟咸蛋黃',1,4.95,0,'pkg','pkg'),(6183,'Egg - Preserved Duck24/ 6ps/pkg',68.00,100,'皮蛋',1,3.99,0,'cs','pkg'),(6001,'Egg - Quail Fresh',1.89,300,'鹌鹑蛋',80,1.89,0,'pkg','pkg'),(11441,'Egg - Quail In Can 24X15oz',54.00,100,'罐裝鹌鹑蛋',1,2.50,0,'cs','can'),(12032,'Egg - Raw Duck ',1.00,100,'生鸭蛋',1,1.00,0,'ea','ea'),(12004,'Egg - Raw Salted Duck ',1.39,100,'生咸蛋',1,1.39,0,'ea','ea'),(6215,'Egg - Salted Duck 30/5pc',75.00,100,'咸蛋',24,2.50,0,'cs','pkg'),(6286,'Egg Omelet - Tamago 24/1.1#',5.50,400,'寿司蛋饼',1,5.50,0,'pk','pk'),(9165,'Egg Roll -  Veggie (S) (ACC) 400/25g/pcs',28.00,400,'小春卷',25,5.00,0,'cs','pkg'),(12078,'Egg Roll - Chicken & Veggi  60/3oz (WC) ',40.00,400,'鸡春卷',1,40.00,0,'cs','cs'),(10416,'Egg Roll - Chicken (Good Guy) (S) 100/1.5oz',26.95,400,'鸡春卷',1,26.95,0,'cs','cs'),(9952,'Egg Roll - Crispy Ginger Shrimp Lumpia 4/5#',50.00,400,'菲律宾春卷',1,3.50,0,'cs','lb'),(5539,'Egg Roll - Mini Veggie (Amoy) 192pcs',37.00,400,'小素春卷',1,37.00,0,'cs','cs'),(5293,'Egg Roll - Pork (Baily) 120pcs/2oz',45.00,400,'肉春卷',1,45.00,0,'cs','cs'),(10263,'Egg Roll - Shrimp 200pcs/1.5oz',38.00,400,'虾春卷',1,38.00,0,'cs','cs'),(10382,'Egg Roll - Veggie (Good Guy) (L) 100/3oz',41.50,400,'大素春卷',1,41.50,0,'cs','cs'),(9320,'Egg Roll - Veggie (Greenland) 200pcs',36.50,400,'素春卷',1,36.50,0,'cs','cs'),(11062,'Egg Roll - Veggie (Supreme) 20/20pcs/1oz',25.00,400,'金鼎素春卷',1,25.00,0,'cs','cs'),(12063,'Egg Roll - Veggie Spring Roll (Greenland) 200pcs ',23.95,400,'绿城素春卷',1,23.95,0,'cs','cs'),(10007,'Egg Roll - Veggie Spring Roll (WC) 10/20pcs/1.5oz',52.00,400,'素春卷',1,52.00,0,'cs','cs'),(11276,'Egg Roll Skim(Spring Home)5  40/50pc(TYJ)(Pink)',52.50,400,'一家小春皮',1,52.50,0,'cs','cs'),(6347,'Egg Roll Skin  (Menlo) 20/30pcs',30.00,400,'萬樂春卷皮',1,2.25,0,'cs','pkg'),(5106,'Egg Roll Skin (China) (orange) 20#',29.00,400,'春卷皮',1,2.25,0,'cs','pkg'),(9265,'Egg Roll Skin (Doll) 40/25',45.00,400,'春卷皮',1,36.50,0,'cs','pkg'),(10921,'Egg Roll Skin (Dynasty) 12/16oz',25.00,400,'薄春卷皮',1,2.50,0,'cs','pkg'),(11640,'Egg Roll Skin (IOptimroll) 20/50pcs',33.00,400,'佳旺薄春卷皮',1,1.69,0,'cs','pkg'),(5446,'Egg Roll Skin (IPOH)',23.50,400,'春卷皮',1,20.50,0,'cs','pkg'),(4823,'Egg Roll Skin (NHK) (Yellow) 12/2#',36.00,400,'春卷皮',1,3.69,0,'cs','pkg'),(9657,'Egg Roll Skin (Otasty) 40/25pcs (#22101)',48.00,400,'春卷皮',1,2.25,0,'cs','pkg'),(12260,'Egg Roll Skin (WC) 6 40/30pcs',0.00,100,'味全春卷皮(小)',1,0.00,0,'',''),(5125,'Egg Roll Skin (WC) 8 40/25pcs',48.00,400,'味全春卷皮',1,2.25,0,'cs','pkg'),(9011,'Egg Roll Skin(Spring Home)8 40/25 (TYJ)(Red)',52.50,400,'一家春卷皮',1,52.50,0,'cs','pkg'),(10845,'Egg Roll Skin(Spring Home)8.5  20/40(TYJ)(Green)',52.50,400,'一家大春卷皮',1,52.50,0,'cs','cs'),(5417,'Eggs (XL)',24.00,300,'蛋',1,23.00,0,'cs','cs'),(10928,'Escargot  72ct  12/28oz',19.50,100,'法國田螺',1,19.50,0,'can','can'),(5976,'Film Wrap 12  /2000',15.95,100,'保鮮膜',1,15.95,0,'cs','cs'),(5977,'Film Wrap 18 ',23.95,100,'保鮮膜',1,23.95,0,'cs','cs'),(5978,'Film Wrap 24 ',33.00,100,'保鮮膜',1,33.00,0,'cs','cs'),(10655,'Filter - Cover MC(2) Cart',55.50,100,'滤水芯罩',1,55.50,1,'ea','ea'),(10654,'Filter - QL3B Single Head w.Shut Off No Ringlet',35.95,100,'汽水机滤水芯',1,35.95,1,'ea','ea'),(9968,'Fish - Baramundi ( 300-500) 40#',100.00,400,'尖嘴盲鰽',1,2.50,0,'cs','lb'),(9049,'Fish - Basa Fillet 22#',64.90,400,'龙利魚片',22,2.95,0,'cs','lb'),(10286,'Fish - Bass LM (5/800)  40#',118.00,500,'大口盲鰽',1,2.95,0,'cs','lb'),(9360,'Fish - Belt (Ribbon) Whole (1k/1.5k) 22#',154.35,500,'带鱼',1,3.99,0,'cs','lb'),(12195,'Fish - Belt ChunkT/P(Ribbon/Lion) 40/14oz',3.99,500,'带鱼/包装',1,3.99,0,'pkg','pkg'),(11918,'Fish - Butter (100/150) 22#',1.99,400,'南美鲳鱼',1,1.99,0,'lb','lb'),(11179,'Fish - Butter (2/300) 22#',2.99,500,'南美鲳鱼',1,2.99,0,'lb','lb'),(11919,'Fish - Butter (300up) 22#',2.99,400,'南美鲳鱼',1,2.99,0,'lb','lb'),(11422,'Fish - Butter (5-6pc/lb)',0.00,100,'',1,0.00,0,'',''),(11851,'Fish - Capline 40/50 15kg/33.07#',2.95,500,'白饭魚/毛鳞魚',1,2.95,0,'lb','lb'),(12071,'Fish - Catfish Whole (2/3)  30#',95.70,400,'貓魚',1,3.19,0,'cs','lb'),(10546,'Fish - Catfish Whole (3/5)  30#',106.50,400,'貓魚',1,3.55,0,'cs','lb'),(10132,'Fish - Cleaned Gouramy (400-600) 22#',1.00,400,'精選沙立魚',1,1.00,0,'cs','cs'),(11181,'Fish - Cod Red',1.00,400,'',1,1.00,0,'cs','lb'),(11187,'Fish - Crimson Snaper (1/2lb)  40#',111.60,500,'深红鯛魚',1,2.79,0,'cs','lb'),(10134,'Fish - Dace (Fz) (300-400) 26.46#',1.00,400,'急凍鯪魚',1,1.00,0,'cs','cs'),(9663,'Fish - Dace Whole 400-500 (China) 40#',78.00,400,'鲮鱼',1,1.95,0,'cs','lb'),(9664,'Fish - Dace Whole 500-700 (China) 40#',59.60,400,'鲮鱼',1,1.49,0,'cs','lb'),(11691,'Fish - Dried Anchovy (Kaeit) 50/100g',2.49,100,'小魚干',1,2.49,0,'pkg','pkg'),(9441,'Fish - Dried Flounder Fillet   50/16oz',650.00,100,'大地鱼',1,13.00,0,'cs','pkg'),(10097,'Fish - Dried Masarap Jeprox 35/5oz',1.00,100,'印尼去皮魚干',1,1.00,0,'cs','cs'),(9909,'Fish - Dried Silver',3.95,100,'白饭鱼',1,3.95,0,'lb','lb'),(10675,'Fish - Dried Stockfish  /7oz',6.95,100,'干柴魚肉',1,6.95,0,'pkg','pkg'),(10569,'Fish - Escolar Steak (10/12)  40#',118.00,400,'雪魚扒',1,2.95,0,'cs','lb'),(5012,'Fish - Fillet (7/9) (Izumadai) 22#',103.40,400,'寿司鱼片',10,4.70,0,'cs','lb'),(12095,'Fish - Fins 1#/pkg',45.00,400,'大象鱼鱼翅',1,45.00,0,'pkg','pkg'),(10752,'Fish - Fried Conger Pike Maw 16/1#',25.00,100,'大魚肚',1,25.00,0,'pkg','pkg'),(11186,'Fish - Giant Seaperch (800up)  40#',118.00,500,'越南鲈魚/金目卢魚',1,2.95,0,'cs','lb'),(6030,'Fish - Hamachi Fillet 6p/2.5kg',11.50,500,'黄尾鱼',1,11.50,0,'lb','lb'),(12338,'Fish - Hamachi Kibun Kama 11#',14.99,500,'黄尾鱼下巴',1,14.99,0,'lb','lb'),(11200,'Fish - Hamachi Loin 18#',219.42,500,'黄尾鱼',1,12.19,0,'',''),(11326,'Fish - Jellyfish (Head)  55#',153.45,400,'海蛰头',1,2.79,0,'cs','cs'),(9719,'Fish - Jellyfish Salted 14oz/pkg',4.99,400,'海蜇丝',1,4.99,0,'pkg','pkg'),(10339,'Fish - Jellyfish Uncut  44#',143.00,400,'海蜇皮',1,3.25,0,'cs','lb'),(11188,'Fish - Keo Fish Lion (Baby Goby/13up) 40/400g',4.99,500,'越南泥鳅/海狗魚',1,4.99,0,'pkg','pkg'),(6072,'Fish - Kingfish',3.00,400,'',1,3.00,0,'cs','lb'),(9562,'Fish - Large Mouth Bass',139.60,300,'大口盲鰽',1,3.59,0,'lb','lb'),(11180,'Fish - Layang Scad 20/2#',1.99,500,'青鱼',1,1.99,0,'lb','lb'),(11901,'Fish - Loo Li (Rex Sole)  Whole (1L) 35.27#',101.93,400,'龍利全魚',1,2.89,0,'cs','lb'),(9539,'Fish - Loo Li (Rex Sole)  Whole (2L) 40#',119.60,400,'龍利全魚',1,2.99,0,'cs','lb'),(10330,'Fish - Loo Li (Rex Sole) Whole (3L) 40#',159.60,400,'龍利全魚',1,3.99,0,'cs','lb'),(6350,'Fish - Mackeral (Shime Saba) 20/3.5oz',52.00,400,'马鲛鱼片',20,2.75,0,'cs','pkg'),(10521,'Fish - Mackeral Whole (2/4) 40#',2.95,500,'马鲛鱼',1,2.95,0,'lb','lb'),(11750,'Fish - Mackeral Whole (4/600)   44.1#',2.95,500,'马鲛鱼',1,2.95,0,'lb','lb'),(10472,'Fish - Mackerel Fillet w. Green Curry 24/4oz',1.59,100,'绿咖喱马鲛鱼',1,1.59,0,'can','can'),(10473,'Fish - Mackerel Fillet w. Green Pepper 24/4oz',1.59,100,'青椒马鲛鱼',1,1.59,0,'can','cab'),(11068,'Fish - Mackerel Fillets In Oil w. Chili 24/4oz',1.49,100,'辣马鲛鱼',1,1.49,0,'can','can'),(10471,'Fish - Mackerel Jack Canned 24/15oz',1.79,100,'马鲛鱼',1,1.79,0,'can','can'),(10060,'Fish - Mackerel Saba Fillet (6-7oz)  25#',49.75,400,'马鲛鱼片',1,1.99,0,'cs','lb'),(9735,'Fish - Mackerel Saba Whole (300-500) 33.1#',49.65,400,'马鲛鱼',1,1.50,0,'cs','lb'),(10474,'Fish - Mackerel w. Tomato Sauce 24/15oz',1.39,100,'茄汁马鲛鱼',1,1.39,0,'can','can'),(6104,'Fish - Mandarin  40#',94.00,400,'桂花鱼',1,2.35,0,'cs','lb'),(12201,'Fish - Milk Belly (Lion Head) 40#',4.99,500,'虱目魚腩',1,4.99,0,'lb','lb'),(12017,'Fish - Milk Boneless 40#',3.99,500,'无骨虱目魚',1,3.99,0,'lb','lb'),(12070,'Fish - Milk Whole (6/800) 40#',143.60,400,'虱目魚',1,3.59,0,'cs','lb'),(11214,'Fish - Milk Whole (800up) 40#',2.49,500,'虱目魚',1,2.49,0,'lb','lb'),(11434,'Fish - Mullet Red (5-6pc/lb) 50#',1.95,500,'胭脂魚/ 鲻魚',1,1.95,0,'lb','lb'),(5828,'Fish - Pollack Fillet   40#/cs',48.00,400,'鱼片',40,1.20,0,'cs','lb'),(5913,'Fish - Pomfret Black (3/500) 40#',140.00,400,'黑鲳鱼',1,3.50,0,'cs','lb'),(11938,'Fish - Pomfret Black (5/800) 40#',140.00,400,'黑鲳鱼',1,3.50,0,'cs','lb'),(12196,'Fish - Pomfret Black (Pompano800/1000) 40#',3.59,400,'黑鲳鱼',1,3.59,0,'lb','lb'),(12205,'Fish - Pomfret Gold (Pompano 4/600) 40#',3.99,400,'金鲳鱼',1,3.99,0,'lb','lb'),(10522,'Fish - Pomfret Gold (Pompano 6/800) 40#',159.60,400,'金鲳鱼',1,3.99,0,'cs','lb'),(12065,'Fish - Pomfret Gold (Pompano800/1000) 40#',3.99,400,'金鲳鱼',1,3.99,0,'cs','lb'),(9159,'Fish - Pomfret Silver (3/400) 22.05#',7.50,400,'白鲳鱼',1,7.50,0,'lb','lb'),(11939,'Fish - Pomfret Silver (50/100) 10#',39.50,400,'白鲳鱼',1,3.95,0,'cs','lb'),(12154,'Fish - Pomfret White (80/100) 10/3#',7.50,400,'白鲳鱼',1,7.50,0,'box','box'),(9703,'Fish - Red Bream (3-4) 32#',34.00,400,'红杉鱼',1,1.09,0,'cs','lb'),(9588,'Fish - Rock Fillet 10#',12.50,400,'石斑鱼',1,1.25,0,'cs','lb'),(10772,'Fish - Rocksole  14up   20#',50.00,400,'左口魚',1,2.50,0,'cs','lb'),(10682,'Fish - Salmon Fillet 2-4 30#',75.00,400,'三文魚片',1,2.50,0,'cs','lb'),(12179,'Fish - Salmon Fillet Skin Off 16-18',0.00,100,'三文鱼片',1,0.00,0,'',''),(9308,'Fish - Salmon Fillet Skin On(16-18)For Sushi',5.50,500,'三文魚片',1,5.50,0,'lb','lb'),(9932,'Fish - Salmon Smoke  5/7',11.95,500,'燻三文魚',1,11.95,0,'lb','lb'),(10704,'Fish - Salmon Whole ',4.50,500,'三文全魚',1,4.50,0,'lb','lb'),(9225,'Fish - Salted Mackerel Fillet 50#',14.95,400,'咸鱼片',1,14.95,0,'lb','lb'),(11822,'Fish - Salted Red Snapper Fillet',18.50,400,'散装无骨咸鱼',1,18.50,0,'pkg','pkg'),(9743,'Fish - Salted Snapper Fillet',9.95,500,'',1,9.95,0,'lb','lb'),(10753,'Fish - Salted Whole',12.00,400,'全条咸魚',1,12.00,0,'lb','lb'),(10351,'Fish - Salted Whole Boneless',15.50,500,'咸魚',1,15.50,0,'lb','lb'),(11671,'Fish - Sanma (Mackerel Pike/Khee) 120/140g',1.99,500,'秋刀魚',1,1.99,0,'cs','lb'),(10466,'Fish - Sardine Fried w. Blk Bean 50/3.2oz',1.00,100,'豆豉沙丁魚',1,1.00,0,'can','can'),(10467,'Fish - Sardine Fried w. Spice Blk Bean 50/3.2oz',1.00,100,'辣豆豉沙丁魚',1,1.00,0,'can','can'),(10468,'Fish - Sardine w. Tomato Sauce 24/15oz ',1.69,100,'茄汁沙丁魚',1,1.69,0,'can','can'),(10069,'Fish - Sea Bass (France)',17.95,400,'鳕鱼',1,17.95,0,'lb','lb'),(10311,'Fish - Sea Bass 15-20kg',9.85,500,'鳕鱼',1,9.85,0,'lb','lb'),(12149,'Fish - Sea Bass Collar (Chile)  ',8.99,400,'鳕鱼(颈部肉)',1,8.99,0,'lb','lb'),(12096,'Fish - Sea Bass Sliced (Chile) 2#/10pkg',19.00,400,'无骨鳕鱼片',1,19.00,0,'pkg','pkg'),(11052,'Fish - Seabass Argen Wild 8/10kg',14.50,500,'阿根廷鳕鱼',1,14.50,0,'lb','lb'),(9574,'Fish - Shark Fin - Imatation 30/1#/pkg',4.80,400,'假鱼翅',1,4.80,0,'pkg','lb'),(9518,'Fish - Shark Fin 5#',275.00,400,'真鱼翅',1,55.00,0,'lb','lb'),(10376,'Fish - Shark Fin Dried 1# ',99.00,100,'干魚翅',1,99.00,0,'lb','lb'),(10560,'Fish - Shark Steak 200/300  20/2#',58.00,400,'鲨鱼扒',1,1.45,0,'cs',''),(12231,'Fish - Silver Carp 40#',2.99,500,'鲢鱼',1,2.99,0,'lb','lb'),(10131,'Fish - Silverbarb w.Lemon Grass 33#',1.00,400,'香茅銀魚',1,1.00,0,'cs','cs'),(9047,'Fish - Smelt 11#/cs',38.50,400,'有头多春鱼',11,3.50,0,'cs','lb'),(12228,'Fish - Smelt Dressed HL20#',2.99,400,'无头多春鱼',1,2.99,0,'lb','lb'),(9575,'Fish - Sole Fillet (Block)  44#',129.80,400,'',1,2.95,0,'cs','lb'),(9730,'Fish - Sole Fillet (Swai)  ',59.70,400,'龙利鱼片',1,1.99,0,'cs','lb'),(9639,'Fish - Sole fillet 15#',44.25,400,'',1,2.95,0,'cs','lb'),(9624,'Fish - Sole Whole (Block) 2L 40#',114.00,400,'龙利鱼只',1,2.85,0,'cs','lb'),(10135,'Fish - Steamed Mackerel 30/10oz',1.00,400,'蒸马鲛鱼',1,1.00,0,'cs','cs'),(9601,'Fish - Striped Bass (6/800) 40#   ',139.60,400,'鲈鱼',1,3.59,0,'cs','lb'),(9687,'Fish - Thread Golden Whole (2/300) 40#',119.60,500,'红衫鱼',1,2.99,0,'cs','lb'),(10559,'Fish - Tilapia (550/750) 40#',111.60,400,'吴郭鱼',1,2.79,0,'cs','lb'),(12066,'Fish - Tilapia (800/1000) 40#',78.00,400,'吴郭鱼',1,1.95,0,'cs','lb'),(5665,'Fish - Tilapia 40# (350/500)  40#',60.00,400,'吴郭鱼',40,1.79,0,'cs','lb'),(12177,'Fish - Tilapia Fillet 10#/cs',30.00,400,'吴郭鱼鱼片',1,30.00,0,'cs','cs'),(10646,'Fish - Trout Fillet Skin On Steel Head  22#',148.50,500,'鳟鱼片',1,6.75,0,'cs','lb'),(10275,'Fish - Tuna (Ahi /No Size) 10#',33.00,400,'寿司吞拿鱼',1,3.30,0,'cs','lb'),(6211,'Fish - Tuna (Saku) 22#',297.00,400,'寿司吞拿鱼',10,13.50,0,'cs','lb'),(9900,'Fish - Tuna (Saku) Block Froz.  10#',117.50,400,'寿司吞拿鱼',1,11.75,0,'cs','cs'),(10075,'Fish - Tuna (Saku/AAA)  10#',92.50,400,'寿司吞拿鱼',1,9.25,0,'cs','lb'),(5042,'Fish - Tuna Albacore Fillet 25#',9.50,500,'寿司白吞拿鱼',1,9.50,0,'lb','lb'),(10558,'Fish - Tuna Albacore Whole',8.99,500,'白吞拿全魚',1,2.95,0,'lb','lb'),(9734,'Fish - Tuna Chunk 2/11#',99.00,400,'寿司碎吞拿鱼',1,4.50,0,'cs','cs'),(10232,'Fish - Tuna Cube (Crazy Cut) 20#',119.00,400,'吞拿鱼块',1,5.95,0,'cs','lb'),(9803,'Fish - Tuna Ground 20#',105.80,400,'寿司碎吞拿鱼',1,5.29,0,'cs','lb'),(9800,'Fish - Tuna Steak 10#',79.50,400,'',1,7.95,0,'cs','lb'),(11106,'Fish - Tuna Toro Harasu',4.50,500,'吞拿鱼腩',1,4.50,0,'lb','lb'),(6335,'Fish - Tuna Yellow Fin Loin 30#',255.00,400,'吞拿鱼',1,8.50,0,'cs','lb'),(11107,'Fish - Uni (Sea Urchin)',60.00,400,'海胆',1,60.00,0,'ea','ea'),(12111,'Fish - Weak (220/350g) 10/2#',3.49,500,'三牙鱼',1,3.49,0,'lb','lb'),(12084,'Fish - Yellow Croaker (4/500) 22#',92.40,500,'黄花鱼',1,4.20,0,'cs','lb'),(12261,'Fish - Yellow Croaker (5/600) 10#',45.00,500,'黄花鱼',1,4.50,0,'cs','lb'),(9097,'Fish - Yellow Croaker (5/700) 22#',87.78,500,'黄花鱼',10,3.99,0,'cs','lb'),(11132,'Fish - Yellow Croaker 60/80  12/2#',5.95,500,'小黃花鱼',1,5.95,0,'pkg','pkg'),(11587,'Fish - Yellow Croaker Bls Small  20/1.5#',6.95,500,'干淨小黃花鱼',1,6.95,0,'pkg','pkg'),(11194,'Fish - Young Tunny Whole (1-3#) 25#',1.50,500,'小吞拿鱼',1,1.50,0,'lb','lb'),(9820,'Fish Ball   (Ho Ho) 30#',90.00,400,'鱼丸',1,3.99,0,'cs','bag'),(11771,'Fish Ball   Taro 20/17.6oz',4.95,400,'香芋鱼丸',1,4.95,0,'pkg','pkg'),(11785,'Fish Ball  Cooked (Flamingo) 20/11oz',3.99,400,'潮州鱼丸',1,3.99,0,'pkg','pkg'),(11255,'Fish Ball  Fried (Flamingo) 20/11oz',3.99,400,'潮州炸鱼丸',1,3.99,0,'pkg','pkg'),(10739,'Fish Ball (Fuzhou/福州)   20/16oz',6.49,400,'福州鱼丸',1,6.49,0,'pkg','pkg'),(12189,'Fish Ball (Great W) (Fuzhou/福州) 30/9oz  20/16oz',6.49,400,'福州鱼丸',1,6.49,0,'pkg','pkg'),(5979,'Fish Ball (WC)   30/8oz',48.00,400,'鱼丸',30,2.00,0,'cs','pkg'),(11937,'Fish Ball w.Roe (Ho Ho)   30/16oz',6.49,400,'包心鱼丸',1,6.49,0,'pkg','pkg'),(11555,'Fish Cake - Combo (Wang/#12842) 10/2.2#',12.99,400,'韩國杂鱼丸',1,8.99,0,'pkg','pkg'),(12349,'Fish Cake - Froz. (DF) 10/2.2#',90.00,400,'蜻蜓鱼饼',1,90.00,0,'cs','cs'),(12330,'Fish Cake - Kibun Naruto Maki Froz. 50/5.29oz',140.00,400,'白鱼板',1,3.29,0,'cs','pkg'),(9048,'Fish Cake - Pink (Kamaboko) 24/6 oz',70.00,400,'鱼板',1,3.89,0,'cs','pkg'),(11219,'Fish Cakes - Fried (FL) 20/11oz ',4.09,400,'故乡潮州鱼饼',1,4.09,0,'pkg','pkg'),(6038,'Fish Egg - Ikura - Salmon Egg  2.2#/tray',84.00,400,'三文鱼蛋',1,38.20,0,'tray','tray'),(9222,'Fish Egg - Masago - 2.2#  ',18.95,300,'寿司鱼子',1,18.95,0,'pkg','pkg'),(10159,'Fish Egg - Masago 18/5.29oz',1.00,300,'寿司鱼子',1,1.00,0,'pkg','pkg'),(6110,'Fish Egg - Masago 2.2#  ',8.95,300,'寿司鱼子',1,8.95,0,'cs','pkg'),(9247,'Fish Egg - Tobiko  2.2#',25.00,400,'寿司鱼子',1,25.00,0,'box','box'),(10380,'Fish Egg - Tobiko (Green)',19.50,400,'寿司魚子(绿)',1,19.50,0,'box','box'),(6311,'Fish Egg - Tobiko (Orange) 12/17.6oz',18.50,400,'寿司鱼子(橙)',1,18.50,0,'box','box'),(9787,'Fish Egg - Tobiko (Red) 17.6oz',19.50,400,'寿司鱼子(红)',1,19.50,0,'box','box'),(9654,'Fish Gut - Fried (Bladder/Maw) 20/3.5oz',15.00,100,'鱼肚/花胶',1,15.00,0,'bag','bag'),(10660,'Fish Paste (Duc Ky) 30/12oz ',125.00,400,'德记七星鱼醬',1,4.29,0,'cs','jar'),(11220,'Fish Paste (FL) 18/12oz',4.29,400,'故乡鱼浆',1,4.29,0,'jar','jar'),(10149,'Fish Paste (WC) 12/16oz',3.95,300,'鱼浆',1,3.95,0,'jar','jar'),(11649,'Fish Sauce - (Golden Boy) 12/24oz',22.00,100,'金童鱼露',1,2.39,0,'cs','btl'),(12256,'Fish Sauce - Ground Preserved Fish (Pantai) 12/30.2oz',6.99,100,'鱼露',1,6.99,0,'bkl','bkl'),(12254,'Fish Sauce - Ground Preserved Fish (Pantai) 24/12.2oz',3.49,100,'鱼露',1,3.49,0,'blt','blt'),(12240,'Fish Sauce (3 Crab 2 Shrimp Brand) 12/750ml',27.00,100,'三蟹两虾鱼露',1,27.00,0,'cs','cs'),(9232,'Fish Sauce (3 Crab Brand) 12/750ml',92.00,100,'三蟹牌鱼露',1,8.99,0,'cs','btl'),(12341,'Fish Sauce (3 Lobsters) 12/25oz',30.00,100,'三龙虾鱼露',1,2.99,0,'cs','btl'),(10104,'Fish Sauce (DFLY) (Pha San) 24/7oz',1.00,100,'越式鱼醬',1,1.00,0,'cs','cs'),(10105,'Fish Sauce (DFLY) (Phu Quoc) 24/7oz',1.00,100,'特级鱼醬',1,1.00,0,'cs','cs'),(10103,'Fish Sauce (DFLY) Prepared 12/20oz',1.00,100,'即食鱼露',1,1.00,0,'cs','cs'),(12085,'Fish Sauce (Dynasty) 12/6.7oz/btl',1.99,100,'Dy小鱼露',1,1.99,0,'btl','btl'),(10636,'Fish Sauce (Golden Bowl) 12/23oz',13.95,100,'鱼露',1,1.29,0,'cs','btl'),(12212,'Fish Sauce (Lucky) 12/23oz',22.50,100,'Lucky鱼露',1,22.50,0,'cs','cs'),(5177,'Fish Sauce (Nampla/Nha Trang) 12/25oz',30.00,100,'芽莊石斑鱼露',12,3.99,0,'cs','btl'),(10795,'Fish Sauce (Nha Trang) 12/25oz',26.00,100,'芽庄鱼露',1,2.75,0,'cs','btl'),(9065,'Fish Sauce (Nuoc Mam) 12/23oz',10.00,100,'鱼露',1,0.99,0,'cs','cs'),(12359,'Fish Sauce (Pantai) 12/30.2oz',60.00,100,'鱼露',1,6.99,0,'cs','btl'),(5980,'Fish Sauce (Prawn Brand) 12/25oz',25.00,100,'虾鱼露',1,1.99,0,'cs','btl'),(10325,'Fish Sauce (Shrimp&Crab Brand) 12/24oz',21.50,100,'鱼露',1,1.95,0,'cs','btl'),(6255,'Fish Sauce (Squid) 12/25oz',45.00,100,'鱿鱼露',1,4.99,0,'cs','btl'),(9012,'Fish Sauce (Tiparos) 12/25oz',33.00,100,'味露鱼露',12,2.99,0,'cs','btl'),(11458,'Fish Sauce (Tiparos) 6/50oz',40.00,100,'味露鱼露',1,40.00,0,'cs','btl'),(10715,'Fish Sauce (Tra Chang) 12/750',26.00,100,'天稱鱼露',1,3.00,0,'cs.','btl'),(11979,'Fish Sauce (Wang/Anchovy)  5./6.6#/3kg (#6712254)',75.00,100,'韩國魚露',1,75.00,0,'cs','btl'),(11162,'Flour - Bot Banh Xeo (Sing Kung)  45/12oz',46.00,100,'越式煎饼粉',1,1.39,0,'cs','pkg'),(9847,'Flour - General Mills Sureloaf  50#',16.95,100,'高筋面粉',1,16.95,0,'sk','sk'),(11490,'Flour - Glutinous Rice (3Ladies/Green) 24/16oz',24.50,100,'',1,1.19,0,'cs','pkg'),(6278,'Flour - Glutinous Rice (Erawan/Green) 24/16oz',34.00,100,'三象糯米粉',24,2.29,0,'cs','pkg'),(12343,'Flour - Rice (3Ladies/Red) 24/16oz',1.19,100,'三女粘米粉',1,1.19,0,'pkg','pkg'),(6367,'Flour - Rice (Erawan/Red) 24/16oz',30.00,100,'粘米粉',24,1.99,0,'cs','pkg'),(11134,'Flour - Steam Bun Mix (Bot Banh Bao/SK) 40/1#',45.00,100,'大包粉',1,1.39,0,'cs','pkg'),(9385,'Flour - Steamed Bun Mix  40/1#',33.00,100,'大包粉',40,0.90,0,'cs','pkg'),(12333,'Flour - Sweet Rice (Mochiko) 36/16oz',89.64,100,'',1,2.49,0,'cs','box'),(6290,'Flour - Tapioca  50#',28.00,200,'大包菱粉',1,13.50,0,'sk','sk'),(9347,'Flour - Tapioca  50/14oz',38.00,100,'小包菱粉',50,0.99,0,'cs','pkg'),(10265,'Flour - Tapioca (Erawan) 24/1#',17.00,100,'三象菱粉',1,0.99,0,'cs','pkg'),(6291,'Flour - Tempura Ko 40#',34.00,200,'天富罗炸粉',1,30.00,0,'sk','sk'),(10573,'Flour - Tempura Mix (Gogi) 72/5.6oz',47.50,100,'泰炸粉',1,0.99,0,'cs','pkg'),(11597,'Flour - Tempura Mix (HM) 12/10oz',20.00,100,'小包天富罗',1,1.95,0,'cs','box'),(10181,'Flour - Tempura Mix Extra Crispy (KKM) 12/10oz',20.00,100,'小包天富罗',1,1.95,0,'cs','box'),(9291,'Flour - U.S. Rose Cake 50#',48.00,200,'美玫面粉',1,48.00,0,'sk','sk'),(11237,'Flour - Wheat Starch (Red Lantern) 50/16oz',48.00,100,'红灯澄面粉',1,1.59,0,'cs','pkg'),(9846,'Flour - Wheat Starch 25/1#',35.75,100,'澄面粉',1,1.59,0,'cs','pkg'),(10549,'Flour - Wheat Starch 50#',28.00,100,'澄面粉',1,28.00,0,'sk','sk'),(5983,'Flour 50#',16.95,200,'面粉',1,12.00,0,'sk','sk'),(5986,'Foil 5 X5  - Chicken Wrap  8/1000pc',93.00,100,'纸包鸡纸',8,13.95,0,'cs','pkg'),(5984,'Foil Roll Wrap 12 x1000',29.00,100,'锡纸',1,29.00,0,'cs','cs'),(5985,'Foil Roll Wrap 18 x1000',38.00,100,'锡纸',1,33.00,0,'cs','cs'),(9066,'Food Color - Egg Shade 4/1gal',30.00,100,'黃水',4,8.00,0,'cs','gal'),(6193,'Food Color - Red 4/1gal',30.00,100,'紅水',4,8.00,0,'cs','gal'),(5992,'Food Pail - 16oz Pint Micro 450pcs',40.00,100,'外卖盒16oz.',1,40.00,0,'cs','cs'),(5993,'Food Pail - 16oz Pint Round Bottom 500pcs',50.99,100,'圆底外卖盒16oz.',1,50.99,0,'cs','cs'),(5994,'Food Pail - 16oz Pint White  450pcs',40.00,100,'白色16oz外卖盒',1,40.00,0,'cs','cs'),(5991,'Food Pail - 16oz Pint Wire (Pagoda)  450pcs',40.00,100,'外卖盒16oz.',1,40.00,0,'cs','cs'),(10220,'Food Pail - 2 Quart 64oz 200',57.00,100,'外卖盒64oz',1,57.00,0,'cs','cs'),(5988,'Food Pail - 26oz Micro 9/50',52.00,100,'外卖盒26oz.',1,52.00,0,'cs','tube'),(5989,'Food Pail - 26oz Round Bottom',60.95,100,'圆底外卖盒26oz.',1,60.95,0,'cs','cs'),(10320,'Food Pail - 26oz White 450pcs',52.00,100,'白色26oz外卖盒',1,52.00,0,'cs','cs'),(9024,'Food Pail - 26oz Wire (GW) 450pcs',52.00,100,'外卖盒26oz.',1,52.00,0,'cs','cs'),(5996,'Food Pail - 32oz Quart Micro 450 pcs',54.00,100,'外卖盒32oz',1,54.00,0,'cs','cs'),(5997,'Food Pail - 32oz Quart White 450 pcs',54.00,100,'白色32oz外卖盒',1,54.00,0,'cs','cs'),(5995,'Food Pail - 32oz Quart Wire  450 pcs',54.00,100,'外卖盒32oz',1,54.00,0,'cs','cs'),(10402,'Food Pail - 8oz Half Pint Micro 450',30.00,100,'8oz 外卖盒',1,30.00,0,'cs','cs'),(9923,'Food Pail - 8oz Half Pint Wire 450pcs',30.00,100,'外卖盒8oz',1,30.00,0,'cs','cs'),(10940,'Forks - Domillion Dinner (Sldo006) (Metal)',4.70,100,'不锈钢叉',1,0.39,1,'dz','ea'),(6162,'Forks - Plastic ',8.95,100,'胶叉',1,6.95,0,'cs','cs'),(10217,'Forks - Plastic (Black/F1920055) Extr.Heavy 1M ',22.95,100,'黑胶叉',1,19.95,0,'cs','cs'),(9754,'Forks - Plastic Heavyweight  500pcs',8.95,100,'',1,8.95,0,'cs','cs'),(9757,'Forks - Plastic Medweight  1M/cs',11.95,100,'',1,11.95,0,'cs','cs'),(6043,'Fortune Cookie - Indiv ',14.00,100,'签语饼(单独包装)',1,14.00,0,'cs','cs'),(9582,'Fortune Cookie (Amay)',16.50,100,'签语饼(散装)',1,16.50,0,'cs','cs'),(5998,'Fortune Cookie (KM)',12.00,100,'签语饼(散装)',1,9.00,0,'cs','cs'),(5115,'Fortune Cookie (NHK)',12.50,100,'签语饼(新香港)',1,10.00,0,'cs','cs'),(9887,'Freight ',10.00,100,'',1,1.00,0,'ea','ea'),(12250,'Freight Surcharge',10.00,100,'',1,1.00,0,'ea','ea'),(10671,'French Fried 6/4#',24.50,400,'炸薯条',1,24.50,0,'cs','cs'),(11536,'Fried Gluten Ball 1.7oz/pkg (WC)',1.79,300,'油面筋',1,1.79,0,'pkg','pkg'),(6356,'Frill Fruit Pick 10000',1.00,100,'长牙签',1,1.00,0,'cs','cs'),(11615,'Froz. Chinese Spanish 20/1#',2.79,400,'冷冻荠菜',1,2.79,0,'pkg','pkg'),(11616,'Froz. Snap Bean 20/1#',2.79,400,'冷冻油豆角',1,2.79,0,'pkg','pkg'),(12052,'Frozen Shepherds Purse 1#/pkg (WC) 40/12oz',2.99,400,'冷冻荠菜',1,2.99,0,'pkg','pkg'),(10930,'Fruit Jelly - Jin Jin 6/1500g',4.99,100,'晶晶水果派对',1,4.99,0,'jar','jar'),(10712,'Fuel charge',10.00,100,'',1,0.00,0,'ea','ea'),(11651,'Fungus - Black (China) (Fortune)  50/2.5oz',2.29,100,'云耳',1,2.29,0,'pkg','pkg'),(11408,'Fungus - Black (China) 50/2.5oz',2.50,100,'云耳块',1,2.50,0,'pkg','pkg'),(5910,'Fungus - Black (Cloud Ear/China) 30/1#',14.99,100,'青燕云耳块',1,14.99,0,'bag','bag'),(10984,'Fungus - Black Compressed (DB/Chin)  7oz',9.99,100,'东北压缩黑木耳',1,9.99,0,'box','box'),(5659,'Fungus - Black Strip 6/5#',20.00,100,'木耳丝',6,20.00,0,'pkg','pkg'),(11416,'Fungus - Black Strips (Fortune)  50/4oz',1.99,100,'木耳丝',1,1.99,0,'pkg','pkg'),(11417,'Fungus - Black Whole (Fortune)  50/4oz',1.99,100,'木耳块',1,1.99,0,'pkg','pkg'),(9537,'Fungus - Snow White 15/12oz',8.99,100,'漳州雪耳',1,8.99,0,'bag','bag'),(5911,'Fungus -Black  Whole 5/5#/bag',80.00,100,'木耳块',5,19.50,0,'cs','bag'),(11897,'Furikake - Katsuo Bonito Seasoning 10/1.1#',18.00,100,'',1,18.00,0,'bag','bag'),(9132,'Furikake - Katsuo Bonito Seasoning10/1.7oz',25.00,100,'',1,4.00,0,'box','jar'),(9786,'Furikake - Nori  Seasoning 10/1.1#',18.00,100,'',1,18.00,0,'bag','bag'),(9060,'Furikake - Wasabi Fumi 10/1.7oz',25.00,100,'',1,4.00,0,'box','jar'),(11778,'Galanga Dried 7oz',1.79,100,'干泰国姜',1,1.79,0,'pkg','pkg'),(10733,'Galanga Froz. 60/7oz',69.00,400,'泰国姜',1,1.50,0,'cs','ea'),(6008,'Galanga Root Froz.Whole48/8oz',60.00,400,'泰国姜',48,1.50,0,'cs','pkg'),(12327,'Galanga Sliced Froz. 48/7oz',65.00,400,'泰国姜',1,1.99,0,'cs','pkg'),(10914,'Garbage Can  32gal',33.00,100,'垃圾桶',1,33.00,1,'ea','ea'),(5962,'Garlic - Dry Flakes 6/5#',78.00,100,'干蒜片',1,14.00,0,'cs','pkg'),(10519,'Garlic - Fried  12/17.5oz',80.00,100,'炸蒜头',1,7.95,0,'cs','jar'),(6002,'Garlic - Fried 12/8oz',48.00,100,'炸蒜粒',1,4.95,0,'cs','jar'),(10902,'Garlic - Fried 50/8oz',35.00,100,'油蒜酥',1,0.99,0,'cs','bag'),(11097,'Garlic - Granulated 10/5#',20.00,100,'蒜沙',1,20.00,0,'bag','bag'),(10600,'Garlic - Granulated 6/5#',20.00,100,'蒜沙',1,22.00,0,'jar','jar'),(6119,'Garlic - Minced 10/5#',25.00,100,'干蒜粒',3,25.00,0,'pkg','pkg'),(6120,'Garlic - Minced 50#',180.00,100,'干蒜粒',1,3.80,0,'cs','bag'),(11189,'Garlic - Powder 10/5#',20.00,100,'细蒜粉',1,20.00,0,'bag','bag'),(10387,'Gas Lighter 120pc',1.39,100,'点火枪',1,1.39,1,'ea','ea'),(10754,'Gas-fryer',0.00,200,'',1,1825.00,0,'',''),(12232,'Gees - Head On Young (8/12) 4HD',6.99,500,'有头鹅',1,6.99,0,'lb','lb'),(12298,'Gees - Headlese Young (8/10) 5HD',6.99,500,'无头鹅',1,6.99,0,'lb','lb'),(11053,'Gelatin Powder Unflavor (Husty)  8# ',55.00,100,'魚胶粉',1,55.00,0,'bkt','bkt'),(9394,'Ginger - Candied 5#/bag',5.00,100,'糖姜片',1,5.00,0,'cs','bag'),(6194,'Ginger - Preserved Red Strip 24/16oz (mee chun)',95.00,100,'红姜丝',24,4.95,0,'cs','jar'),(6270,'Ginger - Sushi #1 (Green Lid) 20#',44.00,100,'酸姜',1,44.00,0,'bkt','bkt'),(10798,'Ginger - Sushi 16oz/jar',2.99,100,'寿司姜',1,2.99,0,'jar','jar'),(9044,'Ginger - Sushi 32oz/jar',4.99,100,'酸姜',1,4.99,0,'jar','jar'),(10282,'Ginger - Sushi Cup 36/6oz',1.00,100,'寿司姜',1,1.00,0,'cs','cup'),(11800,'Ginger - Sushi Special Pink (Akebono) 20#',20.50,100,'紅寿司姜',1,20.50,0,'bkt','bkt'),(6271,'Ginger - Sushi Special Pink 20#',38.00,100,'紅寿司姜',1,38.00,0,'bkt','bkt'),(10015,'Ginger - Sushi Special White 20#',38.00,100,'白寿司姜',1,38.00,0,'bkt','bkt'),(12363,'Ginger - Sushi Special White 32oz',8.99,100,'白寿司姜',1,38.00,0,'jar','jar'),(9789,'Ginger - Sushi White 20#',39.95,100,'白酸姜',1,39.50,0,'bkt','bkt'),(12152,'Gingko 8.8oz/pkg',2.29,100,'白果',1,2.29,0,'pkg','pkg'),(11733,'Ginseng Root (0010U/11218-GGS)',50.00,100,'散装花旗參',1,50.00,0,'lb','lb'),(10678,'Ginseng Root (L/#123)',82.00,100,'花旗參枝(大)',1,82.00,0,'lb','lb'),(10679,'Ginseng Root (M/#124)',58.00,100,'花旗參枝(中)',1,58.00,0,'lb','lb'),(11306,'Ginseng Root Half Short Jumbo (#129) 4oz',55.00,100,'花旗參礼盒',1,55.00,0,'',''),(10841,'Ginseng Root Long M.(#102) 4oz',48.00,100,'花旗參礼盒',1,48.00,0,'pkg','pkg'),(11305,'Ginseng Root Short L. (#111-4) 4oz',51.00,100,'花旗參礼盒',1,51.00,0,'pkg','pkg'),(12202,'Ginseng Root Short M. (#112-4) 4oz',49.00,100,'花旗參礼盒',1,49.00,0,'pkg','pkg'),(12203,'Ginseng Root Sliced (#1104S) ',9.99,100,'花旗參片茶包',1,9.99,0,'pkg','pkg'),(9868,'Glass Cleaner - Blue 4/1gal',13.95,100,'玻璃水',1,3.89,1,'cs','gal'),(11039,'Globe Glass Silicone (2531227)',13.00,100,'雪柜灯罩',1,13.00,1,'ea','ea'),(9367,'Glove - Latex 10/100pc',37.50,100,'胶手套',10,37.50,1,'cs','cs'),(11351,'Glove - Latex Household (Green) ',1.29,100,'胶手套',1,1.29,1,'ea','ea'),(9956,'Glove - Latex Household (Yellow)',0.99,100,'胶手套',1,0.99,1,'ea','ea'),(9905,'Glove - Latex Household 9 x16 (#1005/Yellow) ',6.99,100,'胶手套',1,6.99,0,'pair','pair'),(12248,'Glove - Nitrile (L) 10/100',80.00,100,'丁晴手套 L',1,80.00,0,'cs','cs'),(12247,'Glove - Nitrile (M) 10/100',80.00,100,'丁晴手套 M',1,80.00,0,'cs','cs'),(12249,'Glove - Nitrile (XL) 10/100',80.00,100,'丁晴手套 XL',1,80.00,0,'cs','cs'),(9522,'Glove - Non Latex 4/100ps',22.50,100,'',1,8.00,1,'cs','box'),(11077,'Glove - Orange Nitrile Heavy Duty 10/100pcs',108.00,100,'厚手套',1,11.50,0,'cs','box'),(11352,'Glove - PE Disposable (L) 100/100pc',39.00,100,'沙拉手套',1,3.95,0,'cs','pkg'),(10236,'Glove - PE Disposable (M) 10/10/100pcs',56.50,100,'沙拉手套',1,6.50,0,'cs','box'),(10837,'Glove - Poly Disposable 20/500pc',65.00,100,'沙拉胶手套',1,3.50,0,'cs','box'),(12275,'Glove - TPE Disposable (L) 5/200pc',35.00,100,'沙拉手套',1,9.00,0,'cs','box'),(10266,'Glove - Vinyl Disposable  (L)  10/100',80.00,100,'壽司胶手套(大)',1,9.99,0,'cs','box'),(9945,'Glove - Vinyl disposable  (M) 10/100',80.00,100,'寿司胶手套(中)',1,9.99,0,'cs','box'),(11340,'Glove - Vinyl Disposable  (XL)  10/100',80.00,100,'壽司胶手套(加大)',1,9.99,0,'cs','box'),(10409,'Glove - Vinyl Disposable (S) 10/100',80.00,100,'壽司胶手套(小)',1,9.99,0,'cs','box'),(11418,'Goat - Bag Cubed Skin On',5.95,500,'袋裝草羊',1,5.95,0,'lb','lb'),(10288,'Goat - Box Skin On Leg',4.95,500,'草羊腿',1,4.95,0,'lb','lb'),(11955,'Goat - Cut Bone In Skin On   ',5.50,500,'切羊',1,5.50,0,'lb','lb'),(11860,'Goat - Cut Sk/Off ',5.95,500,'無皮草羊',1,5.95,0,'lb','lb'),(11708,'Goat - Cut Skin On   30#',164.00,400,'切草羊',1,5.49,0,'cs','lb'),(11936,'Goose - Feet',12.99,500,'鵝掌',1,12.99,0,'lb','lb'),(10925,'Grass Jelly - Chinese Style Herbal Gelatin 24/19oz',1.15,100,'爽滑涼粉',1,1.15,0,'can','can'),(5135,'Green Bachuo',13.00,300,'',1,13.00,0,'cs','item'),(9761,'Grill Bricks  12/cs',23.00,100,'炉头砖',1,2.29,0,'cs','cs'),(10760,'Grilled Sticky Rice Froz.(Banana)  24/7.5oz',2.99,400,'泰國甜品',1,2.99,0,'pkg','pkg'),(9289,'Guest Checks (525/G3632/A3632) 50/50',29.00,100,'下单本',1,29.00,1,'cs','cs'),(5858,'Guest Checks (A10L-50)',22.00,100,'下单本',1,22.00,1,'cs','cs'),(5859,'Guest Checks (A6000G / G6000) 50/50',29.95,100,'下单本',1,29.95,1,'cs','cs'),(5861,'Guest Checks (A926SW/G4900) 10/250pcs',65.00,100,'下单本',1,65.00,1,'cs','cs'),(9168,'Guest Checks (BT6000/H600/700)',29.95,100,'下单本',1,22.00,1,'cs','cs'),(9210,'Guest Checks (BT7000/GC6000)',29.95,100,'下单本',1,13.50,1,'cs','cs'),(9301,'Guest Checks (BTG490) 250/10',50.00,100,'下单本',1,50.00,1,'cs','cs'),(10893,'Guest Checks (G4900BK) 10/250',72.00,100,'下单本',1,72.00,1,'cs','cs'),(5736,'Guest Checks (G7000) 50/50shts 3.5 /6.75 ',59.00,100,'下单本',1,59.00,1,'cs','cs'),(11661,'Guest Checks (KO104) 50/50',29.00,100,'下单本',1,29.00,1,'cs','cs'),(9776,'Guest Checks (W-160) 5/10/50 bks',23.50,100,'下单本',1,23.50,1,'cs','cs'),(9973,'Guilinggao  40/250g',122.50,100,'龟苓膏',1,3.99,0,'cs','box'),(9738,'Ham - Chop 50#',84.50,400,'',1,1.69,0,'cs','lb'),(11006,'Ham - Luncheon Meat Pork (Red) 24/12oz',0.00,100,'金华火腿午餐肉',1,5.99,0,'can','can'),(10465,'Ham - Luncheon Meat Pork(Green) 12/12oz',5.49,100,'金华火腿午餐肉',1,5.49,0,'can','can'),(12068,'Ham - Luncheon Meat w Ham&Chicken(Maling/Blue)24/12oz',2.99,100,'金梅林火腿鸡午餐肉',1,2.99,0,'can','can'),(11172,'Ham - Luncheon Meat w Ham(ML/Bestal/Red)24/12oz',3.99,100,'金梅林火腿午餐肉',1,3.99,0,'can','can'),(9908,'Ham - Virginia Smoke',4.79,500,'金华火腿',1,4.79,0,'lb','lb'),(9867,'Hand Soap- Pink Liquid 4/1gal',17.00,100,'洗手液',1,4.99,0,'cs','gal'),(9869,'Heavy Duty degreaser  4/1gal ',1.00,100,'去油水',1,10.00,0,'cs','gal'),(10425,'Herb - Dang Gui (Radix Angelicae Sinensis) 600g',27.95,100,'当归',1,27.95,0,'pkg','pkg'),(11623,'Herb - Flos Notoginseng',0.00,100,'田七花',1,0.00,0,'',''),(10874,'Herb - Frutex Abri  227g',5.95,100,'鸡骨草',1,5.95,0,'pkg','pkg'),(11601,'Herb - Overload Flower (Flos Hyloceri) 16oz',10.95,100,'霸王花',1,10.95,0,'pkg','pkg'),(9422,'Herb - Parsley Flake',5.00,100,'干西芫茜',1,5.00,0,'jar','jar'),(11313,'Herb - Poria Roll 600g',9.95,100,'茯苓卷',1,9.95,0,'pkg','pkg'),(11539,'Herb - Radix Codonopsis Pilosulae 16oz',23.00,100,'党參',1,23.00,0,'pkg','pkg'),(11537,'Herb - Radix Glehniae 16oz',9.50,100,'沙參',1,9.50,0,'pkg','pkg'),(11911,'Herb - Radix Paeoniael Alba 16oz',9.99,100,'白芍片',1,9.99,0,'pkg','pkg'),(11538,'Herb - Radix Pseudostellariae 16oz',15.00,100,'太子參',1,15.00,0,'pkg','pkg'),(11540,'Herb - Radix Rehmanniae 16oz',5.95,100,'生地',1,5.95,0,'pkg','pkg'),(11541,'Herb - Radix Rehmanniae Praeparatae 16oz',5.95,100,'熟地',1,5.95,0,'pkg','pkg'),(11807,'Herb - Ramulus Taxilli   ',4.95,100,'桑寄生茶',1,4.95,0,'box','box'),(12015,'Herb - Rhizoma Ligustici Wallichii 16oz',9.99,100,'川穹',1,9.99,0,'pkg','pkg'),(11383,'Herb - Rhizoma Polygnl Odorati 8oz',9.95,100,'玉竹片',1,9.95,0,'pkg','pkg'),(10875,'Herb - Spica Frunellae  16oz',5.95,100,'夏枯草',1,5.95,0,'pkg','pkg'),(11650,'Herb - Tian Ma Sliced',40.00,100,'姜制天麻片',1,40.00,0,'box','box'),(12008,'Herb - White Flower Analgesic Balm 12/0.08oz (4)',2.99,100,'白花油(特小)',1,2.99,0,'btl','btl'),(12007,'Herb - White Flower Analgesic Balm 12/0.67oz (1)',9.99,100,'白花油(大)',1,9.99,0,'btl','btl'),(10912,'Hofun - Chen Cun 2#/pkg',3.50,300,'陈村粉',1,3.50,0,'pkg','pkg'),(12213,'Hofun - Chicken Tang Fen 2#/pkg',3.50,300,'黄毛鸡汤粉',1,3.50,0,'pkg','pkg'),(11585,'Hofun - Fresh 1.5#',3.50,300,'河粉',1,3.50,0,'pkg','pkg'),(10802,'Hofun - Fresh 1dz (Small)',7.00,300,'小河粉',1,7.00,0,'pkg','pkg'),(6225,'Hofun - Fresh 5 dz(Large)',19.00,300,'大河粉',5,19.00,0,'pkg','pkg'),(6226,'Hofun - Frozen 5#',4.00,400,'冻河粉',20,4.00,0,'pkg','pkg'),(9054,'Hoisin Sauce  - Bottle (LKK) 12/20oz',26.00,100,'瓶装海鮮醬',1,2.89,0,'cs','btl'),(6059,'Hoisin Sauce - Bottle (KC) 24/15oz',46.00,100,'瓶装海鮮醬',1,2.19,0,'cs','btl'),(11701,'Hoisin Sauce - Bottle (KKM) 12/9.4oz',35.50,100,'瓶装海鮮醬',1,3.79,0,'cs','btl'),(6056,'Hoisin Sauce (KC) 6/5',48.00,100,'冠珍海鮮醬',6,9.99,0,'cs','can'),(6082,'Hoisin Sauce (LKK) 6/5#',36.00,100,'李锦记海鮮醬',1,7.50,0,'cs','can'),(11748,'Hoisin Sauce (LKK) Gluten Free 12/ 9.45oz',47.88,100,'无麦麸海鲜酱',1,4.30,0,'cs','btl'),(12098,'Hoisin Sauce (LKK) Gluten Free 6/5#',42.00,100,'李锦记无麦海鲜酱',1,7.95,0,'cs','can'),(10363,'Hoisin Sauce (PRB) 6/5#',23.95,100,'海鮮醬',1,4.50,0,'cs','can'),(5421,'Hoisin Sauce (Shing Kee) 6/5#',15.00,100,'盛记海鮮醬',6,15.00,0,'cs','can'),(10253,'Hoisin Sauce (WC) 6/5#',24.50,100,'海鮮醬',1,4.50,0,'cs','can'),(10782,'Hoisin Sauce Pkg  8# (SK)',18.00,100,'海鮮醬包',1,18.00,0,'cs','cs'),(11311,'Hon Tsuyu (Soup & Sauce Base) (KKM) 6/33.8oz',6.99,100,'',1,6.99,0,'btl','btl'),(6034,'Hondashi - Soup Stock (Ajino) 12/ 2.2#',229.00,100,'',1,20.50,0,'cs','bag'),(11598,'Hondashi - Soup Stock (Ajino) 30/4.23oz',4.50,100,'',1,4.50,0,'box','box'),(6035,'Honey 6/5#',12.00,100,'蜜糖',1,12.00,0,'btl','btl'),(10394,'Hot Pepper Sauce LGM 24/9.88oz',3.99,100,'老干妈',1,3.99,0,'blt','btl'),(10543,'Hot Sauce (Crispy) In Jar (LKM) 24/210g',3.99,100,'老干妈香辣脆',1,3.99,0,'jar','jar'),(10567,'Hot Sauce (Tapatio) Salsa Picante 12/32oz',36.00,100,'墨辣醬',1,3.69,0,'cs','btl'),(9822,'Hotpot Condiments  150g',1.59,100,'火锅底料',1,1.59,0,'pkg','pkg'),(10828,'Ice Cream - Coconut ',23.00,400,'椰味雪糕',1,23.00,0,'cs','cs'),(10749,'Ice Cream - Green Tea 3 gal',28.00,400,'绿茶雪糕',1,28.00,0,'cs','cs'),(6042,'Inari - Tofu 24/10oz  (In Can)',78.00,100,'豆腐皮',1,3.25,0,'cs','can'),(5009,'Inari - Tofu Skin Frozen 60/Pkg 10/45.85oz/cs',12.00,400,'豆腐皮',10,12.00,0,'pkg','pkg'),(10788,'Incence Stick',4.50,100,'拜神香',1,4.50,0,'pkg','pkg'),(11783,'Instant Beef Flavor Paste (LEE) 24/8oz 9374',53.00,100,'越南牛肉酱膏',1,4.49,0,'cs','jar'),(11782,'Instant Duck Flavor Paste (LEE) 24/8oz 9372',53.00,100,'即食五香鸭酱料',1,2.49,0,'cs','jar'),(12047,'Instant Pho Flavor Paste (LEE) 24/8oz 9380',53.00,100,'越南粉酱',1,2.49,0,'cs','jar'),(11678,'Instant Pork Flavor Paste (LEE) 24/8oz 9278',53.00,100,'即食猪肉汤料',1,2.49,0,'cs','jar'),(10262,'Jack Fruit In Syrup (A)  24/20oz',32.00,100,'菠萝蜜罐头',1,1.95,0,'cs','can'),(5273,'Jello Mix - Citrus 12/24',22.00,100,'橘子果冻粉',12,22.00,0,'cs','pkg'),(11705,'Jello Mix - Lemon   12/1.5#',27.50,100,'柠檬果冻粉',1,2.79,0,'cs','pkg'),(9894,'Jello Mix - Lime   12/1.5#',26.50,100,'青柠果冻粉',1,2.79,0,'cs','pkg'),(9895,'Jello Mix - Mango  12/1.5#',26.50,100,'芒果果冻粉',1,2.79,0,'cs','pkg'),(9896,'Jello Mix - Orange   12/1.5#',26.50,100,'橙子果冻粉',1,2.79,0,'cs','pkg'),(9893,'Jello Mix - Strawbery 12/1.5#',26.50,100,'啤梨果冻粉',1,2.79,0,'cs','pkg'),(9346,'Jusheng',2.95,100,'竹笙',1,2.95,0,'bag','bag'),(9323,'Kabayaki Sauce(Unagi NoTare Thick)(Japan)  6/60oz',85.00,100,'寿司鳗鱼酱',6,18.00,0,'cs','btl'),(12061,'Kaneku Neri Ume Shiso (Plum Paste) 12.7oz/tube',12.99,100,'',1,12.99,0,'tub','tub'),(9561,'Kanpyo  (Onoguchi Ajitsuke/Seasoned)  10/1.1# ',9.95,300,'带味瓢丝',1,9.95,0,'pkg','pkg'),(9175,'Kanpyo 2.2#/pkg (Ajitsuke) (Dried Gourd Strip)',12.95,400,'干瓢丝',1,12.95,0,'pkg','pkg'),(9020,'Ketchup 6/5#',28.00,100,'茄醬',6,5.59,0,'cs','can'),(10165,'Kim Chee (No Moto) 4/12/6.71oz',1.00,100,'韩国泡菜',1,1.00,0,'cs','box'),(11292,'Kim Chee 12oz',2.49,300,'韩国泡菜',1,2.49,0,'lb','lb'),(9648,'Kim Chee 1gal',19.00,300,'韩国泡菜',1,18.00,0,'gal','gal'),(12362,'Kim Chee 32oz',7.49,100,'韩国泡菜',1,7.49,0,'jar','jar'),(6069,'Kim Chee Base (No Moto) 15/42.32oz',299.00,100,'韩国泡菜酱',15,19.95,0,'cs','btl'),(10526,'Kim Chee Base (SB) 6/40oz',89.50,100,'韩国泡菜酱',1,18.00,0,'cs','btl'),(9280,'Kim Chee Base 42oz/btl',19.95,100,'韩国泡菜酱',1,19.95,0,'btl','btl'),(11556,'Kim Chee In Tin Can (Wang/#11183) 35#',55.00,300,'韩国泡菜',1,55.00,0,'cs','cs'),(11527,'Kim Chee Sliced 12/1.5lb 09623',96.00,100,'韩国泡菜',1,9.99,0,'cs','jar'),(9249,'Knives -  Chinese Chef  (Dexter)',42.00,100,'厨刀',1,36.50,1,'ea','ea'),(10685,'Knives - 10  Cook w.Blk Handle',16.95,100,'开魚刀',1,16.95,1,'ea','ea'),(11544,'Knives - Angle Knife ',35.00,100,'登録厨刀',1,35.00,1,'ea','ea'),(11260,'Knives - Boning  #1 HK(Knfcck1401)',59.00,100,'斩骨刀',1,59.00,1,'ea','ea'),(11975,'Knives - Boning  (K960)',30.00,100,'砍骨刀',1,30.00,1,'ea','ea'),(10886,'Knives - Kiwi Thai 6 x2  #21',5.50,100,'中长刀',1,5.50,1,'ea','ea'),(10887,'Knives - Kiwi Thai 6.75 x3.5 ',6.50,100,'中短刀',1,6.50,1,'ea','ea'),(10885,'Knives - Kiwi Thai 7 x2.5  #171 ',3.99,100,'小长刀',1,3.99,1,'ea','ea'),(6163,'Knives - Plastic',8.50,100,'胶刀',1,6.95,0,'cs','cs'),(10219,'Knives - Plastic (Black) Extr. Heavy 1M',22.95,100,'黑胶刀',1,19.95,0,'cs','cs'),(10128,'Laab Namtok Seasoning Mix 36/1.06oz',1.00,100,'牛肉调味料',1,1.00,0,'cs','cs'),(12334,'Laab-Namtok Seasoning Mix(DF) 24/8oz',65.00,100,'泰式酸辣调味料',1,3.49,0,'cs','can'),(10648,'Lamb - Flap B/In ',3.95,500,'羊腩',1,3.95,0,'lb','lb'),(6086,'Lamb - Leg',2.00,400,'羊腿',1,2.00,0,'lb','lb'),(11802,'Lamb - Leg Bnls (Austria)',8.95,500,'無骨羊腿/切片羊',1,8.95,0,'lb','lb'),(12157,'Lamb - Shoulder Bnls (BRN)',4.50,500,'无骨羊肉',1,4.50,0,'lb','lb'),(9795,'Lamb - Shoulder Bnls (Tube/Swift) (Austria)',4.95,500,'无骨羊肉',1,4.95,0,'lb','lb'),(10031,'Lamb - Shoulder Bnls Sliced ',3.50,500,'切片羊肉',1,3.50,0,'lb','lb'),(10352,'Lamb - Stew Meat Sliced',3.95,500,'羊腩',1,3.95,0,'lb','lb'),(10814,'Lamb Chop Rack 8 French',14.00,400,'羊扒',1,14.00,0,'lb','lb'),(9380,'Lamb Shank ',3.65,500,'羊腱',1,3.65,0,'cs','cs'),(11421,'Lamb Sliced (Hot Pot) ',8.95,100,'火锅羊肉片',1,8.95,0,'lb','lb'),(6087,'Lemon - Extract 12/32oz',83.00,100,'柠檬精',4,7.50,0,'cs','btl'),(6088,'Lemon - Juice 12/32oz',25.00,100,'柠檬水',1,2.89,0,'cs','btl'),(12117,'Lemon Grass Froz. 10/32oz',28.00,400,'冻香茅碎',1,2.99,0,'cs','pkg'),(10314,'Lemon Grass Froz. 30/7oz',42.00,400,'冻香茅碎',1,1.79,0,'cs','jar'),(9169,'Lid -  (48JL) 24oz,32oz 5/100pcs',37.00,100,'杯盖',1,37.00,0,'cs','cs'),(10899,'Lid -  22oz Teriyaki Bowl (TL-012) 500pc',45.00,100,'饭碗蓋',1,45.00,0,'cs','cs'),(5838,'Lid - (12SL)12oz Fit 12j12 10/100',26.00,100,'杯盖',1,26.00,0,'cs','cs'),(5813,'Lid - (16SL)  For 16J16,20J16 10/100',35.00,100,'杯盖',1,35.00,0,'cs','cs'),(5843,'Lid - (20JL) 8oz,12oz,16oz 1m/Fit 16mj20,12sj20,8sj20 ',35.00,100,'杯盖',1,35.00,0,'cs','cs'),(9747,'Lid - (20SL) 20oz  1000pcs For drink',24.50,100,'杯盖',1,24.50,0,'cs','cs'),(5849,'Lid - (32JL) 32oz  Fit 32TJ32 500pc',28.00,100,'杯盖',1,28.00,0,'cs','cs'),(9455,'Lid - (32SL) 32oz  500pcs fit 32TJ32 for drink',42.50,100,'杯盖',1,42.50,0,'cs','cs'),(10510,'Lid - (626TS/F-cdl-98)16oz 20oz,24oz Clear Flat 20/50pc',39.00,100,'胶水杯蓋',1,39.00,0,'cs','cs'),(5851,'Lid - (6JL)  6oz 1000 ',19.95,100,'杯盖',1,19.00,0,'cs','cs'),(5855,'Lid - (8JL) 8oz',19.95,100,'杯盖',1,19.00,0,'cs','cs'),(10839,'Lid - (C-142) 24oz Fit D700 Bowl 600ct',49.50,100,'飯碗蓋',1,49.50,0,'cs','cs'),(5940,'Lid - (C18-0012) Teriyaki 12oz , 22 oz ',60.50,100,'饭盖',1,57.95,0,'cs','cs'),(12001,'Lid - (CH32A/CA32-4000) 32 oz Soup Paper 500pc For H4325',79.00,100,'32oz纸汤杯盖',1,79.00,0,'cs','cs'),(9762,'Lid - (DT18SS) 12oz,16oz,20oz Fit C12A (Hot Drink)',14.95,100,'热杯盖',1,14.95,0,'cs','cs'),(9402,'Lid - (FL6v) 6oz Fits  F6, F8m 1000ps',38.00,100,'杯盖',1,38.00,0,'cs','cs'),(5811,'Lid - (FL8v) 8oz/12oz/16oz Fit F8 10/100pcs',50.00,100,'杯盖',1,50.00,0,'cs','sleep'),(6344,'Lid - (L18S/L18SLW) Drink For (14C18/16C18/20C18/24C18/C12A) 10/100',38.00,100,'杯盖',1,38.00,0,'cs','cs'),(6345,'Lid - (L32S) 32oz   Drinking',69.00,100,'杯盖',1,69.00,0,'cs','cs'),(6085,'Lid - (L32V) 32oz   10/100pcs fit F32',69.00,100,'杯盖',1,69.00,0,'cs','sleep'),(5981,'Lid - (L6V)  4oz  10/100 Fit F4',30.00,100,'杯盖',1,30.00,0,'cs','cs'),(6362,'Lid - (PL1N/PL100N) 1oz.3/4oz  25/100ct Fit P100N, P075S',31.00,100,'杯盖',1,31.00,0,'cs','cs'),(5442,'Lid - (PL2N/PL200N) 2oz  25/100pcs Fit P200n',39.00,100,'杯盖',1,39.00,0,'cs','tub'),(6364,'Lid - (PL4N) 4oz &3 1/4   25/100',40.00,100,'杯盖',1,40.00,0,'cs','cs'),(9369,'Lid - (XL100PC) 1oz Portion 2500pc',25.50,100,'杯盖',1,25.50,0,'cs','cs'),(10066,'Lid - Dome (Ckdl626/98mm)16-24oz For Boba  20/50cts',45.00,100,'拱形水杯蓋',1,45.00,0,'cs','cs'),(12100,'Lid - Paper White For 8/12/16oz 500ct (7500868)',56.50,100,'纸杯盖',1,56.50,0,'cs','cs'),(9456,'Lid- (10SL) 10oz. 1000pcs.',0.00,100,'',1,0.00,0,'cs','cs'),(11055,'Lime Juice  12/32oz',23.50,100,'青檸汁',1,2.25,0,'cs','btl'),(12080,'Lime Juice  4/1',25.00,100,'青檸汁',1,25.00,0,'cs','cs'),(9874,'Liquid Grease trap 4/1gal',32.50,100,'通渠水',1,10.00,1,'cs','gal'),(11149,'Lobster Ball (Ho Ho) 30/16oz',6.49,400,'龙虾丸',1,6.49,0,'bag','bag'),(9556,'Lobster Tail 6/5#  (1-2oz)',255.00,400,'龙虾尾',1,8.50,0,'cs','lb'),(6093,'Lobster Tail 6/5# (2-4oz)',418.50,400,'龙虾尾',5,13.95,0,'cs','lb'),(10901,'Lobster Whole Fresh Froz. (1/2)  10#',39.90,500,'鲜冻龙虾',1,3.99,0,'cs','lb'),(9782,'Longan - In Syrup 24/19oz',1.00,100,'糖水龙眼',1,1.00,0,'cs','can'),(9410,'Lop Ya Meat',5.95,400,'腊鸭肉',1,5.95,0,'pkg','pkg'),(11812,'Lopyuk- (Great Wall) (Chinese Bacon) 20/10oz',5.95,300,'腊肉',1,5.95,0,'pkg','pkg'),(6346,'Lopyuk- (KYJ) (Chinese Bacon)',7.99,500,'腊肉',1,7.99,0,'pkg','pkg'),(6095,'Loquats 6/5#',25.00,100,'枇杷',6,23.00,0,'cs','can'),(9984,'Lotus Nuts In Syrup  17oz',1.00,100,'糖水莲子',1,1.00,0,'cs','can'),(12374,'Lotus Past 11#',48.00,100,'纯白莲蓉',1,48.00,0,'bag','bag'),(11479,'Lotus Root Powder 12/7oz',3.50,100,'藕粉',1,35.00,0,'cs','pkg'),(11837,'Lotus Seeds - Saling Boat 48/15oz',143.50,100,'船牌清水莲子',1,2.99,0,'cs','can'),(9135,'Lychee 24/20oz can',65.00,100,'荔枝',20,3.99,0,'cs','can'),(11504,'Mabo Tofu Sauce (House/Hot) 10/5.29oz',3.49,100,'麻婆豆腐酱',1,3.49,0,'box','box'),(9055,'Macadamia Chopped 24/10oz',98.00,100,'',1,98.00,0,'cs','pkg'),(9038,'Maltose 36/14.11oz (400g)',55.00,100,'麦芽糖',36,2.49,0,'cs','jar'),(10151,'Mango  Froz. (IQF)10/1.1#',32.00,400,'凍芒果',1,3.20,0,'cs','pkg'),(10817,'Mango Pulp  Sweetened   6/30oz',19.00,100,'芒果醬',1,3.79,0,'cs','can'),(11600,'Matcha - Green Milk Tea Powder 12/700g',8.00,100,'抹奶茶粉',1,8.00,0,'pkg','pkg'),(12020,'Matcha - Green Tea Powder (Japen) 1.1# (40640)',43.00,100,'抹茶粉',1,43.00,0,'pkg','pkg'),(11599,'Matcha - Green Tea Powder (Japen)120g',7.50,100,'抹茶粉',1,7.50,0,'pkg','pkg'),(12239,'Matcha - Green Tea Powder Organic 250g',24.99,100,'有机抹茶粉',1,24.99,0,'pkg','pkg'),(6113,'Mayonnaise (Best Food) 4/1gal',35.00,100,'沙拉醬',4,12.00,0,'cs','gal'),(10360,'Mayonnaise (GP) (Blue Label) 4/1gal',68.00,100,'日本沙拉醬',1,20.00,0,'cs','jar'),(10607,'Mayonnaise 12/1.5#',19.00,100,'沙拉醬',1,19.00,0,'cs','cs'),(10617,'Mayonnaise 2/1.5gal',25.00,100,'沙拉醬',1,10.50,0,'cs','gal'),(9981,'Mayonnaise 30#',25.50,100,'',1,25.50,0,'bkt','bkt'),(10189,'Mayonnaise In Tube (QP) 20/17.64oz',95.00,100,'沙拉醬',1,5.95,0,'cs','btl'),(10177,'Mayonnaise Wasabi (DY) 12/12oz',2.95,100,'芥辣沙拉醬',1,2.95,0,'jar','jar'),(9969,'Meat Tenderizer 6/10#',21.50,100,'松肉粉',1,21.50,0,'jar','jar'),(11321,'Melona Ice Bar 8pc/box',6.00,500,'雪条',1,6.00,0,'box','box'),(11818,'Michou 12/750ml',3.99,100,'米酒',1,3.99,0,'btl','btl'),(6117,'Michou 4/1g',34.00,100,'米酒',4,34.00,0,'cs','gal'),(10021,'Milk - Evaporated (Black &White) 24/12oz',31.00,100,'黑白花奶',1,1.79,0,'cs','can'),(9883,'Milk - Sweet Condensed (B& W) 24/14oz',52.50,100,'黑白炼奶',1,2.89,0,'cs','can'),(6275,'Milk - Sweet Condensed (Honey Bee)24/13.4oz',30.00,100,'炼奶',1,1.50,0,'cs','can'),(10033,'Milk - Sweet Condensed (Longevity) 24/14oz',65.00,100,'寿星公炼奶',1,3.89,0,'cs','can'),(12237,'Miola - Suihan Yo  10/2.2#',40.00,100,'日本吹饭',1,40.00,0,'can','can'),(10178,'Mirin - Aji Mirin (KKM) 12/10oz',1.00,100,'日本飯酒',1,1.00,0,'cs','btl'),(10179,'Mirin - Aji Mirin (KKM) 12/33.8oz',1.00,100,'日本飯酒',1,1.00,0,'cs','btl'),(9043,'Mirin - Aji Mirin (KKM) 6/60oz',61.50,100,'日本飯酒',1,11.50,0,'cs','btl'),(10192,'Mirin - Aji Mirin (KKM)12/17oz',1.00,100,'日本飯酒',1,1.00,0,'cs','cs'),(11067,'Mirin - Kotteri Mirin (KKM) 12/20oz',45.00,100,'日本饭酒',1,4.50,0,'cs','btl'),(11088,'Mirin - Kotteri Mirin (KKM) 5 gal',52.50,100,'日本饭酒',1,52.50,0,'cs','cs'),(11435,'Mirin - Kotteri Mirin (KKM) 6/2Q',45.00,100,'日本饭酒',1,45.00,0,'cs','cs'),(5036,'Mirin Cooking Wine (Hon) 5 gal',53.50,100,'日本饭酒',1,53.50,0,'cs','cs'),(9161,'Misc',1000.00,0,'',1,1000.00,0,'n/a','n/a'),(5872,'Miso Paste (AKA) 10/2.2#',35.00,300,'日本味噌',10,5.50,0,'cs','pkg'),(5873,'Miso Paste (AKA) 44#',40.00,300,'日本味噌',44,40.00,0,'cs','cs'),(11595,'Miso Paste (AKA) 8/17.5oz',5.95,300,'日本味噌',1,5.95,0,'pkg','pkg'),(6230,'Miso Paste (SHIRO) 10/2.2#',35.00,300,'日本味噌',10,5.50,0,'cs','pkg'),(6231,'Miso Paste (SHIRO) 44#/bkt',40.00,300,'日本味噌',1,40.00,0,'cs','cs'),(11596,'Miso Paste (SHIRO) 8/17.5oz',5.95,300,'日本味噌',1,5.95,0,'pkg','pkg'),(11436,'Mochi - Green Tea (Yuki) 7.4oz',3.50,100,'绿茶大福',1,3.50,0,'box','box'),(10809,'Mochi - Ice Cream Chocolate  12/12oz',53.88,400,'糯米雪糕/巧克力味',1,4.49,0,'cs','box'),(10807,'Mochi - Ice Cream Green Tea  12/12oz',53.88,400,'糯米雪糕/綠茶味',1,4.49,0,'cs','box'),(10808,'Mochi - Ice Cream Kona Coffee  12/12oz',53.88,400,'糯米雪糕/咖啡味',1,4.49,0,'cs','box'),(10804,'Mochi - Ice Cream Mango  12/12oz',53.88,400,'糯米雪糕/芒果味',1,4.49,0,'cs','box'),(10805,'Mochi - Ice Cream Red Bean  12/12oz',53.88,400,'糯米雪糕/紅豆味',1,4.49,0,'cs','box'),(10806,'Mochi - Ice Cream Strawberry  12/12oz',53.88,400,'糯米雪糕/草莓味',1,4.49,0,'cs','box'),(10803,'Mochi - Ice Cream Vanilla   12/12oz',53.88,400,'糯米雪糕/香草味',1,4.49,0,'cs','box'),(12136,'Mochi - Ice Cream Vanilla (Sweety)   12/8.4oz',1.00,400,'糯米雪糕/香草味',1,1.00,0,'box','box'),(11092,'Mongolian Beef Sauce (LKK) 4/1gal',60.00,100,'蒙古牛酱料',1,16.00,0,'gal','cs'),(6115,'Moo Shu Skin  (Menlo) 20/20',37.00,400,'萬樂木須皮',1,2.25,0,'cs','pkg'),(6125,'Moo Shu Skin (WC) 40/10pcs',48.00,400,'木須皮',1,2.25,0,'cs','pkg'),(10967,'Mooncake 1 Yolk w. Lotus Paste 4/1',18.00,100,'单黄莲蓉月',1,18.00,0,'box','box'),(11110,'Mooncake 1 Yolk w. Melon 4/1',18.00,100,'単黃冬蓉月饼',1,18.00,0,'box','box'),(9233,'Mooncake 1 Yolk w. Nuts 4/1 ',18.00,100,'单黄五仁月',1,18.00,0,'box','box'),(11338,'Mooncake 1 Yolk w.Red Bean Paste 4/1',18.00,100,'单黄豆沙月饼',1,18.00,0,'box','box'),(9253,'Mooncake 2 Yolk w. Lotus Paste 4/1',20.00,100,'双黄莲蓉月',1,20.00,0,'box','box'),(11339,'Mooncake 2 Yolk w.Lotus Seed Paste Oval ',20.00,100,'椭圆双黄莲蓉月饼',1,20.00,0,'box','box'),(11359,'Mooncake 6 Tea Flavor (SK) 6/2',24.95,100,'十二六色茶月饼',1,24.95,0,'box','box'),(10974,'Mooncake Combo Gift Box (SK) 12pc',23.95,100,'十二御礼礼盒',1,23.95,0,'box','box'),(11083,'Mooncake Green Bean Pastry (SK) 6pcc',20.00,100,'绿豆凸',1,20.00,0,'box','box'),(11714,'Mooncake Mei Xin',42.00,100,'美心月饼',1,42.00,0,'box','box'),(11709,'Mooncake Snowy',13.00,100,'冰皮月饼',1,13.00,0,'box','box'),(11085,'Mooncake Taro Pastry (SK) 8pcs',20.00,100,'芋頭酥',1,20.00,0,'box','box'),(11715,'Mooncake w. Melon 4/1',12.95,100,'纯冬蓉月饼',1,12.95,0,'box','box'),(11713,'Mooncake w. Nuts 4/1 ',14.95,100,'纯五仁月饼',1,14.95,0,'box','box'),(11712,'Mooncake w. Red Bean Paste 4/1',12.95,100,'纯豆沙月饼',1,12.95,0,'box','box'),(10963,'Mooncake w. White Lotus Paste 4/1',12.95,100,'纯白莲蓉月饼',1,12.95,0,'box','box'),(11086,'Mooncake w.Lotus Seed Paste 4/1',12.95,100,'纯莲蓉月饼',1,12.95,0,'box','box'),(11084,'Mooncake Yolk Pastry (SK) 10/12pcs',27.95,100,'蛋黄酥',1,27.95,0,'box','box'),(11912,'Mooncake Yolk Pastry (SK) 10/8pcs',1.00,100,'蛋黄酥',1,1.00,0,'box','box'),(10216,'Mop - Head White 12/32oz',6.95,100,'地拖布',1,6.95,1,'ea','ea'),(11610,'Mop - Head White 20/24oz',5.95,100,'地拖布',1,5.95,1,'ea','ea'),(9546,'MSG ( AMOY) 6/5',16.00,200,'味精',1,0.00,0,'cs','cs'),(10274,'MSG (Ajinomoto) 48/16oz',115.00,100,'味之素',1,3.29,0,'cs','pkg'),(5871,'MSG (AJINOMOTO) 50#',70.00,200,'日本味精',50,70.00,0,'sk','sk'),(9333,'MSG 5#',7.50,100,'味精',1,7.50,0,'bag','bag'),(5789,'MSG 50#',70.00,200,'味精',1,70.00,0,'sk','sk'),(9972,'MSG 50#/bkt',88.00,100,'真味素',1,75.00,0,'bkt','bkt'),(10385,'Mushroom - Bouillon (Totole) 20/1#',120.00,100,'太太樂蘑菇精',1,6.95,0,'cs','jar'),(12277,'Mushroom - Bouillon (Totole) 4/4.5#',108.00,100,'太太樂蘑菇精',1,108.00,0,'cs','cs'),(9538,'Mushroom - Button Whole 24/16oz',59.50,100,'钮扣蘑菇',1,2.99,0,'cs','cs'),(11425,'Mushroom - Dried Black (Smooth)  30/1#',10.00,100,'小包光面菇',1,10.00,0,'pkg','pkg'),(5912,'Mushroom - Dried Black(3/4) 6/5#',45.00,100,'干冬菇',1,45.00,0,'bag','bag'),(12025,'Mushroom - Dried Lion s Mane ',1.00,100,'猴头菇',1,1.00,0,'pkg','pkg'),(11377,'Mushroom - Dried Nami Tonko (4/5) 5/5#',58.00,100,'大茶花菇',1,58.00,0,'pkg','pkg'),(11364,'Mushroom - Dried Nami Tonko 25/1#',12.00,100,'小包花菇',1,12.00,0,'bag','bag'),(5680,'Mushroom - Dry Black (3/4) 5#',45.00,100,'冬菇',5,9.00,0,'bag','bag'),(10811,'Mushroom - Golden  24/15oz',25.00,100,'金針菇',1,1.50,0,'cs','can'),(5521,'Mushroom - Oyster 24/12oz',30.00,100,'蠔菇',24,1.79,0,'cs','btl'),(4736,'Mushroom - P&S 6/5#',45.00,100,'蘑菇碎片',6,7.95,0,'cs','can'),(9108,'Mushroom - Shitake Sliced 6/5#',12.50,100,'蘑菇丝',1,12.50,0,'cs','can'),(6247,'Mushroom - Sliced 6/5#',50.00,100,'蘑菇片',6,10.00,0,'cs','can'),(9015,'Mushroom - Straw  6/5#',70.00,100,'草菇罐头',1,15.00,0,'cs','can'),(6266,'Mushroom - Straw 24/15oz',28.00,100,'草菇罐头',1,1.45,0,'cs','can'),(10958,'Mushroom - Straw Half Cut 6/5#',62.00,100,'开边草菇',1,62.00,0,'cs','cs'),(12058,'Mushroom - Teatree 12oz',9.99,100,'茶树菇',1,9.99,0,'pkg','pkg'),(11360,'Mushroom Seasoning Mix 12/500g (4026)',7.99,100,'天然香菇颗粒调味料',1,7.99,0,'pkg','pkg'),(10260,'Mussel - Blue 2/10#',39.80,400,'青口(蓝壳)',1,1.99,0,'cs','lb'),(12219,'Mussel - In Half Shell  (L)  12/2#',103.20,400,'大青口',1,4.30,0,'cs','lb'),(5601,'Mussel - In Half Shell (M) 12/2#',90.96,400,'中青口',24,3.79,0,'cs','lb'),(12224,'Mussel - In Half Shell (S) 12/2#',66.00,400,'小青口',1,2.75,0,'cs','lb'),(6130,'Mussel - Meat 10/2.2#',110.00,400,'青口肉',1,4.99,0,'cs','lb'),(4846,'Mustard - Indiv Pkg (DBL Hi) 500pc',19.00,100,'芥末包',1,19.00,0,'cs','cs'),(11028,'Mustard - Sour Preserved (DF) 6/3#',28.00,100,'酸菜',1,5.50,0,'cs','jar'),(6253,'Mustard - Sour Preserved 36/10.5oz',40.00,100,'酸菜',1,1.99,0,'cs','pkg'),(10180,'Mustard Paste (DY) 12/4oz',1.00,100,'芥辣醬',1,1.00,0,'cs','cs'),(9064,'Mustard Powder (DBL Hi) 50#',88.00,100,'芥末粉',1,88.00,0,'cs','cs'),(5639,'Mustard Powder 10/5# ',9.50,100,'芥末粉',5,9.50,0,'bag','bag'),(6131,'Mustard Powder 25#',25.00,100,'芥末粉',1,25.00,0,'cs','cs'),(9825,'Mustard Powder 44# (Coiman s)',100.00,100,'',1,100.00,0,'sk','sk'),(11078,'Mustard Powder 6/5#',11.00,100,'芥末粉(罐装)',1,11.00,0,'jar','jar'),(5718,'Napkin - 1 Ply  # 1 5000pcs',43.95,100,'紙巾',1,43.95,0,'cs','cs'),(10381,'Napkin - 1Ply Beverage 16/250pc 4.75 x4.75 ',16.95,100,'饮料紙巾',1,16.95,0,'cs','cs'),(5648,'Napkin - 2 Ply  Dinner 15x17  3000pcs',38.00,100,'紙巾',1,37.95,0,'cs','cs'),(5717,'Napkin - 2 Ply (Rosei) 30/100pcs',47.00,100,'紙巾',1,47.00,0,'cs','cs'),(5958,'Napkin - Dispenser (PC501/Gogreen) 7 x13.5   20/500',38.50,100,'快餐紙巾',1,38.50,0,'cs','cs'),(11739,'Natto Munouyak Zaanmai 3 pc 12/5.3',20.50,300,'納豆',1,1.95,0,'cs','pkg'),(12371,'Niitaka Fukujinzuke 24/4.24oz',3.00,100,'',1,3.00,0,'pkg','pkg'),(12370,'Niitaka Shibazuke 24/6.2oz',3.00,100,'',1,3.00,0,'pkg','pkg'),(12372,'Niitake Aokappa - Kyurizuke Niitaka Fukujinzuke 24/4.24oz',3.00,100,'',1,3.00,0,'pkg','pkg'),(11931,'Noodle - (3Ladies) (Banh Hoi Tuoi) Rice Stick 40/12oz (7828)',56.00,100,'滨海米粉饼',1,1.75,0,'cs','pkg'),(10483,'Noodle - (3Ladies) (Lie/Blue Letter) Rice Stick(XL)  60/14oz',74.00,100,'三女瀨粉',1,1.99,0,'cs','pkg'),(11361,'Noodle - (3Ladies) JiangXi Rice Stick(Fine) 60/300g',47.00,100,'三女銀丝米粉',1,0.99,0,'cs','pkg'),(6263,'Noodle - (China) (L) Steamed 3/10#  ',30.00,400,'中華粗吹面',1,30.00,0,'cs','cs'),(10931,'Noodle - (China) Extra Thin Steamed 3/10#',40.00,400,'幼吹面',1,18.00,0,'cs','pkg'),(10396,'Noodle - (China) Extra Thin Steamed 30/1#',42.00,400,'小包細吹蛋面',1,1.79,0,'cs','pkg'),(9272,'Noodle - (China) Fresh  (Wide) 10#',6.00,400,'粗生炸面',10,0.60,0,'cs','cs'),(4983,'Noodle - (China) Fresh  10#',8.50,400,'鮮蛋面',10,8.50,0,'cs','cs'),(9332,'Noodle - (China) Thin Ready Cooked  30/16oz',1.99,400,'细吹面',30,1.99,0,'cs','pkg'),(12138,'Noodle - (DF) Bean Vermicelli 60/8.5oz',1.59,100,'青蜓牌绿豆粉丝',1,1.59,0,'pkg','pkg'),(11930,'Noodle - (GD) Green Bean Vermicelli (10pc) 30/17.5oz',71.00,100,'鹿球牌绿豆粉丝',1,2.69,0,'cs','pkg'),(12050,'Noodle - (Gourmet Master) Lanzhou Fresh Noodle 10/2Lb',39.99,100,'味匠兰州拉面',1,4.49,0,'cs','pkg'),(11546,'Noodle - (Hikari Menraku) Ramen (Miso)Cup 12/2.7oz',23.00,100,'日本杯面',1,23.00,0,'cs','cs'),(11545,'Noodle - (Hikari Menraku) Ramen (Shoyu)Cup 12/2.7oz',23.00,100,'日本杯面',1,23.00,0,'cs','cs'),(11809,'Noodle - (Indomie) Instant Noodles 30pkg/cs  ',14.95,100,'',1,14.95,0,'cs','cs'),(11690,'Noodle - (JFC) Shirataki (Yam Noodle/White) 12/14oz',16.50,300,'日本面',1,1.49,0,'cs','pkg'),(11577,'Noodle - (Jiang Xi) (Lai) Rice Stick 20/2lb',55.00,100,'蝴蝶江西濑粉',1,55.00,0,'cs','cs'),(9268,'Noodle - (Jiang Xi) (M) Rice Stick 60/14oz',50.00,100,'江西米粉',1,1.09,0,'cs','cs'),(10074,'Noodle - (Jiang Xi) (XL) Rice Stick60/14oz',50.00,100,'江西粗米粉',1,1.29,0,'cs','pkg'),(9057,'Noodle - (Kim Hon) Cooked Lo Mein 20#/cs ',20.50,400,'金鸿吹面',1,20.50,0,'cs','pkg'),(9213,'Noodle - (Kim Hon) Fresh  10#',6.75,400,'金鸿鮮蛋面',10,0.65,0,'cs','lb'),(6187,'Noodle - (Kim Hon) Ready Cooked 20#',33.00,400,'金鸿煎面',1,20.00,0,'cs','bag'),(11046,'Noodle - (KT) Egg Noodle Thin 50/16oz',2.19,400,'全蛋銀絲面',1,2.19,0,'pkg','pkg'),(11154,'Noodle - (KT) Egg Noodle Wide 16oz',2.19,400,'全蛋寬銀絲蛋面',1,2.19,0,'pkg','pkg'),(11155,'Noodle - (KT) Pancit Noodle 16oz',2.19,400,'港式油面',1,2.19,0,'pkg','pkg'),(11153,'Noodle - (KT) Steaned Chowmein 14oz',2.19,400,'熟蛋面',1,2.19,0,'pkg','pkg'),(11998,'Noodle - (Louies) Egg White  24/16oz',3.99,400,'雷氏旦白面',1,3.99,0,'pkg','pkg'),(11996,'Noodle - (Louies) Ramen Froz. 24/166oz',3.99,400,'雷氏拉面',1,3.99,0,'pkg','pkg'),(9739,'Noodle - (M) Rice Stick  8/3.3#',26.95,100,'大扎中粿条',1,26.95,0,'cs','pkg'),(10168,'Noodle - (Myojo) Ramen (Miso) 12/16.38oz',1.00,100,'日本面',1,1.00,0,'cs','cs'),(10169,'Noodle - (Myojo) Ramen (Shio) 12/16.08oz',1.00,100,'日本面',1,1.00,0,'cs','cs'),(10167,'Noodle - (Myojo) Ramen (Shoyu) 12/15.99oz',1.00,100,'日本面',1,1.00,0,'cs','cs'),(11507,'Noodle - (Myojo) Ramen Nama Froz. 30/6oz',25.00,400,'日本拉面',1,1.09,0,'cs','pkg'),(11622,'Noodle - (Myojo) Ramen Nama Froz. w/o Soup 48pc 18#',45.00,400,'日本拉面',1,1.09,0,'cs','pkg'),(10574,'Noodle - (N/S) Ramyun Shin Hot 16/4.2oz',19.99,100,'辛方便面',1,1.25,0,'cs','cs'),(6134,'Noodle - (Ng Fung) Rice Stick  60/10.5oz',49.50,100,'银丝米粉(五丰)',1,0.99,0,'cs','cs'),(5540,'Noodle - (NHK) Fresh   10# ',7.50,400,'新香港鲜蛋面',10,6.00,0,'cs','cs'),(9142,'Noodle - (NHK) Ready Cooked 18/12oz',35.00,400,'新香港煎面',1,35.00,0,'cs','cs'),(10072,'Noodle - (NHK) Shanghai  24/16oz',27.50,400,'',1,23.00,0,'cs','cs'),(9239,'Noodle - (NHK)Thin Fresh Whole Egg 24/16',40.00,400,'全蛋细面',1,40.00,0,'cs','cs'),(11468,'Noodle - (NS Shin) Ramyun 4pc 6/16.8oz',24.00,100,'辛方便面',1,4.95,0,'cs','pkg'),(6168,'Noodle - (Polee) Rice Stick 30/20oz',67.95,100,'米粉',1,67.95,0,'cs','cs'),(11127,'Noodle - (Wai Wai) Oriental Instant 6/30/2oz',54.00,100,'健力方便面',1,9.00,0,'cs','pkg'),(10514,'Noodle - (Wai Wai) Rice Stick (Fine) 24/17.6oz',52.00,100,'健力幼米粉',1,2.99,0,'cs','pkg'),(11629,'Noodle - (Yidu) Ramen 20/280g',42.00,100,'伊都拉面',1,2.69,0,'cs','pkg'),(10834,'Noodle - Banh Canh (Lie/Blue Label)  40/15oz',51.60,400,'新鮮瀨粉',1,1.29,0,'cs','pkg'),(10206,'Noodle - Bowl  (NS Shin)12/3.03oz',13.50,100,'農心碗面',1,13.50,0,'cs','cs'),(9296,'Noodle - Bowl 12/3oz',14.00,100,'即食碗面',12,14.00,0,'cs','cs'),(11003,'Noodle - Broad Bean Threads 50/10.5oz',115.00,100,'火鍋寬粉絲',1,3.49,0,'cs','pkg'),(10968,'Noodle - Bun Cha Gio (DF) 12/2#',42.00,100,'蜻蜓越式檬米粉',1,3.79,0,'cs','cs'),(6341,'Noodle - Cha Soba 20/7.05 (Green Tea Noodle)',45.00,100,'日本面条',1,45.00,0,'cs','cs'),(9872,'Noodle - Chow Mein (Nanka Seimen) 30/12oz',25.00,100,'日本面条',1,25.00,0,'cs','cs'),(9061,'Noodle - Chuka Soba 12/6oz',19.00,100,'日本干面条',1,19.00,0,'cs','cs'),(10975,'Noodle - Chukazan (Myojo) Hiyasi 24/4.93oz',32.00,100,'日本凉面',1,1.69,0,'cs','pkg'),(10201,'Noodle - Chukazan (Myojo) Miso 24/3.83',1.00,100,'日本面',1,1.00,0,'cs','cs'),(10203,'Noodle - Chukazan (Myojo) Shoyu 24/3.73',1.00,100,'日本面',1,1.00,0,'cs','cs'),(10202,'Noodle - Chukazan (Myojo) Vege 24/3.53',1.00,100,'日本面',1,1.00,0,'cs','cs'),(9083,'Noodle - Crispy Fried (Amay) 10#',18.00,100,'炸熟面',1,18.00,0,'cs','cs'),(12307,'Noodle - DanDan Dried 4#/pkg',6.50,100,'担担面',1,6.50,0,'pkg','pkg'),(11151,'Noodle - Dried (Dajia) 20/5pkgs/110g)',89.00,100,'大甲干面',1,5.00,0,'cs','bag'),(10878,'Noodle - Dried Canton Stlye (Fine) 24/454g',38.00,100,'廣東銀絲蛋面',1,1.49,0,'pkg','pkg'),(10433,'Noodle - Dried Canton Style(Wide) 24/16oz',38.00,100,'廣東蛋面',1,1.49,0,'cs','pkg'),(10434,'Noodle - Dried Oriental Style(Thin) 30/14oz',38.00,100,'虾子面',1,1.49,0,'cs','pkg'),(4715,'Noodle - Dry (China) 25#',32.00,100,'白干面',1,32.00,0,'cs','cs'),(9573,'Noodle - Dry (WC)   25# ',27.00,100,'干面',1,27.00,0,'cs','cs'),(6142,'Noodle - Dry Thin Egg (Dragon) 30/16oz',43.00,100,'幼雞蛋面干',1,1.50,0,'cs','pkg'),(5113,'Noodle - Dry Yellow  (China) 25#',32.00,100,'黄干面',1,32.00,0,'cs','cs'),(11407,'Noodle - Egg Flavor (Sankio) 12/35.3oz ',4.49,100,'精蛋面',1,4.49,0,'pkg','pkg'),(10591,'Noodle - Fresh Froz. Pad Thai  5/10#',45.00,400,'新鮮泰粉',1,15.00,0,'cs','pkg'),(11779,'Noodle - Fresh Froz.Pho Rice Stick (Sincere) 10/5#',5.69,400,'越南粉',1,5.69,0,'pkg','pkg'),(10259,'Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',27.00,400,'越南粉',1,12.00,0,'cs','pkg'),(9072,'Noodle - Fresh Froz.Pho Rice Stick 5/10# (Banana Box)',48.00,400,'越南粉',1,12.00,0,'cs','pkg'),(10590,'Noodle - Fresh Froz.Pho Rice Stick(Rama) 5/10#',45.00,400,'越南粉',1,12.00,0,'cs','pkg'),(11584,'Noodle - Fresh Froz.Pho Rice Stick(Sincere) 50/1#',3.00,400,'越南粉',1,3.00,0,'pkg','pkg'),(11224,'Noodle - Hsin Chu Rice Stick 30/14oz',1.95,100,'新竹米粉',1,1.95,0,'pkg','pkg'),(10609,'Noodle - Instant (Nissin) 30/100g',19.00,100,'出前一丁面',1,19.00,0,'cs','cs'),(11580,'Noodle - Instant Noodle (JML) 12/116g',0.00,100,'今麦郎方便面',1,0.00,0,'cs','cs'),(11576,'Noodle - Instant Noodle (JML) 6/5/110g',24.25,100,'今麦郎方便面',1,4.49,0,'cs','cs'),(9062,'Noodle - Miso Ramen',10.50,100,'味噌拉面',1,10.50,0,'cs','cs'),(11139,'Noodle - Oriental Starch (Dragon) 40/12oz',63.00,100,'红薯粉丝',1,2.99,0,'cs','pkg'),(9137,'Noodle - Oriental Starch Korean  10/2#',40.00,100,'韩国粉絲',20,4.50,0,'cs','pkg'),(11082,'Noodle - Oriental Starch Korean 15/1.5#',50.00,100,'韩国粉丝',1,3.95,0,'cs','pkg'),(9106,'Noodle - Pan Fried 2-10# bag/cs',25.00,300,'煎面',2,25.00,0,'cs','bag'),(10858,'Noodle - Pansit Kanton (DF/Philipeno) 30/16oz',60.00,100,'菲律賓炸面',1,2.50,0,'cs','pkg'),(12103,'Noodle - Pho Beef 3/24/2.1oz (Vifon) 7831',39.00,100,'越南牛肉粉',1,39.00,0,'cs','cs'),(12104,'Noodle - Pho Chicken 3/24/2.1oz (Vifon) 7832',39.00,100,'越南鸡肉粉',1,39.00,0,'cs','cs'),(12105,'Noodle - Pho Phnom Penh 3/24/2.1oz (Vifon) 7833',39.00,100,'即食金边粿条',1,39.00,0,'cs','cs'),(10490,'Noodle - Poolee Rice Stick (Dragonfly)30/20oz',67.95,100,'埔里米粉',1,2.50,0,'cs','pkg'),(10432,'Noodle - Ramen (Wu Mu) 12/11.3oz',30.00,100,'五木香菇拉面',1,2.69,0,'cs','pkg'),(10999,'Noodle - Ramen Mee Goreng (DF) 30/3.88oz',15.00,100,'肉燥干撈面',1,0.59,0,'cs','pkg'),(12091,'Noodle - Ramen Umami Tonkotsu Flavor  (Nissin) 100g/pkg',2.00,100,'日清猪肉拉面',1,2.00,0,'pkg','pkg'),(6028,'Noodle - Rice Stick  Vermicelli (Guilin)(Fine) 60/14oz',68.00,100,'米粉(桂林)',1,1.79,0,'cs','pkg'),(11562,'Noodle - Rice Stick (802) 30/2#',119.00,100,'農夫家乡牌米粉',1,4.99,0,'cs','pkg'),(5919,'Noodle - Rice Stick (Buddha)  50/14oz',59.00,100,'米粉(佛祖牌)',50,1.69,0,'cs','pkg'),(6202,'Noodle - Rice Stick (Chao Ching) 60/16oz',94.00,100,'米粉(肇庆)',60,1.99,0,'cs','pkg'),(9756,'Noodle - Rice Stick (Dong Guan) 40/16oz',40.00,100,'东莞米粉',1,1.39,0,'cs','pkg'),(10644,'Noodle - Rice Stick (G. Deer) 15/32oz',33.00,100,'雙鹿米粉',1,2.50,0,'cs','pkg'),(6200,'Noodle - Rice Stick (Global Deer)  30/16oz',33.00,100,'米粉(鹿牌)',1,1.50,0,'cs','cs'),(12059,'Noodle - Rice Stick (L/5mm) (Thai)  30/14oz',45.00,100,'泰米粉(大）',1,1.99,0,'cs','pkg'),(5522,'Noodle - Rice Stick (M/3mm) (Thai)  30/14oz',45.00,100,'泰米粉（中）',1,1.99,0,'cs','pkg'),(11770,'Noodle - Rice Stick (S) (Bun Tuoi/DF) 30/32oz',98.00,100,'越式新鲜家乡排米粉',1,3.99,0,'cs','pkg'),(10417,'Noodle - Rice Stick (S) (Butterfly) 30/14oz',37.00,100,'泰米粉',1,37.00,0,'cs','pkg'),(9415,'Noodle - Rice Stick (S/1mm) (Thai)  30/14oz',45.00,100,'泰米粉（小）',30,1.99,0,'cs','pkg'),(9710,'Noodle - Rice Stick (S/1mm) 30/14oz',45.00,100,'泰米粉',1,1.99,0,'cs','pkg'),(9033,'Noodle - Rice Stick (XL/10mm) (DF)  30/14oz',45.00,100,'蜻蜓牌干河粉',30,1.99,0,'cs','pkg'),(9709,'Noodle - Rice Stick (XL/10mm) (Elephant) 30/14oz',45.00,100,'干河粉（超大）',1,1.99,0,'cs','pkg'),(12281,'Noodle - Rice Stick(Fine)(Jiangxi) 60/14oz',55.00,100,'米粉(江西)',1,1.29,0,'cs','pkg'),(10092,'Noodle - Rice Stick(Thick)(Guilin) 24/2.2#',72.00,100,'米粉(桂林)',1,3.99,0,'cs','pkg'),(12198,'Noodle - Rice Stick(Thick)(Jiangxi) 24/900g',55.00,100,'米粉(江西)',1,55.00,0,'cs','cs'),(12329,'Noodle - Rice Stick(Thin)(Guilin) 24/2.2#',72.00,100,'米粉(桂林)',1,3.99,0,'cs','pkg'),(11459,'Noodle - Rice Vermicelli BunTuoiMeKong 20/2# ',65.00,100,'湄公米粉',1,3.95,0,'cs','pkg'),(9035,'Noodle - Saimein Frozen',38.00,400,'夏威尔面',1,38.00,0,'cs','cs'),(11004,'Noodle - Shahe Dried Rice Noodle 40/7oz',33.00,100,'干沙河粉',1,1.00,0,'cs','pkg'),(10793,'Noodle - Shan Dong (WC) 8/5#',32.00,100,'山東拉面',1,4.95,0,'cs','pkg'),(11239,'Noodle - Shan Dong Wide(Asian Taste) 10/5#',45.00,100,'山東宽拉面/东之味',1,4.95,0,'cs','box'),(11191,'Noodle - Shan Dong(Wide)(Imperial Taste) 4#',3.99,100,'山東粗拉面/御品香',1,3.99,0,'box','box'),(10669,'Noodle - Shanghai Thick (China)  10#',8.75,400,'上海粗面',1,8.75,0,'cs','cs'),(10487,'Noodle - Shanghainese 20/2#',60.00,400,'上海陽春面',1,3.25,0,'cs','pkg'),(11786,'Noodle - Shrimp Creamy Tom Yum (Mama) 6bx/20bags/cs',69.00,100,'妈妈冬阴奶油虾面',1,0.69,0,'cs','pkg'),(9056,'Noodle - Soba (Nanka Hoshisoba) 10#',25.00,100,'日本面',1,25.00,0,'cs','cs'),(9732,'Noodle - Soba (Nanka Seimen/Hoshi) 30/12',35.00,100,'日本面',1,35.00,0,'cs','pkg'),(11758,'Noodle - Soba (Wel Pack) 12/9.5oz',16.50,100,'日本乔麥面',1,1.69,0,'cs','pkg'),(10765,'Noodle - Somen 24/16oz',35.00,100,'友白發日本面',1,2.39,0,'cs','pkg'),(9279,'Noodle - Somen 6/3#',29.00,100,'友白发日本面',6,5.99,0,'cs','pkg'),(12125,'Noodle - Spinach (Louies)  24/1#',3.99,400,'雷氏波菜面',1,3.99,0,'pkg','pkg'),(5291,'Noodle - Thin全 Chow Mein 20#',25.00,100,'細煎面',20,25.00,0,'cs','cs'),(11506,'Noodle - Toka Soba (Ramen) Froz. 30/6oz',21.00,400,'鲜冻日本蛋面',1,21.00,0,'cs','cs'),(6132,'Noodle - Udon Dry (Futonaga) Bulk 25#',42.00,100,'乌冬面',1,42.00,0,'cs','cs'),(6050,'Noodle - Udon Jumbo No Soup Base(Myojo) 12/19.89oz',30.00,100,'乌冬面',1,3.29,0,'cs','pkg'),(6051,'Noodle - Udon Jumbo With Soup Base 12/21.8oz',34.00,100,'乌冬面',1,3.99,0,'cs','pkg'),(11281,'Noodle - Udon Sanuki Froz. 5pc 2/6/2.42oz',43.00,400,'讚岐乌冬面',1,4.99,0,'cs','pkg'),(11183,'Noodle - Vietnamese Rice Vermicelli (M) (3Ladies/7771) 36/1#',70.00,100,'三女鲜米粉',1,2.99,0,'cs','pkg'),(11192,'Noodle - Vietnamese Rice Vermicelli (M) (3Ladies/7772) 18/2#',70.00,100,'三女鲜米粉',1,4.99,0,'cs','pkg'),(9386,'Noodle - Wide Dry 40# (WC)',19.00,100,'',1,19.00,0,'cs','cs'),(11909,'Noodle - Wonton (China)  30/1#',2.29,400,'小包云吞面',1,2.29,0,'pkg','pkg'),(11990,'Noodle - Wonton (Louies)  24/1#',3.99,400,'雷氏云吞面(小包)',1,3.99,0,'pkg','pkg'),(11991,'Noodle - Wonton (Louies) 10#',35.00,400,'雷氏云吞面',1,35.00,0,'cs','cs'),(10816,'Noodle - Wonton (Thick) (China) 10#',18.00,400,'寬云吞面',1,18.00,0,'cs','cs'),(6331,'Noodle - Wonton 10#',20.50,400,'云吞面',1,20.50,0,'cs','cs'),(11997,'Noodle - Wonton Wide (Louies)  24/1#',3.99,400,'雷氏寬云吞面(小包)',1,3.99,0,'pkg','pkg'),(10170,'Noodle - Yakisoba (Maru Nama) 10/16.93oz',28.00,300,'日本煎面',1,2.99,0,'cs','pkg'),(10890,'Noodle - Yakisoba Fresh Froz.(Fortune) 4/5#',30.00,400,'日本熟面',1,8.50,0,'cs','pkg'),(11963,'Noodle - Yakisoba Nama (Myojo)12/16.5oz',2.49,400,'日本煎面',1,2.49,0,'pkg','pkg'),(9139,'Noodle - Yee Mein  5pc',15.00,100,'伊面(長寿面)',16,15.00,0,'pkg','pkg'),(10851,'Noodle - Yee Mein Abalone Favor 24/80g',0.99,100,'鮑魚伊面',1,0.99,0,'pkg','pkg'),(10331,'Octagon 12/40oz',25.95,100,'洗洁水',1,2.45,0,'cs','btl'),(5246,'Octagon 4/1gal',25.95,100,'洗洁水',1,6.95,1,'cs','gal'),(9903,'Octopus (Madako)',11.50,500,'寿司八爪鱼',1,11.50,0,'lb','lb'),(9902,'Octopus (Yanagi)',5.50,500,'寿司八爪鱼',1,5.50,0,'lb','lb'),(12336,'Octopus 2/4 Big 30#',89.70,500,'大八爪鱼',1,2.99,0,'cs','lb'),(9970,'Octopus 8 Up Big',3.00,500,'大八爪鱼',1,3.00,0,'lb','lb'),(10690,'Octopus Baby Salad  4.4#',38.50,400,'小八爪魚沙拉',1,8.75,0,'box','lb'),(9276,'Octopus Baby Whole (26/40) 12/2#',9.99,400,'小八爪鱼',30,9.99,0,'cs','pkg'),(11977,'Oil - Ash (Peppercorn) 12/238ml',53.88,100,'麻香嘴花椒油',1,4.99,0,'cs','btl'),(11144,'Oil - Ash (Peppercorn) 24/210ml',86.16,100,'花椒油',1,3.59,0,'cs','btl'),(5924,'Oil - Canola ',33.00,100,'芥花油',1,29.50,0,'cs','cs'),(9677,'Oil - Chili  12/16oz',1.00,100,'辣油',1,1.00,0,'cs','btl'),(10505,'Oil - Chili (LKM) 24/275g',3.99,100,'老干媽辣油',1,2.99,0,'jar','jar'),(8758,'Oil - Chili 4/1gal',64.00,100,'辣油',4,18.00,0,'cs','gal'),(5947,'Oil - Corn ',48.00,100,'玉米油',1,48.00,0,'cs','cs'),(6091,'Oil - Liquid Fry ',43.00,100,'炸油',1,43.00,0,'cs','cs'),(10629,'Oil - Margarin   30#',35.00,300,'假牛油',1,35.00,0,'cs','cs'),(12288,'Oil - Onion & Ginger Ramen (Wakou)  12/31.75oz ',167.88,100,'',1,13.99,0,'cs','pkg'),(12339,'Oil - Red (Peppercorn/Li Hong) 6/1.8liter',90.00,100,'黎红花椒油',1,90.00,0,'cs','cs'),(12287,'Oil - Rsted Blk Garlic For Ramen (Wakou)  10/31.7oz ',300.00,100,'',1,31.00,0,'cs','pkg'),(9560,'Oil - Salad  5gal',41.00,100,'油',1,40.00,0,'cs','cs'),(5032,'Oil - Sesame  4/1 gal',50.00,100,'芝麻油',4,15.00,0,'cs','gal'),(10676,'Oil - Sesame (LKK) 4/1gal',38.00,100,'錦珍麻油',1,10.00,0,'cs','gal'),(10673,'Oil - Sesame (LKK) 7oz',4.25,100,'麻油',1,4.25,0,'btl','btl'),(5034,'Oil - Sesame /Pure (Kadoya)  10/56oz',164.00,100,'純麻油',1,18.99,0,'cs','can'),(11558,'Oil - Sesame Black /Pure (Lian How) 12/16oz',8.95,100,'純黑麻油',1,8.95,0,'btl','btl'),(10315,'Oil - Sesame/Pure  4/1gal',79.00,100,'純麻油',1,22.50,0,'cs','gal'),(11087,'Oil - Sesame/Pure (Kadoya) 12/11oz',4.50,100,'小瓶纯麻油',1,4.50,0,'ea','ea'),(12126,'Oil - Sesame/Pure (KKM/No GMO) 4/1.25Q',15.00,100,'純麻油',1,15.00,0,'btl','btl'),(10347,'Oil - Sesame/Pure (WC) 10/56oz',95.00,100,'味全純麻油',1,10.95,0,'cs','can'),(5233,'Oil - Soy ',41.00,100,'油',1,40.00,0,'cs','cs'),(12155,'Oil - Vine (Peppercorn/Li Hong) 6/1.8liter',90.00,100,'黎红滕椒油',1,90.00,0,'cs','cs'),(12012,'Onions - Crispy Fried (Gourmet Fam) 10/500g',35.00,100,'洋蔥酥',1,3.99,0,'cs','pkg'),(11477,'Onions - Fried (Flying Horse) 30/400g',90.00,100,'飞马洋葱酥',1,4.50,0,'cs','pkg'),(10515,'Onions - Fried (JHC) (XL) 12/17.5oz',99.00,100,'洋蔥酥',1,9.99,0,'cs','jar'),(6004,'Onions - Fried (JHC) 12/8oz',45.00,100,'洋蔥酥',1,3.99,0,'cs','jar'),(5794,'Orange - Mandarin 6/5#',20.00,100,'桔罐头',6,17.00,0,'cs','can'),(11090,'Orange Chicken Sauce (LKK) 4/1gal',50.00,100,'橙汁酱',1,13.00,0,'gal','cs'),(12356,'Otafuku Sushi Eel (Unagi) Sauce(OtaJoy) 6/82.5oz',97.50,100,'寿司鳗鱼酱',1,18.00,0,'cs','btl'),(9925,'Oven & Grill A-1(Foaming Gel) 4/1gal',65.00,100,'',1,18.00,1,'cs.','gal'),(5272,'Oven & Grill Cleaner 4/1gal',24.50,100,'炉头水',4,6.95,1,'cs','gal'),(9953,'Oyster - Breaded 4/4# (31-40)',56.00,400,'炸生蠔',1,3.50,0,'cs','lb'),(10420,'Oyster - Dried',28.00,100,'蠔士',1,28.00,0,'lb','lb'),(10340,'Oyster - In Shell  Fresh 60pc',45.00,400,'生蠔',1,0.99,0,'cs','ea'),(10726,'Oyster Sauce - (Mae Krua) (Thai) 12/20oz',30.95,100,'主婦蠔油',1,2.99,0,'cs','cs'),(10370,'Oyster Sauce - (Panda) 12/32oz',41.00,100,'支裝蠔油',1,3.99,0,'cs','btl'),(11072,'Oyster Sauce - (Panda/GRN LBL)6/5#',40.00,100,'绿标熊猫蚝油',1,8.95,0,'cs','can'),(11223,'Oyster Sauce - (Tung Chun) 24/18oz',1.50,100,'同珍蠔油',1,1.50,0,'btl','btl'),(9143,'Oyster Sauce - No MSG (Choy Sun) 6/5#',38.00,100,'蠔油',1,6.95,0,'cs','can'),(10354,'Oyster Sauce - No MSG (Lucky) 6/5#',25.50,100,'蠔油',1,25.50,0,'cs','cs'),(9682,'Oyster Sauce - Vegetarian  24/20oz (DF)',42.00,100,'蜻蜓素蠔油',1,2.49,0,'cs','btl'),(6320,'Oyster Sauce - Vegetarian 12/34oz (LKK)',37.00,100,'素蠔油',1,3.29,0,'cs','item'),(11146,'Oyster Sauce - Vegetarian Stir Fry (LKK) 6/5#1oz',49.00,100,'素食蚝油',1,10.00,0,'cs','btl'),(6083,'Oyster Sauce (LKK) 6/5#',27.00,100,'錦珍蠔油',1,5.29,0,'cs','can'),(11161,'Oyster Sauce (LKK/Premuim) 24/18oz',4.89,100,'旧庄蜓妹蠔油',1,4.89,0,'btl','btl'),(11839,'Oyster Sauce (Panda) 20kg',75.00,100,'大桶熊猫蚝油',1,75.00,0,'cs','cs'),(9716,'Oyster Sauce (Panda) 24/18oz',28.50,100,'支装蠔油',1,2.79,0,'cs','btl'),(9004,'Oyster Sauce (Panda) 6/5#',35.00,100,'熊猫蠔油',1,6.75,0,'cs','can'),(11002,'Oyster Sauce (PRB) 6/5',18.75,100,'珠江桥蠔油',1,18.75,0,'cs','cs'),(9091,'Oyster Sauce (Sheng Kee) 6/5#',15.95,100,'盛記蠔油',6,15.95,0,'cs','can'),(9979,'Oyster Sauce 6/5# (YHY)',25.00,100,'粤香园蠔油',1,3.50,0,'cs','can'),(12121,'Oyster Sauce Gluten Free (Panda/Plastic) 6/5#',38.00,100,'无麦绿标熊猫蚝油',1,7.50,0,'cs','btl'),(10750,'Pad Thai Mix (Can) (DF)  24/8oz',60.00,100,'泰式炒粉調味粉',1,2.95,0,'cs','can'),(10635,'Pad Thai Sauce (Butterfly)   12/33oz',58.00,100,'泰式炒粉醬',1,5.95,0,'cs','btl'),(9692,'Pad Thai Sauce (Butterfly)  24/16oz',70.00,100,'泰式炒粉醬',1,3.59,0,'btl','btl'),(10624,'Pad Thai Sauce (JHC)  24/8oz',36.50,100,'泰式炒粉醬',1,1.75,0,'cs','btl'),(10127,'Pad Thai Seasoning Powder (OJ) 12/1.17oz',1.29,100,'泰式炒粉調味料',1,1.29,0,'pkg','pkg'),(10153,'Pallet',1.00,100,'',1,1.00,0,'ea','ea'),(11193,'Pancake Egg Waffle Froz. (I Mei) 18/250g',1.99,400,'義美蛋饼皮',1,1.99,0,'pkg','pkg'),(11133,'Pandan Leaves Extract (DF) 24/15oz',30.00,100,'香兰叶水',1,1.49,0,'cs','can'),(10956,'Pandan Leaves Froz. (JHL) 50/7oz',60.00,400,'香兰葉',1,1.99,0,'cs','pkg'),(11363,'Pandan Leaves Fz (Baythoy) (DF) 50/7oz',50.00,400,'鮮冻香兰葉',1,1.99,0,'cs','pkg'),(11817,'Pandan Paste 6/2oz',2.79,100,'香兰葉香精',1,2.79,0,'jar','jar'),(11588,'Panko (JFC) 12/12oz',1.95,100,'小包面包糠',1,1.95,0,'pkg','pkg'),(11262,'Panko (KKM) 12/8oz',35.00,100,'小包面包糠',1,2.49,0,'cs','box'),(9003,'Panko 20#',36.00,200,'面包糠',1,36.00,0,'sk','sk'),(9853,'Paper - 2 x 2 Bun  25#',45.50,100,'包底纸',1,45.50,0,'cs','cs'),(9852,'Paper - 4 Dim Sum 20/500pcs',60.00,100,'笼底纸',1,60.00,0,'cs','box'),(9851,'Paper - Bake Panliner (16 3/8x24 3/8)1m/pcs',40.00,100,'盘底纸',1,40.00,1,'cs','cs'),(10383,'Paper - Register Roll 1ply (13-305) 50 (3 x 165 )',35.00,100,'收銀紙卷',1,35.00,0,'cs','cs'),(10484,'Paper - Register Roll 2Ply 3 x90 (CC235/D-CP235)',48.00,100,'收銀紙卷',1,48.00,0,'cs','cs'),(10494,'Paper - Register Thermal  2.25 x85  1Ply 50 Roll (15185)',30.00,100,'信用卡卷紙',1,30.00,0,'cs','cs'),(11902,'Paper - Register Thermal  2.25 x85  1Ply 50 Roll (21472)',30.00,100,'小卷信用卡纸',1,30.00,0,'cs','cs'),(10335,'Paper - Register Thermal 3.125 x230  1Ply 50 Roll (31823/140-730/54-230)',63.00,100,'信用卡卷紙',1,63.00,0,'cs','cs'),(12181,'Paper - Sandwhich Waxed 12x12  White 5k',68.00,100,'三文治蜡包装纸',1,68.00,0,'cs','cs'),(9840,'Paper - Sandwich Wrap 12x12 (Ylw) 5/1000',45.50,100,'三明治包装纸',1,49.50,0,'cs','cs'),(9476,'Paper - Tempura  Shikigami 24/5/100shts',3.99,100,'天富罗纸',1,3.99,0,'pkg ','pkg'),(11514,'Paper Towel - 30 Rolls ',12.00,100,'擦手紙',1,0.59,1,'cs','pkg'),(11136,'Paper Towel - 30 Rolls Half Sheet',25.10,100,'',1,25.10,1,'cs','roll'),(5656,'Paper Towel - Hardwound Roll (Natural) 12 Rolls',28.50,100,'擦手紙',1,28.50,1,'cs','cs'),(11324,'Partridge - Whole 18pcs',13.50,400,'鹧鸪/松鸡',1,13.50,0,'ea','ea'),(10971,'Pastry - Green Bean 6pc/10box/cs',15.00,100,'绿豆凸',1,15.00,0,'box','box'),(10973,'Pastry - Taro 8pc/10box/cs',17.00,100,'芋头酥',1,17.00,0,'box','box'),(10972,'Pastry - Yolk 12pc/10box/cs',25.00,100,'蛋黄酥',1,25.00,0,'box','box'),(5264,'Peach - Slice 6/#10',23.00,100,'桃罐头',6,20.00,0,'cs','can'),(11431,'Peants - Roasted Garlic (ChaCha) 30/300g',2.99,100,'蒜香烤花生',1,2.99,0,'pkg','pkg'),(11430,'Peants - Roasted Salt (ChaCha) 30/300g',2.99,100,'咸香烤花生',1,2.99,0,'pkg','pkg'),(12316,'Peanut 12/3#/bag',5.50,100,'花生',1,1.95,0,'bag','bag'),(12037,'Peanut 30#',52.00,100,'花生',1,1.75,0,'cs','cs'),(9314,'Peanut 5#/bag',9.50,100,'花生',1,1.90,0,'bag','bag'),(5799,'Peanut 50#',80.00,100,'花生',1,1.60,0,'cs','bag'),(9600,'Peanut Butter - Chunky 6/40oz',29.00,100,'颗粒花生酱',1,29.00,0,'cs','cs'),(6150,'Peanut Butter - Creamy 6/40oz',29.00,100,'柔滑花生醬',6,4.95,0,'cs','btl'),(10923,'Peanut Roasted Original Flavor 36/6oz',3.89,100,'大众原味烤花生',1,3.89,0,'jar','jar'),(12361,'Peanut Satay Sauce (LEE) 24/7oz',53.00,100,'沙嗲醬',1,53.00,0,'cs','jar'),(10991,'Peanut Spice Hot (HFH) 16/210g',2.50,100,'黃飞红辣花生',1,2.50,0,'pkg','pkg'),(10534,'Peanut w. Red Skin 110.23#',2.00,100,'有衣花生',1,2.00,0,'lb','lb'),(6151,'Pear - Halves 6/5#',20.00,100,'梨罐头',1,20.00,0,'cs','can'),(9519,'Pear - Sliced  6/5#',16.00,100,'梨罐头',1,16.00,0,'cs','cs'),(6020,'Peas - Green Frozen 12/32oz',22.95,300,'青豆',1,14.50,0,'cs','cs'),(5739,'Peas & Carrots 12/32oz',24.00,400,'青紅豆',1,2.79,0,'cs','pkg'),(12246,'Peas & Carrots 20#',13.00,400,'青紅豆',1,13.00,0,'cs','cs'),(6156,'Pepper - Indiv.  Pkg 3/1000',16.95,100,'胡椒粉包',1,19.00,0,'cs','cs'),(9564,'Pepper - Powder Black 10/5#/bag',42.00,100,'黑胡椒粉',1,42.00,0,'pkg ','pkg'),(5802,'Pepper - Powder Black 4/5#/jar',45.00,100,'黑胡椒粉(罐装)',1,45.00,0,'jar','jar'),(11252,'Pepper - Powder White 10#',80.00,100,'大包白胡椒粉',1,80.00,0,'bag','bag'),(5801,'Pepper - Powder White 4/5#',45.00,100,'白胡椒粉(罐装)',1,45.00,0,'jar','jar'),(10384,'Pepper - Sansyo (Japanese) 10/0.42oz/btl',49.00,100,'日本胡椒粉',1,4.50,0,'box','btl'),(12044,'Pepper - Whole Black 10/5#/bag',230.00,100,'黑胡椒粒',1,25.00,0,'cs','pkg'),(12045,'Pepper - Whole White  10/5#/bag',265.00,100,'白胡椒粒',1,28.00,0,'cs','pkg'),(11096,'Pepper Powder Black 24/5oz',83.00,100,'黑胡椒粉',1,3.79,0,'cs','jar'),(11095,'Pepper Powder White 24/5oz',90.00,100,'白胡椒粉',1,3.99,0,'cs','jar'),(12270,'Pepper Sa-Te Sauce Tia Chieu (BF) 24/16oz',110.00,100,'潮州沙茶酱',1,6.09,0,'cs','btl'),(12130,'Pepper Sa-Te Sauce Tia Chieu (BF) 24/8oz',57.00,100,'潮州沙茶酱',1,2.99,0,'cs','btl'),(10718,'Peppercorn Young (JHC)  24/16oz',65.00,100,'嫩青胡椒粒',1,3.99,0,'cs','jar'),(12347,'Periwinkle Whole (30/50) 40/14oz',6.99,400,'鲜冻花螺',1,6.99,0,'bag','bag'),(9797,'Persimmon - Dried  12oz/pkg',2.99,100,'干柿饼',1,2.99,0,'pkg','pkg'),(10980,'Phoenix Fish 48can/6.5oz',135.00,100,'凤美鱼',1,2.99,0,'cs','csn'),(9832,'Pickle - (Neri-Ume) Plum Paste 10/3/12.7oz',15.00,300,'寿司李酱',1,15.00,0,'tube','tube'),(5038,'Pickle - Burdock Root (Yamagobo) 20/1.1#',10.00,300,'宫宝根',2,10.00,0,'pkg','pkg'),(12358,'Pickle - Burdock Root (Yamagobo) 3/25/2.3oz',2.99,300,'宫宝根',1,2.99,0,'pkg','pkg'),(11019,'Pickle - Cabbage Oranic 20/1#',2.49,100,'東北酸白菜',1,2.49,0,'pkg','pkg'),(10588,'Pickle - Cucumber Deli Dill Spears  5gal',20.00,100,'腌黃瓜',1,20.00,0,'bkg','bkg'),(9815,'Pickle - Cucumber Preserved In Syrup  24/18oz',65.00,100,'甜什锦菜丝',1,2.89,0,'cs','btl'),(6276,'Pickle - Cucumber Sweet Thread 6/5#',59.50,100,'甜黄瓜絲',6,40.00,0,'cs','can'),(11768,'Pickle - Garlic (BF)  24/16oz',67.00,100,'腌蒜',1,2.99,0,'cs','jar'),(11959,'Pickle - Garlic (Butterfly) 12.33.5oz',55.00,100,'腌蒜頭',1,55.00,0,'cs','cs'),(9638,'Pickle - Ginger  White 24/16.5oz (Mee Chun)',70.00,100,'和味子姜',1,3.00,0,'cs','btl'),(10572,'Pickle - Ginger Strip (Dragonfly) 24/16oz',42.00,100,'泰腌姜絲',1,1.99,0,'cs','cs'),(10699,'Pickle - Kachai Strip (Rhizome/Galinggai)  24/16oz',57.00,100,'腌甲猜絲',1,3.29,0,'cs','jar'),(11024,'Pickle - Leek In Brine 6/42oz',60.00,100,'酸藠头',1,13.00,0,'cs','jar'),(11799,'Pickle - Lotus Rootlet (BF)  24/16oz',50.16,100,'酸甜莲藕',1,2.29,0,'cs','jar'),(9831,'Pickle - Mustard Green (Takana) 10oz/pkg',4.50,300,'寿司芥菜',1,4.50,0,'pkg','ea'),(11076,'Pickle - Pickled Plum In Brine (KC) 24/12oz',83.00,100,'酸梅子',1,3.99,0,'cs','jar'),(5037,'Pickle - Radish (Takuan) 14/35oz',70.00,300,'寿司黄萝卜',2,5.50,0,'cs','pkg'),(11687,'Pickle - Radish (Takuan) 30/12.3oz',3.29,300,'寿司黄萝卜',1,3.29,0,'pkg','pkg'),(11121,'Pickle - Salted Cucumber-Btl (WC) 12/14oz',2.89,100,'珍味花瓜',1,2.89,0,'jar','jar'),(11720,'Pickle - Salted Cucumber-Can (WC) 48/6oz',46.00,100,'花瓜',1,1.09,0,'cs','can'),(9704,'Pigeon - Young',6.95,400,'乳鸽',1,6.95,0,'ea','ea'),(9234,'Pine Nuts 24oz/bag',14.50,100,'松子仁',1,14.50,0,'pkg','pkg'),(5793,'Pineapple - Chunk 6/5#',44.00,100,'凤梨丁',6,8.99,0,'cs','can'),(6161,'Pineapple - Juice 12/46oz',39.50,100,'凤梨汁',1,39.50,0,'cs','cs'),(5390,'Pineapple - Tidbit 6/5#',25.00,100,'凤梨碎',6,4.95,0,'cs','can'),(11773,'Pineapple Cake  (HFC) 20/190g',5.39,100,'厚切风梨酥',1,5.39,0,'pkg','pkh'),(10773,'Pizza Dough   12   20pc',39.00,400,'披薩皮',1,39.00,0,'cs','cs'),(5443,'Placemat - White (A) 1000pcs',13.95,100,'白塹紙',1,13.95,0,'cs','cs'),(9107,'Placemat - White (Scalloped) 10x14  1kpcs',29.00,100,'白台纸',1,29.00,0,'cs','cs'),(9693,'Placemat - Zodiac (Special) 1000pcs',20.50,100,'十二生肖台纸',1,19.50,0,'cs','cs'),(6337,'Placemat - Zodiac 1000pcs',20.50,100,'十二生肖台紙',1,20.50,0,'cs','cs'),(6209,'Plate - 6  8/125 (GNP 80600) ',23.00,100,'6 寸盘',1,19.50,0,'cs','cs'),(6352,'Plate - 9  3 Com. (83900) 4/125',26.50,100,'9 寸三格盘',1,19.00,0,'cs','cs'),(9116,'Plate - 9  Single Com. (80900) 4/125',26.50,100,'9 寸一格盘',1,26.50,0,'cs','cs'),(12344,'Plate - 9  Single Com. (9PWCR) 4/125',28.00,100,'9 寸一格盘',1,28.00,0,'cs','cs'),(11811,'Plate - 9  Square Coupe (710-91N) 4x6',88.00,100,'方形9寸陶瓷碟',1,88.00,1,'dz','dz'),(9252,'Plate - Black 1 Com. (LAMO9)',44.50,100,'黑一格盘',1,44.50,0,'cs','cs'),(11567,'Plate - Blue Bamboo BBQ 8.25 x3.875 (1505BB)',34.95,100,'大寿司碟',1,2.89,1,'dz','ra'),(9030,'Plates - 10 1/4  1-Compartment TH1-0010',30.95,100,'大一格盆',1,30.95,0,'cs','cs'),(9029,'Plates - 10 1/4  3-Compartment TH1-0044',30.95,100,'大三格盆',1,30.95,0,'cs','cs'),(9997,'Plates - 10 x10  Melemine (Sqare)',1.00,100,'方式盘',1,1.00,1,'ea','ea'),(9996,'Plates - 12  Melemine ',1.00,100,'12inches浅式盘',1,1.00,1,'ea','ea'),(9995,'Plates - 12  Melemine (Fish)',1.00,100,'12inches鱼盘',1,1.00,1,'ea','ea'),(9999,'Plates - 14  Melemine (Fish)',1.00,100,'14inches鱼盘',1,1.00,1,'ea','ea'),(9653,'Plates - 3 Compartment 9  (83900)',23.50,100,'三格盘',1,21.95,0,'cs','cs'),(9706,'Plates - 6  Single Com.  350ct',8.50,100,'小平盘',1,8.50,0,'pach','pach'),(9998,'Plates - 8.25 x8.25  Melemine (Sqare)',1.00,100,'方式盘',1,1.00,1,'ea','ea'),(10557,'Plates - PL-93 Biodegrades 3 Com. 500',40.00,100,'紙三格盘',1,40.00,0,'cs','cs'),(9948,'Plates - Sushi  6 x6 ',39.00,100,'寿司碟',1,3.25,1,'dz','ea'),(10147,'Plates - Sushi 10  x 4   (510-E/EP133/88032)',61.56,100,'寿司长卷碟',1,5.69,1,'dz','ea'),(11511,'Plates - Sushi 11 1/4  x 5  (24110BK)',69.85,100,'长寿司碟 黑',1,5.95,1,'dz','ea'),(11510,'Plates - Sushi 11 1/4  x 5  (2411TM)',119.88,100,'',1,9.99,1,'dz','ea'),(10626,'Plates - Sushi 11  (Gold Orchid/63076)',78.95,100,'寿司碟',1,7.95,1,'dz','ea'),(10578,'Plates - Sushi 11 x7.25  (511-E)',64.50,100,'寿司碟',1,5.79,1,'dz','ea'),(10627,'Plates - Sushi 13 1/8  x 10 1/4 (63075)',32.50,100,'寿司碟',1,3.50,1,'dz','ea'),(11375,'Plates - Sushi 13 1/8 x10 1/4  (0901BB) 6/box',41.70,100,'蓝竹大寿司碟',1,6.95,1,'box','ea'),(10400,'Plates - Sushi 13.5  x 9  (XJS-0513)',90.00,100,'寿司多卷碟',1,7.95,1,'dz','ea'),(10440,'Plates - Sushi 4 2/3 x6 3/4  (63072/1503BB)',33.95,100,'寿司碟',1,2.89,1,'dz','ea'),(11512,'Plates - Sushi 5 1/2  x 4 3/4  Blue Bamboo(1202BB)',19.95,100,'蓝竹方形小碟',1,1.89,1,'dz','ea'),(11509,'Plates - Sushi 6 1/4  x 4 3/4  8oz Gold Orchid (2406GD)',39.95,100,'寿司碟',1,3.49,1,'dz','ea'),(10620,'Plates - Sushi 6 7/8x5 1/2 Blue(63079)',33.00,100,'寿司方型碟',1,2.99,1,'dz','ea'),(10048,'Plates - Sushi 6 x6 ',1.00,100,'寿司碟',1,1.00,1,'dz','ea'),(10146,'Plates - Sushi 6.5  x 4.5  (507-E/#131)',35.50,100,'寿司碟',1,3.15,1,'dz','ea'),(9963,'Plates - Sushi 7 x8  (508-E)',45.95,100,'寿司碟',1,3.95,1,'dz','ea'),(9947,'Plates - Sushi 8 ',54.00,100,'寿司碟',1,4.85,1,'dz','ea'),(9961,'Plates - Sushi 8.25 x5.5  (509B-E/EP134)',45.95,100,'寿司碟',1,3.95,1,'dz','ea'),(10625,'Plates - Sushi 9 2/3  x 4 1/4 (Blue/1502bb/63073)',32.95,100,'寿司碟',1,3.25,1,'dz','ea'),(9960,'Plates - Sushi 9.5 x6 ',43.95,100,'寿司碟',1,3.75,1,'dz','ea'),(10622,'Plates - Wave Shave Blue8 2/3x5 4/5(63071)',30.00,100,'波浪型碟',1,2.75,1,'dz','ea'),(10059,'Platter - Bo Bo 6 Com. 16  (wood)',23.50,100,'宝宝盘',1,23.50,1,'ea','ea'),(10596,'Platter - Cast Iron w. Underliner & Cripper(93218)',12.00,100,'铁板烧',1,12.00,1,'ea','ea'),(10766,'Plum Sauce - Sweet & Sour (Butterfly)12/33oz',42.00,100,'甜酸蘇梅醬',1,4.49,0,'cs','btl'),(10102,'Plum Sauce (KC) 24/16oz',1.00,100,'瓶裝蘇梅醬',1,1.00,0,'cs','btl'),(6057,'Plum Sauce (KC) 6/5#',75.00,100,'冠珍苏梅酱',6,15.00,0,'cs','can'),(9036,'Plum Sauce (LKK) 6/5#',56.00,100,'李锦記苏梅醬',1,12.00,0,'cs','can'),(6166,'Plum Sauce Pkg 500',13.00,100,'苏梅醬包',1,13.00,0,'cs','cs'),(10249,'Pocky Almond Crush (Glico/Mild) 8/5/2.89oz',99.50,100,'杏仁博奇',1,12.95,0,'cs','box'),(10078,'Pocky Chocolate 120/1.4oz',1.00,100,'博奇朱古力饼条',1,1.00,0,'cs','cs'),(10248,'Pocky Milk (Glico) 16/10/1.41oz',139.20,100,'奶味博奇',1,9.95,0,'cs','box'),(10079,'Pocky Strawberry  120/1.4oz',1.00,100,'博奇草莓饼条',1,1.00,0,'cs','cs'),(10250,'Pocky Strawberry(Glico)16/10/1.41oz',111.50,100,'草莓博奇',1,7.95,0,'cs','box'),(12140,'Poke Sauce (KKM) 6/5.25#',63.00,100,'',1,12.00,0,'cs','btl'),(12229,'Poke Sauce (KKM/Gluten Free) 6/12.8oz',3.79,100,'',1,3.79,0,'btl','btl'),(11589,'Ponzu Citrus - (Marukan) 6/12oz',3.79,100,'',1,3.79,0,'btl','btl'),(10010,'Ponzu Citrus Dressing&Marinade (Marukan) 6/64oz',70.00,100,'',1,15.95,0,'cs','btl'),(10762,'Pork - Baby Back Rib',3.50,500,'',1,3.50,0,'lb','lb'),(11337,'Pork - Back Fat Skinless 44.09#',74.52,400,'豬板肉(油)',1,1.69,0,'cs','lb'),(11672,'Pork - Back Rib Portion ',1.39,500,'',1,1.39,0,'lb','lb'),(12271,'Pork - Back Skin ',1.99,500,'豬皮',1,1.99,0,'lb','lb'),(10759,'Pork - BackFat Skin On',1.19,500,'有皮肥豬肉',1,1.19,0,'lb','lb'),(10764,'Pork - Belly Roasted ',8.49,400,'燒腩',1,7.99,0,'lb','lb'),(9766,'Pork - Belly Skin On ',3.19,500,'五花肉',1,3.19,0,'lb','lb'),(12116,'Pork - Belly Skin On Cooked',7.99,500,'烧猪腩',1,7.99,0,'lb','lb'),(12106,'Pork - Belly Sliced',5.29,500,'五花肉片',1,5.29,0,'lb','lb'),(10605,'Pork - Blood  8/1gal',70.00,400,'豬紅',1,8.75,0,'cs','gal'),(10677,'Pork - Blood Fresh  5#',13.00,300,'豬紅',1,13.00,0,'pail','pail'),(11853,'Pork - Bone Blade 50#',1.49,500,'猪扇骨',1,1.49,0,'lb','lb'),(11854,'Pork - Bone Cut Leg 10kg',1.59,500,'切猪筒骨',1,1.59,0,'lb','lb'),(9090,'Pork - Bone Neck 30#',35.70,400,'猪颈骨',30,1.19,0,'cs','lb'),(12373,'Pork - Bone Neck Cut 30#',1.99,500,'切猪颈骨',1,1.99,0,'lb','lb'),(11855,'Pork - Bone Uncut Leg 10kg',2.59,500,'不切猪筒骨',1,2.59,0,'lb','lb'),(9992,'Pork - Butt Bone In',1.39,500,'有骨猪大腿',1,1.09,0,'lb','lb'),(5402,'Pork - Butt Boneless',2.79,500,'无骨猪大腿肉',1,2.79,0,'lb','lb'),(10598,'Pork - Chop Miscut  10#',12.50,400,'豬扒',1,1.25,0,'cs','lb'),(6172,'Pork - Chops  40#',78.00,400,'猪扒',36,1.95,0,'cs','lb'),(11633,'Pork - Chops Cut End Pieces ',1.39,500,'猪扒边',1,1.39,0,'lb','lb'),(4759,'Pork - Collar',1.89,500,'猪肉柳',1,1.89,0,'lb','lb'),(11525,'Pork - Cooked Char Sui',7.99,300,'叉燒',1,7.99,0,'lb','lb'),(11222,'Pork - Cooked Skin Sliced (QH) 30/7oz',45.00,400,'故乡豬皮絲',30,1.99,0,'cs','pkg'),(9697,'Pork - Cooked Skin Slices 50/8oz',94.00,400,'西湖猪皮丝',1,1.99,0,'cs','pkg'),(11519,'Pork - Cured Pork For BBQ (Que H.) 20/14oz',95.00,400,'香烧猪肉丸',1,4.99,0,'cs','pkg'),(9544,'Pork - Cured Roll Sausage (418) 20/12oz',4.50,400,'豬腳扎',1,4.50,0,'ea','ea'),(9391,'Pork - Cushion ',2.35,500,'猪肩肉',30,2.35,0,'lb','lb'),(9630,'Pork - Ears  (Swift)  30#',2.69,300,'猪耳朵',1,2.69,0,'lb','lb'),(9174,'Pork - Feet Cut  30#',62.70,500,'猪腳',30,2.09,0,'cs','lb'),(11265,'Pork - Feet Cut Up (T/P)',2.19,500,'切齗豬腳',1,2.19,0,'lb','lb'),(11852,'Pork - Feet Front',1.69,500,'整豬前小腿',1,1.69,0,'lb','lb'),(11796,'Pork - Hearts ',1.49,500,'豬心',1,1.49,0,'lb','lb'),(11494,'Pork - Hock Long Pinic 33.07#',1.89,500,'猪薰蹄/猪肘',1,1.89,0,'lb','lb'),(6174,'Pork - Hocks 30#',45.00,400,'猪薰蹄',30,1.50,0,'cs','lb'),(11704,'Pork - Jowl Steak 5kg',4.25,500,'豬颈肉',1,4.25,0,'lb','lb'),(9859,'Pork - Lard  50#',35.50,100,'猪油',1,35.50,0,'cs','cs'),(10564,'Pork - Loin Bnls',1.89,500,'豬肉',1,1.89,0,'lb','lb'),(9699,'Pork - Meat Loaf 20/13oz (Vi Huong))(215)',73.80,400,'味香猪肉扎',1,3.99,0,'cs','ea'),(9700,'Pork - Meat Loaf 24/15oz',75.00,400,'西湖猪肉扎',1,3.99,0,'cs','ea'),(10429,'Pork - Med. Whole Raw',120.00,400,'中光豬',1,120.00,0,'ea','ea'),(9349,'Pork - Rectum (Bung Gut) 30#',116.70,400,'猪大肠',22,3.89,0,'cs','cs'),(4771,'Pork - Rib (Curlys)',2.00,500,'猪排',1,2.00,0,'cs','lb'),(11286,'Pork - Riblets Button Bone  10#',1.89,500,'切豬排骨',1,1.89,0,'lb','lb'),(12131,'Pork - Ribstrip  (Farmland) 5#',3.79,500,'切猪排骨',1,3.79,0,'lb','lb'),(11927,'Pork - Ribstrip (Swift)',3.79,500,'切猪排骨',1,3.79,0,'lb','lb'),(11928,'Pork - Ribstrip (Swift) USA',2.99,500,'切猪小排骨 零售',1,2.99,0,'lb','lb'),(11285,'Pork - Ribstrips Bone In (Swift)',2.49,500,'切豬排骨',1,2.49,0,'lb','lb'),(11284,'Pork - Ribstrips Extra Tender 5#',11.95,400,'切豬排骨',1,2.39,0,'cs','lb'),(9698,'Pork - Sausage Wrapped in Pork Skin 24/14oz',85.50,400,'西湖猪肉扎',1,4.50,0,'cs','ea'),(10818,'Pork - Shank Bone In Cooked',6.99,400,'熟豬腱',1,6.99,0,'lb','lb'),(11819,'Pork - Shoulder Kurobuta SRF ',3.49,500,'黑豬梅頭肉',1,3.49,0,'lb','lb'),(11877,'Pork - Skin  Belly  60.01#',83.42,500,'豬腩皮',1,1.50,0,'cs','lb'),(11801,'Pork - Skin Loaf 20/13oz (Vi Huong)(216)',73.80,400,'味香冻肉扎',1,3.99,0,'cs','pkg'),(11797,'Pork - Snouts 60#',1.89,500,'豬鼻',1,1.89,0,'lb','lb'),(5352,'Pork - Sparerib',3.80,500,'猪排骨',1,3.80,0,'lb','lb'),(11283,'Pork - Sparerib Cut 1  30#',1.99,400,'切豬排骨',1,1.99,0,'lb','lb'),(12233,'Pork - Spleen ',1.99,500,'猪横脷',1,1.99,0,'lb','lb'),(6177,'Pork - Stomach 30#',59.70,400,'猪肚',30,1.99,0,'cs','lb'),(11093,'Pork - Tenderloin   ',3.49,500,'豬肉柳',1,3.49,0,'lb','lb'),(11471,'Pork - Tongues (Swift) 30#',58.50,400,'豬舌',1,1.95,0,'cs','lb'),(11885,'Pork - Uterus 30#',58.50,400,'豬生腸',1,1.95,0,'cs','lb'),(11762,'Pork Fu (Formosa) 12/18oz',13.50,100,'宝岛肉脯',1,13.50,0,'jar','jar'),(11764,'Pork Fu (Formosa) 48/4oz ',2.99,100,'宝岛肉脯',1,2.99,0,'jar','jar'),(12023,'Pork Meat Ball (Kim Son) 24/10oz',85.00,400,'金山猪肉丸',1,4.50,0,'cs','pkg'),(11256,'Pork Meat Ball (Myriad) 20/13oz',5.99,400,'美味极贡丸',1,5.99,0,'pkg','pkg'),(6169,'Pork Meat Ball (WC)  30/8oz',70.00,400,'猪肉丸',1,2.79,0,'cs','pkg'),(9162,'Pork Rib Strip 30#',1.50,400,'碎排骨',1,1.50,0,'cs','lb'),(11761,'Pork Sung (Formosa) 12/18oz',13.50,100,'宝岛肉松',1,13.50,0,'jar','jar'),(10743,'Pork Sung (Formosa) 48/4oz ',2.99,100,'宝岛肉松',1,2.99,0,'jar','jar'),(9424,'Pork-Young Pig',199.00,400,'烧猪',1,2.50,0,'ea','lb'),(9684,'Pot Sricker - Veggie (Amoy) 6/50pcs (1 bite size)',38.00,400,'小菜锅贴',1,2.95,0,'cs','pkg'),(10413,'Pot Sticker - Chicken (Good Guy) 23#',55.00,400,'鸡锅贴',1,49.50,0,'cs','cs'),(10028,'Pot Sticker - Shrimp & Leek (WC) 12/22pcs',39.95,400,'虾锅贴',1,3.69,0,'cs','pkg'),(9993,'Pot Sticker - Shrimp (Amoy) 4/30pcs',49.95,400,'虾锅贴',1,15.00,0,'cs','bag'),(10026,'Pot Sticker - Shrimp Hot (Amoy) 6/30pcs',1.00,400,'',1,1.00,0,'cs','cs'),(5662,'Pot Sticker - Veggie (Amoy)  6/30pcs',35.00,400,'锅贴',6,6.95,0,'cs','pkg'),(6319,'Pot Sticker - Veggie (Good Guy)  250pc',39.50,400,'素锅贴',1,38.00,0,'cs','cs'),(5878,'Pot Sticker (Amoy) 6/30ct',62.00,400,'锅贴',1,11.00,0,'cs','pkg'),(12018,'Pot Sticker (Baily) Jumbo 6/40pcs',1.00,400,'百利锅贴',1,1.00,0,'cs','pkg'),(5610,'Pot Sticker (Good Guy/99116) 16lb/(155-160)1.5oz',75.00,400,'锅贴',1,75.00,0,'cs','cs'),(6029,'Pot Sticker (Gyoza) 4/2.25lb',25.00,400,'日本锅贴',1,6.95,0,'cs','pkg'),(10155,'Pot Sticker (Gyoza) Beef 20/7.6oz',1.00,400,'日本牛锅贴',1,1.00,0,'cs','cs'),(10156,'Pot Sticker (Gyoza) Pork 20/7.6oz',1.00,400,'日本肉锅贴',1,1.00,0,'cs','css'),(10441,'Pot Sticker (Gyoza) Pork 4/2.25#',6.95,400,'日本肉锅贴',1,6.95,0,'pkg','pkg'),(11674,'Pot Sticker (Gyoza/WC) Pre S. Pork & Chicken  12/21oz',48.00,400,'鸡猪肉锅贴',1,5.50,0,'cs','pkg'),(11449,'Pot Sticker (Gyoza/WC) Pre-S Veg.Pork Dumplings (#72270)  8/32oz',42.00,400,'猪肉煎饺',1,5.95,0,'cs','pkg'),(11051,'Pot Sticker (Lucky 7) Pork 18#',46.00,400,'肉锅贴',1,45.00,0,'cs','cs'),(10909,'Pot Sticker (On On)  19# (190/200)',48.00,400,'锅贴',1,46.00,0,'cs','cs'),(9680,'Pot Sticker (Otasty) Jumbo 6/40pcs',45.00,400,'大锅贴',1,7.00,0,'cs','pkg'),(11871,'Pot Sticker (WC) Chicken & Veggie 8/32oz(#72286)',42.00,100,'王府井鸡锅贴',1,7.50,0,'cs','pkg'),(11135,'Pot Sticker (WC) Chicken & Veggie Dumpling6/32oz (16.2#/72269)',43.00,400,'鸡锅贴',1,7.95,0,'cs','pkg'),(12296,'Pot Sticker (WC) Cooked Veggie Dumpling 12/23.4oz(32oz/72264)',55.00,400,'蔬菜煎饺',1,55.00,0,'cs','cs'),(10255,'Pot Sticker (WC) Pork & Veggie 8/32oz(#72284/62181)',45.00,400,'王府井肉锅贴',1,7.50,0,'cs','pkg'),(10256,'Pot Sticker (WC) Pork Dumpling  8/50pc',37.95,400,'肉水饺',1,4.95,0,'cs','pkg'),(11543,'Pot Sticker (WC) Veggie Dumpling 8/50pc(32oz/72264)',37.95,400,'蔬菜煎饺',1,4.95,0,'cs','pkg'),(10869,'Pot Sticker Chicken (Otasty) 8/50pc',45.00,400,'鸡锅贴',1,5.95,0,'cs','pkg'),(5600,'Pot Sticker Pork (Otasty) (350ct) 8/32oz (#45111)',45.00,400,'小锅贴',1,6.99,0,'cs','pkg'),(11611,'Pot Sticker Sauce (WC) 12/6.5oz',30.00,100,'锅贴汁',1,2.99,0,'cs','btl'),(6178,'Pot Sticker Sauce Pkg (DBL Hi)  200',20.50,100,'锅贴汁包',1,20.50,0,'cs','cs'),(5763,'Pot Sticker Skin (China) (yellow) 24#',33.00,400,'锅贴皮(中华)',1,2.25,0,'cs','pkg'),(10783,'Pot Sticker Skin (Kim Hon) 24pkg',33.00,400,'金鸿锅贴皮',1,2.25,0,'cs','pkg'),(11994,'Pot Sticker Skin (Louies) 12/12oz',2.50,400,'锅贴皮(雷氏)',1,2.50,0,'pkg','pkg'),(5829,'Pot Sticker Skin (NHK) (blue) 24#',45.00,400,'锅贴皮(新香港)',1,2.50,0,'cs','pkg'),(6348,'Potasium Carbonate Solution 12/21oz',40.00,100,'碱水',12,4.99,0,'cs','btl'),(10800,'Potato Starch - Sweet   50/14oz',75.00,100,'地瓜粉',1,1.89,0,'cs','pkg'),(10329,'Potato Starch (Kari out)',29.00,200,'超級生粉',1,28.00,0,'sk','sk'),(5808,'Potato Starch (Windmill) 50#',56.00,200,'超級生粉',1,30.95,0,'sk','sk'),(11427,'Potato Starch (YiFeng) 20/400g',29.00,100,'太白粉',1,1.50,0,'cs','pkg'),(9849,'Powder - Ammonium Carbonate 8/5#',171.00,100,'臭粉',1,21.50,0,'cs','tub'),(9850,'Powder - Saf Instant (Yeast) 20/16oz',53.50,100,'依士粉',1,2.95,0,'cs','box'),(5271,'Power Cleaner Degreaser 4/1gal',25.50,100,'去油水',4,7.50,1,'cs','gal'),(9435,'Produce - A choy',1.79,300,'油唛菜(A菜)',1,1.79,0,'cs','lb'),(11876,'Produce - A choy Head',1.00,300,'莴笋',1,1.00,0,'lb','lb'),(10047,'Produce - Arrow Head (Ci Gu)',1.00,300,'慈菇',1,1.00,0,'cs','lb'),(9231,'Produce - Arrow Root',0.95,300,'粉葛',1,0.95,0,'lb','lb'),(9635,'Produce - Asparagus',36.00,300,'芦笋',1,36.00,0,'cs','cs'),(9344,'Produce - Avocado',45.00,300,'牛油果',1,45.00,0,'cs','cs'),(9006,'Produce - Baby Bok Choy',26.00,300,'青江菜（上海小白菜）',1,0.79,0,'cs','lb'),(11656,'Produce - Baby Bok Choy Miu',1.79,300,'青江菜苗',1,1.79,0,'lb','lb'),(5155,'Produce - Basil',5.95,300,'九重塔',1,5.95,0,'cs','lb'),(7308,'Produce - Beans - Green  ',32.00,300,'四季豆',30,0.65,0,'cs','lb'),(9813,'Produce - Bell Pepper Yellow',1.00,300,'',1,1.00,0,'cs','cs'),(7303,'Produce - Bell Peppers Green ',15.00,300,'青椒',25,16.00,0,'cs','lb'),(5751,'Produce - Bell Peppers Red ',26.00,300,'大红椒',25,18.00,0,'cs','lb'),(9202,'Produce - Bitter Melon',1.29,300,'苦瓜',1,1.29,0,'cs','lb'),(10307,'Produce - Bok Choy (L)',20.00,300,'廣東大白菜',1,29.50,0,'cs','lb'),(9104,'Produce - Bok Choy (White Bottom) ',0.79,300,'白菜仔',1,0.79,0,'cs','lb'),(11999,'Produce - Bok Choy (White Bottom/Long) ',1.49,300,'长白菜仔',1,1.49,0,'lb','lb'),(10879,'Produce - Bok Choy Miu',27.00,300,'白菜仔苗',1,1.79,0,'cs','lb'),(7299,'Produce - Broccoli - Crown',32.00,300,'西蘭花',1,12.00,0,'cs','cs'),(5132,'Produce - Cabbage',22.50,300,'椰菜',1,15.50,0,'cs','lb'),(11423,'Produce - Cabbage Purple',32.00,300,'紫椰菜',1,1.09,0,'cs','lb'),(11327,'Produce - Cabbage Taiwanese',0.99,300,'扁椰菜/高麗菜',1,0.99,0,'lb','lb'),(9121,'Produce - Cantaloupe',10.00,300,'香蜜瓜',1,10.00,0,'cs','cs'),(7309,'Produce - Carrot 25#',15.00,300,'紅萝卜',25,10.50,0,'bag','bag'),(9243,'Produce - Cauliflower',18.00,300,'椰菜花',1,18.00,0,'cs','ea'),(11887,'Produce - Cauliflower Chinese ',32.00,300,'台山菜花',1,32.00,0,'cs','lb'),(5564,'Produce - Celery',13.00,300,'芹菜',1,15.00,0,'cs','bun'),(9727,'Produce - Celery (Chinese)',1.89,300,'唐芹菜',1,1.89,0,'lb','lb'),(11294,'Produce - Chayote',1.49,300,'合掌瓜',1,1.49,0,'lb','lb'),(11319,'Produce - Cherry',1.99,300,'车厘子',1,1.99,0,'lb','lb'),(10550,'Produce - Chesnut',2.99,300,'栗子',1,2.99,0,'lb','lb'),(10864,'Produce - Chestnut',3.50,300,'鮮栗子',1,3.50,0,'lb','lb'),(11353,'Produce - Chili Leaf',3.60,300,'辣椒叶',1,3.60,0,'lb','lb'),(12174,'Produce - Chili Leaf',4.79,300,'辣椒叶',1,4.79,0,'lb','lb'),(10797,'Produce - Chili Pepper (Anaheim)',6.00,300,'長青椒',1,0.99,0,'cs','lb'),(9916,'Produce - Chili Pepper (Thai - Red)',1.00,300,'泰小红椒',1,1.00,0,'lb','lb'),(9720,'Produce - Chili Pepper (Thai)',1.95,300,'泰小辣椒',1,1.95,0,'cs','lb'),(9781,'Produce - Chive (Green)',1.79,300,'韭菜',1,1.79,0,'lb','lb'),(11508,'Produce - Chive Bud Chinese ',3.99,300,'韭菜花',1,3.99,0,'lb','lb'),(9569,'Produce - Chive Hotbed(Yellow) ',4.95,300,'韭黄',1,4.50,0,'lb','lb'),(10862,'Produce - Choy Miu',1.99,300,'菜苗',1,1.99,0,'lb','lb'),(9810,'Produce - Cilantro',15.00,300,'芫茜',1,0.50,0,'cs','bun.'),(11805,'Produce - Citrines (Tangerine) 22#',1.79,300,'桔子',1,1.79,0,'lb','lb'),(11329,'produce - Corn',0.50,300,'玉米',1,0.50,0,'ea','ea'),(9179,'Produce - Cucumber',25.00,300,'黄瓜',1,18.00,0,'cs','lb'),(9235,'Produce - Daikon',16.00,300,'萝卜',1,0.79,0,'cs','lb'),(12109,'Produce - Daikon (Chinese)',1.49,300,'唐人白萝卜',1,1.49,0,'lb','lb'),(12090,'Produce - Daikon (Korean)',28.00,300,'韩国白萝卜',1,1.09,0,'cs','lb'),(9130,'Produce - Daikon Sprouts  12/4oz',1.00,300,'萝卜芽菜',1,1.00,0,'pkg','pkg'),(12208,'Produce - Dates',4.79,300,'新鲜红枣',1,4.79,0,'lb','lb'),(9118,'Produce - Dong Gua (Winter Melon)',0.99,300,'冬瓜',1,0.99,0,'lb','lb'),(11410,'Produce - Dragon Fruit',1.00,300,'火龙果',1,1.00,0,'cs','ea'),(10987,'Produce - Durian',3.25,300,'榴蓮',1,3.25,0,'lb','lb'),(12225,'Produce - Edible Orchid (OAH) 50ct/Tray',22.00,300,'可食用兰花',1,22.00,0,'tray','tray'),(5149,'Produce - Eggplant',1.60,300,'茄子',1,1.30,0,'cs','lb'),(10639,'Produce - Eggplant (AM24)',45.00,300,'美國茄子',1,45.00,0,'cs','lb'),(9814,'Produce - Eggplant (Thai)',1.00,300,'泰茄子',1,1.00,0,'lb','lb'),(11542,'Produce - English  Cucumber',23.00,300,'英國黃瓜',1,1.79,0,'cs','ea'),(10067,'Produce - Fresh Bamboo',1.00,300,'鲜笋',1,1.00,0,'cs','lb'),(9736,'Produce - Fresh Garlic (Green)',1.79,300,'唐大蒜',1,1.79,0,'bunch','bunch'),(6000,'Produce - Fresh Ginger',55.00,300,'新鮮姜',1,1.89,0,'cs','lb'),(9752,'Produce - Fresh Mints',1.09,300,'薄菏叶',1,1.09,0,'bun','bun'),(9182,'Produce - Fresh Peel Garlic 5#',17.00,300,'新鲜蒜头',1,7.00,0,'bag','bag'),(9103,'Produce - Gai Choy (Mustard Green)',18.00,300,'芥菜',1,1.15,0,'cs','lb'),(9086,'Produce - Gai Lan',3.50,300,'唐芥蘭',1,1.50,0,'cs','lb'),(10863,'Produce - Gai Lan Miu',1.99,300,'唐芥蘭苗',1,1.99,0,'lb','lb'),(9818,'Produce - Galanga Root Fresh',95.00,300,'鲜泰国姜',1,1.00,0,'cs','lb'),(10511,'Produce - Garlic  Whole',1.99,300,'有衣蒜頭',1,1.99,0,'tub','tub'),(10868,'Produce - Garlic Miu',1.00,300,'蒜苗',1,1.00,0,'lb','lb'),(10537,'Produce - Gobo(Burdock) 22#',1.50,300,'牛蒡',1,1.50,0,'lb','lb'),(10846,'Produce - Golden Kiwi 18pc',1.39,300,'黄金奇异果',1,1.39,0,'ea','ea'),(11522,'Produce - Green Kiwi ',26.00,300,'奇异果',1,0.99,0,'cs','ea'),(9306,'Produce - Green Leaf Lettuce',27.00,300,'绿叶生菜',1,15.00,0,'cs','ea'),(9629,'Produce - Green Onion 48bundles',11.00,300,'青葱',1,0.39,0,'cs','bunch'),(9799,'Produce - Green Papaya',1.50,300,'青木瓜',1,1.50,0,'cs','lb'),(11384,'Produce - Guava',2.79,300,'石榴',1,2.79,0,'lb','lb'),(12199,'Produce - Hami Melon',1.39,100,'哈密瓜',1,1.39,0,'lb','lb'),(10824,'Produce - Hawaii Papaya',25.00,300,'夏威夷木瓜',1,25.00,0,'cs','ea'),(10613,'Produce - Honey Tangerine',49.00,300,'蜜柑',1,49.00,0,'cs','lb'),(5156,'Produce - Honeydew Melons',12.00,300,'白蜜瓜',1,12.00,0,'cs','cs'),(9120,'Produce - Ice Berg Lettuce',16.00,300,'包生菜',1,1.00,0,'cs','cs'),(11303,'Produce - In Choy',1.49,300,'苋菜',1,1.49,0,'lb','lb'),(11295,'Produce - Jack Fruit',0.99,300,'大树菠萝',1,0.99,0,'lb','lb'),(9612,'Produce - Jalapeno ',1.09,300,'中青椒',1,1.09,0,'cs','lb'),(9821,'Produce - Jalapeno (Red)',5.50,300,'中红椒',1,1.00,0,'lb','lb'),(10407,'Produce - Jap. Yam',28.00,300,'日本番薯',1,28.00,0,'cs','lb'),(9919,'Produce - Japenese  Cucumber',1.00,300,'日本黄瓜',1,1.00,0,'cs','cs'),(9804,'Produce - Jicama',15.50,300,'沙葛',1,0.89,0,'cs','lb'),(11354,'Produce - Jujube',1.95,300,'新鲜红枣',1,1.95,0,'lb','lb'),(10408,'Produce - Kabocha',16.00,300,'小青南瓜',1,21.00,0,'cs','lb'),(11054,'Produce - Korean Honey Menlo',22.00,300,'韩国金瓜',1,22.00,0,'cs','lb'),(12161,'Produce - Korean Melon',1.95,300,'韩国香瓜',1,1.95,0,'cs','lb'),(11411,'Produce - Leek',1.49,300,'大蒜苗',1,1.49,0,'cs','lb'),(11974,'Produce - Leek (Chinese)',59.00,300,'大蒜苗',1,3.99,0,'cs','lb'),(9330,'Produce - Lemon Grass ',35.00,300,'香茅',1,2.50,0,'cs','lb'),(5628,'Produce - Lemons ',28.00,300,'柠檬',1,0.85,0,'cs','lb'),(10794,'Produce - Lily Bulb Fresh 36jar',3.99,300,'鮮百合',1,3.99,0,'pkg','pkg'),(9788,'Produce - Lime',26.00,300,'青柠',1,1.50,0,'cs','lb'),(9458,'Produce - Lime Leaves Fresh',1.00,300,'青柠叶',1,1.00,0,'lb','lb'),(10371,'Produce - Lobak (Green Daikon)',23.00,300,'青萝卜',1,0.99,0,'cs','lb'),(9765,'Produce - Long Bean (Green)',0.99,300,'长青豆角',1,0.99,0,'lb','lb'),(11707,'Produce - Long Bean (White)',1.99,300,'长白豆角',1,1.99,0,'lb','lb'),(9980,'Produce - Longan',1.00,300,'龙眼',1,1.00,0,'cs','lb'),(9188,'Produce - Lotus Root',1.50,300,'蓮藕',1,1.50,0,'lb','lb'),(9936,'Produce - Lychee ',1.00,300,'鲜荔枝',1,1.00,0,'cs','lb'),(9924,'Produce - Mango',9.00,300,'芒果',1,9.00,0,'cs','cs'),(11350,'Produce - Mangosteen',7.99,300,'山竹',1,7.99,0,'lb','lb'),(9160,'Produce - Mo Gua (Hairy Squash)',1.10,300,'毛瓜',1,1.10,0,'lb','lb'),(9889,'Produce - Mushroom (Black/Shitaki) Fresh',40.00,300,'鲜冬菇',1,4.25,0,'cs','lb'),(7302,'Produce - Mushroom 10#',24.00,300,'新鮮蘑菇',10,24.00,0,'cs','cs'),(9914,'Produce - Mushroom Brown Beech ',1.00,300,'蟹肉菇',1,1.00,0,'cs','pkg'),(11104,'Produce - Mushroom Crab Beech (Brown)',1.79,300,'茶树菇',1,1.79,0,'pkg','pkg'),(9912,'Produce - Mushroom Crab Beech (White)',1.79,300,'白玉菇',1,1.79,0,'pkg','pkg'),(9773,'Produce - Mushroom Enoki 25pkg',22.00,300,'金针菇',1,0.99,0,'cs','pkg'),(9913,'Produce - Mushroom King Oyster',4.25,300,'鸡腿菇',1,4.25,0,'cs','lb'),(11505,'Produce - Mushroom Maitake 24pkg',1.95,300,'舞茸菇',1,1.95,0,'pkg','pkg'),(10767,'Produce - Mushroom Oyster',5.50,300,'蠔菇',1,5.50,0,'lb','lb'),(9921,'Produce - Nagaimo (Mountain Yam)',3.99,300,'鲜淮山',1,3.99,0,'lb','lb'),(12294,'Produce - Nagaimo (Mountain Yam/Iron)',3.99,300,'鲜淮山/铁棍',1,3.99,0,'lb','lb'),(5136,'Produce - Napa',29.00,300,'大白菜',1,19.00,0,'cs','lb'),(11147,'Produce - Napa Long',1.52,300,'长绍菜',1,1.50,0,'lb','lb'),(11105,'Produce - Nectarine Peach',1.99,300,'油桃',1,1.99,0,'lb','lb'),(10680,'Produce - Nopales',0.99,300,'鮮仙人掌',1,0.99,0,'lb','lb'),(10727,'Produce - Okra',1.00,300,'秋葵/羊角豆',1,1.00,0,'lb','lb'),(9637,'Produce - Onion Red',11.00,300,'红洋葱',1,1.00,0,'sk','sk'),(5383,'Produce - Onions Yellow  50#',12.00,300,'洋葱',50,13.50,0,'sk','cs'),(9812,'Produce - Orange Chinese ',1.00,300,'新年桔子',1,1.00,0,'cs','lb'),(5154,'Produce - Oranges Fresh',18.00,300,'鮮橙',1,18.00,0,'cs','ib'),(12147,'Produce - Oranges Fresh (DH) 10#/bag',16.00,300,'双喜甜橙',1,1.89,0,'bag','bag'),(9870,'Produce - Parsley',1.50,300,'西芫茜',1,1.50,0,'cs','bunch'),(10982,'Produce - Peanut w Shell',1.99,300,'有壳花生',1,3.29,0,'lb','lb'),(11373,'Produce - Pear Asian (Nan-Sui)',3.99,100,'亚洲梨(南水）',1,3.99,0,'pkg','pkg'),(9983,'Produce - Pear Crystal',1.00,300,'水晶梨',1,1.00,0,'cs','lb'),(9880,'Produce - Pear Fragrant',32.00,300,'香梨',1,1.00,0,'cs','lb'),(11047,'Produce - Pear Singo',17.00,300,'韓國梨',1,17.00,0,'cs','lb'),(10927,'Produce - Pear Su Li',1.79,300,'酥梨',1,1.79,0,'pc','pc'),(10873,'Produce - Pear Ya Li',1.89,300,'鴨梨',1,1.89,0,'lb','lb'),(12178,'Produce - Persian  Cucumber',1.19,300,'波斯黄瓜',1,1.19,0,'lb','lb'),(10005,'Produce - Persimmon',0.99,300,'水柿',1,0.99,0,'lb','lb'),(11330,'Produce - Pineapple',2.50,300,'新鲜菠萝',1,2.50,0,'ea','ea'),(10691,'Produce - Po Gua',1.10,300,'蒲瓜',1,1.10,0,'lb','lb'),(11971,'Produce - Pomelo',39.00,300,'蜜柚',1,4.99,0,'cs','ea'),(9122,'Produce - Potato',15.00,300,'土豆',1,0.35,0,'cs','lb'),(9911,'Produce - Pumkin',1.00,300,'南瓜',1,1.00,0,'lb','lb'),(10050,'Produce - Pummelo',1.90,300,'柚子',1,1.90,0,'ea','ea'),(10825,'Produce - Rambutan',1.79,300,'紅毛丹',1,1.00,0,'cs','lb'),(9714,'Produce - Red Leaf Lettuce',1.00,300,'红叶生菜',1,1.00,0,'cs','cs'),(10228,'Produce - Romain Heart',16.00,300,'罗马生菜心',1,16.00,0,'cs','pkg'),(10006,'Produce - Romain Lettuce',1.00,300,'罗马生菜',1,1.00,0,'cs','cs'),(10056,'Produce - Salad Mix 4/5#',18.00,300,'',1,4.75,0,'cs','bag'),(11302,'Produce - San Choy',1.49,300,'潺菜/木耳菜',1,1.49,0,'lb','lb'),(9937,'Produce - Shallots Fresh  ',32.00,300,'红葱头',1,1.50,0,'sk','lb'),(9713,'Produce - Si Gua',1.50,300,'丝瓜',1,0.95,0,'lb','lb'),(9753,'Produce - Snap peas ',22.00,300,'甜豆',1,1.95,0,'cs','lb'),(5170,'Produce - Snow Peas 10#',25.00,300,'雪豆',1,18.50,0,'cs','lb'),(9563,'Produce - Snow Peas Leaves',4.95,300,'大叶豆苗',1,4.95,0,'cs','lb'),(10318,'Produce - Snow Peas Sprout (S)',2.99,300,'小豆苗',1,2.99,0,'lb','lb'),(12292,'Produce - Spanish(Taiwan)',1.00,300,'台湾菠菜',1,1.00,0,'lb','lb'),(11198,'Produce - Spinach',1.29,300,'菠菜',1,1.29,0,'bun','bun'),(5171,'Produce - Squash - Italian Zucchini',19.00,300,'意大利瓜',1,19.00,0,'cs','lb'),(10865,'Produce - Star Fruit',2.99,300,'楊桃',1,2.99,0,'ea','ea'),(9636,'Produce - Strawberry',1.00,300,'士多啤梨',1,1.00,0,'cs','cs'),(9939,'Produce - Sweet Potato',15.00,300,'蕃薯',1,15.00,0,'cs','lb'),(11385,'Produce - Sweet Potato (Janpaness)',1.29,300,'日本蕃薯',1,1.29,0,'lb','lb'),(10611,'Produce - Tangerine W. Leaf',2.19,300,'新年桔子',1,2.19,0,'lb','lb'),(9708,'Produce - Taro',26.00,300,'芋头',1,1.00,0,'sk','lb'),(10289,'Produce - Taro (Peeled/Fz) 30/1#',2.49,400,'去皮芋头',1,2.49,0,'pkg','pkg'),(10977,'Produce - Taro (S)',1.50,300,'小芋头',1,1.50,0,'lb','lb'),(9141,'Produce - Tomato',20.00,300,'蕃茄',1,20.00,0,'cs','lb'),(9593,'Produce - Tomato (Grape)',19.00,300,'蕃茄',1,19.00,0,'cs','cs'),(11393,'Produce - Tomato (Roma)',20.00,300,'蕃茄',1,20.00,0,'cs','cs'),(10150,'Produce - Tong Hou',1.50,300,'茼蒿',1,1.50,0,'lb','lb'),(9115,'Produce - Tung Choy',0.95,300,'通心菜',1,1.29,0,'lb','lb'),(10827,'Produce - Tung Choy (Water)',28.00,300,'水通菜',1,1.79,0,'cs','lb'),(10944,'Produce - Wa Wa Choy',1.69,300,'娃娃菜',1,1.69,0,'cs','lb'),(11457,'Produce - Water Chestnut',1.99,300,'新鲜马蹄',1,1.99,0,'lb','lb'),(9411,'Produce - Water Cress',1.59,300,'西洋菜',1,1.59,0,'bunch','bunch'),(10670,'Produce - Water Melon',17.95,300,'西瓜',1,17.95,0,'cs','cs'),(12352,'Produce - Water Melon (Yellow)',40.00,300,'西瓜',1,40.00,0,'cs','lb'),(11102,'Produce - White Peach',1.99,300,'白桃',1,1.99,0,'lb','lb'),(10707,'Produce - Xui Gua',1.10,300,'水瓜',1,1.10,0,'lb','lb'),(9823,'Produce - Yam (Purple)',2.50,300,'紫心蕃薯',1,2.50,0,'lb','lb'),(9890,'Produce - Yam Janpaness',1.29,300,'日本蕃薯',1,1.29,0,'cs','lb'),(11280,'Produce - Yam Leaf 20#',1.95,300,'蕃薯叶',1,1.95,0,'lb','lb'),(12293,'Produce - Yam Leaf Tips 20#',4.99,300,'蕃薯叶尖',1,4.99,0,'lb','lb'),(9102,'Produce - Yau Choy',20.00,300,'油菜(菜心)',1,1.50,0,'cs','lb'),(10871,'Produce - Yau Choy Miu',1.95,300,'油菜苗',1,1.95,0,'lb','lb'),(9745,'Produce - Young coconut',19.00,300,'椰青',1,8.00,0,'cs','cs'),(10333,'Produce - Young Ginger',1.00,300,'子姜',1,1.00,0,'cs','cs'),(10317,'Produce - Zi Soo',1.00,300,'紫苏',1,1.00,0,'lb','lb'),(10615,'Pudding - Almond Flavor Mix (Dofu Delight) 24/5.5oz',35.00,100,'杏仁布丁粉',1,35.00,0,'cs','cs'),(5935,'Pudding - Chocolate 6/5#',24.00,100,'布丁巧克力',1,24.00,0,'cs','can'),(5633,'Pudding - Tapioca 6/5#',30.00,100,'布丁',6,26.00,0,'cs','can'),(6318,'Pudding - Vanilla 6/5#',24.00,100,'香草布丁',1,24.00,0,'cs','can'),(12340,'Purple Yam Grated Froz.30/16oz',2.59,400,'紫薯刨',1,2.59,0,'pkg','pkg'),(10336,'Quail - Whole Froz. 6/6ea',72.00,400,'全只鹌鹑',1,12.99,0,'cs','pkg'),(10448,'Radish  Preserved Strips (MCL) 50/14oz',3.99,100,'萬昌隆甜菜脯',1,3.99,0,'pkg','pkg'),(6277,'Radish Strip - Sweet (Thai) 50/8oz',48.00,100,'甜萝卜絲',1,1.29,0,'cs','pkg'),(11343,'Radish w. Chili (Kim Lan) 12/14oz',38.00,100,'金兰辣萝卜',1,3.29,0,'cs','btl'),(12011,'Radish w. Chili in Soy Sauce (WC) 24/13oz',2.99,100,'味全香辣萝卜干',1,2.99,0,'jar','jar'),(10653,'Radish Whole - Sweet (Thai/JHC)  50/8oz',35.50,100,'甜菜脯',1,0.99,0,'cs','pkg'),(11879,'Rambutan in Syrup  24/20oz ',2.89,100,'糖水红毛丹',1,2.89,0,'can','can'),(11250,'Rambutan w. Pineapple  24/20oz ',2.99,100,'糖水红毛丹鳳梨',1,2.99,0,'can','can'),(10593,'Rangoon - Crab 0.8oz/100pcs',25.95,400,'蟹肉芝士角',1,25.95,0,'cs','cs'),(10254,'Rangoon - Cream Cheese 0.8oz/100pcs',25.95,400,'芝士角',1,23.95,0,'cs','cs'),(10257,'Rangoon Buffalo Chix 5/20pcs',1.00,400,'雞肉角',1,1.00,0,'cs','pkg'),(10584,'Refrigearated Cabinet',0.00,100,'',1,5328.25,0,'',''),(12113,'Rice - (Broken Jasmine - 3ladies)  10/5#',4.99,100,'三女小包碎米',1,4.99,0,'pkg','pkg'),(12094,'Rice - (Broken Jasmine - 3ladies)  50#',36.00,100,'三女碎米',1,36.00,0,'sk','sk'),(10428,'Rice - (Jasmine - 3ladies)  25#',34.00,200,'三女香米',1,26.00,0,'sk','sk'),(10023,'Rice - (Jasmine - 3ladies)  50#',65.00,200,'三女香米',1,51.00,0,'sk','sk'),(11402,'Rice - (Jasmine - 3ladies) 10/5#',8.99,100,'三女小包香米',1,6.95,0,'bag','bag'),(11833,'Rice - (Jasmine - 3ladies) 5/10#',16.00,100,'三女小包香米',1,11.00,0,'bag','bag'),(12223,'Rice - (Jasmine - OCM)  50#',29.00,200,'OCM香米',1,29.00,0,'cs','cs'),(10264,'Rice - (Jasmine )  50#',34.00,200,'香米',1,1.00,0,'sk','sk'),(11500,'Rice - (Jasmine Green Elephant ) 10/5#',3.99,100,'绿象香米',1,3.99,0,'bag','bag'),(11501,'Rice - (Jasmine Green Elephant ) 5/10#',6.50,100,'绿象香米',1,6.50,0,'bag','bag'),(10799,'Rice - (Jasmine Green Elephant ) 50#',40.00,200,'绿象香米',1,40.00,0,'sk','sk'),(12186,'Rice - (Sweet - 3ladies)  25#',29.00,300,'三女糯米',1,1.00,0,'sk','sk'),(12187,'Rice - (Sweet - 3ladies)  50#',58.00,300,'三女糯米',1,1.00,0,'sk','sk'),(11836,'Rice - (Sweet - 3ladies) 10/5#',10.99,300,'三女小包糯米',1,10.99,0,'bag','bag'),(10775,'Rice - 8-Blend Wholegrain Rice (Mogami) 6/5#',16.95,100,'養生米',1,16.95,0,'bag','bag'),(11966,'Rice - Brown (Rice King) 10/4.4#',5.95,100,'糙米',1,5.95,0,'bag','bag'),(9124,'Rice - Crispy 36/10oz',113.00,100,'锅巴',36,3.99,0,'cs','pkg'),(11211,'Rice - Emata 11.02#',8.00,100,'缅甸儿玛塔香米',1,8.00,0,'bag','bag'),(11210,'Rice - Emata 33.07#',15.00,100,'缅甸儿玛塔香米',1,15.00,0,'bag','bag'),(11208,'Rice - Emata 55.12#',25.00,100,'缅甸儿玛塔香米',1,25.00,0,'sk','sk'),(10207,'Rice - Froz. Bamboo White Sticky 60/1pc',1.25,400,'凍竹筒糯米飯',1,1.25,0,'ea','ea'),(10587,'Rice - Froz.Glutinous Rice Cake w.Red Bean Paste  24/400g',28.95,400,'八宝糯米飯',1,1.50,0,'cs','bag'),(11401,'Rice - Jasmine 10/5#',6.99,100,'三美女香米三美女小包香米',1,6.99,0,'',''),(12112,'Rice - Jasmine Brown (3ladies) 10/5#',7.50,100,'三女小包糙香米',1,7.50,0,'pkg','pkg'),(11400,'Rice - Jasmine Red& Brown (3ladies) 10/5#',7.95,100,'三女红糙香米',1,7.95,0,'bag','bag'),(11604,'Rice - Millet Organic (WC)  14oz/pkg',2.99,100,'味全有机小米',1,2.99,0,'pkg','pkg'),(10377,'Rice - Multi Grain (Rice King) 8/4.4#',12.00,100,'高纤六合米',1,12.00,0,'bag','bag'),(11535,'Rice - Pon Lai Gold (Rice King/Short) 15#',13.00,100,'蓬萊短米',1,13.00,0,'bag','bag'),(11199,'Rice - Premium Short Grain 15# ',15.00,100,'東北大米',1,15.00,0,'bag','bag'),(11835,'Rice - Red (Rice King) 10/4.4#',6.99,100,'红米',1,6.75,0,'bag','bag'),(9039,'Rice ( Peacock) 50#',25.00,200,'孔雀米',1,25.00,0,'sk','sk'),(11177,'Rice (Basmati)   20#',28.00,200,'印度米',1,28.00,0,'sk','sk'),(11631,'Rice (Black Cargo/Asn/Tas) 10/3#',46.00,100,'东之味長春黑米',1,5.99,0,'cs','bag'),(10089,'Rice (Brown Sweet) 12/4#',1.00,100,'糙糯米',1,1.00,0,'cs','bag'),(10087,'Rice (Brown) (DFLY) 10/5#',1.00,100,'糙米',1,1.00,0,'cs','bag'),(10090,'Rice (Brown) (Gao Lut)  12/4#',1.00,100,'糙米',1,1.00,0,'cs','bag'),(11658,'Rice (Brown) (Homai) 8/5#',3.95,100,'宝牌糙米',1,3.95,0,'pkg','pkg'),(9683,'Rice (Brown) 15/2.2#',20.50,200,'糙米',1,1.59,0,'cs','pkg'),(5918,'Rice (Brown) 50#',38.00,200,'糙米',1,38.00,0,'sk','sk'),(9506,'Rice (Cal Rose - Blue)',15.25,200,'蓝国宝米',1,13.95,0,'sk','sk'),(11602,'Rice (Cal Rose - Botan Brown) 8/5#',5.69,100,'富貴花糙米',1,5.69,0,'bag','bag'),(11529,'Rice (Cal Rose - Botan) 4/10#',32.00,100,'富貴花',1,9.95,0,'cs','bag'),(10269,'Rice (Cal Rose - Botan) 50#',36.95,100,'富貴花',1,36.95,0,'sk','sk'),(11530,'Rice (Cal Rose - Botan) 8/5#',33.00,100,'富貴花',1,5.50,0,'cs','bag'),(4875,'Rice (Cal Rose - Pear Blossom) 50#',26.00,200,'水晶米',1,26.00,0,'sk','sk'),(11914,'Rice (Cal Rose - Yellow/Kokuho) 15#',12.00,100,'黄国宝米',1,12.00,0,'bag','bag'),(5733,'Rice (Cal Rose - Yellow/Kokuho) 50#',28.99,200,'黄国宝米',1,28.99,0,'sk','sk'),(11659,'Rice (Cal Rose Broken) (Homai) 15#',9.95,100,'蓬莱煲粥米',1,9.95,0,'bag','bag'),(10091,'Rice (Heathy Assorted) 12/4#',1.00,100,'精選健康大米',1,1.00,0,'cs','bag'),(11100,'Rice (Jasmine - Buddha)  25#',20.00,200,'佛祖香米',1,20.00,0,'sk','sk'),(10535,'Rice (Jasmine - Buddha)  50#',49.50,200,'佛祖香米',1,39.00,0,'sk','sk'),(12242,'Rice (Jasmine - Butterfly) 25#',32.00,200,'蝴蝶香米',1,32.00,0,'sk','sk'),(12241,'Rice (Jasmine - Butterfly) 50#',63.00,200,'蝴蝶香米',1,50.00,0,'sk','sk'),(9871,'Rice (Jasmine - DFLY)  50#',35.00,200,'蜻蜓香米',1,35.00,0,'sk','sk'),(11440,'Rice (Jasmine - DFLY) 25#',19.00,200,'蜻蜓香米',1,19.00,0,'sk','sk'),(9955,'Rice (Jasmine - Farmer King)',45.00,200,'象神香米',1,38.00,0,'sk','sk'),(12185,'Rice (Jasmine - FW) 50#',33.00,300,'第一香米',1,31.99,0,'sk','sk'),(9806,'Rice (Jasmine - Phoenix)  6/4.4#',5.99,200,'金凤香米',1,5.99,0,'pkg','pkg'),(9886,'Rice (Jasmine - Phoenix) 25#',34.00,200,'凤凰香米',1,25.00,0,'sk','sk'),(5220,'Rice (Jasmine - Phoenix) 50#',64.00,200,'凤凰香米',1,46.00,0,'sk','sk'),(12038,'Rice (Jasmine - Phoenix) 6/10#',15.00,200,'金凤香米',1,11.00,0,'pkg','pkg'),(11499,'Rice (Jasmine - Rice King) 20#',18.00,100,'香米',1,18.00,0,'bag','bag'),(6157,'Rice (Jasmine - Rice King) 50#',42.00,200,'香米',1,42.00,0,'sk','sk'),(9543,'Rice (Jasmine Black) 10#',26.70,200,'黑香米',1,2.67,0,'bag','bag'),(10152,'Rice (Jasmine- Super Luck el.) 50#',29.50,200,'幸运象香米',1,23.95,0,'sk','sk'),(9390,'Rice (Lucky) 50#',28.00,200,'大三元米',1,13.50,0,'sk','sk'),(11986,'Rice (Matsuri)   15#',23.95,100,'高级寿司米',1,23.95,0,'bag','bag'),(10197,'Rice (Nishiki) 15#',17.00,100,'日本錦米',1,17.00,0,'bag','bag'),(6135,'Rice (Nishiki) 50#',46.00,200,'日本锦米',1,25.00,0,'sk','sk'),(10198,'Rice (Nishiki) 8/5#',8.99,100,'日本錦米',1,8.99,0,'cs','bag'),(11603,'Rice (Nishiki) Prem Brown 8/5#',45.00,100,'日本錦糙米',1,7.95,0,'cs','bag'),(9811,'Rice (Phoenix - Broken) 50#',1.00,200,'金凤碎香米',1,1.00,0,'sk','sk'),(10088,'Rice (Red) (DFLY) 10/5#',49.50,100,'红米',1,5.50,0,'cs','bag'),(9750,'Rice (Red) 16oz/pkg',2.99,100,'红曲米',1,2.99,0,'pkg','pkg'),(9282,'Rice (Short Grain Sweet) 25#',20.00,200,'糯米',1,18.00,0,'sk','sk'),(6232,'Rice (Short Grain Sweet) 50#',42.00,200,'短糯米',1,22.00,0,'sk','sk'),(10506,'Rice -(Short Grain Sweet/Rice King) 8/4.4#',5.50,100,'短糯米',1,5.50,0,'bag','bag'),(5914,'Rice (Sweet Black) 10/5#',10.99,100,'黑糯米',1,10.99,0,'cs','bag'),(9481,'Rice (Sweet Long Grain)  10/5#',4.95,100,'糯米',1,4.95,0,'bag','bag'),(11657,'Rice (Sweet Thai Short)(Festive) 8/5#',4.50,100,'寶牌圆糯米',1,4.50,0,'pkg','pkg'),(10306,'Rice (Sweet Thai) 10/5#',4.95,100,'糯米',1,4.95,0,'bag','bag'),(10378,'Rice (Sweet Thai)Green Elephant) 10/4.4#',55.00,100,'长糯米',1,6.00,0,'cs','bag'),(5583,'Rice (Sweet Thai/Rice King) 50#',50.00,200,'糯米',50,50.00,0,'sk','sk'),(12226,'Rice (Sweet USA/Apple) 50#',44.00,300,'糯米',1,44.00,0,'sk','sk'),(11549,'Rice (Sweet)(Hakubai Mochigome) 4/10#',45.00,100,'日本糯米',1,12.50,0,'cs','bag'),(11548,'Rice (Sweet)(Hakubai Mochigome) 8/5#',45.00,100,'日本糯米',1,6.50,0,'cs','bag'),(11670,'Rice (Sweet/Homai) 50#',36.00,100,'宝牌圆糯米',1,36.00,0,'sk','sk'),(4724,'Rice (Texas - Butterfly ) 50#',20.00,200,'德州米',1,12.00,0,'sk','sk'),(11954,'Rice Cake - ball (Wang) 12/2#',40.00,300,'韩國年糕球',1,3.89,0,'cs','pkg'),(10516,'Rice Cake - Dry  40/14oz',75.00,100,'白粿干/干年糕',1,2.79,0,'cs','pkg'),(11827,'Rice Cake - Dry (Wang) 25/1.5#',70.00,100,'韩國年糕片',1,3.29,0,'cs','pkg'),(11553,'Rice Cake - Sliced (Wang) 12/2#',40.00,300,'韩國年糕片',1,4.50,0,'cs','pkg'),(11554,'Rice Cake - Stick (Wang) 12/2#',40.00,300,'韩國年糕條',1,4.50,0,'cs','pkg'),(10038,'Rice Cracker Coconut 20/5oz',22.50,100,'椰香米果',1,1.69,0,'cs','pkg'),(11021,'Rice Cracker w. Black Sesame(SH) 20/160g',1.99,100,'黑芝麻米老',1,1.99,0,'pkg','pkg'),(11020,'Rice Cracker w. White Sesame(SH) 20/160g',1.99,100,'白芝麻米老',1,1.99,0,'pkg','pkg'),(9661,'Rice Napkin (CLRC001)',23.00,100,'饭网',1,21.90,0,'ea','ea'),(10883,'Rice Paper - (3ladies) 22cm 44/12oz',75.00,100,'三女米紙',1,2.29,0,'cs','pkg'),(10024,'Rice Paper - (3ladies) 25cm 44/12oz',75.00,100,'三女米纸',1,2.29,0,'cs','pkg'),(10280,'Rice Paper - (3ladies) 31cm 44/12oz',75.00,100,'三女米紙',1,2.29,0,'cs','pkg'),(6197,'Rice Paper - (DF)  22cm  8  44/12oz',64.50,100,'米纸',1,2.79,0,'cs','pkg'),(10538,'Rice Paper - (DF/Rose) 16cm 44/12oz',60.00,100,'蜻蜓米紙',1,1.95,0,'cs','pkg'),(10488,'Rice Paper - (DF/Rose) 31cm 44/12oz',60.00,100,'蜻蜓米紙',1,1.95,0,'cs','pkg'),(10374,'Rice Paper - (DH) Thin 31cm  44/12oz',60.00,100,'特級米紙',1,1.95,0,'cs','pkg'),(10501,'Rice paper - (F/horse) 31cm 44/340g',60.00,100,'飛馬米紙',1,1.95,0,'cs','pkg'),(6196,'Rice Paper - 31cm 12   44/12oz',50.50,100,'米纸',1,1.30,0,'cs','pkg'),(11152,'roasted barley 12/2#',43.00,100,'韩国烤麦茶',1,4.95,0,'cs','pkg'),(12175,'Roasted Rice Powder 3oz/pkg',1.39,100,'炒米粉',1,1.39,0,'pkg','pkg'),(11071,'Roll - Choco Gr/Tea (I Mei) 12/9.63oz',3.99,100,'绿茶巧克力卷',1,3.99,0,'box','box'),(11251,'Roll - Choco Taro (I Mei) 12/4.83oz',2.99,100,'芋頭巧克力巻',1,2.99,0,'box','box'),(10052,'Roll - Cuttlefish (Laurel) 25/10pcs',53.00,400,'火锅花枝饺',1,2.99,0,'cs','pkg'),(11788,'Roll - Egg Dumpling (Laurel) 25/8pcs',53.00,400,'蛋饺',1,2.99,0,'cs','pkg'),(10389,'Roll - Egg Dumpling 25/10pcs',53.00,400,'火鍋蛋餃',1,2.99,0,'cs','pkg'),(11789,'Roll - Fish Dumpling (Laurel) 25/10pcs',53.00,400,'魚饺',1,2.99,0,'cs','pkg'),(10388,'Roll - Fish Dumpling 25/16pcs',53.00,400,'火鍋魚餃',1,2.99,0,'cs','pkg'),(11787,'Roll - Pollock Fish (Laurel) 25/10pcs',53.00,400,'火锅饺',1,2.99,0,'cs','pkg'),(10053,'Roll - Seafood Patties(Laurel)25/16pcs',53.00,400,'火锅饺',1,2.99,0,'cs','pkg'),(9404,'Sake Bottle - Large 1dz (Tokkuri) 50/288ml',31.50,100,'日本酒樽(大)',1,26.50,1,'dz','dz'),(10507,'Sake Bottle - Large 6/6pc (71036A)',19.50,100,'日本酒樽(大)',1,4.99,1,'box','ea'),(10495,'Sake Bottle - Small  8/6pc (71036)',17.50,100,'日本酒樽(小)',1,2.59,1,'box','ea'),(10296,'Salad Bar',0.00,100,'',1,0.00,0,'cs',''),(5951,'Salt - Curing 5#',11.00,100,'硝盐',1,11.00,0,'bag','bag'),(9101,'Salt - Indiv Pkg  3/1000 pcs',14.50,100,'小盐包',1,9.99,0,'cs','cs'),(11881,'Salt - Iodized Table Salt 24/26oz',0.79,100,'含碘食盐',1,0.79,0,'ea','ea'),(11166,'Salt - Plain Table Salt 24/26oz',0.79,100,'不含碘食盐',1,0.79,0,'ea','ea'),(11396,'Salt - Sea (Coars) 6/5#',6.50,100,'粗海盐',1,6.50,0,'bag','bag'),(10290,'Salt - Shaker   1 1/4oz',1.19,100,'盐瓶',1,1.19,1,'ea','ea'),(9007,'Salt 50#',13.00,200,'盐',1,13.00,0,'sk','sk'),(11089,'Satay Sate Trieu Chau (DF) 24/16oz',108.00,100,'大樽潮州沙茶酱',1,4.99,0,'cs','btl'),(11014,'Satay Sate Trieu Chau (DF) 24/8oz',35.00,100,'潮州沙茶醬',1,1.95,0,'cs','btl'),(10191,'Satay Sauce (DY) 12/7oz',1.00,100,'沙嗲醬',1,1.00,0,'cs','cs'),(11883,'Satay Sauce W. Peanut  (Lee) 24/7oz',49.50,100,'即食沙茶酱',1,2.19,0,'cs','jar'),(10761,'Satay Seasoning (DF)  36/3.5oz',32.00,100,'沙嗲粉',1,0.99,0,'cs','pkg'),(9315,'Satay Seasoning Mix 120pkg/cs',85.00,100,'沙嗲粉',120,0.75,0,'cs','pkg'),(11115,'Sauce - All Purpose Marinade (LKK) 12/14oz',2.99,100,'瑞士汁',1,2.99,0,'btl','btl'),(11248,'Sauce - Black Pepper (LKK) 12/8.1oz',3.19,100,'李锦记黑椒汁',1,3.19,0,'jar','jar'),(11117,'Sauce - Brown Braising (LKK) 12/14oz',2.99,100,'红烧汁',1,2.99,0,'btl','btl'),(11114,'Sauce - Chinese Marinade (LKK) 12/14oz',3.69,100,'李锦记卤水汁',1,2.99,0,'btl','btl'),(11101,'Sauce - For Plum & Soy Bean Spare Ribs(LKK) 12/8.8oz ',2.19,100,'梅子排骨醬',1,2.19,0,'jar','jar'),(11112,'Sauce - Hainanese For Chix Rice Mix Preparation (Lee) 24/8oz',2.95,100,'海南鸡饭配料',1,2.95,0,'jar','jar'),(12314,'Sauce - Kishu Plum 12/35.27oz (Wakou)',1.00,100,'',1,1.00,0,'cs','cs'),(12353,'Sauce - Lemon (KC) 24/15oz ',76.00,100,'冠珍柠檬酱',1,1.00,0,'cs','cs'),(11116,'Sauce - Marinade For Drunken Chix (LKK) 12/14oz',2.99,100,'醉鸡汁',1,2.99,0,'btl','btl'),(12313,'Sauce - Sichuan Hot & Spicy 12/8.1oz (LKK)',63.48,100,'李锦记川式麻辣酱',1,5.29,0,'cs','jar'),(11247,'Sauce - Spare Rib (LKK)12/14oz',3.29,100,'李锦记排骨醬',1,3.29,0,'jar','jar'),(12315,'Sauce - Spicy Sesame 12/35.27oz (Wakou)',1.00,100,'',1,1.00,0,'cs','cs'),(12366,'Sauce - Tempura Dipping (KKM) 12/10oz/btl',3.49,100,'天富罗酱',1,3.49,0,'btl','btl'),(11765,'Sauce - Yen Tofu (Pantai/8824) 24/16oz',52.00,100,'泰國腐乳酱',1,2.49,0,'cs','cs'),(11564,'Sauce Bottle w Cap 12/16oz',0.50,100,'空瓶',1,0.50,0,'ea','ea'),(11563,'Sauce Bottle w Cap 4/1gal',1.39,100,'空瓶',1,1.39,0,'ea','ea'),(11497,'Sausage - Chinese Lopchong (Flamingo)) 20/12oz',4.95,400,'广東白油肠',1,4.95,0,'pkg','pkg'),(9990,'Sausage - Chinese Lopchong (KYJ) 32/14oz',160.00,400,'金然栈腊肠',1,6.19,0,'cs','pkg'),(11496,'Sausage - Chinese Lopchong (QueHuong) 20/16oz',6.99,400,'梅玖露腊肠',1,6.99,0,'pkg','pkg'),(9492,'Sausage - Chinese Lopchong (WC) 40/12oz/pkg',140.00,400,'白油肠',1,4.00,0,'cs','pkg'),(6094,'Sausage - Chinese Lopchong Bulk/Canada)',9.95,500,'散裝腊肠',40,9.95,0,'lb','lb'),(11296,'Sausage - Chinese Sweet Lopchong (WC) 40/12oz',4.95,500,'台湾香腸',1,4.95,0,'pkg','pkg'),(10136,'Sausage - Laoation Pork (Fz) 20/',1.00,400,'急凍豬肉腸',1,1.00,0,'cs','cs'),(9184,'Sausage - Liver Chinese Style 12oz/bag',4.99,400,'鸭肝肠',1,4.99,0,'pkg','pkg'),(9052,'Scallop - Breaded Imitation 30#',45.00,400,'带粉假带子',30,1.50,0,'cs','lb'),(9845,'Scallop - Flavoured Cake (Do Do) 30/1#',28.50,400,'假带子',1,0.95,0,'cs','lb'),(9328,'Scallops  20-30 (Block Froz) 5#/bx',42.50,400,'带子',5,8.50,0,'box','box'),(9264,'Scallops  20-30 (Block Froz). 10/5#',425.00,400,'带子',50,8.50,0,'cs','lb'),(12151,'Scallops  60-80  6/5#',149.70,400,'带子',1,4.99,0,'cs','cs'),(9477,'Scallops  80-100  6/5# ',135.00,400,'带子',1,4.50,0,'cs','lb'),(5344,'Scallops - Bay  30#',138.00,400,'小带子',30,4.60,0,'cs','lb'),(6218,'Scallops - Block Frozen 10-20 50#',375.00,400,'带子',50,7.50,0,'cs','lb'),(10657,'Scallops - Dried (0828-B2)',68.00,100,'瑤柱碎',1,68.00,0,'lb','lb'),(12204,'Scallops - Dried 2/22# (0826-SA1)',59.00,100,'瑤柱',1,59.00,0,'lb','lb'),(10328,'Scallops - Dried 2/22# (0837-S1)',89.00,100,'瑤柱',1,89.00,0,'lb','lb'),(11438,'Scallops - Pieces  6/5#',130.50,400,'碎带子',1,4.35,0,'cs','lb'),(6217,'Scallops 10-20  (Block Froz) 10/5#',475.00,400,'带子',5,9.50,0,'cs','lb'),(9356,'Scallops 10-20  (IQF) 6/5#',315.00,400,'带子',30,10.50,0,'cs','lb'),(9259,'Scallops 20-30  (IQF) 6/5#',238.50,400,'带子',30,7.95,0,'cs','lb'),(6021,'Scrubber - Green 9 x6  6/pkg',6.50,100,'绿碗擦',1,6.50,1,'pkg','pkg'),(12042,'Scrubber - Green Med Duty 3/20pkg',1.00,100,'绿碗擦',1,1.00,0,'cs','cs'),(12043,'Scrubber - Green Med Duty(S096) 6/10pkg',1.00,100,'绿碗擦',1,1.00,0,'cs','cs'),(12164,'Scrubber - White Lt Duty(90-030) 3.5x6  40pk',16.00,100,'白碗擦(轻)',1,16.00,0,'cs','cs'),(11307,'Sea Cucumber Black Froz. 30#',7.99,500,'凍海參',1,7.99,0,'lb','lb'),(9541,'Sea Cucumber White Froz. 30#',8.29,500,'凍海參',1,8.29,0,'lb','lb'),(10422,'Sea Moss 1oz',8.99,100,'發菜',1,8.99,0,'pkg','pkg'),(9491,'Seafood Mix (Lion Head) 20/14oz',2.89,400,'',1,2.89,0,'pkg','pkg'),(11618,'Seasoned Soy Sauce For Seafod - (Tung Chun) 24/18oz',0.00,100,'',1,0.00,0,'',''),(11872,'Seaweed - (Nori) 10/50sht',95.00,100,'紫菜片',1,95.00,0,'cs','cs'),(12216,'Seaweed - (Nori) 20/100sht 280g',250.00,100,'紫菜片',1,199.00,0,'cs','cs'),(10283,'Seaweed - (Nori) 4/12/10shts',1.00,100,'紫菜片',1,1.00,0,'cs','cs'),(5015,'Seaweed - (Nori) 5/100sht',120.00,100,'紫菜片',10,14.00,0,'cs','pkg'),(10244,'Seaweed - (Nori) Half (Yaki Sushi) 10/100shts',110.50,100,'半张紫菜片',1,110.50,0,'cs','pkg'),(11367,'Seaweed - (Nori) Half 10/100shts',89.00,100,'半张紫菜片',1,89.00,0,'cs','cs'),(12299,'Seaweed - (Nori) Half 40/100sht 130g',250.00,100,'半张紫菜片',1,250.00,0,'cs','cs'),(12215,'Seaweed - (Nori) Half 5/100sht 130g',28.00,100,'半张紫菜片',1,28.00,0,'cs','cs'),(10142,'Seaweed - (Nori) Half 5/200shts',65.00,100,'半张紫菜片',1,16.00,0,'cs','pkg'),(6073,'Seaweed - Dashi (Konbu) 10/2.2#',25.50,100,'昆布片',1,25.50,0,'pkg','pkg'),(12156,'Seaweed - Dashi (Konbu/Tetsujin) 12/2#',18.00,100,'昆布片(铁人)',1,18.00,0,'pkg','pkg'),(11868,'Seaweed - Dashi (Konbu/WP) 24/4oz',3.99,100,'昆布片',1,3.99,0,'pkg','pkg'),(10778,'Seaweed - Dried Color Mixed 10/3.5oz #14332',12.00,100,'多色海藻',1,12.00,0,'pkg','pkg'),(9631,'Seaweed - Dried Fueru Wakame 12/16oz',16.00,100,'海带碎',1,16.00,0,'pkg','pkg'),(11947,'Seaweed - Dried Fueru Wakame 36/2oz',1.99,100,'海带碎',1,1.99,0,'pkg','pkg'),(12360,'Seaweed - Dried Kaiso Salad 2.64oz',6.99,100,'海带',1,6.99,0,'pkg','pkg'),(9678,'Seaweed - Dried Round  60/2.8oz/pkg',3.29,100,'紫菜饼',1,3.29,0,'pkg','pkg'),(9401,'Seaweed - Dried Strips  100/3oz/pkg',95.00,100,'海带丝',1,0.99,0,'cs','pkg'),(12230,'Seaweed - Dried Strips  30/16oz/pkg',110.00,100,'海带丝',1,110.00,0,'cs','cs'),(9046,'Seaweed - Dried Wakame - Ito 20/3oz',75.00,100,'海带',25,4.95,0,'cs','pkg'),(9399,'Seaweed - Dry Slicve (China)  50/7oz/pkg',1.79,100,'海带片',1,1.79,0,'pkg','pkg'),(10542,'Seaweed - Hijiki 12/16oz',20.50,100,'紫菜碎',1,20.50,0,'pkg','pkg'),(10601,'Seaweed - Knot  60/2.1oz',1.99,100,'海帶結',1,1.99,0,'cs','pkg'),(9178,'Seaweed - Nori (Akibono) 20/50shts',165.00,100,'紫菜片',1,9.50,0,'cs','pkg'),(11533,'Seaweed - Nori Half (Akibono) 20/2/50shts',165.00,100,'半切紫菜片',1,165.00,0,'cs','pkg'),(6139,'Seaweed - Red (Nori) 10/50sht',95.00,100,'烤紫菜',1,85.00,0,'cs','pkg'),(9558,'Seaweed - Silver (Nori) 4/12/10sht',150.00,100,'',1,80.00,0,'cs','cs'),(9928,'Seaweed - Teriyaki Nori  12/0.8oz/jar.',21.00,100,'',1,1.99,0,'cs','jar'),(6221,'Seaweed Salad 4.4#',19.50,300,'紫菜沙拉',1,19.50,0,'box','box'),(9920,'Seaweed Salad 4.4# (China)',19.50,300,'',1,17.00,0,'box','box'),(12132,'Seaweed Stem Salted 30/7oz (#01816)',1.00,300,'',1,1.00,0,'pkg','pkg'),(10081,'Sesame Cookies (DFLY) (Soft) 100/3.5oz',1.00,100,'嘉明牌芝麻软糖',1,1.00,0,'cs','cs'),(12069,'Sesame Paste Black (Lian How) 12/16oz',63.00,100,'纯黑芝麻酱',1,6.50,0,'cs','btl'),(11557,'Sesame Paste Black (Lian How) 24/8oz',5.49,100,'纯黑芝麻酱',1,5.49,0,'jar','jar'),(9602,'Sesame Paste White (Lian How) 12/16oz',70.00,100,'纯芝麻酱',1,6.50,0,'cs','btl'),(6222,'Sesame Paste White (Lian How) 24/8oz',5.49,100,'芝麻酱',1,5.49,0,'jar','jar'),(9377,'Sesame Paste White (Lian How) 4/1gal',128.00,100,'芝麻酱',4,40.00,0,'cs','can'),(11111,'Sesame Powdered Dessert (Torto) 20/5.2oz',2.19,100,'多多芝麻糊',1,2.19,0,'box','box'),(6223,'Sesame Seed - Black 10/5#/bag',14.00,100,'生黑芝麻',1,14.00,0,'bag','bag'),(9442,'Sesame Seed - Roasted Black 24/1.1# ',118.95,100,'烤黑芝麻',24,5.20,0,'cs','bag'),(10310,'Sesame Seed - Roasted Black(Iri Goma) 4/2#',55.50,100,'烤黑芝麻',1,15.00,0,'cs','pkg'),(10173,'Sesame Seed - Roasted White 8/5#',147.00,100,'烤白芝麻',8,20.00,0,'cs','bag'),(6206,'Sesame Seed - Roasted White(Iri Goma) 4/2#',33.00,100,'烤白芝麻',24,10.00,0,'cs','pkg'),(12163,'Sesame Seed - White 50#',85.00,100,'白芝麻',1,85.00,0,'sk','sk'),(6224,'Sesame Seed - White 6/5#',72.00,100,'生白芝麻',5,12.00,0,'cs','pkg'),(9816,'Shelled Chestnut 40/150g',39.50,100,'无壳栗子仁',1,1.29,0,'cs','pkg'),(6351,'Shio Yap',20.50,400,'烧鸭',1,20.50,0,'pc','pc'),(9494,'Shio Yuk',6.95,400,'烧肉',1,6.95,0,'lb','lb'),(11940,'Shrimp - 31-40 HLSO EZP 10/2#',9.90,400,'虾',1,4.95,0,'pkg','lb'),(9177,'Shrimp - 41-50 20#',62.00,400,'虾',20,3.10,0,'cs','lb'),(10301,'Shrimp - B/T 13-15  24#',224.40,400,'蝦',1,9.35,0,'cs','lb'),(6233,'Shrimp - B/T 16-20 24#',240.00,400,'虾',1,10.00,0,'cs','lb'),(4761,'Shrimp - B/T 21-25 24#',142.88,400,'虾',24,5.95,0,'cs','lb'),(6234,'Shrimp - B/T 26-30 24#',170.16,400,'虾',24,7.09,0,'cs','lb'),(4764,'Shrimp - B/T 31-40  6/4#',91.20,400,'虾',24,3.80,0,'cs','lb'),(6235,'Shrimp - B/T 41-50 24#',96.00,400,'虾',24,4.00,0,'cs','lb'),(6236,'Shrimp - B/T 61-70',120.00,400,'虾',1,3.00,0,'cs','lb'),(5016,'Shrimp - Bay P&D 10#',55.00,400,'无壳虾',10,5.50,0,'cs','lb'),(9469,'Shrimp - Butterfly Breaded 16-20  20#',52.00,300,'炸虾',1,2.60,0,'cs','lb'),(9526,'Shrimp - Butterfly Breaded 21-25 4/3#/bx ',36.60,400,'炸虾',1,3.05,0,'cs','lb'),(9527,'Shrimp - Butterfly Breaded 26-30  4/3#/bx ',58.00,400,'炸虾',1,2.90,0,'cs','lb'),(10650,'Shrimp - Coconut Breaded Contessa 10/11oz',1.00,400,'椰子蝦',1,1.00,0,'cs','cs'),(12355,'Shrimp - Cooked Head On 13-15 (IQF)20/1#',8.99,400,'有头熟虾',1,8.99,0,'box','box'),(9741,'Shrimp - Cooked P&D T/On 21-25 5/2#',79.50,400,'有尾熟虾',1,7.95,0,'cs','lb'),(9149,'Shrimp - Dried (DF) 50/3.5oz/pkg',4.99,100,'虾米',1,4.99,0,'pkg','pkg'),(10240,'Shrimp - Dried 6/5#',25.95,100,'蝦米',1,25.95,0,'pkg','pkg'),(9468,'Shrimp - Dusted 41-50  40#',136.00,300,'带粉虾仁',1,3.40,0,'cs','cs'),(9665,'Shrimp - Dusted 41-50 6/5#',102.00,300,'带粉虾仁',1,3.40,0,'cs','cs'),(9686,'Shrimp - Dusted 61-70  6/5#',68.00,300,'带粉虾仁',1,3.40,0,'cs','cs'),(9793,'Shrimp - Duster 41-50 40#',124.00,300,'带粉虾仁',1,3.10,0,'cs','lb'),(12331,'Shrimp - Freshwater Hoso 12/2#',1.00,400,'',1,1.00,0,'cs','cs'),(12332,'Shrimp - Head On (FW) (4/6) 12/2#',200.40,400,'有頭蝦',1,8.35,0,'cs','lb'),(10489,'Shrimp - Head On (FW) 6-8 10/2#',140.00,400,'有頭蝦',1,7.00,0,'cs','lb'),(10493,'Shrimp - Head On 20-30 24#',118.80,400,'有頭蝦',1,4.95,0,'cs','lb'),(10427,'Shrimp - Head On 30-40 24#',95.76,400,'有頭蝦',1,3.99,0,'cs','lb'),(6239,'Shrimp - Head On 40-50 40#',158.00,400,'有头蝦',40,3.95,0,'cs','lb'),(6240,'Shrimp - Head On 50-60 24#',86.16,400,'有头虾',40,3.59,0,'cs','lb'),(6241,'Shrimp - Head On 60-70 40#',130.00,400,'虾',1,3.25,0,'cs','lb'),(12148,'Shrimp - Head On 70-80 40#',158.00,400,'有头蝦',1,3.95,0,'cs','lb'),(12060,'Shrimp - Head On FW 4-6 12/2#',150.00,400,'有头蝦',1,7.50,0,'cs','lb'),(11929,'Shrimp - Head On Tiger 16-20 12/1#',10.00,400,'有頭老虎蝦',1,10.00,0,'box','box'),(11916,'Shrimp - Nobashi Ebi (21-25) 30/20pc',150.00,400,'寿司炸虾',1,5.00,0,'cs','tray'),(6137,'Shrimp - Nobashi Ebi (26-30) 30tray',148.50,400,'寿司炸虾',1,4.95,0,'cs','tray'),(10722,'Shrimp - P & D 36-40  40#',162.00,400,'無殼蝦',1,4.05,0,'cs','lb'),(9010,'Shrimp - P&D 21-25 T/Off 10#',61.90,400,'无壳虾',10,6.19,0,'cs','lb'),(9967,'Shrimp - P&D 21-25 T/On  5/2#',61.90,400,'有尾蝦',1,6.19,0,'cs','lb'),(10270,'Shrimp - P&D 26-30 T/Off 20#',123.80,400,'無殼蝦',1,6.19,0,'cs','lb'),(9398,'Shrimp - P&D 26-30 T/On 10#',59.50,400,'有尾虾',10,5.95,0,'cs','lb'),(9529,'Shrimp - P&D 31-40   24# ',132.00,400,'无壳虾',1,5.50,0,'cs','lb'),(10499,'Shrimp - P&D 31-40 Tail On 5/2#',44.00,400,'有尾蝦',1,4.40,0,'cs','lb'),(10011,'Shrimp - P&D 31-40 Tail On Cooked 10#',49.00,400,'有尾熟蝦',1,4.90,0,'cs','lb'),(10880,'Shrimp - P&D 41-50 (IQF) Tail Off 30#',135.00,400,'無殼蝦',1,4.50,0,'cs','lb'),(5028,'Shrimp - P&D 41-50 30#',119.70,400,'无壳虾',10,3.99,0,'cs','lb'),(10497,'Shrimp - P&D 41-50 Tail On 5/2#',39.50,400,'有尾蝦',1,3.95,0,'cs','lb'),(9164,'Shrimp - P&D 51-60  30#',165.00,400,'无壳虾',10,5.50,0,'cs','lb'),(9304,'Shrimp - P&D 51-60 Tail On 20#',73.00,300,'虾',10,3.65,0,'cs','cs'),(9364,'Shrimp - P&D 61-70  10# ',45.00,400,'无壳虾',10,4.50,0,'cs','cs'),(9490,'Shrimp - P&D 71-90 40#',183.60,400,'无壳虾',1,4.59,0,'cs','lb'),(10369,'Shrimp - P&D 71-90 Block Froz.50#',285.00,400,'無殼蝦',1,5.70,0,'cs','lb'),(12158,'Shrimp - P&D Cooked 71-90 10#',55.00,400,'',1,5.50,0,'cs','lb'),(11747,'Shrimp - Panko Breaded  (13/15) 100cts',18.00,100,'炸虾',1,18.00,0,'cs','cs'),(11944,'Shrimp - Panko Breaded  (31/40) 6.97#',25.00,400,'炸虾',1,25.00,0,'cs','lb'),(9283,'Shrimp - Pink 31-40 24# (Indo)',81.60,400,'',24,3.40,0,'cs','cs'),(9331,'Shrimp - Pink 41-50  24# (Indo)',68.40,400,'',24,2.85,0,'cs','cs'),(10649,'Shrimp - Tempura Breaded 20tray/6pc',60.00,400,'炸虾',1,0.50,0,'cs','pc'),(10068,'Shrimp - White  16-20  24#',150.00,400,'蝦',1,6.25,0,'cs','lb'),(12191,'Shrimp - White EZP 16-20  10/2#',135.00,400,'蝦',1,14.00,0,'cs','pkg'),(9466,'Shrimp - WHT 21-25  40#',211.60,400,'虾',1,5.29,0,'cs','lb'),(10523,'Shrimp - Wht 21-25 Ez Pl  10/2#',115.00,400,'蝦',1,5.75,0,'cs','lb'),(11201,'Shrimp - WHT 26-30 (IQF) 20/1.5#',10.12,400,'単冻蝦',1,6.75,0,'bag','lb'),(9530,'Shrimp - WHT 26-30 40#',199.60,400,'虾',1,4.99,0,'cs','lb'),(12217,'Shrimp - WHT 26-30 EZP 10/2#',9.90,400,'虾',1,4.95,0,'bag','lb'),(9571,'Shrimp - WHT 31-35  40#',175.60,400,'虾',1,4.39,0,'cs','lb'),(11202,'Shrimp - WHT 31-35 (IQF) 20/1.5#',8.62,400,'単冻蝦',1,5.75,0,'bag','lb'),(4763,'Shrimp - WHT 31-40 40#',179.60,400,'虾',24,4.49,0,'cs','lb'),(9531,'Shrimp - WHT 36-40 40#',168.00,400,'虾',1,4.20,0,'cs','lb'),(9532,'Shrimp - WHT 41-50 40#',165.20,400,'虾',1,4.13,0,'cs','lb'),(6245,'Shrimp - WHT 51-60 40# ',159.60,400,'白虾',24,3.99,0,'cs','lb'),(9363,'Shrimp - WHT 61-70 10/4#',159.60,400,'白虾',40,3.99,0,'cs','cs'),(6237,'Shrimp - WHT 71-90 40#',120.00,400,'虾',24,3.00,0,'cs','lb'),(5876,'Shrimp (Ama Ebi) 50pc/20tray (L)',175.00,400,'虾',1,7.50,0,'cs','tray'),(6269,'Shrimp (Sushi Ebi)  2L 20tray/30pcs',84.00,400,'虾',1,0.14,0,'cs','tray'),(9898,'Shrimp (Sushi Ebi)  3L 20tray/30pcs',117.00,400,'',1,5.85,0,'cs','pkg'),(11437,'Shrimp Ball (Ho Ho) 30/16oz',6.49,400,'虾丸',1,6.49,0,'pkg','pkg'),(9294,'Shrimp Ball (WC) 48/8oz',59.00,400,'虾丸',30,2.25,0,'cs','pkg'),(6238,'Shrimp Chips - 10/5#/box',10.00,100,'虾片',1,10.00,0,'box','box'),(9167,'Shrimp Chips - 50/16oz/box',3.00,100,'虾片',1,3.00,0,'bx','box'),(12211,'Shrimp Chips Prawn Cracker 48/7oz (DF/51665)',2.49,100,'虾片',1,2.49,0,'box','box'),(12337,'Shrimp Chips Prawn Cracker 50/8oz (DF/51667)',2.49,100,'虾片',1,2.49,0,'pkg','pkg'),(11943,'Shrimp Paste  - Bean Oil (BF)  24/7oz',4.29,100,'蝴蝶虾膏酱',1,4.29,0,'jar','jar'),(11148,'Shrimp Paste  - Bean Oil (DF)  24/7oz',80.00,100,'蜻蜓蝦膏醬',1,4.49,0,'cs','jar'),(9715,'Shrimp Paste - Bean Oil (DFLY) 48/7oz',123.00,100,'虾膏酱',1,2.95,0,'cs','btl'),(9792,'Shrimp Paste - Fine (KC) 24/13oz',75.50,100,'幼滑虾酱',1,4.49,0,'cs','btl'),(9643,'Shrimp Paste - Salted  24/13oz  (KC)',75.50,100,'粗咸虾酱',1,4.49,0,'cs','btl'),(12262,'Shrimp Paste - Salted (BF)) (Thai) 24/14oz ',72.00,100,'越南虾酱',1,72.00,0,'cs','cs'),(9027,'Shrimp Paste - Salted (Korean) 35.27oz/btl',8.50,100,'咸虾酱(韩国)',1,8.50,0,'cs','btl'),(9248,'Shrimp Paste - Salted (Pantai)) (Thai) 24/13oz ',48.95,100,'泰细虾酱',1,2.49,0,'cs','jar'),(10735,'Shrimp Sauce - Fine (LKK) 12/12oz',40.00,100,'李錦記蝦醬',1,3.50,0,'cs','btl'),(9484,'Shrimp -Twist Asian',35.00,300,'',1,35.00,0,'cs','cs'),(10312,'Shrimps - Broken P&D 10/4#',128.00,400,'無殼碎蝦',1,3.20,0,'cs','lb'),(9068,'Siu Mai Wrapper 30#',34.50,300,'烧卖皮',1,34.50,0,'cs','cs'),(5884,'Skewers - Bamboo 10   10bx/10bag/100ct',80.00,100,'竹签',10,13.95,0,'cs','box'),(5885,'Skewers - Bamboo 12  10/100ct',80.00,100,'竹签',1,13.95,0,'cs','box'),(5886,'Skewers - Bamboo 6  10bx/20bag/100ct',56.00,100,'竹签',1,11.95,0,'cs','box'),(9359,'Skewers - Bamboo 7  10/20/100',56.00,100,'竹签',1,12.95,0,'cs','box'),(5887,'Skewers - Bamboo 8  20/10/100ct',68.00,100,'竹签',1,8.99,0,'cs','box'),(10205,'Skewers - Calamari Fancy 4/4#',40.00,400,'魷魚串',1,12.00,0,'cs','bag'),(10955,'Smoothie Mix - Real Fruit (Torani) 64oz',14.50,100,'',1,14.50,0,'btl','btl'),(10084,'Snack - Banana Chip Brown Crispy (JHC) 24/6.3oz',1.00,100,'焦脆香蕉片',1,1.00,0,'cs','cs'),(11681,'Snack - Cuttlefish 8/12/2oz',1.95,100,'即食墨鱼丝(大包)',1,1.95,0,'pkg','pkg'),(11682,'Snack - Cuttlefish Hot 8/12/2oz',1.95,100,'即食辣墨鱼丝(大包)',1,1.95,0,'pkg','pkg'),(10083,'Snack - Mango Preserved Chili (JHC) 60/3.5oz',1.00,100,'辣芒果干',1,1.00,0,'cs','cs'),(9717,'Snack - Mixed Plum  100/5oz',170.00,100,'小吃',1,1.95,0,'cs','pkg'),(10284,'Snack - Roasted Green Peas (Kasugai/Hot) 20/3.59oz',1.00,100,'',1,1.00,0,'cs','cs'),(10285,'Snack - Roasted Green Peas (Kasugai/Reg.)',1.00,100,'',1,1.00,0,'cs','cs'),(10101,'Snack - Sweet &Sour Mango w. Chili 48/300g',1.00,100,'酸甜辣芒果',1,1.00,0,'cs','cs'),(10121,'Somtum Seasoning Mix (OJ) 12/',1.00,100,'沙拉調味粉',1,1.00,0,'cs','cs'),(10182,'Soup - Inst Miso - Tofu 2/12/1.05oz',1.00,100,'日本湯粉',1,1.00,0,'cs','box'),(10195,'Soup - Inst Miso (Aka) 2/12/1.05oz',1.00,100,'日本湯粉',1,1.00,0,'cs','box'),(10194,'Soup - Seafd Shrimp Flv (kKM) 2/12/0.77oz',1.00,100,'海鮮湯粉',1,1.00,0,'cs','box'),(10106,'Soup - Shark Fin/Crabmt (DFLY) 24/14.1oz',1.00,100,'蟹肉魚翅湯',1,1.00,0,'cs','cs'),(12284,'Soup Base - Beef Flavor (Hue Style) 24/10oz',135.00,100,'越南顺化牛肉调味料',1,135.00,0,'cs','cs'),(10603,'Soup Base - Beef Flavor (Hue) 6/4.5#',115.00,100,'越南顺化辣粉牛精',1,20.50,0,'cs','btl'),(12285,'Soup Base - Beef Flavor (Pho)  10/3#',185.00,100,'越南粉牛精',1,19.50,0,'cs','pkg'),(10321,'Soup Base - Beef Flavor (Pho)  6/3#',115.00,100,'越南粉牛精',1,20.50,0,'cs','btl'),(9966,'Soup Base - Beef Flavor (Pho) 45#',197.50,100,'越南粉牛精',1,197.50,0,'bkt','bkt'),(12286,'Soup Base - Beef Shoyo Ramen (Wakou)  12/2.2# ',167.88,100,'',1,13.99,0,'cs','pkg'),(9826,'Soup Base - Chicken Favor (Pho) 45#',197.50,100,'越南粉鸡精',1,197.50,0,'bkt','bkt'),(12348,'Soup Base - Chix Flavor (Pho)  10/3#',185.00,100,'越南粉鸡精',1,19.50,0,'cs','bag'),(10322,'Soup Base - Chix Flavor (Pho)  6/3#',115.00,100,'越南粉鸡精',1,20.50,0,'cs','btl'),(10856,'Soup Base - Crab Flavor (Pho) 6/3#',115.00,100,'越南粉蟹精',1,20.50,0,'cs','btl'),(12297,'Soup Base - Creamy Chicken Ramen (Wakou)  12/2.2# ',263.88,100,'',1,21.99,0,'cs','pkg'),(11983,'Soup Base - Gyokai Tonkotsu Ramen (Wakou/44489)  12/2.2# ',426.00,100,'海鲜猪骨冷面汤精',1,35.50,0,'cs','pkg'),(11757,'Soup Base - Memmi (KKM)  12/20oz',53.00,100,'麵味醬油',1,4.95,0,'cs','btl'),(9796,'Soup Base - Memmi (KKM)  6/0.5 gal ',73.00,100,'麵味醬油',1,15.00,0,'cs','btl'),(12279,'Soup Base - Oigatsuo-Tsuyu (Mizkan) 32oz/btl',8.99,100,'日本浓汤精',1,8.99,0,'btl','btl'),(12304,'Soup Base - Pork Bone (LKK) 12/2lb9oz',88.00,100,'豬骨浓湯',1,8.50,0,'cs','btl'),(12172,'Soup Base - Pork Bone (LKK) 4/9lb 8oz',128.00,100,'豬骨浓湯',1,36.00,0,'cs','btl'),(11889,'Soup Base - Ramen Soy Sauce (Myojo)  6/1.89L ',145.00,100,'酱油汤精',1,25.00,0,'cs','btl'),(11888,'Soup Base - Ramen Tonkotsu (Myojo)  6/1.89L ',213.00,100,'豬骨湯精',1,40.00,0,'cs','btl'),(11813,'Soup Base - Shiro Dashi (KKM)  17oz/btl',5.50,100,'',1,5.50,0,'btl','btl'),(12280,'Soup Base - Tonkotsu Ramen (Wakou/44488)  12/2.2# ',222.00,100,'猪骨冷面汤精',1,20.00,0,'cs','pkg'),(12350,'Soup Base - Vegetarian   10/3#',185.00,100,'越南粉菜精',1,19.50,0,'cs','bag'),(10366,'Soup Base - Vegetarian   6/3#',115.00,100,'越南粉菜精',1,19.95,0,'cs','btl'),(10395,'Soup Base - Vegetarian  45#',197.50,100,'越南粉菜精',1,197.50,0,'bkt','bkt'),(11528,'Soup Base - Vegetarian Pho  6/3#',115.00,100,'越南粉菜精',1,19.95,0,'cs','jar'),(12283,'Soup Base - Vegetarian Ramen Creamy (Wakou)  12/2.2# ',191.88,100,'蔬菜冷面汤精',1,15.99,0,'cs','pkg'),(11744,'Soup Base - Wonton (Dynasty) 4/24/1.4oz',1.49,100,'云吞汤精',1,1.49,0,'pkg','pkg'),(10126,'Soup Powder - Veggie (OJ) 12/1.83oz',1.00,100,'菜湯調味料',1,1.00,0,'cs','cs'),(10504,'Soy Bean - Black In Jar (LKM) 24/280g',3.99,100,'老干媽風味豆豉',1,2.99,0,'jar','jar'),(9396,'Soy Bean - Dry 12oz',1.00,100,'黄豆',1,1.00,0,'cs','pkg'),(9336,'Soy Bean - Salted (Yeos) 24/16oz',49.50,100,'咸黄豆酱',24,2.69,0,'cs','cs'),(9888,'Soy Bean -Salted Paste (Health Boy) 12/23.5oz',34.00,100,'泰豆酱',1,3.99,0,'cs','btl'),(11081,'Soy Bean Sauce (LKK) 6/1k',3.99,100,'黄豆酱',1,3.99,0,'jar','jar'),(9471,'Soy Nori - Mamenori Yellow 10/20shts',150.00,100,'',1,125.00,0,'cs','cs'),(9472,'Soy Nori - Manenori (Beige)  10/20shts',150.00,100,'',1,125.00,0,'cs','cs'),(11341,'Soy Paste (Kim Lan) 4/1gal',35.00,100,'金兰油膏',1,9.50,0,'cs','gal'),(11961,'Soy Paste (Kim Lan) Soy Paste w. Chili (Kim Lan) 12/20oz',3.29,100,'金兰油膏  小',1,3.29,0,'btl','btl'),(11342,'Soy Paste w. Chili (Kim Lan) 12/20oz',3.29,100,'金兰香辣油膏',1,3.29,0,'btl','btl'),(12092,'Soy Sauce -  (LKK) 6/64oz',25.50,100,'李锦记酱油',1,5.99,0,'cs','btl'),(5959,'Soy Sauce - (DBL Hi) 5gal',24.00,100,'双喜酱油',1,24.00,0,'bkt','bkt'),(11663,'Soy Sauce - (KKM) 12/5oz',17.00,100,'万字酱油',1,1.59,1,'cs','btl'),(10831,'Soy Sauce - (La Choy)   4/1gal',18.00,100,'醬油',1,5.50,0,'cs','btl'),(10674,'Soy Sauce - (LKK)  16.9oz',3.50,100,'李錦記生抽',1,3.50,0,'btl','btl'),(9655,'Soy Sauce - (PRB) (Red Bkt) 5 gal',26.50,100,'珠江大桶酱油',1,21.50,0,'bkt','bkt'),(10359,'Soy Sauce - (Shiro) Shoyu Yamashin 6/60fz',78.00,100,'白醬油',1,14.00,0,'cs','btl'),(10393,'Soy Sauce - (WC)  5gal',20.95,100,'味全醬油',1,20.95,0,'bkt','bkt'),(9897,'Soy Sauce - (WJS)  4/1gal',25.00,100,'万家香酱油',1,25.00,0,'cs','cs'),(10866,'Soy Sauce - (Yamasa) 5gal',25.50,100,'醬油',1,25.50,0,'bkt','bkt'),(6053,'Soy Sauce - Black (KC) 6/5#',20.95,100,'老抽头酱油',1,20.95,0,'cs','can'),(9651,'Soy Sauce - Dart 50lb (Yuet Heung Yuen)',70.00,100,'粤香园双老抽',1,70.00,0,'cs','cs'),(4988,'Soy Sauce - DBL Black (KC) 6/5#',27.00,100,'冠珍双老抽',6,5.95,0,'cs','can'),(9695,'Soy Sauce - DBL Dark (Red Label) (Amoy) 6/#5',1.00,100,'红标双老头抽',1,1.00,0,'cs','cs'),(6070,'Soy Sauce - Dispenser (Kim Lan)',16.00,100,'金兰酱油瓶',1,16.00,0,'cs','cs'),(6064,'Soy Sauce - Dispenser (KKM) 12/5oz',23.95,100,'万字酱油瓶',1,23.95,0,'cs','cs'),(9885,'Soy Sauce - Dispenser Btl (Empty) (LKK) 12/cs',11.88,100,'空酱油瓶',1,0.99,0,'cs','ea'),(11976,'Soy Sauce - Dispenser Cap (Empty) (KKM) 40/12pc',11.88,100,'空醬油瓶蓋',1,0.99,0,'cs','ea'),(6060,'Soy Sauce - Dispenser Lite (KKM)12/5oz',27.50,100,'淡酱油瓶',1,27.50,0,'cs','cs'),(10947,'Soy Sauce - Gluten Free (KKM) 5gal',101.50,100,'無麥醬油',1,101.50,0,'cs','cs'),(10957,'Soy Sauce - Gluten Free (KKM) 6/10oz',19.00,100,'無麥醬油',1,3.69,0,'cs','btl'),(12086,'Soy Sauce - Gluten Free (LKK) 500ml',4.79,100,'李锦记无麦酱油',1,4.79,0,'btl',''),(12099,'Soy Sauce - Gluten Free (LKK) 6/64oz',38.00,100,'李锦记无麦酱油',1,8.99,0,'cs','btl'),(11261,'Soy Sauce - Gluten Free Tamari (KKM) 6/10oz',15.00,100,'无麦麸醬油',1,2.95,0,'cs','btl'),(10732,'Soy Sauce - Gluten FreeTamari (KKM/22775) 6/0.5gal',91.00,100,'無麥醬油',1,18.00,0,'cs','btl'),(4847,'Soy Sauce - Indiv Pkg (DBL Hi) 500pcs',14.00,100,'双喜酱油包',1,14.00,0,'cs','cs'),(6061,'Soy Sauce - Lite (KKM) 5gal',50.00,100,'淡万字酱油',1,50.00,0,'bkt','bkt'),(9146,'Soy Sauce - Lite (KKM) 6/half gal',51.00,100,'淡酱油',1,9.95,0,'cs','btl'),(10950,'Soy Sauce - Lite (LKK) 5gal',38.00,100,'李錦記淡醬油',1,28.00,0,'bkt','bkt'),(11627,'Soy Sauce - Lite (Yamasa) 5gal',19.50,100,'淡酱油',1,19.50,0,'cs','cs'),(9244,'Soy Sauce - Lite Pkg (KKM) 200pcs',15.50,100,'淡酱油包',1,13.50,0,'cs','cs'),(6102,'Soy Sauce - Maggi Sauce 6/27oz',45.00,100,'美极醬油',6,9.99,0,'cs','btl'),(10576,'Soy Sauce - Mushroom (H.Boy) 12/23.5oz',44.00,100,'金童草老',1,4.99,0,'cs','btl'),(6153,'Soy Sauce - Mushroom (PRB) 12/5#',64.00,100,'草菇老抽',12,6.99,0,'cs','btl'),(11263,'Soy Sauce - Mushroom (PRB) 24/500ml ',2.50,100,'瓶裝草老',1,2.50,0,'btl','blt'),(10319,'Soy Sauce - Mushroom (PRB) 5gal',39.00,100,'大桶草老抽',1,33.00,0,'bkt','bkt'),(9128,'Soy Sauce - Mushroom 2/22#',28.50,100,'草菇老抽',1,22.00,0,'cs','btl'),(12082,'Soy Sauce - Mushroom Dark (LKK) 12/5#',42.00,100,'锦珍草菇老抽',1,4.95,0,'cs','btl'),(11664,'Soy Sauce - Organic (KKM) 6/25.4oz',43.50,100,'万字有机酱油',1,7.99,0,'cs','btl'),(5426,'Soy Sauce - Pkg  (Kari-Out) 500pcs',9.00,100,'酱油包',1,9.00,0,'cs','cs'),(6071,'Soy Sauce - Pkg  (Kim Lan) 500pcs',11.95,100,'金兰酱油包',1,11.95,0,'cs','cs'),(11679,'Soy Sauce - Pkg  (LKK) 500pcs',12.00,100,'李锦记酱油包',1,10.50,0,'cs','cs'),(11987,'Soy Sauce - Pkg  (S K) 334pcs',8.50,100,'盛记酱油包',1,8.50,0,'cs','cs'),(6063,'Soy Sauce - Pkg (KKM) 200pcs',12.00,100,'万字酱油包',1,10.50,0,'cs','cs'),(10051,'Soy Sauce - Pkg (KKM) 500pcs',17.50,100,'萬字醬油包',1,17.50,0,'cs','cs'),(6118,'Soy Sauce - Pkg (Mikami) 200pcs',6.00,100,'',1,6.00,0,'cs','cs'),(9581,'Soy Sauce - Premium (LKK) 5gal',25.50,100,'特級鮮味生抽',1,20.00,0,'bkt','bkt'),(11380,'Soy Sauce - Seafood Seasoned (LKK) 12/14oz',3.50,100,'蒸魚豉油',1,3.50,0,'btl','btl'),(11439,'Soy Sauce - Superior Dark (PRB) 24/16.9oz (',2.29,100,'珠江老抽王',1,2.29,0,'btl','btl'),(11113,'Soy Sauce - Superior Light (PRB) 24/16.9oz (',2.29,100,'珠江生抽王',1,2.29,0,'btl','btl'),(10293,'Soy Sauce - Superior Lite(PRB)  5gal',30.75,100,'珠江生抽王',1,28.75,0,'bkt','bkt'),(10251,'Soy Sauce - Superior Lite(PRB/Red) 12/5#',67.00,100,'珠江生抽王',1,6.99,0,'cs','btl'),(10895,'Soy Sauce - Sweet (ABC) 12/21oz',43.00,100,'abc 甜醬油',1,4.95,0,'cs','btl'),(11666,'Soy Sauce - Sweet Gluten Free (KKM) 6/10oz',3.99,100,'無麥甜醬油',1,3.99,0,'btl','btl'),(10819,'Soy Sauce - Sweet Kecap Manis (Indonesia)12/600ml',41.50,100,'印尼甜醬油',1,41.50,0,'cs','btl'),(9277,'Soy Sauce - Tamari Wheat Free 4 half gals/cs',69.95,100,'',4,12.00,0,'cs','btl'),(6303,'Soy Sauce - Thai Black (DF/Yellow) 12/19oz',40.00,100,'顶上晒酱油',1,4.49,0,'cs','btl'),(12013,'Soy Sauce - Thai Black (Health Boy) 12/33oz',40.00,100,'金童黑酱油',1,4.49,0,'cs','btl'),(6305,'Soy Sauce - Thai Sweet (DF/Blue)12/19oz',40.00,100,'滴珠油',1,4.49,0,'cs','btl'),(12234,'Soy Sauce - Thai Sweet (Healthy Boy)12/19oz',40.00,100,'滴珠油',1,4.49,0,'cs','btl'),(6308,'Soy Sauce - Thai Thin (DF)  12/19oz',40.00,100,'蜻蜓牌生抽',1,4.49,0,'cs','cs'),(9109,'Soy Sauce - Thai Thin (Healthy Boy)  12/23oz',40.00,100,'金童inches特级生抽inches',1,4.49,0,'cs','btl'),(9240,'Soy Sauce - Thick 24/16oz',44.00,100,'上珠油',24,2.39,0,'cs','jar'),(9579,'Soy Sauce - Thick 6/5# (KC)',38.00,100,'上珠油',1,7.25,0,'cs','can'),(6058,'Soy Sauce - Thin (KC) 6/5#',24.00,100,'生晒头抽',16,5.95,0,'cs','can'),(6013,'Soy Sauce (Gold Label) (LKK) 6/5#  ',38.50,100,'金标酱油',1,32.00,0,'cs','cs'),(6014,'Soy Sauce (Golden Mountain) 12/20oz',34.00,100,'金山酱油',1,3.99,0,'cs','btl'),(6065,'Soy Sauce (KKM) 4/1gal',49.00,100,'万字酱油',4,15.00,0,'cs','gal'),(6066,'Soy Sauce (KKM) 5gal',29.95,100,'万字酱油',1,29.95,0,'bkt','bkt'),(12194,'Soy Sauce (KKM) 6/64oz',7.95,100,'万字酱油',1,7.95,0,'btl','btl'),(10482,'Soy Sauce (Ponlai) 5gal',27.50,100,'蓬萊醬油',1,27.50,0,'bkt','bkt'),(10353,'Soy Sauce _ Pure Bean (YHY) 6/5#',30.00,100,'粵香園生晒鮮抽',1,30.00,0,'cs','cs'),(11619,'Soy Sauce For Seafood - (Tung Chun) 24/17oz',1.50,100,'同珍蒸魚豉油',1,1.50,0,'btl','btl'),(9605,'Soy Wrapper - Green  10/20shts',90.00,300,'',1,11.00,0,'cs','pkg'),(9604,'Soy Wrapper - Orange 10/20shts',90.00,300,'橘色豆皮',1,11.00,0,'cs','pkg'),(9603,'Soy Wrapper - Original 10/20shts',90.00,300,'',1,11.00,0,'cs','pkg'),(9606,'Soy Wrapper - Pink  10/20shts',90.00,300,'粉色豆皮',1,11.00,0,'box','pkg'),(12342,'Soy Wrapper - Sesame 10/20shts',90.00,300,'芝麻豆皮',1,11.00,0,'box','pkg'),(9607,'Soy Wrapper - Yellow  10/20shts',90.00,300,'',1,11.00,0,'cs','pkg'),(5971,'Soybean (Edamame) 20/16oz',34.00,400,'毛豆',1,2.49,0,'cs','pkg'),(10303,'Soybean shelled (Edamame) 20/14oz',36.50,400,'毛豆仁',1,36.50,0,'cs','pkg'),(4843,'Spaghetti  20   20#',21.00,100,'意大利面',1,12.00,0,'cs','cs'),(11848,'Spice - Bay Leaves 25/1#',5.50,100,'香叶',1,5.50,0,'pkg','pkg'),(10891,'Spice - Cardamon Powder 3.5oz',9.50,100,'草果粉',1,9.50,0,'pkg','pkg'),(5943,'Spice - Cardomon (Choger/Ammoium) 50/1#',10.00,100,'草果',1,10.00,0,'pkg','pkg'),(9986,'Spice - Chana Masala 3.5oz',1.99,100,'香汁莲子豆',1,1.99,0,'box','box'),(11526,'Spice - Chili Powder BF 14oz/jar',6.99,100,'蝴蝶辣椒粉',1,6.99,0,'Jar','Jar'),(5938,'Spice - Cinnamon - Bark  50/1#',7.95,100,'桂皮',1,7.95,0,'pkg','pkg'),(12101,'Spice - Cinnamon - Bark  8oz/pkg',4.99,100,'桂皮',1,4.99,0,'pkg','pkg'),(5939,'Spice - Cinnamon Powder 50/1#',6.00,100,'桂皮粉',1,6.00,0,'pkg','pkg'),(10933,'Spice - Coriaander (Cilantro Seed) Powder 5#',19.50,100,'芫茜粉',1,19.50,0,'bag','bag'),(10801,'Spice - Coriander (Cilantro Seed) 50/1#',6.95,100,'芫茜籽',1,6.95,0,'pkg','pkg'),(11026,'Spice - Cumin Powder 16oz',6.95,100,'孜然粉/芹菜籽粉',1,6.95,0,'pkg','pkg'),(12123,'Spice - Cumin Seeds 10/5#',170.00,100,'孜然籽/芹菜籽',1,19.00,0,'cs','pkg'),(11368,'Spice - Cumin Seeds 16oz',6.95,100,'孜然籽/芹菜籽',1,6.95,0,'pkg','pkg'),(9740,'Spice - Ding Xiang  (Clove) 50/1#',9.99,100,'丁香',1,9.99,0,'pkg','pkg'),(11369,'Spice - Fennel Powder 1#',5.95,100,'小茴香粉',1,5.95,0,'pkg','pkg'),(9590,'Spice - Fennel Seed  50/1#',3.95,100,'小茴香',1,3.00,0,'pkg','pkg'),(10723,'Spice - Filter Bags 0.3oz   50bags',1.00,100,'香料过滤袋',1,1.00,0,'cs','cs'),(5534,'Spice - Five Spice Powder 50/16oz',3.95,100,'五香粉',1,3.95,0,'pkg','pkg'),(12168,'Spice - Gia Vi Nau Bo Kho 2oz',1.39,100,'牛腩调味粉',1,1.39,0,'pkg','pkg'),(5963,'Spice - Ginger Dry Slice  (China)  50/1#',7.95,100,'沙姜片',1,7.95,0,'pkg','pkg'),(6012,'Spice - Ginger Powder (China) 50/1#',5.95,100,'沙姜粉',1,5.95,0,'bag','bag'),(9536,'Spice - Ginger Powder 5#/jar',20.00,100,'姜粉',1,20.00,0,'jar','jar'),(9220,'Spice - Licorice Root - Dried Sliced',7.99,100,'甘草片',1,7.99,0,'pkg','pkg'),(9383,'Spice - Licorice Root Powder 50/1#',5.95,100,'甘草粉',1,4.95,0,'pkg','pkg'),(11023,'Spice - Mustard Seeds Brown 14oz',5.95,100,'棕色芥菜籽',1,5.95,0,'pkg','pkg'),(11022,'Spice - Mustard Seeds Yellow 14oz',5.95,100,'黃色芥菜籽',1,5.95,0,'pkg','pkg'),(9689,'Spice - Orange Peel Powder 1#/pkg',3.75,100,'陈皮粉',1,3.75,0,'pkg','pkg'),(5965,'Spice - Orange Peels Dried 50/1#/pkg',6.95,100,'陈皮',1,6.95,0,'pkg','pkg'),(10709,'Spice - Oriental Flavor Mixed Chili (Gia Vi Bun Bo Hue)  50/2oz (SK)',45.00,100,'順化牛肉调味粉',1,0.95,0,'cs','pkg'),(6282,'Spice - Peppercorn - Szechuan 50/1#',8.95,100,'花椒粒',1,8.95,0,'pkg','pkg'),(10725,'Spice - Pho Pouch   50/0.3oz',30.00,100,'越南湯粉香料',1,30.00,0,'cs','cs'),(11346,'Spice - Rice Powder For Steamed Meat 3.5oz',1.49,100,'蒸肉粉',1,1.49,0,'pkg','pkg'),(6261,'Spice - Star Anise 50/1#',5.95,100,'八角',1,5.95,0,'pkg','pkg'),(6262,'Spice - Star Anise Powder  50/1#',5.95,100,'八角粉',1,5.95,0,'pkg','pkg'),(10098,'Spice - Star Aniseed 100/2oz',1.00,100,'八角',1,1.00,0,'cs','cs'),(11953,'Spice - Turmeric Powder 2oz',1.50,100,'小包黄姜粉',1,1.50,0,'pkg','pkg'),(9257,'Spice - Turmeric Powder 4/5#',25.00,100,'黄姜粉',1,25.00,0,'jar','jar'),(11205,'Spice Bake Mix (Seasons) 6/25g',4.95,100,'四季盐焗鸡粉',1,4.95,0,'box','box'),(11660,'Spice Bake Mix (Seasons) 6/6oz',4.99,100,'東江盐焗鸡粉',1,4.99,0,'box','box'),(9760,'Spice Chives 2oz',7.50,100,'',1,7.50,0,'btl','btl'),(11406,'Spice Noodle Soup Mix Extra Hot Szechuan 24/7.76oz',65.00,100,'特辣四川擔擔面酱',1,2.99,0,'cs','jar'),(9679,'Spice Pouch 4/6g',2.95,100,'滷水香料包',1,2.95,0,'pkg','pkg'),(10903,'Spice Sauce For Hot Pot (Little Sheep) 8.29oz/bag',5.99,100,'小肥羊火锅酱',1,5.99,0,'bag','bag'),(10344,'Spice Sauce For Hot Pot (Ning Chi) 12/16.5oz',84.50,100,'宁记火锅醬',1,7.50,0,'cs','jar'),(10541,'Spice Sauce For Hot Pot (Ning Chi) 24/8.6oz',75.00,100,'宁记火锅醬',1,3.95,0,'cs','jar'),(9759,'Spice Shallot  4oz',7.95,100,'',1,7.95,0,'btl','btl'),(10922,'Spicy Beef Paste (gia vi bun bo hue)(DF) 24/7oz',39.60,100,'順化牛肉醬',1,1.89,0,'cs','jar'),(12300,'Spicy Multi-Flavored Natural Seasoning (WSY) 45g/box',1.99,100,'王守义十三香',1,1.99,0,'box','box'),(6259,'Sponge - Stainless 12/box',45.00,100,'钢丝球',12,10.00,1,'cs','box'),(10740,'Spoon - For Rice Cooker',2.50,100,'饭勺',1,2.50,1,'ea','ea'),(12102,'Spoon - For Rice Cooker L',5.99,100,'大饭勺',1,5.99,1,'ea','ea'),(11336,'Spoon - Soup 9 3/4 x3 3/85  Blue Bamboo (7006BB)',12.95,100,'蓝竹长汤匙',1,1.59,1,'dz','ea'),(10907,'Spoon - Soup Plastic (Wht.) Extr.Heavy 1m',22.50,100,'白色湯匙',1,22.50,0,'cs','cs'),(9618,'Spoon - Soup Plastic 20/100pcs',23.00,100,'',1,23.00,0,'cs','cs'),(9475,'Spoon - Soup Plastic Asian  10/100pc',18.00,100,'中式外賣湯匙',1,18.00,0,'cs','cs'),(11592,'Spoon - Soup Plastic Asian  2000pcs',28.00,100,'中式外賣湯匙',1,28.00,0,'cs','cs'),(6165,'Spoon - Tea Plastic ',8.95,100,'胶茶匙',1,6.95,0,'cs','cs'),(11988,'Spoon -White Melemine 20bx/5dz(7001W)',28.50,100,'有勾汤匙',1,0.99,1,'box','ea'),(11561,'Spoon -White Melemine 20bx/5dz(7003R/Longevity)',28.00,100,'红壽云吞汤匙',1,0.59,1,'box','ea'),(9462,'Spoon -White Melemine 20bx/5dz(7003W)',28.00,100,'白湯匙',1,0.59,1,'box','ea'),(12218,'Spoons - 4oz Metal',3.49,100,'不锈钢汤勺',1,3.49,1,'ea','ea'),(11890,'Spoons - Ladle White 2oz 12/1dz(W7106)',17.88,100,'12寸白色汤勺',1,17.88,1,'dz','dz'),(9778,'Spoons - Soup (china) 5 ',0.75,100,'强化瓷匙',1,0.75,1,'ea','ea'),(11891,'Spoons - Soup 1oz 12/5dz(7100JBR)',43.13,100,'汤匙',1,12.78,1,'cs','dz'),(11722,'Spoons - Soup 1oz 12/5dz(7100TW)',31.50,100,'汤匙',1,6.99,1,'cs','dz'),(10693,'Spoons - Soup Domilion bouillon(Sldo003) (Metal)',3.50,100,'不锈钢湯匙',1,0.29,1,'dz','ea'),(6164,'Spoons - Soup Plastic ',8.95,100,'胶湯匙',1,6.95,0,'cs','cs'),(10218,'Spoons - Soup Plastic (Black) Extr. Heavy 1K',22.95,100,'黑湯膠匙',1,19.95,0,'cs','cs'),(10592,'Spoons - Soup White (china) ',10.00,100,'白色瓷匙',1,1.00,1,'dz','ea'),(10939,'Spoons - Tea Domillion (Sldo002) (Metal)',3.50,100,'不锈钢茶匙',1,0.29,1,'dz','ea'),(10784,'Spoons - Tea Plastic (Black/F1920056) Extr.Heavy 1M',22.95,100,'黑胶茶匙',1,21.00,0,'cs','cs'),(9837,'Spoons - Tea Plastic Heavyweight 500pcs',8.95,100,'重茶匙',1,8.95,0,'cs','cs'),(11322,'Spoons - Wonton Soup (Lotus) 20/5dz(7003B)',28.00,100,'荷叶湯匙',1,0.89,1,'box','ea'),(10299,'Spork - Forks & Spoons Mix Plastic 1000pcs',8.95,100,'叉匙合一',1,7.95,0,'cs','cs'),(9755,'Spray - No- Stick Cooking 3/12oz',10.95,100,'',1,10.95,0,'pkg','pkg'),(6121,'Spring Rolls - Mini',36.00,400,'小春卷',1,36.00,0,'cs','cs'),(11325,'Squab - Whole 24pcs',14.50,400,'乳鸽',1,14.50,0,'ea','ea'),(11962,'Squid - Baby (Lion) (4/6cm)  40/12oz',2.79,400,'小只鱿鱼片',1,2.79,0,'pkg','pkg'),(9705,'Squid - Calamari Jerky  1.5oz/pkg',1.00,100,'鱿鱼丝小吃',1,1.00,0,'pkg','pkg'),(5942,'Squid - Cleaned (U/5) 22#',59.18,400,'干净鱿鱼',22,2.69,0,'cs','lb'),(9045,'Squid - Dried 7oz/pkg',5.50,100,'干鱿鱼',1,5.50,0,'pkg','pkg'),(11742,'Squid - Froz. Carving 24/1#',80.00,400,'雕花鱿魚',1,3.79,0,'cs','pkg'),(11741,'Squid - Rings  24/1#',80.00,400,'鱿魚圈',1,3.79,0,'cs','pkg'),(10832,'Squid - Rings &  Tenticals  50#',72.50,400,'鱿魚須絲',1,1.45,0,'cs','lb'),(11850,'Squid - Seafood Snack (Bento)  36/20g SQSC',50.00,100,'橙色鱿鱼小吃',1,1.59,0,'cs','pkg'),(10813,'Squid - Squid Tubes & Tenicals (2/3) 20/2.5#',187.50,400,'鱿魚須絲',1,10.00,0,'cs','pkg'),(12354,'Squid - Surume Ika (23/25/Japenese) 17.6#',6.19,500,'寿司鱿鱼',1,6.19,0,'lb','lb'),(10647,'Squid - Tentacles Sunrise Wild 30/14oz',127.50,400,'鱿魚須',1,4.25,0,'cs','pkg'),(12182,'Squid - Whole (1#)  24/1#',3.39,500,'全只鱿鱼',1,3.39,0,'lb','lb'),(11751,'Squid - Whole (3#)  12/3#',3.39,500,'全只鱿鱼',1,3.39,0,'lb','lb'),(11195,'Squid - Whole (3-5)  20/2.5#',2.69,500,'全只鱿鱼',1,2.69,0,'lb','lb'),(9370,'Squid - Whole (5#) 6/5#',113.70,500,'小全只鱿鱼',60,3.79,0,'cs','lb'),(12005,'Squid - Whole (Sea Wave) 6/5#',17.00,500,'全只鱿鱼',1,17.00,0,'box','box'),(11366,'Squid - Whole Arrow (3/400) 57.32#',111.79,500,'全只鱿鱼',1,1.95,0,'cs','lb'),(12305,'Squid - Whole Baby 4-6 cm (Lion) 40/12oz',2.29,500,'小全只鱿鱼',1,2.29,0,'pkg','pkg'),(9242,'Squid - Whole Calamari (4/600)  57.33#',111.79,500,'全只鱿鱼',35,1.95,0,'cs','lb'),(11196,'Squid - Whole T&T(5-8)  20/2.5#',189.50,500,'全只鱿鱼',1,3.95,0,'cs','lb'),(10990,'Sriracha Mayo (LKK) Gluten Free 12/15oz',73.08,100,'是拉差沙拉酱',1,6.09,0,'cs','btl'),(10900,'Steak - Flank (Greenlea/Monbeef/S) 60# ',329.40,400,'扇面牛肉',1,5.49,0,'cs','cs'),(9414,'Steak - Flank 30#',131.70,400,'扇面牛肉',30,4.39,0,'cs','cs'),(10368,'Steak - Flank 60#  (Affco/Silver/B)',329.40,400,'扇面牛肉',1,5.49,0,'cs','cs'),(4760,'Steak - Flank60#',329.40,400,'扇面牛肉',60,5.49,0,'cs','lb'),(10771,'Steamer - Big Hole/Bottom Aluminum 30cm 3/set',35.95,100,'金屬蒸籠',1,35.95,1,'set','set'),(10926,'Steamer - Big Hole/Bottom Aluminum 35cm 3/set',45.00,100,'金屬蒸煲',1,45.00,1,'set','set'),(11130,'Steamer - Big Hole/Bottom Aluminum 50cm 3/set',130.00,100,'金属蒸笼',1,130.00,1,'ea','ea'),(5888,'Steamer - Body Bamboo 10 ',5.00,100,'竹蒸笼',1,5.00,1,'pc','pc'),(5889,'Steamer - Body Bamboo 12 ',6.00,100,'竹蒸笼',1,6.00,1,'pc','pc'),(9412,'Steamer - Body Bamboo 6 ',4.99,100,'竹蒸笼',1,0.65,1,'pc','pc'),(5890,'Steamer - Body Bamboo 8 ',3.50,100,'竹蒸笼',1,3.50,1,'pc','pc'),(5891,'Steamer - Lid Bamboo 10 ',5.00,100,'竹蒸笼盖',1,5.00,1,'pc','pc'),(5892,'Steamer - Lid Bamboo 12 ',5.95,100,'竹蒸笼盖',1,6.00,1,'pc','pc'),(9413,'Steamer - Lid Bamboo 6 ',2.99,100,'竹蒸笼盖',1,0.55,1,'pc','pc'),(5893,'Steamer - Lid Bamboo 8 ',4.00,100,'竹蒸笼盖',1,0.89,1,'pc','pc'),(9858,'Steamer - Stainless 8 ',9.95,100,'不锈钢蒸笼',1,9.95,1,'ea','ea'),(11235,'Steamer - Stainless Body 22 ',55.00,100,'不锈鋼蒸笼',1,55.00,1,'ea','ea'),(11236,'Steamer -Stainless Lid  22 ',55.00,100,'不锈鋼蒸笼蓋',1,55.00,1,'ea','ea'),(5110,'Sterno  4/1gal',45.00,100,'大罐火蜡',4,12.50,1,'cs','gal'),(5190,'Sterno - Small 72/7oz',65.00,100,'小罐火蜡',1,1.29,1,'cs','item'),(11572,'Stone - Sharpening  8 x2 x1 H (King Deluxe 80)',34.95,100,'日本刀磨刀石',1,34.95,1,'ea','ea'),(11573,'Stone - Sharpening  8 x2.5 x1.25 H (King Deluxe1200)',35.95,100,'日本刀磨刀石',1,35.95,1,'ea','ea'),(9470,'Stone - Sharpening  8.25 x3  (LG108S)',12.95,100,'磨刀石',1,12.95,1,'ea','ea'),(11571,'Stone - Sharpening  8.5 x2.75 x1.25 H (King Deluxe1000)',33.95,100,'日本刀磨刀石',1,33.95,1,'ea','ea'),(11038,'Storage Fee',125.00,100,'倉儲費',1,125.00,0,'pt','pt'),(10398,'Stove - Gas Luxury Ninja',19.95,100,'火鍋爐',1,29.95,1,'ea','ea'),(9775,'Stretch Wrap 18  4roll (29#)',40.00,100,'包扎膜',1,40.00,0,'cs','cs'),(11575,'Sugar - Black Raw Slab Candy  50/454g',53.50,100,'黑片糖',1,1.29,0,'cs','pkg'),(9467,'Sugar - Brown Candy 50/454g',53.50,100,'片糖',1,1.29,0,'cs','pkg'),(9644,'Sugar - Cane 12can/cs',21.00,100,'竹蔗罐头',1,21.00,0,'cs','cs'),(11424,'Sugar - Dark Brown (C & H) 24/16oz',1.69,100,'黑糖粉',1,1.69,0,'box','box'),(11362,'Sugar - Golden Brown (C & H) 24/16oz',1.89,100,'黃糖粉',1,1.89,0,'pkg','pkg'),(10836,'Sugar - Indiv Pkg (Splenda)  1k',24.95,100,'代糖黃糖包',1,24.95,0,'cs','cs'),(5804,'Sugar - Indiv Pkg (Sweet & Low) 1500pcs',13.99,100,'代糖紅糖包',1,13.99,0,'cs','cs'),(5728,'Sugar - Indiv Pkg 2000pcs',14.95,100,'小糖包',1,15.95,0,'cs','cs'),(11013,'Sugar - Palm (Jar) (DF) 24/14oz',42.00,100,'瓶装椰糖',1,1.95,0,'cs','jar'),(10117,'Sugar - Palm (Pieces) 36/16oz',59.00,100,'椰糖',1,2.59,0,'cs','pkg'),(6146,'Sugar - Palm 30/17.5oz',59.00,100,'椰糖',1,2.89,0,'cs','pkg'),(6207,'Sugar - Rock 50/454g',63.00,100,'冰糖',50,1.99,0,'cs','pkg'),(5773,'Sugar 50#',31.00,200,'糖',1,31.00,0,'sk','sk'),(9610,'Sugar Scallion In Soy Sauce 24/13oz',1.00,100,'蒿头',1,1.00,0,'cs','can'),(10443,'Sui Gow Skin (China) 24/1#',39.00,400,'水餃皮',1,2.25,0,'cs','cs'),(11816,'Sui Gow Skin (Kim Hon) 30pkg',42.00,400,'金鸿水饺皮',1,2.25,0,'cs','pkg'),(6267,'Sui Gow Skin (NHK) (green) 24/16oz',45.00,400,'水饺皮',1,2.50,0,'cs','pkg'),(11830,'Sui Gow Skin (WC) 12/12oz',16.00,400,'味全水餃皮',1,1.59,0,'cs','pkg'),(9482,'Sui Mai Skin (China) 32/12oz',60.00,400,'烧卖皮(中華)',1,2.99,0,'cs','pkg'),(10277,'Sui Mai Skin (Kim Hon) 30pkg',45.00,400,'金鸿燒賣皮',1,1.95,0,'cs','cs'),(11993,'Sui Mai Skin (Louie s) 12/12oz',3.99,400,'烧卖皮(雷氏)',1,3.99,0,'pkg','pkg'),(6268,'Sui Mai Skin (NHK) (red) 24/14oz',39.00,400,'烧卖皮(新香港)',1,32.00,0,'cs','pkg'),(10112,'Sukiyaki Sauce - Cantonese (DFLY) 24/20oz',1.00,100,'廣式火鍋醬',1,1.00,0,'cs','cs'),(11128,'Surcharge',4.25,100,'',1,4.25,0,'ea','ea'),(11043,'Sushi Roller (Mat)  Round 24x24cm',3.49,100,'圓壽司竹卷',1,1.95,1,'ea','ea'),(11138,'Sushi Roller (Mat) Flat 11  27x27cm',3.49,100,'長壽司竹卷',1,2.49,1,'ea','ea'),(9446,'Sushi Roller (Mat) Flat 9.5  24x24cm',3.49,100,'寿司竹卷',1,1.95,1,'pc','pc'),(9464,'Sushi Roller (Mat) Heavy Duty 12 x12 ',6.50,100,'寿司竹卷',1,6.50,1,'ea','ea'),(9463,'Sushi Roller (Mat) M. Duty 9.5 x 8 ',3.49,100,'寿司竹卷',1,2.99,1,'ea','ea'),(11870,'Sushi Sauce(Unagi NoTare) (LKK)  6/5.3#',65.00,100,'李锦记鳗鱼酱',1,12.00,0,'cs','btl'),(12311,'Suzukatsu Unagi Sauce 8.81oz/btl',4.99,100,'寿司鳗鱼醬',1,4.99,0,'btl','btl'),(10222,'Swaweed - Gold (Nori) 10/50shts',135.00,100,'金紫菜片',1,135.00,0,'cs','cs'),(5319,'Sweet & Sour Indiv Pkg (DBL Hi) 500pcs',22.00,100,'甜酸外卖包',1,22.00,0,'cs','cs'),(11091,'Sweet and Sour Sauce (LKK) 4/1gal',50.00,100,'甜酸酱',1,13.00,0,'gal','cs'),(9451,'Sweet Chestnut 24/7oz',166.80,100,'糖栗子',1,6.95,0,'cs','btl'),(10867,'Sweet Flour Sauce (Lian How) 12/16oz',40.00,100,'甜面醬',1,3.99,0,'cs','btl'),(10988,'Sweet Flour Sauce (Lian How) 4/1gal',50.00,100,'甜面醬',1,16.00,0,'cs','jar'),(9032,'Sweet Sour Sauce (KKM) 6/77oz',30.50,100,'万字甜酸酱',1,23.00,0,'cs','btl'),(11639,'Sweety Ice Bar Durian 12/10oz/4pcs',3.09,400,'榴莲冰棒',1,3.09,0,'pkg','pkg'),(11695,'Swiss Roll Froz. Chocolate 6/1#',8.99,400,'拿破仑蛋卷/巧克力味',1,8.99,0,'ea','ea'),(11694,'Swiss Roll Froz. Green Tea 6/1#',8.99,400,'拿破仑蛋卷/绿荼味',1,8.99,0,'ea','ea'),(11696,'Swiss Roll Froz. Mocha 6/1#',8.99,400,'拿破仑蛋卷/木卡味',1,8.99,0,'ea','ea'),(5948,'Syrup - Corn 5gal',42.00,100,'甜浆',1,42.00,0,'pail','cs'),(11794,'Syrup - Sala Flavoured (Hale/Blue Boy)12/710 ml',51.00,100,'泰沙拉红糖浆',1,4.50,0,'cs','btl'),(11017,'Table Card Holder 8.5 x11 ',5.99,100,'',1,5.99,1,'ea','ea'),(11355,'Taipei Egg Crisps',3.59,100,'台北蛋卷',1,3.59,0,'box','box'),(6287,'Tamarind - Concentrate 24/16oz',54.00,100,'浓缩泰目坎',1,3.79,0,'cs','jar'),(6288,'Tamarind - Paste 50/14oz',105.00,100,'泰酸子糕',50,2.79,0,'cs','pkg'),(10529,'Tape - Carton Sealing 6/6roll (Rinco)',40.95,100,'包裝透明胶紙',1,7.95,0,'cs','pkg'),(11952,'Tape - Packing 2  Clear 9.2x11x13 36/cs',1.39,100,'封箱膠紙',1,1.39,0,'ea','ea'),(9148,'Tapioca Pearl - 50/12oz',38.00,100,'西米',50,0.89,0,'cs','pkg'),(10300,'Tapioca Pearl For Boba 6/6.6#',58.00,100,'波霸珍珠粒',1,10.00,0,'cs','pkg'),(11581,'Tapioca Pearl For Boba E-Fa 18/2.2#',58.00,100,'易发波霸珍珠粒',1,4.99,0,'cs','pkg'),(11031,'Tapioca Starch  24/1#',16.00,100,'西米粉/茨粉',1,0.89,0,'cs','pkg'),(9200,'Taro For Hot Pot Froz.30/16oz',2.50,400,'火锅芋头',1,2.50,0,'pkg','pkg'),(10700,'Tatar Sauce 1/gal',23.00,100,'塔塔醬',1,23.00,0,'gal','gal'),(11740,'Tea - Aloe Honey (Hanasia) 12/35.3oz',8.09,100,'韩亚芦荟蜜',1,8.09,0,'Jar','Jar'),(9836,'Tea - Black Bag (Organic) 60/25/2g',143.50,100,'有机红茶包',1,3.00,0,'cs','box'),(11270,'Tea - Black Yunnan (Ten Ren) 1#',51.00,100,'云南红茶葉',1,51.00,0,'bag','bag'),(5917,'Tea - Bonay Leaves',50.00,100,'',1,50.00,0,'cs','cs'),(12014,'Tea - California Diet Drink 36/14bag',2.29,100,'加州减肥茶',1,2.29,0,'box','box'),(11578,'Tea - Cha Thai Tea Leaves (Chicken) 30/13oz/ bags Chicken Brand',140.00,100,'鸡牌泰茶叶',1,5.95,0,'cs','pkg'),(10882,'Tea - Chrysanthemum Bag (Ten Ren) 20/bx',5.00,100,'天仁菊花茶',1,5.00,0,'bx','bx'),(9580,'Tea - Dried Chrysanthemum 16oz/pkg',10.00,100,'白杭菊',1,10.00,0,'pkg','pkg'),(9712,'Tea - Genmai Cha (Bulk) (Brown Rice) 10/2.2#',105.00,100,'日本糙米茶',1,12.70,0,'cs','pkg'),(11478,'Tea - Genmai Cha Bag (Brown Rice) 12/16 (Yamamoto) ',22.00,100,'日本糙米茶包',1,2.99,0,'cs','box'),(9545,'Tea - Genmai Cha Bag (Brown Rice) 5/80 (Yamamoto) ',38.00,100,'日本糙米茶包',1,38.00,0,'cs','cs'),(12276,'Tea - Genmai Cha Bag (Brown Rice) 6/90ct (Yamamoto) ',67.00,100,'日本糙米茶包',1,67.00,0,'cs','cs'),(9926,'Tea - Ginseng   24/40bag/2g/box',18.95,100,'花旗參茶包',1,18.95,0,'box','box'),(11734,'Tea - Ginseng   48/20bag/box',9.95,100,'花旗參茶包',1,9.95,0,'box','box'),(9927,'Tea - Ginseng Bags  48/box',1.00,100,'人参茶包',1,1.00,0,'box','box'),(9219,'Tea - Green (Foojoy) 100/7oz/box',2.95,100,'福字绿茶包',1,2.95,0,'box','box'),(9835,'Tea - Green Bag (Organic) 60/25/2g',143.50,100,'有机绿茶包',1,3.00,0,'cs','box'),(6022,'Tea - Green Bag 5/80 (Yamamoto)',37.00,100,'日本绿茶',1,37.00,0,'cs','cs'),(6025,'Tea - Green Bag 6/16 (Yamamoto)',13.00,100,'日本绿茶',1,2.49,0,'cs','box'),(9878,'Tea - Green Bags (China-Hunsty) 40/100',90.00,100,'綠茶包',1,2.99,0,'cs','box'),(11824,'Tea - Green Bags (GF) 50/100',60.00,100,'嘉蘭绿茶包',1,1.79,0,'cs','pkg'),(12319,'Tea - Green China (Foojoy) 12/25bag/box',2.99,100,'福字绿茶包',1,2.99,0,'box','box'),(12320,'Tea - Green China Decaf (Foojoy) 12/25bag/box',3.49,100,'福字绿茶包',1,3.49,0,'box','box'),(12221,'Tea - Green Fresh Whole Leaves Bag (Ten Ren) 18/bx',6.50,100,'天仁绿荼原片',1,6.50,0,'box','box'),(12072,'Tea - Green Fresh Whole Leaves Bag (Ten Ren) 40/bx',16.00,100,'天仁绿荼原片(大合）',1,16.00,0,'box','box'),(9144,'Tea - Green Leaves 10/2.2# (Yamamoto-Sencha-Ume)',125.00,100,'日本绿茶叶',10,13.50,0,'cs','bag'),(9783,'Tea - Green Leaves 6/5#',50.00,100,'中国绿茶叶',1,10.00,0,'cs','bag'),(12324,'Tea - Green Lungching China (Foojoy) 12/25bag/box',2.99,100,'福字龙井绿茶包',1,2.99,0,'box','box'),(5267,'Tea - Ice (Lipton) 24/3oz',37.95,100,'冰茶袋',1,37.95,0,'cs','pkg'),(6090,'Tea - Ice Tea Bag (Lipton) 96/1oz',33.00,100,'冰茶袋',1,29.50,0,'cs','pkg'),(6049,'Tea - Jasmine Bag  (Ten Ren) 20/bx',4.50,100,'天仁花茶包',1,4.50,0,'box','box'),(9300,'Tea - Jasmine Bag (GF) 50/100/bx',60.00,100,'嘉蘭花茶包',50,1.79,0,'cs','box'),(10854,'Tea - Jasmine Bag (Yamamoto) 12/16bag',24.00,100,'日本花茶包',1,24.00,0,'cs','cs'),(11049,'Tea - Jasmine Green 24/100bags',4.50,100,'茉香绿荼包',1,4.50,0,'box','box'),(12207,'Tea - Jasmine Green Bags (Foojoy) 100/12',6.50,100,'福字茉莉香片',1,6.50,0,'box','box'),(12325,'Tea - Jasmine Green Bags (Foojoy) 12/25bag',2.99,100,'福字茉莉香片',1,2.99,0,'box','box'),(10035,'Tea - Jasmine Green Leaves (Foojoy) 6/5#',78.00,100,'福字花茶叶',1,16.00,0,'cs','pkg'),(10406,'Tea - Jasmine Green Whole Leaves Bag (Ten Ren) 18/bx',6.50,100,'天仁茉香绿荼原片',1,6.50,0,'box','box'),(11269,'Tea - Jasmine Leaves (Ten Ren/Orange box) 300g',36.00,100,'天仁香片茶叶',1,36.00,0,'box','box'),(6048,'Tea - Jasmine Leaves Premium 6/5#',75.00,100,'茉利花茶',5,15.00,0,'cs','bag'),(12076,'Tea - Jasmine Leaves Ten Luh (Ten Ren/Orange box) 375g',39.00,100,'天仁天露香片',1,39.00,0,'box','box'),(12074,'Tea - Jasmine Whole Leaves Bag  (Ten Ren) 18/bx',6.50,100,'天仁原片花茶包',1,6.50,0,'box','box'),(10961,'Tea - Kings Oolong (103) (Ten Ren)10.6oz',42.00,100,'103茶王',1,42.00,0,'box','box'),(12323,'Tea - Lichee Black (Foojoy) 12/25bag',2.99,100,'福字荔枝红茶包',1,2.99,0,'box','box'),(9907,'Tea - Lone Jing Leaves 500g/pkg',35.00,100,'龙井茶叶',1,35.00,0,'pkg','pkg'),(9833,'Tea - Oolong Bag (Organic) 20/100 ',94.50,100,'有机乌龙茶包',1,4.95,0,'cs','box'),(9834,'Tea - Oolong Bag (Organic) 60/25',143.50,100,'有机乌龙茶包',1,3.00,0,'cs','box'),(6143,'Tea - Oolong Bag (Ten Ren) 20/bx',4.50,100,'天仁乌龙茶包',1,4.50,0,'box','box'),(9028,'Tea - Oolong Bags (GF) 50/100/bx',60.00,100,'嘉蘭乌龙茶包',50,1.79,0,'cs','box'),(12073,'Tea - Oolong High Mt. Whole Leaves Bag (Ten Ren) 240/bx',16.00,100,'天仁高山原片乌龙茶包',1,16.00,0,'box','box'),(10034,'Tea - Oolong Leaves (Foojoy) 6/5#',75.00,100,'福字乌龙茶叶',1,15.00,0,'cs','pkg'),(6144,'Tea - Oolong Leaves 6/5#',55.00,100,'乌龙茶叶',6,13.00,0,'cs','bag'),(12321,'Tea - Oolong WuYi (Foojoy) 12/25bag',3.29,100,'福字武宜乌龙茶包',1,3.29,0,'box','box'),(10405,'Tea - Oriental Delight (Ten Ren) 20/bx',4.50,100,'天仁菊普荼包',1,4.50,0,'bx','bx'),(11268,'Tea - Osmanthus Oolong (Ten Ren) 300g',27.00,100,'桂花乌龙茶',1,27.00,0,'box','box'),(12222,'Tea - Pu - Erh Whole Leaves Bag (Ten Ren) 18/bx',6.50,100,'天仁普洱茶原片',1,6.50,0,'box','boox'),(10404,'Tea - Pu-Erh Bag (Ten Ren) 20/bx',4.50,100,'',1,4.50,0,'bx','bx'),(12326,'Tea - Royal Kuan Yin (Foojoy) 12/25bag',2.99,100,'福字铁观音茶包',1,2.99,0,'box','box'),(12322,'Tea - Shoumei White (Foojoy) 12/25bag',2.99,100,'福字寿眉白茶包',1,2.99,0,'box','box'),(12075,'Tea - Ten Wu (Oolon) 50/box',20.00,100,'天仁天雾茶',1,20.00,0,'box','box'),(9016,'Tea - Thai Mix (Pantai) 30/16oz/ bags',158.00,100,'泰茶袋',30,6.99,0,'cs','pkg'),(10951,'Tea - Thai Mix DeDe Instant (3Ladies)  30/12/1.23oz',110.00,100,'三女牌泰茶粉',1,4.95,0,'cs','pkg'),(12220,'Tea - White 95癈 (Ten Ren) 2.5lb',55.00,100,'寿眉(白茶)',1,55.00,0,'bag','bag'),(10403,'Tea - White Bag (Ten Ren) 20/bx',5.00,100,'天仁白茶包',1,5.00,0,'bx','bx'),(11267,'Tea - White Leaves (Ten Ren) 8oz/bag',18.00,100,'寿眉茶叶',1,18.00,0,'bag','bag'),(9751,'Tea - Xia Sang Ju 16/10g/bag',1.10,100,'夏桑菊',1,1.10,0,'pkg','pkg'),(11700,'Teriyaki Sauce (KKM) 12/10oz',30.00,100,'照烧酱',1,2.49,0,'cs','btl'),(6068,'Teriyaki Sauce (KKM) Glaze 6/5#',65.00,100,'照烧酱',4,12.00,0,'cs','btl'),(11446,'Tofu - Bean Curd Gluten Roll',3.29,300,'面筋',1,3.29,0,'lb','lb'),(11443,'Tofu - Bean Curd Knot',3.29,300,'百叶结',1,3.29,0,'pkg','pkg'),(11445,'Tofu - Bean Curd Sausage',3.39,300,'豆肠',1,3.39,0,'lb','lb'),(11495,'Tofu - Bean Curd Shredded',3.29,300,'豆干丝',1,3.29,0,'pkg','pkg'),(11444,'Tofu - Bean Curd Sponge',3.75,300,'烤麸',1,3.75,0,'lb','lb'),(10423,'Tofu - Deep Fried',5.99,300,'炸豆腐(豆泡)',1,5.99,0,'lb','lb'),(10924,'Tofu - Egg 24/8.64oz',53.00,300,'玉子豆腐',1,2.99,0,'cs','ea'),(9266,'Tofu - Five Spice 30pkg/cs',3.29,300,'五香豆干',1,3.29,0,'pkg','pkg'),(11614,'Tofu - Froz. Fried Gluten Ball 50/1.7oz',1.50,400,'冻油面筋',1,1.50,0,'pkg','pkg'),(11613,'Tofu - Froz. Soy Sheet 24/8oz',46.00,400,'冻百页',1,2.49,0,'cs','pkg'),(11814,'Tofu - Fry Fish (Wang) 40/240g',3.49,400,'魚豆腐',1,3.49,0,'pkg','pkg'),(11308,'Tofu - Fry Fish (WC) 30/300g',4.49,400,'魚豆腐',1,4.49,0,'pkg','pkg'),(10877,'Tofu - Fry Fish Surimi (Mausei) 20/1#',3.50,400,'魚豆腐',1,3.50,0,'pkg','pkg'),(11156,'Tofu - Pre - Fried Fish (Thai) 20#',3.99,400,'鱼豆腐',1,3.99,0,'pkg','pkg'),(11945,'Tofu - Soon Starter (BCD/Hot/Red) 24/13oz',2.29,300,'辣豆腐汤',1,2.29,0,'pkg','pkg'),(11946,'Tofu - Soon Starter (BCD/Med.Hot/Blue) 24/13oz',2.29,300,'中辣豆腐汤',1,2.29,0,'cs','pkg'),(11011,'Tofu (Firm) (Golden Gate) 16/14oz',16.00,300,'金門硬豆腐',1,1.50,0,'cs','pkg'),(5147,'Tofu (Firm/Red) 12/14oz',19.00,300,'硬豆腐',1,1.69,0,'cs','pkg'),(9931,'Tofu (Fong/Blue )',38.00,300,'方记软豆腐',1,38.00,0,'cs','cs'),(11042,'Tofu (Fong/Red)',35.00,300,'方记硬豆腐',1,32.00,0,'cs','pkg'),(12236,'Tofu (Form/SanSui) 12/15oz',19.95,300,'山水硬豆腐',1,1.99,0,'cs','cs'),(9256,'Tofu (Fried)',1.50,300,'红烧豆腐',1,1.50,0,'pkg','pkg'),(11826,'Tofu (M/Blue) 12/14oz',19.00,300,'中硬豆腐',1,1.69,0,'cs','pkg'),(11921,'Tofu (M/Blue) Organic 12/14oz',1.79,300,'有机中硬豆腐',1,1.79,0,'pkg','pkg'),(12238,'Tofu (Mori-Nu/Firm) 12/12.3oz',19.95,100,'硬豆腐',1,1.79,0,'cs','pkg'),(11012,'Tofu (Soft) (Golden Gate) 12/14oz',14.00,300,'金門软豆腐',1,1.50,0,'cs','pkg'),(5173,'Tofu (Soft/Green) 12/14oz',19.00,300,'软豆腐',1,1.69,0,'cs','pkg'),(11920,'Tofu (Soft/Green) Organic 12/14oz',1.79,300,'有机软豆腐',1,1.79,0,'pkg','pkg'),(9976,'Tofu (Strip)',3.50,300,'豆干丝',1,3.50,0,'pkg','pkg'),(12251,'Tofu (Wochong/Blue) 12/16oz',18.00,300,'和昌水豆腐',1,18.00,0,'cs','cs'),(12173,'Tofu (Wochong/Blue) 30/16oz',33.95,300,'和昌水豆腐',1,33.95,0,'cs','cs'),(12165,'Tofu (Wochong/Red) 30/16oz',33.95,300,'和昌硬豆腐',1,32.95,0,'cs','cs'),(5148,'Tofu (X-Firm/Pink)',16.00,300,'硬硬豆腐',12,1.50,0,'cs','pkg'),(9070,'Tofu Skin In Can',1.50,100,'豆腐皮',1,1.50,0,'cs','can'),(9650,'Tom Yum Paste (JHC) 24/16oz',78.00,100,'冬阴醬',1,4.25,0,'cs','jar'),(6312,'Tom Yum Paste 24/8oz',48.00,100,'冬阴酱',1,2.50,0,'cs','jar'),(10123,'Tom Yum Powder (OJ) 12/1.1oz',1.00,100,'酸辣調味粉',1,1.00,0,'cs','cs'),(11662,'Tonkatsu - Meat Sauce (KKM) 12/11.75oz',29.00,100,'猪骨味酱',1,2.95,0,'cs','btl'),(9951,'Tonkatsu - Meat Sauce (KKM/25727) 8/60oz',82.00,100,'猪骨味酱',1,14.00,0,'cs','btl'),(12291,'Tonkatsu Sauce (Bulldog) 20/16.9oz',5.99,100,'猪骨味酱',1,5.99,0,'btl','btl'),(11665,'Tonkatsu Sauce (Bulldog) 3/10/10oz',30.00,100,'猪骨味酱',1,3.50,0,'box','btl'),(6313,'Tonkatsu Sauce (Bulldog) 6/60oz',69.00,100,'猪骨味酱',1,13.00,0,'cs','btl'),(9608,'Toothpick - Loose 6/24/800pcs',27.00,100,'无包牙签',1,1.50,0,'box','pkg'),(11347,'Toothpick - Umbrella (Parasol Picks)144ea/box',4.35,100,'雨伞牙签',1,4.35,0,'box','pkg'),(6315,'Toothpick - Wrapped 8/12/1000pc',27.00,100,'有包牙签',12,2.79,0,'box','pkg'),(9784,'Towel  - Hot/Cold Fresh Nap Rolled 500',19.95,100,'',1,19.95,0,'cs','cs'),(6128,'Towel - Multifold 4000pc',26.95,100,'擦手纸',1,26.95,1,'cs','cs'),(10904,'Tray - (36220) (First St.)9.5x6.5x3  200pc',25.00,100,'一格盒',1,25.00,0,'cs','cs'),(12137,'Tray - (C89PST1) 1 Cmpt Hingd Contr(Clear) 5.28x8.28x2 250ct',49.00,100,'透明三格合',1,49.00,0,'cs','cs'),(12055,'Tray - (Whbrg-6hw/B7280079) 6  Sandwich Paper 4/100ct',63.00,100,'环保三文治盒',1,63.00,0,'cs','cs'),(12057,'Tray - (Whbrg-8-3hw/B7280081) 8  3 Com. Paper 2/100ct',56.00,100,'环保三格盒',1,56.00,0,'cs','cs'),(12056,'Tray - (Whbrg-8hw/B7280080) 8  1 Com. Paper 2/100ct',56.00,100,'环保一格合',1,56.00,0,'cs','cs'),(12062,'Tray - (Whbrg-9-3hw/B7280083) 9  3 Com. Paper 2/100ct',71.00,100,'环保大三格盒',1,71.00,0,'cs','cs'),(5852,'Tray - 1 Comp. (85HT1)',37.00,100,'一格盒',1,37.00,0,'cs','cs'),(10234,'Tray - 1 Comp.(20600) 9 x6.5 x2.5  2/100pcs',39.95,100,'春卷盒',1,39.95,0,'cs','cs'),(12351,'Tray - 201HT 1Com 9.25x5-11/16x3.25 200ct',49.00,100,'一格盒',1,49.00,0,'cs','cs'),(5853,'Tray - 3 Compartment (85HT3)',37.00,100,'三格盒',1,37.00,0,'cs','cs'),(6353,'Tray - 3 Compartment 9 X9  (TD1-9903)',23.95,100,'大三格盒',1,26.00,0,'cs','cs'),(10397,'Tray - 7  Deep Plastic ',5.95,100,'大胶盘',1,5.95,0,'ea','ea'),(9667,'Tray - 8lb Single Com.6 x9  (Kari-out) 200pcs',18.00,100,'',1,18.00,0,'cs','cs'),(10822,'Tray - CN8-0903     120pc',57.95,100,'格盒',1,57.95,0,'cs','cs'),(6297,'Tray - Compartment (EX-L) (TH-0063)',30.00,100,'大三格盒',1,30.00,0,'cs','cs'),(11869,'Tray - DHL- 81 1 Comp.7.875 x8 x3.19   200ct',42.95,100,'环保一格合',1,42.95,0,'cs','cs'),(10552,'Tray - DHL-83 Biodegrades 3 Comp. 7.875 x8 x3.19  200pcs',42.95,100,'环保三格盒',1,42.95,0,'cs','cs'),(10553,'Tray - DL-93 Biodegradable 3 Comp. 9 x9  3.19   200pcs',45.00,100,'环保三格盒',1,45.00,0,'cs','cs'),(10843,'Tray - EP83 8  3 Comp. (Ecopak) 200pc',33.00,100,'环保三格盒',1,33.00,0,'cs','cs'),(11050,'Tray - EP96 9 x6 x3  1 Comp. (Ecopak) 250pc',44.50,100,'环保一格盒',1,44.50,0,'cs','cs'),(10820,'Tray - EP-HC93  3 Com.9x9x3  200pc',67.95,100,'三格盒',1,67.95,0,'cs','cs'),(11728,'Tray - HL-1 1 Com.  2/100pcs',18.00,100,'一格盒',1,18.00,0,'cs','cs'),(11727,'Tray - HL-3  3 Com.  2/100pcs',18.00,100,'三格盒',1,18.00,0,'cs','cs'),(9214,'Tray - Hot Dog  (SP-7 71901) 7 7/8 x3 1/2 x2 1/4   500ct',29.95,100,'热狗盒',1,29.95,0,'cs','cs'),(10823,'Tray - HS203    200pc',54.50,100,'格盒',1,54.50,0,'cs','cs'),(9570,'Tray - K1  200pcs',41.00,100,'一格盒',1,41.00,0,'cs','cs'),(9207,'Tray - K3  200ps',42.00,100,'三格盒',1,42.00,0,'cs','cs'),(11492,'Tray - Meat White #2 (51P102FS) 500pcs',32.00,100,'一格托盘',1,32.00,0,'cs','cs'),(10821,'Tray - SCH18940  3Com. 9x9x3  200pc',52.95,100,'三格盒',1,52.95,0,'cs','cs'),(12040,'Tray - SL0079  Sandwich 4  4/125pcs',32.00,100,'小三文治盒',1,32.00,0,'cs','cs'),(10585,'Tray - SN100  1Com. 200pcs',15.50,100,'一格盒',1,15.50,0,'cs','cs'),(10586,'Tray - SN103  3Com. 200pcs',15.50,100,'三格盒',1,15.50,0,'cs','cs'),(6293,'Tray - SN200 1 Com.(L) 9  200pcs',43.00,100,'大一格盒',1,43.00,0,'cs','cs'),(6294,'Tray - SN203 3 Comp. (L) 9  (TD1-9903) 200pcs',43.00,100,'大三格盒',1,43.00,0,'cs','cs'),(6302,'Tray - SN225  Sandwich 6  500pcs',49.00,100,'三文治盒',1,49.00,0,'cs','cs'),(10070,'Tray - SN227 Sandwich 7   4/125',85.00,100,'大三文治盒',1,85.00,0,'cs','cs'),(6354,'Tray - SN240 1 Comp. 8 (TD18801) 200pcs',41.50,100,'一格盒',1,41.50,0,'cs','cs'),(6355,'Tray - SN243 3 Comp. 8 (TD18803) 200pcs',41.50,100,'三格盒',1,41.50,0,'cs','cs'),(9002,'Tray - TG1 150pcs(PC)',25.00,100,'一格盒',1,25.00,0,'cs','cs'),(5816,'Tray - TG3 150pcs (PC)',25.00,100,'三格盒',1,25.00,0,'cs','cs'),(12303,'Tray - TS06  Sandwich 6  360pcs',21.00,100,'三文治盒',1,21.00,0,'cs','cs'),(10556,'Tub - Plastic (Busboy)',7.50,100,'胶盆',1,7.50,1,'ea','ea'),(6185,'Tung Choy - Preserved 24/16oz',2.00,100,'',1,2.00,0,'cs','item'),(11763,'Tungfun -Fresh Chicken Broth',2.99,300,'鸡汤粉',1,2.99,0,'pkg','pkg'),(10154,'Turkey Breast Meat',2.89,500,'火鸡胸肉',1,2.89,0,'lb','lb'),(10953,'Urinal ',0.00,100,'',1,0.00,0,'',''),(10235,'Urinal Deodorizer',2.95,100,'尿香劑',1,2.95,1,'ea','ea'),(9565,'Vanilla - Imitation ',9.50,100,'香草精',1,9.50,0,'btl','btl'),(9376,'Veggie - Pickled cabbage (Ma Ling)72/7oz',60.00,100,'雪菜',72,0.89,0,'cs','can'),(6249,'Veggie - Pres. Snow Cabbage  72/4oz',1.00,100,'雪菜',1,1.00,0,'cs','pkg'),(10346,'Veggie - Pres. Snow Cabbage 60/5.3oz',22.95,100,'美味雪菜',1,0.49,0,'cs','pkg'),(9438,'Veggie - Preserved Boss 200/2.8oz',45.00,100,'老板菜',200,0.35,0,'cs','pkg'),(12041,'Veggie - Preserved Mustard Sem 16oz',5.49,300,'梅菜王',1,5.49,0,'pkg','pkg'),(12209,'Veggie - Preserved Mustard Sem 3/11#',3.99,100,'梅菜王',1,3.99,0,'lb','lb'),(10444,'Veggie - Preserved Mustard Sem 44#',1.59,300,'惠州甜梅菜芯',1,1.59,0,'lb','lb'),(9688,'Veggie - Preserved Salted Mustard (MCL)50/14oz',4.39,100,'甜梅菜芯',1,4.39,0,'pkg','pkg'),(9362,'Veggie - Preserved Szechuan Strip 200/3.5oz',55.00,100,'榨菜丝包',200,0.45,0,'cs','pkg'),(6283,'Veggie - Preserved Szechuan Strip 48/12oz',35.00,100,'榨菜丝',48,1.09,0,'cs','can'),(6284,'Veggie - Preserved Szechuan Whole 48/12oz',35.00,100,'榨菜块',48,1.09,0,'cs','can'),(9535,'Veggie - Preserved Tianjin 18/21oz/jar',50.00,100,'冬菜',1,3.99,0,'cs','jar'),(9987,'Veggie Salad - Mixed Veggie  20/16oz',32.00,300,'',1,1.89,0,'cs','bag'),(9988,'Veggie Salad - Pre-Veggie  20/16oz',32.00,300,'',1,1.89,0,'cs','bag'),(11791,'Venison - Flank Steak ',15.00,500,'扇面鹿肉',1,15.00,0,'lb','lb'),(11792,'Venison - Loin',19.00,500,'鹿肉柳',1,19.00,0,'lb','lb'),(12031,'Vietnamese Dipping Sauce 23oz',2.49,100,'越南调味鱼露',1,2.49,0,'btl','btl'),(4711,'Vinegar   4/1gal',10.50,100,'白醋',4,3.59,0,'cs','gal'),(5029,'Vinegar - (Fuji Su) 5gal  (Blue Letter)(Mizkan)',25.00,100,'富士醋',1,19.95,0,'cs','cs'),(9099,'Vinegar - (Sushi Su) Yellow 5.28 gal (Marukan)',50.50,100,'黄日本醋',1,50.50,0,'cs','cs'),(11433,'Vinegar - 5 Year Aged Mature 24/500ml',45.00,100,'山西五年老陈醋',1,2.29,0,'cs','btl'),(9929,'Vinegar - Balsamic  2/5ltr',32.00,100,'意大利醋',1,17.00,0,'cs','btl'),(11831,'Vinegar - Black (Kong Yen) 4/5# ',36.50,100,'工研乌醋',1,10.00,0,'cs','btl'),(6273,'Vinegar - Black Sweeted (KC) 12/20.3oz ',27.95,100,'添丁甜醋',1,2.99,0,'cs','btl'),(11207,'Vinegar - Black Sweeted Rice (Pat Chun) 2/4.8lt',52.00,100,'八珍甜醋',1,52.00,0,'btl','btl'),(11264,'Vinegar - Black Sweeten (PRB) 24/500ml',1.99,100,'添丁甜醋',1,1.99,0,'btl','btl'),(12192,'Vinegar - Black Sweeten (PRB) 3/2.5L',12.50,100,'添丁甜醋',1,12.50,0,'btl','btl'),(5322,'Vinegar - Chinese Red  12/16.9oz',36.00,100,'红醋',12,3.99,0,'cs','btl'),(9275,'Vinegar - Chinkiang  24/18.6oz',44.00,100,'镇江香醋',24,2.79,0,'cs','btl'),(11173,'Vinegar - Chinkiang Gold Plum 12/550g',3.49,100,'金梅鎮江香醋',1,3.49,0,'btl','btl'),(9269,'Vinegar - Citrus Ponzu 6/1.5L',63.50,100,'日本柑橘醋',6,15.95,0,'cs','btl'),(10857,'Vinegar - Datu Puti (Philipeno) 4/1gal',17.50,100,'菲律賓醋',1,4.79,0,'cs','gal'),(10719,'Vinegar - Kasho  (Marukan/Purple)  5.28gal',45.00,100,'日本殺奇醋',1,45.00,0,'cs','cs'),(10186,'Vinegar - Rice (Green Marukan) 12/24oz',1.00,100,'日本醋',1,1.00,0,'cs','btl'),(6204,'Vinegar - Rice (Green Marukan) 4/1gal',36.00,100,'米醋',1,12.00,0,'cs','gal'),(10183,'Vinegar - Rice (Green Marukan/#06745) 12/12oz',1.00,100,'日本醋',1,1.00,0,'cs','btl'),(11970,'Vinegar - Rice (Kong Yen) 12/20.2oz',30.00,100,'工研米醋',1,2.79,0,'cs','btl'),(11832,'Vinegar - Rice (Kong Yen) 24/10oz',29.00,100,'工研米醋',1,1.95,0,'cs','btl'),(11834,'Vinegar - Rice (Kong Yen) 4/5# ',39.00,100,'工研米醋',1,10.50,0,'cs','btl'),(11574,'Vinegar - Rice Black (Pat Chun) 12/600ml',8.95,100,'八珍黑米醋',1,8.95,0,'btl','btl'),(5915,'Vinegar - Rice Black 12/20.3oz (KC)',33.00,100,'黑醋',1,3.99,0,'cs','btl'),(6272,'Vinegar - Rice Dressing (Orange/Marukan) 4/1gal',50.50,100,'日本醋',1,15.00,0,'cs','gal'),(10188,'Vinegar - Rice Lite (Yellow Marukan) 12/24oz',1.95,100,'日本醋',1,1.95,0,'cs','btl'),(10185,'Vinegar - Rice Lite (YellowMarukan) 12/12oz',1.00,100,'日本醋',1,1.00,0,'cs','btl'),(11676,'Vinegar - Rice Plain (Mizkan/Nakano) 4/1gal',36.00,100,'日本醋',1,36.00,0,'cs','cs'),(10498,'Vinegar - Rice Seasoned (Mizkan/Nakano) 4/1gal',41.00,100,'日本醋',1,29.00,0,'cs','btl'),(11412,'Vinegar - Rice Seasoned Gourmet (Marukan) 12/355ml(12oz)',25.00,100,'米醋',1,2.49,0,'cs','bt'),(9645,'Vinegar - Rice Seasoned Gourmet (Marukan) 12/750ml',32.50,100,'米醋',1,2.95,0,'cs','btl'),(11958,'Vinegar - Rice Seasoned Gourmet( Marukan) 12/24oz',2.79,100,'',1,2.79,0,'btl','btl'),(10184,'Vinegar - Rice S sND (Orange Marukan)12/12oz',25.00,100,'日本醋',1,2.89,0,'cs','btl'),(10187,'Vinegar - Rice S sND (Orange Marukan)12/24oz',1.00,100,'日本醋',1,1.00,0,'cs','btl'),(10486,'Vinegar - Sushi Otafuku  5 gal',35.89,100,'日本醋',1,35.89,0,'cs','cs'),(12006,'Vinegar - Sushi Seasoning (Mitskan/MD-43) 5.28gal',46.50,100,'日本醋',1,46.50,0,'cs','cs'),(10171,'Vinegar - Sushi Su Powder (L) 6/10/5.30oz',1.00,100,'日本醋粉',1,1.00,0,'cs','box'),(10172,'Vinegar - Sushi Su Powder (S)(Tamanoi) 5/20/2.67oz',1.00,100,'日本醋粉',1,1.00,0,'cs','box'),(10500,'Vinegar - Sushi Su SD51 (Mizkan) 5gal',36.95,100,'日本醋',1,36.95,0,'cs','cs'),(9321,'Wafer - Chocolate Stick  12/14.1oz (Dragonfly)',44.50,100,'',12,30.00,0,'cs','cs'),(9297,'Wafer Paper (Dried Wheat Starch Chip)10/10/100pc',3.50,100,'海鲜纸',1,3.50,0,'pkg','pkg'),(6323,'Walnut - Halves 25#',137.50,100,'核桃片',25,5.50,0,'cs','lb'),(9354,'Walnut - Halves 5#',29.75,100,'核桃片',1,5.95,0,'bag','lb'),(11394,'Wasabi In Tube  (S&B) Fam Size 4/10/3.17oz',3.99,100,'日本芥辣',1,3.99,0,'box','box'),(10161,'Wasabi In Tube 10/10/1.52oz',1.00,100,'日本芥辣',1,1.00,0,'cs','box'),(6325,'Wasabi Ko Powder 10/2.2#',62.00,100,'日本芥辣粉',10,8.00,0,'cs','bag'),(12139,'Wasabi Ko Powder 10/2.2# (Tetsujin/Green)',62.00,100,'铁人牌日本芥辣',1,8.00,0,'cs','bag'),(9819,'Wasabi Ko Powder 10/2.2# (Uncle Chen)',62.00,100,'',1,8.00,0,'cs','bag'),(10870,'Wasabi Ko Powder 10/2.2# (Warner)',77.50,100,'日本芥辣',1,9.00,0,'cs','bag'),(11297,'Wasabi Ko Powder In Can 20/12/1oz',23.88,100,'小包裝日本芥辣粉',1,1.99,0,'box','can'),(11689,'Wasabi Mayonnaise 12/12oz',2.95,100,'芥辣美乃滋',1,2.95,0,'jar','jar'),(11717,'Wasabi Sauce (KKM) 12/25oz',6.79,100,'日本芥辣酱',1,6.79,0,'btl','btl'),(11636,'Wasabi Sauce (KKM) 9/9.25oz',3.49,100,'日本芥辣酱',1,3.49,0,'btl','btl'),(11698,'Water - Bottle (Arrowhead) 40/16.9oz',6.50,100,'瓶装水',1,6.50,0,'cs','cs'),(9620,'Water - Bottle 40/16.9oz',6.95,100,'瓶装水',1,1.00,0,'cs','cs'),(10392,'Water Boiler',135.00,100,'电热水壶',1,135.00,1,'ea','ea'),(11777,'Water Boiler & Warmer CD-LFC50 (Zojirushi)',179.00,100,'象牌煮水保温壶',1,179.00,1,'ea','ea'),(5327,'Water Chestnut - Diced 6/5#',55.00,100,'马丁',6,12.00,0,'cs','can'),(11638,'Water Chestnut - Sliced 24/8oz   ',17.00,100,'小罐马蹄片',1,0.89,0,'cs','can'),(4729,'Water Chestnut - Sliced 6/5#   ',55.00,100,'马片',6,12.00,0,'cs','can'),(11637,'Water Chestnut - Whole 24/8oz',17.00,100,'小罐全只馬蹄',1,0.89,0,'cs','can'),(11365,'Water Chestnut Powder 80/8.8oz',160.00,100,'泮塘馬蹄粉',1,2.50,0,'cs','box'),(10566,'Whelk - Cooked  30-50  White 15kg',131.95,400,'熟海螺',1,3.99,0,'cs','lb'),(10910,'Whipped Cream Sweetened  15oz',3.50,300,'泡沫奶油',1,3.50,0,'btl','btl'),(10979,'Wine - Cooking (Hua Tiao) 12/750ml',20.00,100,'花雕料酒',1,2.19,0,'cs','cs'),(11908,'Wine - Cooking (Kiu Kiang/PRB) 12/500ml',26.00,100,'九江雙蒸酒',1,2.49,0,'cs','btl'),(11254,'Wine - Cooking (Kwang Tung/PRB) 12/500ml',35.00,100,'广东米酒',1,3.49,0,'cs','btl'),(9707,'Wine - Cooking (Mei Kuei Lu)  12/640ml',13.95,100,'玫瑰露酒',1,1.49,0,'cs','btl'),(11989,'Wine - Cooking (Mei Kuei Lu)  12/750ml',2.39,100,'玫瑰露酒',1,2.39,0,'btl','btl'),(6228,'Wine - Cooking (Shaoxing) 12/750ml',19.50,100,'绍兴酒',1,1.95,0,'cs','btl'),(11702,'Wine - Cooking Sake Ryorishu (KKM) 12/33.8oz12/750ml',59.50,100,'日本饭酒',1,6.50,0,'cs','btl'),(6227,'Wine - Cooking Sherry 4/1gal',29.50,100,'加州厨用红酒',1,8.00,0,'cs','gal'),(11290,'Wine - Fermented Sweet Rice 12oz',2.79,300,'甜酒酿',1,2.79,0,'jar','jar'),(11291,'Wine - Fermented Sweet Rice 32oz',6.79,300,'甜酒酿',1,6.79,0,'jar','jar'),(9483,'Wine - Plum (KC)',6.95,100,'',1,6.95,0,'btl','btl'),(12141,'Wine - Rice Cooking  4/1gal',28.00,100,'本地米酒',1,28.00,0,'cs','cs'),(9617,'Wine - Rice Cooking  4/3Liter',19.50,100,'胶瓶米酒',1,5.99,0,'cs','jug'),(9117,'Wine - Shaoxing Cooking 4/3Liter',19.50,100,'绍兴料酒',4,5.99,0,'cs','jug'),(11669,'Wine - Tianjin (Mei Kuei Lu)  12/640ml',24.99,100,'天津玫瑰露酒',1,24.99,0,'ea','ea'),(12190,'Wine - Xinghuacun Fen Chiew 12/750ml',24.99,100,'杏花村汾酒',1,24.99,0,'btl','btl'),(10829,'Withdrawal Charge ',1.00,100,'',1,1.00,0,'ea','ea'),(11409,'Wok - 10  Stainless Steel w. Handle',18.99,100,'不锈钢锅',1,18.99,1,'ea','ea'),(10881,'Wok - 14  Po No Coating',17.95,100,'银色抛锅(釘)',1,15.50,1,'ea','ea'),(9215,'Wok - 14  Po Wok',20.50,100,'抛锅',1,15.95,1,'ea','ea'),(9312,'Wok - 14  Po Wok (36cm) (Japan)',48.00,100,'抛锅',1,45.00,1,'ea','ea'),(9397,'Wok - 14  Po Wok (Lt Weight) (TF)',18.95,100,'抛锅',1,15.50,1,'ea','ea'),(11415,'Wok - 14  Po Wok Stainless Steel',35.00,100,'不锈钢14寸抛锅',1,18.95,1,'ea','ea'),(10561,'Wok - 14  Po Wok w. Wooden Handle#23082',17.95,100,'抛锅(釘)',1,12.00,1,'ea','ea'),(11917,'Wok - 16  Po Wok ',21.95,100,'抛锅',1,18.50,1,'ea','ea'),(9295,'Wok - 16  Po Wok (39cm) (Japan)',52.00,100,'抛锅',1,46.00,1,'ea','ea'),(11075,'Wok - 16  Po Wok (Lt Weight/No Coating)',20.50,100,'轻抛锅',1,18.50,1,'ea','ea'),(9596,'Wok - 16  Po Wok (Peking) ',20.50,100,'',1,20.50,1,'ea','ea'),(9594,'Wok - 16  Po Wok (Taiwan) 5  Deep 8  Handle',20.50,100,'',1,15.00,1,'ea','ea'),(10508,'Wok - 16  Po Wok w Wooden Handle(23083)',20.50,100,'抛锅',1,13.95,1,'ea','ea'),(11491,'Wok - 16  w/2 Handle ',22.95,100,'广东抛锅',1,22.95,1,'ea','ea'),(10390,'Wok - 17  w/2 Handle #23097',22.95,100,'广东抛锅',1,22.95,1,'ea','ea'),(9150,'Wok - 18  w/2  Handles ',24.95,100,'双耳锅',1,18.95,1,'ea','ea'),(10327,'Wok - 18  w/2 Handles (USA) 5  Deep',24.95,100,'双耳锅',1,19.95,1,'ea','ea'),(10706,'Wok - 19  w/2 handles',19.95,100,'双耳锅',1,19.95,1,'ea','ea'),(9307,'Wok - 20  w/2 Handles',25.99,100,'双耳锅',1,20.95,1,'ea','ea'),(9746,'Wok - 22  w/2 handles (USA)',39.95,100,'',1,39.95,1,'ea','ea'),(9313,'Wok - 22  w/2handles (China)',39.95,100,'双耳锅',1,39.95,1,'ea','ea'),(12135,'Wok - 23 Cm Alcohol Wok (SLAL02A)',37.24,100,'',1,37.24,1,'ea','ea'),(9861,'Wok - 24  w/2 handles (China)',39.95,100,'双耳锅',1,24.95,1,'ea','ea'),(9395,'Wok - 24  w/2 handles (USA)',39.95,100,'双耳锅',1,38.50,1,'ea','ea'),(9583,'Wok - 26  w/2 handles (China) #23022',48.95,100,'双耳锅',1,47.95,1,'ea','ea'),(9584,'Wok - 26  w/2 handles (USA)',48.95,100,'双耳锅',1,47.95,1,'ea','ea'),(10058,'Wok - 28  w/2 handles',50.95,100,'双耳锅',1,42.00,1,'ea','ea'),(10073,'Wok - 30  w/2handles',53.95,100,'',1,52.00,1,'ea','ea'),(12134,'Wok - 7  X 7 1/4  (SLFM001)',19.95,100,'',1,19.95,1,'ea','ea'),(10414,'Wonton - Chicken (EDS) (16/24pcs)10#',6.00,400,'鸡肉水云吞',1,6.00,0,'pkg','pkg'),(10908,'Wonton - Cooked Pork(Good Guy)4/3.5#/320pc',114.00,400,'熟云吞',1,35.00,0,'cs','cs'),(10742,'Wonton - Pork & Veggie  20/24pc  13#',49.00,400,'生云吞',1,2.79,0,'cs','pkg'),(9434,'Wonton - Pork (EDS) (16/24pcs) 10#',6.00,400,'生肉水云吞',20,6.00,0,'pkg','pkg'),(9675,'Wonton - Shrimp & Veggie (Amoy)  4/6/12',43.20,400,'虾云吞',1,43.20,0,'cs','pkg'),(10391,'Wonton -Shrimp&Veggie (Amoy) 4/72pcs (#4164)',65.95,400,'云吞',1,18.95,0,'cs','pkg'),(9051,'Wonton Skin - (M) (China) 24# (brown)',32.50,400,'中厚云吞皮',1,2.25,0,'cs','pkg'),(5101,'Wonton Skin - (M) (NHK) 24# (Orange)',45.00,400,'中厚云吞皮',1,2.50,0,'cs','pkg'),(11056,'Wonton Skin - HK Style (NHK) 24/14oz',3.89,400,'港式云吞皮',1,3.89,0,'pkg','pkg'),(11995,'Wonton Skin - Shanghai Thick (Louies) 12/14oz',2.50,400,'雷氏上海厚云吞皮',1,2.50,0,'pkg','pkg'),(5104,'Wonton Skin - Thick (China) (White) 24#',32.50,400,'中华炸皮',1,2.25,0,'cs','pkg'),(5744,'Wonton Skin - Thick (NHK)  24# (Brown)',45.00,400,'新香港炸皮',1,2.50,0,'cs','pkg'),(10323,'Wonton Skin - Thick(Kim Hon) 24pkg',36.00,400,'金鴻炸皮',24,1.69,0,'cs','pkg'),(6333,'Wonton Skin - Thin (China) 24# (Pink)',32.50,400,'薄云吞皮',24,2.25,0,'cs','pkg'),(11992,'Wonton Skin - Thin (Louies) 12/14oz',46.00,400,'雷氏港式薄云吞皮',12,3.99,0,'cs','pkg'),(5103,'Wonton Skin - Thin (NHK)  24# (White)',45.00,400,'薄云吞皮',24,2.50,0,'cs','pkg'),(11815,'Wonton Skin - Think(Kim Hon) 30pkg',42.00,400,'金鴻薄皮',1,2.25,0,'cs','pkg'),(9351,'Worcestershire 3/1gal',55.00,100,'喼汁',1,20.00,0,'cs','gal'),(9587,'XO Sauce (LKK) 12x7.8oz.',19.00,100,'XO 醬',1,19.00,0,'jar','jar'),(11903,'Yakisoba Sauce - Otafuku Orajoy 12/12.7oz',40.00,100,'日本煎面醬',1,3.95,0,'cs','btl'),(11168,'Yakisoba Sauce - Otafuku Orajoy 6/81.4oz',82.00,100,'日本煎面醬',1,15.00,0,'cs','btl'),(10141,'Yum Powder (OJ) 12/1.06oz',1.00,100,'海鲜调味粉',1,1.00,0,'cs','cs'),(9069,'Yuzu Juice 12/900ml/btl',57.00,100,'日本柚子汁',1,57.00,0,'btl','btl'),(11590,'Yuzu Juice 6/500ml,16.9oz/btl',25.00,100,'日本柚子汁',1,25.00,0,'btl','btl');
/*!40000 ALTER TABLE `inventorylist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `invoicelist`
--

DROP TABLE IF EXISTS `invoicelist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `invoicelist` (
  `id` int DEFAULT NULL,
  `orderdate` date DEFAULT NULL,
  `ponumber` varchar(20) DEFAULT NULL,
  `term` int DEFAULT NULL,
  `total` decimal(13,2) DEFAULT NULL,
  `cid` int DEFAULT NULL,
  `name` varchar(80) DEFAULT NULL,
  `phone` varchar(20) DEFAULT NULL,
  `addr` varchar(80) DEFAULT NULL,
  `city` varchar(20) DEFAULT NULL,
  `state` varchar(20) DEFAULT NULL,
  `zip` varchar(20) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `invoicelist`
--

LOCK TABLES `invoicelist` WRITE;
/*!40000 ALTER TABLE `invoicelist` DISABLE KEYS */;
INSERT INTO `invoicelist` VALUES (60,'2022-05-31','00513842',30,52.00,1815,'Atlantis Casino','(775) 825-4700','3800 S Virginia St','Reno','NV','89502','0.083'),(61,'2022-05-31','po513645',30,794.61,1848,'Eldorado Hotel & Casino','(775) 786-5700','345 N Virginia St','Reno','NV','89501','0.083'),(62,'2022-05-31','po22050524',30,1495.98,1857,'Fandango','(775) 886-1600','3800 S. Carson St.','Carson City','NV','89701','0.075'),(63,'2022-05-31','po22050542',30,39.00,1857,'Fandango','(775) 886-1600','3800 S. Carson St.','Carson City','NV','89701','0.075'),(64,'2022-05-31','po361996',30,42.00,1905,'Grand Sierra Resort','789.2000','2500 E 2nd St','Reno','NV','89502','0.083'),(65,'2022-05-31','po361958',30,56.00,1905,'Grand Sierra Resort','789.2000','2500 E 2nd St','Reno','NV','89502','0.083'),(66,'2022-05-31','po362002',30,136.00,1905,'Grand Sierra Resort','789.2000','2500 E 2nd St','Reno','NV','89502','0.083'),(67,'2022-05-31','po361908 ',30,132.00,1905,'Grand Sierra Resort','789.2000','2500 E 2nd St','Reno','NV','89502','0.083'),(68,'2022-05-31','po901889-1',30,38.00,1896,'Nugget','356.3300','1100 Nugget Ave','Sparks','NV','89431','0.083'),(69,'2022-05-31','po00307670',30,32.00,1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083'),(70,'2022-05-31','po00307671',30,32.00,1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083'),(71,'2022-05-31','po00307644',30,152.00,1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083'),(72,'2022-05-31','po00307335',30,38.00,1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083'),(74,'2022-05-31','po00307334',30,528.00,1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083'),(75,'2022-05-31','po00307333',30,406.50,1903,'Peppermill','(775) 826-2121','2707 S Virginia St','Reno','NV','89502','0.083'),(76,'2022-05-31','',30,457.34,2257,'Sierra Gold Seafood','775-352.9595','1335 Greg St. Suite 106','Sparks','NV','89431','0.083'),(77,'2022-05-31','po513070',30,45.00,1928,'Silver Legacy Resort Casino','(775) 325-7369','407 N Virginia St','Reno','NV','89501','0.083'),(78,'2022-05-31','po513333',30,184.00,1928,'Silver Legacy Resort Casino','(775) 325-7369','407 N Virginia St','Reno','NV','89501','0.083'),(79,'2022-05-30','',30,1665.90,2066,'Ko ko s Teriyaki','842.4901','1408 Mount Grant Dr.','Reno','NV','89523','0.083'),(80,'2022-05-30','',30,1824.27,2343,'La Mint - Vietnamese Kitchen','(775) 470-8400','770 S Meadows Pkwy #101','Reno','NV','89521','0.083'),(81,'2022-05-30','',30,470.19,2141,'Little Saigon','246.3030','801 Overland Loop Ste.103','Dayton','NV','89403','0.071'),(83,'2022-05-31','',30,379.98,2360,'OA Chinese','775.824.0670','3326 S McCarran Blvd','Reno','NV','89502','0.083'),(84,'2022-05-30','',30,75.00,2078,'L L Hawaiian B.B.Q(Mae Anne)','322.8888','5150 Mae Anne Ave. #204','Reno','NV','89523','0.083'),(85,'2022-05-31','',30,4038.21,2078,'L L Hawaiian B.B.Q(Mae Anne)','322.8888','5150 Mae Anne Ave. #204','Reno','NV','89523','0.083'),(86,'2022-05-31','',30,2481.52,2308,'L L Hawaiian BBQ (Sparks)','775.384.1940','1495 E Prater Way #125','Sparks','NV','89434','0.083'),(87,'2022-05-30','',30,0.00,2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083'),(88,'2022-05-31','',30,2394.33,2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083'),(89,'2022-05-31','',30,24.00,2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083'),(90,'2022-05-30','',30,875.51,2087,'Noodle Cafe','626.9898','113 Los Altos Pkwy #109','Sparks','NV','89436','0.083'),(91,'2022-05-30','75378327  ',30,568.60,1899,'Pho 777','(775) 323-7777','102 E. 2nd St.','Reno','NV','89501','0.083'),(92,'2022-07-02','',30,30.95,1820,'Bamboo Garden','(775) 885-6868','4250 Cochise St','Carson City','NV','89703','0.075'),(93,'2022-05-31','',30,297.34,2209,'101 Taiwanese Cuisine','657.6144','400 W. 5th St. #104','Reno','NV','89503','0.08265'),(94,'2022-05-31','',30,1357.22,2372,'Asian Mart- Jeremmiah','775.315.0320','','Reno','NV','','0.0826'),(95,'2022-05-30','',30,853.66,2207,'Asian Pho','(   ) 825-5954','4997 Longley Lane','Reno','NV','89511','0.083'),(96,'2022-05-31','',30,433.00,1812,'Asian Wok (Mae Anne)','(775) 747-1368','2005 Sierra Highlands Dr #143','Reno','NV','89523','0.083'),(97,'2022-05-31','',30,-246.72,1812,'Asian Wok (Mae Anne)','(775) 747-1368','2005 Sierra Highlands Dr #143','Reno','NV','89523','0.083'),(99,'2022-05-31','',30,1030.00,1816,'Bangkok Cuisine','(775) 322-0299','55 Mt Rose St','Reno','NV','89509','0.083'),(100,'2022-05-31','',30,108.00,2306,'Cece s Cafe','775-217-2653','1555 South Taylor St','Fallon','NV','89406','0.076'),(101,'2022-05-31','',30,1168.00,1838,'China East (Carson City)','(775) 885-6996','1810 E. William St.','Carson City','NV','89701','0.075'),(102,'2022-05-31','',30,345.40,2297,'Chopsticks (JP) ','775-833-3663','120 Country Club Dr #62','Incline Village','NV','89451','0.083'),(103,'2022-05-31','',30,148.00,1849,'Egg Roll King #1 (Reno)','(775) 786-6966','635 Booth St','Reno','NV','89509','0.083'),(104,'2022-05-30','',30,375.00,1849,'Egg Roll King #1 (Reno)','(775) 786-6966','635 Booth St','Reno','NV','89509','0.083'),(105,'2022-05-31','',30,382.00,2009,'Fortune Palace  Restaurant 富苑','775.626.9888','1282 Disc Dr.','Sparks','NV','89436','0.083'),(106,'2022-05-31','',30,1143.20,1860,'Golden Flower Vietnamese 金花','(775) 323-1628','205 W 5th St','Reno','NV','89503','0.083'),(107,'2022-05-30','',30,453.59,1860,'Golden Flower Vietnamese 金花','(775) 323-1628','205 W 5th St','Reno','NV','89503','0.083'),(108,'2022-05-31','',30,589.47,1871,'Hunan Garden (Gardnerville)','(775) 782-6068','1363 Lampe Dr','Gardnerville','NV','89410','0.071'),(109,'2022-05-31','',30,754.00,2109,'Ijji Sushi ','356.8668','685 E. Prater Way Ste. 101','Sparks','NV','89431','0.083'),(110,'2022-05-31','',30,527.81,2247,'Ijji Sushi #3 (Wing Lung LLC)','851.8668','199 Damonte Ranch Parky Way Ste.#8M','Reno','NV','89521','0.083'),(111,'2022-05-30','',30,1081.28,2012,'International Market ','775.825.5258','225 Gentry Way','Reno','NV','89502','0.083'),(112,'2022-05-30','',30,0.00,2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083'),(113,'2022-05-31','',30,2394.33,2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083'),(114,'2022-05-31','',30,24.00,2324,'L L Hawaiian BBQ(Virginia)','775.683.9960','4978 So. Virginia St.','Reno','NV','89502','0.083'),(116,'2022-05-30','',30,875.51,2087,'Noodle Cafe','626.9898','113 Los Altos Pkwy #109','Sparks','NV','89436','0.083'),(117,'2022-05-30','',30,569.02,1899,'Pho 777','(775) 323-7777','102 E. 2nd St.','Reno','NV','89501','0.08265'),(118,'2022-05-31','',30,2214.65,2265,'Pho ChopStix','775.783.8888','1329 N. 395 Hwy #8','Gardnerville','NV','89410','0.071'),(119,'2022-05-31','',30,2411.37,2120,'Pho Country','882.0200','2495 So. 395 Hwy','Carson City','NV','89706','0.075'),(120,'2022-05-31','',30,221.76,2120,'Pho Country','882.0200','2495 So. 395 Hwy','Carson City','NV','89706','0.075'),(121,'2022-05-31','',30,0.00,2274,'Pho Kietzke','870.9488','3004 Kietzke Lane','Reno','NV','89502','0.083'),(123,'2022-05-31','',30,1737.64,2274,'Pho Kietzke','870.9488','3004 Kietzke Lane','Reno','NV','89502','0.083'),(124,'2022-05-31','',30,297.80,1926,'Sushi Pier #1','(775) 825-6776','1290 E Plumb Lane #J','Reno','NV','89502','0.083'),(126,'2022-07-22','',30,43.25,2209,'101 Taiwanese Cuisine','657.6144','400 W. 5th St. #104','Reno','NV','89503','0.08265');
/*!40000 ALTER TABLE `invoicelist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `nuser`
--

DROP TABLE IF EXISTS `nuser`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `nuser` (
  `id` int DEFAULT NULL,
  `name` varchar(80) DEFAULT NULL,
  `pass` varchar(80) DEFAULT NULL,
  `power` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `nuser`
--

LOCK TABLES `nuser` WRITE;
/*!40000 ALTER TABLE `nuser` DISABLE KEYS */;
INSERT INTO `nuser` VALUES (3,'guest1','g1','N'),(4,'guest2','g2','N'),(5,'guest3','g3','N'),(6,'guest4','g4','N'),(7,'guest5','g5','N');
/*!40000 ALTER TABLE `nuser` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `revorderlist`
--

DROP TABLE IF EXISTS `revorderlist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `revorderlist` (
  `id` int DEFAULT NULL,
  `innerid` int DEFAULT NULL,
  `goodid` int DEFAULT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `unit` varchar(20) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(200) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `revorderlist`
--

LOCK TABLES `revorderlist` WRITE;
/*!40000 ALTER TABLE `revorderlist` DISABLE KEYS */;
INSERT INTO `revorderlist` VALUES (60,0,6331,2.0000,'cs',26.00,'0','云吞面','Noodle - Wonton 10#',''),(61,0,9766,199.1500,'lb',3.99,'0','五花肉','Pork - Belly Skin On ','39.74     40.41     42.21     39.12     37.67'),(62,0,5639,3.0000,'bag',20.00,'0','芥末粉','Mustard Powder 10/5# ',''),(62,1,6082,1.0000,'cs',39.00,'0','李锦记海鮮醬','Hoisin Sauce (LKK) 6/5#',''),(62,2,11072,1.0000,'cs',45.00,'0','绿标熊猫蚝油','Oyster Sauce - (Panda/GRN LBL)6/5#',''),(62,3,6057,1.0000,'cs',76.00,'0','冠珍苏梅酱','Plum Sauce (KC) 6/5#',''),(62,4,4801,2.0000,'jar',2.99,'0','豆豉','Bean - Salted Black 40/17oz/jar',''),(62,5,5799,1.0000,'cs',100.00,'0','花生','Peanut 50#',''),(62,6,5293,8.0000,'cs',45.00,'0','肉春卷','Egg Roll - Pork (Baily) 120pcs/2oz',''),(62,7,9057,5.0000,'cs',22.00,'0','金鸿吹面','Noodle - (Kim Hon) Cooked Lo Mein 20#/cs ',''),(62,8,5600,4.0000,'cs',50.00,'0','小锅贴','Pot Sticker Pork (Otasty) (350ct) 8/32oz (#45111)',''),(62,9,10908,4.0000,'cs',125.00,'0','熟云吞','Wonton - Cooked Pork(Good Guy)4/3.5#/320pc',''),(63,0,6063,1.0000,'cs',15.00,'0','万字酱油包','Soy Sauce - Pkg (KKM) 200pcs',''),(63,1,6325,3.0000,'bag',8.00,'0','日本芥辣粉','Wasabi Ko Powder 10/2.2#',''),(64,0,5801,1.0000,'jar',42.00,'0','白胡椒粉(罐装)','Pepper - Powder White 4/5#',''),(65,0,9036,1.0000,'cs',56.00,'0','李锦記苏梅醬','Plum Sauce (LKK) 6/5#',''),(66,0,11215,2.0000,'cs',68.00,'0','大块荷叶包','Dim Sum - Lotus Leaf Bun (Big/WC) 12/12pc',''),(67,0,9573,4.0000,'cs',33.00,'0','干面','Noodle - Dry (WC)   25# ',''),(68,0,10004,2.0000,'cs',19.00,'0','辣酱包','Chili Sauce Pkg 420/9g (SK)',''),(69,0,5106,1.0000,'cs',32.00,'0','春卷皮','Egg Roll Skin (China) (orange) 20#',''),(70,0,10303,1.0000,'cs',39.50,'0','毛豆仁','Soybean shelled (Edamame) 20/14oz',''),(71,0,6187,4.0000,'cs',38.00,'0','金鸿煎面','Noodle - (Kim Hon) Ready Cooked 20#',''),(72,0,5649,1.0000,'cs',38.00,'0','白套筷','ChopStick - White Env ',''),(74,0,10360,4.0000,'cs',97.00,'0','日本沙拉醬','Mayonnaise (GP) (Blue Label) 4/1gal',''),(74,1,6291,4.0000,'sk',35.00,'0','天富罗炸粉','Flour - Tempura Ko 40#',''),(75,0,9012,1.0000,'cs',42.00,'0','味露鱼露','Fish Sauce (Tiparos) 12/25oz',''),(75,1,12353,1.0000,'cs',76.00,'0','冠珍柠檬酱','Sauce - Lemon (KC) 24/15oz ',''),(75,2,6153,1.0000,'cs',79.00,'0','草菇老抽','Soy Sauce - Mushroom (PRB) 12/5# silver',''),(75,3,6089,10.0000,'pkg',2.95,'0','甘针菜','Dried - Lily Flower 100/5oz',''),(75,4,6081,1.0000,'cs',95.00,'0','李锦记鸡精','Chicken Powder (LKK) 12/1kg',''),(75,5,5639,1.0000,'bag',15.00,'0','芥末粉','Mustard Powder 10/5# ',''),(75,6,9006,2.0000,'cs',35.00,'0','青江菜（上海小白菜）','Produce - Baby Bok Choy',''),(76,0,10316,1.0000,'box',20.00,'0','瓶裝七味粉','Chili Powder (Togarashi) In BTL 16/10/0.52oz',''),(76,1,10198,24.0000,'bag',9.99,'0','日本錦米','Rice (Nishiki) 8/5#',''),(76,2,11412,12.0000,'btl',3.99,'0','米醋','Vinegar - Rice Seasoned Gourmet (Marukan) 12/355ml(12oz)',''),(76,3,11394,30.0000,'box',4.99,'0','日本芥辣','Wasabi In Tube  (S&B) Fam Size 4/10/3.17oz',''),(77,0,5872,1.0000,'cs',45.00,'0','日本味噌','Miso Paste (AKA) 10/2.2#',''),(78,0,9710,1.0000,'cs',56.00,'0','泰米粉','Noodle - Rice Stick (S/1mm) 30/14oz',''),(78,1,10259,4.0000,'cs',32.00,'0','越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',''),(79,0,7299,3.0000,'cs',19.00,'0','西蘭花','Produce - Broccoli - Crown',''),(79,1,5132,1.0000,'cs',29.00,'0','椰菜','Produce - Cabbage',''),(79,2,4826,25.0000,'cs',59.60,'0','无水鸡腿肉','Chicken - Leg Meat  40#',''),(79,3,4983,10.0000,'cs',8.99,'0','鮮蛋面','Noodle - (China) Fresh  10#',''),(80,0,6043,1.0000,'cs',14.00,'0','签语饼(单独包装)','Fortune Cookie - Indiv ',''),(80,1,5649,1.0000,'cs',37.00,'0','白套筷','ChopStick - White Env ',''),(80,2,6119,1.0000,'pkg',20.00,'0','干蒜粒','Garlic - Minced 10/5#',''),(80,3,5321,1.0000,'bag',17.95,'0','干辣椒','Chili - Whole Dry Red 6/5#',''),(80,4,11843,2.0000,'cs',44.00,'0','黑长方胶盒28oz','Container - 28oz  (T-28/MC6610B) 150sets',''),(80,5,5233,2.0000,'cs',43.00,'0','油','Oil - Soy ',''),(80,6,6083,1.0000,'cs',29.00,'0','錦珍蠔油','Oyster Sauce (LKK) 6/5#',''),(80,7,4711,1.0000,'cs',13.00,'0','白醋','Vinegar   4/1gal',''),(80,8,5717,1.0000,'cs',55.00,'0','紙巾','Napkin - 2 Ply (Rosei) 30/100pcs',''),(80,9,9883,1.0000,'cs',60.00,'0','黑白炼奶','Milk - Sweet Condensed (B& W) 24/14oz',''),(80,10,5789,1.0000,'sk',160.00,'0','味精','MSG 50#',''),(80,11,9000,1.0000,'sk',55.00,'0','生粉','Cornstarch 50#',''),(80,12,10023,1.0000,'sk',65.00,'0','三女香米','Rice - (Jasmine - 3ladies)  50#',''),(80,13,5773,1.0000,'sk',33.00,'0','糖','Sugar 50#',''),(80,14,5252,3.0000,'cs',20.00,'0','芽菜','Bean Sprouts 20#/cs',''),(80,15,5564,5.0000,'bun',2.19,'0','芹菜','Produce - Celery',''),(80,16,9612,5.9200,'lb',1.49,'0','中青椒','Produce - Jalapeno ',''),(80,17,5751,1.0000,'cs',42.00,'0','大红椒','Produce - Bell Peppers Red ',''),(80,18,7303,1.0000,'cs',34.00,'0','青椒','Produce - Bell Peppers Green ',''),(80,19,6000,1.0000,'cs',35.00,'0','新鮮姜','Produce - Fresh Ginger',''),(80,20,7299,1.0000,'cs',19.00,'0','西蘭花','Produce - Broccoli - Crown',''),(80,21,9306,2.0000,'cs',33.00,'0','绿叶生菜','Produce - Green Leaf Lettuce',''),(80,22,9629,2.0000,'cs',19.00,'0','青葱','Produce - Green Onion 48bundles',''),(80,23,5383,1.0000,'sk',20.00,'0','洋葱','Produce - Onions Yellow  50#',''),(80,24,5147,1.0000,'cs',22.00,'0','硬豆腐','Tofu (Firm/Red) 12/14oz',''),(80,25,5505,1.0000,'cs',26.00,'0','鸡骨','Chicken - Bone 40#',''),(80,26,9072,1.0000,'cs',52.00,'0','越南粉','Noodle - Fresh Froz.Pho Rice Stick 5/10# (Banana Box)',''),(80,27,5901,1.0000,'cs',65.78,'0','牛柏叶','Beef - Tripe (AA) 22#',''),(80,28,5823,1.0000,'cs',156.00,'0','鸡胸肉','Chicken - Breast Meat 40#',''),(80,29,10314,1.0000,'cs',52.00,'0','冻香茅碎','Lemon Grass Froz. 30/7oz',''),(80,30,5739,1.0000,'cs',24.00,'0','青紅豆','Peas & Carrots 12/32oz',''),(80,31,5104,1.0000,'cs',35.50,'0','中华炸皮','Wonton Skin - Thick (China) (White) 24#',''),(80,32,5902,64.8500,'lb',1.05,'0','牛骨','Beef - Cut Leg Bone ',''),(80,33,5402,76.5000,'lb',1.99,'0','无骨猪大腿肉','Pork - Butt Boneless',''),(80,34,9391,52.2300,'lb',1.99,'0','猪肩肉','Pork - Cushion ',''),(81,0,6083,1.0000,'cs',29.00,'0','錦珍蠔油','Oyster Sauce (LKK) 6/5#',''),(81,1,5988,1.0000,'cs',69.00,'0','外卖盒26oz.','Food Pail - 26oz Micro 9/50',''),(81,2,5426,2.0000,'cs',10.00,'0','酱油包','Soy Sauce - Pkg  (Kari-Out) 500pcs',''),(81,3,6066,1.0000,'bkt',33.00,'0','万字酱油','Soy Sauce (KKM) 5gal',''),(81,4,6162,1.0000,'cs',10.00,'0','胶叉','Forks - Plastic ',''),(81,5,5883,1.0000,'can',6.50,'0','苏打粉','Baking Soda (Clabber Girl)  6/5#',''),(81,6,4711,1.0000,'CS',13.00,'0','白醋','Vinegar   4/1gal',''),(81,7,5322,1.0000,'cs',36.00,'0','红醋','Vinegar - Chinese Red  12/16.9oz',''),(81,8,9020,1.0000,'cs',35.00,'0','茄醬','Ketchup 6/5#',''),(81,9,6119,1.0000,'pkg',25.00,'0','干蒜粒','Garlic - Minced 10/5#',''),(81,10,5336,1.0000,'cs',51.00,'0','杯子','Cup - (F8) 8oz  500pcs',''),(81,11,7303,1.0000,'cs',34.00,'0','青椒','Produce - Bell Peppers Green ',''),(81,12,9006,5.9700,'lb',1.79,'0','青江菜（上海小白菜）','Produce - Baby Bok Choy',''),(81,13,7299,1.0000,'cs',19.00,'0','西蘭花','Produce - Broccoli - Crown',''),(81,14,6347,1.0000,'cs',35.00,'0','萬樂春卷皮','Egg Roll Skin  (Menlo) 20/30pcs',''),(81,15,9057,2.0000,'cs',22.00,'0','金鸿吹面','Noodle - (Kim Hon) Cooked Lo Mein 20#/cs ',''),(83,0,5091,3.0000,'cs',52.00,'0','杯子','Cup - (F32) 32oz  25/10 pcs',''),(83,1,5870,2.0000,'cs',94.00,'0','上鸡调味粉','Chicken Powder (Ajinomoto) 4/6#',''),(83,2,10173,1.0000,'bag',20.00,'0','烤白芝麻','Sesame Seed - Roasted White 8/5#',''),(83,3,9442,2.0000,'bag',7.99,'0','烤黑芝麻','Sesame Seed - Roasted Black 24/1.1# ',''),(84,0,6126,2.0000,'cs',23.00,'0','冻咖啡','Drink - Coffee - In Can 24/8.5oz',''),(84,1,5132,1.0000,'cs',29.00,'0','椰菜','Produce - Cabbage',''),(85,0,11737,1.0000,'cs',38.00,'0','大罐南洋奶茶','Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',''),(85,1,5233,4.0000,'cs',42.00,'0','油','Oil - Soy ',''),(85,2,5442,1.0000,'cs',47.00,'0','杯盖','Lid - (PL2N/PL200N) 2oz  25/100pcs Fit P200n',''),(85,3,5811,1.0000,'cs',62.00,'0','杯盖','Lid - (FL8v) 8oz/12oz/16oz Fit F8 10/100pcs',''),(85,4,6354,3.0000,'cs',57.00,'0','一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',''),(85,5,10070,1.0000,'cs',120.00,'0','大三文治盒','Tray - SN227 Sandwich 7   4/125',''),(85,6,6302,1.0000,'cs',70.00,'0','三文治盒','Tray - SN225  Sandwich 6  500pcs',''),(85,7,5733,10.0000,'sk',35.00,'0','黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',''),(85,8,5132,1.0000,'cs',29.00,'0','椰菜','Produce - Cabbage',''),(85,9,5628,1.0000,'cs',35.00,'0','柠檬','Produce - Lemons ',''),(85,10,10815,5.0000,'cs',258.00,'0','牛仔骨','Beef - Short Rib Center Cut (3/8 cc) 30#',''),(85,11,12252,12.0000,'cs',82.80,'0','无皮无骨鸡大腿肉','Chicken Thigh Meat Boneless Skinless 40#',''),(85,12,11035,125.5800,'lb',4.29,'0','牛肉','Beef - Top Sirlion/Topbutt (ET)','67.64     57.94'),(85,13,5402,63.2500,'lb',1.99,'0','无骨猪大腿肉','Pork - Butt Boneless',''),(86,0,6257,1.0000,'cs',58.00,'0','是拉差辣酱','Chili Sauce (Sriracha) 12/28oz',''),(86,1,11737,1.0000,'cs',38.00,'0','大罐南洋奶茶','Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',''),(86,2,5233,5.0000,'cs',42.00,'0','油','Oil - Soy ',''),(86,3,6354,3.0000,'cs',57.00,'0','一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',''),(86,4,10070,1.0000,'cs',120.00,'0','大三文治盒','Tray - SN227 Sandwich 7   4/125',''),(86,5,9000,1.0000,'sk',55.00,'0','生粉','Cornstarch 50#',''),(86,6,5733,5.0000,'sk',35.00,'0','黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',''),(86,7,5132,1.0000,'lb',29.00,'0','椰菜','Produce - Cabbage',''),(86,8,6000,5.8800,'lb',1.69,'0','新鮮姜','Produce - Fresh Ginger',''),(86,9,10815,2.0000,'cs',248.70,'0','牛仔骨','Beef - Short Rib Center Cut (3/8 cc) 30#',''),(86,10,12252,10.0000,'cs',82.80,'0','无皮无骨鸡大腿肉','Chicken Thigh Meat Boneless Skinless 40#',''),(86,11,11035,67.6400,'lb',4.29,'0','牛肉','Beef - Top Sirlion/Topbutt (ET)','');
/*!40000 ALTER TABLE `revorderlist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `saledetail`
--

DROP TABLE IF EXISTS `saledetail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `saledetail` (
  `id` int DEFAULT NULL,
  `innerid` int DEFAULT NULL,
  `goodid` int DEFAULT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `unit` varchar(20) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `taxrate` decimal(14,8) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `saledetail`
--

LOCK TABLES `saledetail` WRITE;
/*!40000 ALTER TABLE `saledetail` DISABLE KEYS */;
INSERT INTO `saledetail` VALUES (60,0,6331,2.0000,'cs',26.00,0.00000000,52.00,'云吞面','Noodle - Wonton 10#',1,''),(61,0,9766,199.1500,'lb',3.99,0.00000000,794.61,'五花肉','Pork - Belly Skin On ',1,'39.74     40.41     42.21     39.12     37.67'),(62,0,5639,3.0000,'bag',20.00,0.00000000,60.00,'芥末粉','Mustard Powder 10/5# ',1,''),(62,1,6082,1.0000,'cs',39.00,0.00000000,39.00,'李锦记海鮮醬','Hoisin Sauce (LKK) 6/5#',1,''),(62,2,11072,1.0000,'cs',45.00,0.00000000,45.00,'绿标熊猫蚝油','Oyster Sauce - (Panda/GRN LBL)6/5#',1,''),(62,3,6057,1.0000,'cs',76.00,0.00000000,76.00,'冠珍苏梅酱','Plum Sauce (KC) 6/5#',1,''),(62,4,4801,2.0000,'jar',2.99,0.00000000,5.98,'豆豉','Bean - Salted Black 40/17oz/jar',0,''),(62,5,5799,1.0000,'cs',100.00,0.00000000,100.00,'花生','Peanut 50#',1,''),(62,6,5293,8.0000,'cs',45.00,0.00000000,360.00,'肉春卷','Egg Roll - Pork (Baily) 120pcs/2oz',1,''),(62,7,9057,5.0000,'cs',22.00,0.00000000,110.00,'金鸿吹面','Noodle - (Kim Hon) Cooked Lo Mein 20#/cs ',1,''),(62,8,5600,4.0000,'cs',50.00,0.00000000,200.00,'小锅贴','Pot Sticker Pork (Otasty) (350ct) 8/32oz (#45111)',1,''),(62,9,10908,4.0000,'cs',125.00,0.00000000,500.00,'熟云吞','Wonton - Cooked Pork(Good Guy)4/3.5#/320pc',1,''),(63,0,6063,1.0000,'cs',15.00,0.00000000,15.00,'万字酱油包','Soy Sauce - Pkg (KKM) 200pcs',1,''),(63,1,6325,3.0000,'bag',8.00,0.00000000,24.00,'日本芥辣粉','Wasabi Ko Powder 10/2.2#',0,''),(64,0,5801,1.0000,'jar',42.00,0.00000000,42.00,'白胡椒粉(罐装)','Pepper - Powder White 4/5#',0,''),(65,0,9036,1.0000,'cs',56.00,0.00000000,56.00,'李锦記苏梅醬','Plum Sauce (LKK) 6/5#',1,''),(66,0,11215,2.0000,'cs',68.00,0.00000000,136.00,'大块荷叶包','Dim Sum - Lotus Leaf Bun (Big/WC) 12/12pc',1,''),(67,0,9573,4.0000,'cs',33.00,0.00000000,132.00,'干面','Noodle - Dry (WC)   25# ',1,''),(68,0,10004,2.0000,'cs',19.00,0.00000000,38.00,'辣酱包','Chili Sauce Pkg 420/9g (SK)',1,''),(69,0,5106,1.0000,'cs',32.00,0.00000000,32.00,'春卷皮','Egg Roll Skin (China) (orange) 20#',1,''),(70,0,10303,1.0000,'cs',32.00,0.00000000,32.00,'春卷皮','Egg Roll Skin (China) (orange) 20#',1,''),(71,0,6187,4.0000,'cs',38.00,0.00000000,152.00,'金鸿煎面','Noodle - (Kim Hon) Ready Cooked 20#',1,''),(72,0,5649,1.0000,'cs',38.00,0.00000000,38.00,'白套筷','ChopStick - White Env ',1,''),(74,0,10360,4.0000,'cs',97.00,0.00000000,388.00,'日本沙拉醬','Mayonnaise (GP) (Blue Label) 4/1gal',1,''),(74,1,6291,4.0000,'sk',35.00,0.00000000,140.00,'天富罗炸粉','Flour - Tempura Ko 40#',1,''),(75,0,9012,1.0000,'cs',42.00,0.00000000,42.00,'味露鱼露','Fish Sauce (Tiparos) 12/25oz',1,''),(75,1,12353,1.0000,'cs',76.00,0.00000000,76.00,'冠珍柠檬酱','Sauce - Lemon (KC) 24/15oz ',1,''),(75,2,6153,1.0000,'cs',79.00,0.00000000,79.00,'草菇老抽','Soy Sauce - Mushroom (PRB) 12/5# silver',1,''),(75,3,6089,10.0000,'pkg',2.95,0.00000000,29.50,'甘针菜','Dried - Lily Flower 100/5oz',1,''),(75,4,6081,1.0000,'cs',95.00,0.00000000,95.00,'李锦记鸡精','Chicken Powder (LKK) 12/1kg',1,''),(75,5,5639,1.0000,'bag',15.00,0.00000000,15.00,'芥末粉','Mustard Powder 10/5# ',1,''),(75,6,9006,2.0000,'cs',35.00,0.00000000,70.00,'青江菜（上海小白菜）','Produce - Baby Bok Choy',1,''),(76,0,10316,1.0000,'box',20.00,0.00000000,20.00,'瓶裝七味粉','Chili Powder (Togarashi) In BTL 16/10/0.52oz',1,''),(76,1,10198,24.0000,'bag',9.99,0.00000000,239.76,'日本錦米','Rice (Nishiki) 8/5#',0,''),(76,2,11412,12.0000,'btl',3.99,0.00000000,47.88,'米醋','Vinegar - Rice Seasoned Gourmet (Marukan) 12/355ml(12oz)',0,''),(76,3,11394,30.0000,'box',4.99,0.00000000,149.70,'日本芥辣','Wasabi In Tube  (S&B) Fam Size 4/10/3.17oz',1,''),(77,0,5872,1.0000,'cs',45.00,0.00000000,45.00,'日本味噌','Miso Paste (AKA) 10/2.2#',0,''),(78,0,9710,1.0000,'cs',56.00,0.00000000,56.00,'泰米粉','Noodle - Rice Stick (S/1mm) 30/14oz',1,''),(78,1,10259,4.0000,'cs',32.00,0.00000000,128.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',1,''),(79,0,7299,3.0000,'cs',19.00,0.00000000,57.00,'西蘭花','Produce - Broccoli - Crown',1,''),(79,1,5132,1.0000,'cs',29.00,0.00000000,29.00,'椰菜','Produce - Cabbage',1,''),(79,2,4826,25.0000,'cs',59.60,0.00000000,1490.00,'无水鸡腿肉','Chicken - Leg Meat  40#',1,''),(79,3,4983,10.0000,'cs',8.99,0.00000000,89.90,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(80,0,6043,1.0000,'cs',14.00,0.00000000,14.00,'签语饼(单独包装)','Fortune Cookie - Indiv ',1,''),(80,1,5649,1.0000,'cs',37.00,0.00000000,37.00,'白套筷','ChopStick - White Env ',1,''),(80,2,6119,1.0000,'pkg',20.00,0.00000000,20.00,'干蒜粒','Garlic - Minced 10/5#',1,''),(80,3,5321,1.0000,'bag',17.95,0.00000000,17.95,'干辣椒','Chili - Whole Dry Red 6/5#',0,''),(80,4,11843,2.0000,'cs',44.00,0.00000000,88.00,'黑长方胶盒28oz','Container - 28oz  (T-28/MC6610B) 150sets',1,''),(80,5,5233,2.0000,'cs',43.00,0.00000000,86.00,'油','Oil - Soy ',1,''),(80,6,6083,1.0000,'cs',29.00,0.00000000,29.00,'錦珍蠔油','Oyster Sauce (LKK) 6/5#',1,''),(80,7,4711,1.0000,'cs',13.00,0.00000000,13.00,'白醋','Vinegar   4/1gal',1,''),(80,8,5717,1.0000,'cs',55.00,0.00000000,55.00,'紙巾','Napkin - 2 Ply (Rosei) 30/100pcs',1,''),(80,9,9883,1.0000,'cs',60.00,0.00000000,60.00,'黑白炼奶','Milk - Sweet Condensed (B& W) 24/14oz',1,''),(80,10,5789,1.0000,'sk',160.00,0.00000000,160.00,'味精','MSG 50#',0,''),(80,11,9000,1.0000,'sk',55.00,0.00000000,55.00,'生粉','Cornstarch 50#',0,''),(80,12,10023,1.0000,'sk',65.00,0.00000000,65.00,'三女香米','Rice - (Jasmine - 3ladies)  50#',0,''),(80,13,5773,1.0000,'sk',33.00,0.00000000,33.00,'糖','Sugar 50#',0,''),(80,14,5252,3.0000,'cs',20.00,0.00000000,60.00,'芽菜','Bean Sprouts 20#/cs',1,''),(80,15,5564,5.0000,'bun',2.19,0.00000000,10.95,'芹菜','Produce - Celery',0,''),(80,16,9612,5.9200,'lb',1.49,0.00000000,8.82,'中青椒','Produce - Jalapeno ',0,''),(80,17,5751,1.0000,'cs',42.00,0.00000000,42.00,'大红椒','Produce - Bell Peppers Red ',1,''),(80,18,7303,1.0000,'cs',34.00,0.00000000,34.00,'青椒','Produce - Bell Peppers Green ',1,''),(80,19,6000,1.0000,'cs',35.00,0.00000000,35.00,'新鮮姜','Produce - Fresh Ginger',1,''),(80,20,7299,1.0000,'cs',19.00,0.00000000,19.00,'西蘭花','Produce - Broccoli - Crown',1,''),(80,21,9306,2.0000,'cs',33.00,0.00000000,66.00,'绿叶生菜','Produce - Green Leaf Lettuce',1,''),(80,22,9629,2.0000,'cs',19.00,0.00000000,38.00,'青葱','Produce - Green Onion 48bundles',1,''),(80,23,5383,1.0000,'sk',20.00,0.00000000,20.00,'洋葱','Produce - Onions Yellow  50#',1,''),(80,24,5147,1.0000,'cs',22.00,0.00000000,22.00,'硬豆腐','Tofu (Firm/Red) 12/14oz',1,''),(80,25,5505,1.0000,'cs',26.00,0.00000000,26.00,'鸡骨','Chicken - Bone 40#',1,''),(80,26,9072,1.0000,'cs',52.00,0.00000000,52.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick 5/10# (Banana Box)',1,''),(80,27,5901,1.0000,'cs',65.78,0.00000000,65.78,'牛柏叶','Beef - Tripe (AA) 22#',1,''),(80,28,5823,1.0000,'cs',156.00,0.00000000,156.00,'鸡胸肉','Chicken - Breast Meat 40#',1,''),(80,29,10314,1.0000,'cs',52.00,0.00000000,52.00,'冻香茅碎','Lemon Grass Froz. 30/7oz',1,''),(80,30,5739,1.0000,'cs',24.00,0.00000000,24.00,'青紅豆','Peas & Carrots 12/32oz',1,''),(80,31,5104,1.0000,'cs',35.50,0.00000000,35.50,'中华炸皮','Wonton Skin - Thick (China) (White) 24#',1,''),(80,32,5902,64.8500,'lb',1.05,0.00000000,68.09,'牛骨','Beef - Cut Leg Bone ',0,''),(80,33,5402,76.5000,'lb',1.99,0.00000000,152.24,'无骨猪大腿肉','Pork - Butt Boneless',0,''),(80,34,9391,52.2300,'lb',1.99,0.00000000,103.94,'猪肩肉','Pork - Cushion ',0,''),(81,0,6083,1.0000,'cs',29.00,0.00000000,29.00,'錦珍蠔油','Oyster Sauce (LKK) 6/5#',0,''),(81,1,5988,1.0000,'cs',69.00,0.00000000,69.00,'外卖盒26oz.','Food Pail - 26oz Micro 9/50',0,''),(81,2,5426,2.0000,'cs',10.00,0.00000000,20.00,'酱油包','Soy Sauce - Pkg  (Kari-Out) 500pcs',0,''),(81,3,6066,1.0000,'bkt',33.00,0.00000000,33.00,'万字酱油','Soy Sauce (KKM) 5gal',0,''),(81,4,6162,1.0000,'cs',10.00,0.00000000,10.00,'胶叉','Forks - Plastic ',0,''),(81,5,5883,1.0000,'can',6.50,0.00000000,6.50,'苏打粉','Baking Soda (Clabber Girl)  6/5#',1,''),(81,6,4711,1.0000,'CS',13.00,0.00000000,13.00,'白醋','Vinegar   4/1gal',0,''),(81,7,5322,1.0000,'cs',36.00,0.00000000,36.00,'红醋','Vinegar - Chinese Red  12/16.9oz',1,''),(81,8,9020,1.0000,'cs',35.00,0.00000000,35.00,'茄醬','Ketchup 6/5#',1,''),(81,9,6119,1.0000,'pkg',25.00,0.00000000,25.00,'干蒜粒','Garlic - Minced 10/5#',0,''),(81,10,5336,1.0000,'cs',51.00,0.00000000,51.00,'杯子','Cup - (F8) 8oz  500pcs',1,''),(81,11,7303,1.0000,'cs',34.00,0.00000000,34.00,'青椒','Produce - Bell Peppers Green ',0,''),(81,12,9006,5.9700,'lb',1.79,0.00000000,10.69,'青江菜（上海小白菜）','Produce - Baby Bok Choy',0,''),(81,13,7299,1.0000,'cs',19.00,0.00000000,19.00,'西蘭花','Produce - Broccoli - Crown',1,''),(81,14,6347,1.0000,'cs',35.00,0.00000000,35.00,'萬樂春卷皮','Egg Roll Skin  (Menlo) 20/30pcs',1,''),(81,15,9057,2.0000,'cs',22.00,0.00000000,44.00,'金鸿吹面','Noodle - (Kim Hon) Cooked Lo Mein 20#/cs ',1,''),(83,0,5091,3.0000,'cs',52.00,0.00000000,156.00,'杯子','Cup - (F32) 32oz  25/10 pcs',1,''),(83,1,5870,2.0000,'cs',94.00,0.00000000,188.00,'上鸡调味粉','Chicken Powder (Ajinomoto) 4/6#',1,''),(83,2,10173,1.0000,'bag',20.00,0.00000000,20.00,'烤白芝麻','Sesame Seed - Roasted White 8/5#',0,''),(83,3,9442,2.0000,'bag',7.99,0.00000000,15.98,'烤黑芝麻','Sesame Seed - Roasted Black 24/1.1# ',0,''),(84,0,6126,2.0000,'cs',23.00,0.00000000,46.00,'冻咖啡','Drink - Coffee - In Can 24/8.5oz',1,''),(84,1,5132,1.0000,'cs',29.00,0.00000000,29.00,'椰菜','Produce - Cabbage',1,''),(85,0,11737,1.0000,'cs',38.00,0.00000000,38.00,'大罐南洋奶茶','Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',0,''),(85,1,5233,4.0000,'cs',42.00,0.00000000,168.00,'油','Oil - Soy ',0,''),(85,2,5442,1.0000,'cs',47.00,0.00000000,47.00,'杯盖','Lid - (PL2N/PL200N) 2oz  25/100pcs Fit P200n',0,''),(85,3,5811,1.0000,'cs',62.00,0.00000000,62.00,'杯盖','Lid - (FL8v) 8oz/12oz/16oz Fit F8 10/100pcs',0,''),(85,4,6354,3.0000,'cs',57.00,0.00000000,171.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',0,''),(85,5,10070,1.0000,'cs',120.00,0.00000000,120.00,'大三文治盒','Tray - SN227 Sandwich 7   4/125',0,''),(85,6,6302,1.0000,'cs',70.00,0.00000000,70.00,'三文治盒','Tray - SN225  Sandwich 6  500pcs',0,''),(85,7,5733,10.0000,'sk',35.00,0.00000000,350.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',0,''),(85,8,5132,1.0000,'cs',29.00,0.00000000,29.00,'椰菜','Produce - Cabbage',0,''),(85,9,5628,1.0000,'cs',35.00,0.00000000,35.00,'柠檬','Produce - Lemons ',0,''),(85,10,10815,5.0000,'cs',258.00,0.00000000,1290.00,'牛仔骨','Beef - Short Rib Center Cut (3/8 cc) 30#',0,''),(85,11,12252,12.0000,'cs',82.80,0.00000000,993.60,'无皮无骨鸡大腿肉','Chicken Thigh Meat Boneless Skinless 40#',0,''),(85,12,11035,125.5800,'lb',4.29,0.00000000,538.74,'牛肉','Beef - Top Sirlion/Topbutt (ET)',0,'67.64     57.94'),(85,13,5402,63.2500,'lb',1.99,0.00000000,125.87,'无骨猪大腿肉','Pork - Butt Boneless',0,''),(86,0,6257,1.0000,'cs',58.00,0.00000000,58.00,'是拉差辣酱','Chili Sauce (Sriracha) 12/28oz',0,''),(86,1,11737,1.0000,'cs',38.00,0.00000000,38.00,'大罐南洋奶茶','Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',0,''),(86,2,5233,5.0000,'cs',42.00,0.00000000,210.00,'油','Oil - Soy ',0,''),(86,3,6354,3.0000,'cs',57.00,0.00000000,171.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',0,''),(86,4,10070,1.0000,'cs',120.00,0.00000000,120.00,'大三文治盒','Tray - SN227 Sandwich 7   4/125',0,''),(86,5,9000,1.0000,'sk',55.00,0.00000000,55.00,'生粉','Cornstarch 50#',0,''),(86,6,5733,5.0000,'sk',35.00,0.00000000,175.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',0,''),(86,7,5132,1.0000,'lb',29.00,0.00000000,29.00,'椰菜','Produce - Cabbage',0,''),(86,8,6000,5.8800,'lb',1.69,0.00000000,9.94,'新鮮姜','Produce - Fresh Ginger',0,''),(86,9,10815,2.0000,'cs',248.70,0.00000000,497.40,'牛仔骨','Beef - Short Rib Center Cut (3/8 cc) 30#',0,''),(86,10,12252,10.0000,'cs',82.80,0.00000000,828.00,'无皮无骨鸡大腿肉','Chicken Thigh Meat Boneless Skinless 40#',0,''),(86,11,11035,67.6400,'lb',4.29,0.00000000,290.18,'牛肉','Beef - Top Sirlion/Topbutt (ET)',0,''),(87,2,5233,3.0000,'cs',0.00,0.00000000,0.00,'油','Oil - Soy ',1,'P/U WILL CHARGE NEXT TIME '),(87,3,6354,2.0000,'cs',0.00,0.00000000,0.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,'P/U WILL CHARGE NEXT TIME'),(87,4,5733,4.0000,'sk',0.00,0.00000000,0.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,'P/U WILL CHARGE NEXT TIME '),(88,1,5233,3.0000,'cs',42.00,0.00000000,126.00,'油','Oil - Soy ',1,''),(88,2,6354,2.0000,'cs',57.00,0.00000000,114.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,'P/U ON 5/30/2022'),(88,3,6354,2.0000,'cs',57.00,0.00000000,114.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,''),(88,4,5233,2.0000,'cs',42.00,0.00000000,84.00,'油','Oil - Soy ',1,''),(88,5,10076,2.0000,'cs',23.00,0.00000000,46.00,'椰子苏打水','Drink - Cocorico Drink 24/12oz',1,''),(88,6,11737,2.0000,'cs',38.00,0.00000000,76.00,'大罐南洋奶茶','Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',1,''),(88,7,5845,1.0000,'cs',95.00,0.00000000,95.00,'杯子','Cup - (Dcc24MJ48) 24oz Fit 48JL(Dart)  20/25',1,''),(88,8,9169,1.0000,'cs',61.00,0.00000000,61.00,'杯盖','Lid -  (48JL) 24oz,32oz 5/100pcs',1,''),(88,9,6257,1.0000,'cs',58.00,0.00000000,58.00,'是拉差辣酱','Chili Sauce (Sriracha) 12/28oz',1,''),(88,10,5733,4.0000,'sk',35.00,0.00000000,140.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,'P/U ON 05/30/2022'),(88,11,5733,3.0000,'sk',35.00,0.00000000,105.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,''),(88,12,9000,2.0000,'sk',55.00,0.00000000,110.00,'生粉','Cornstarch 50#',1,''),(88,13,12252,12.0000,'cs',82.80,0.00000000,993.60,'无皮无骨鸡大腿肉','Chicken Thigh Meat Boneless Skinless 40#',1,''),(88,14,11035,63.3400,'lb',4.29,0.00000000,271.73,'牛肉','Beef - Top Sirlion/Topbutt (ET)',0,''),(89,1,10076,-2.0000,'cs',23.00,0.00000000,-46.00,'椰子苏打水','Drink - Cocorico Drink 24/12oz',0,''),(89,2,10110,2.0000,'cs',35.00,0.00000000,70.00,'大椰子汁','Drink - Coconut Juice w. Pulp(Tasco/L) 24/16.9oz',1,''),(89,3,5233,3.0000,'cs',0.00,0.00000000,0.00,'油','Oil - Soy ',1,'N/C'),(89,4,5733,4.0000,'sk',0.00,0.00000000,0.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',0,' '),(90,1,6202,1.0000,'cs',94.00,0.00000000,94.00,'米粉(肇庆)','Noodle - Rice Stick (Chao Ching) 60/16oz',1,''),(90,2,5319,1.0000,'cs',24.00,0.00000000,24.00,'甜酸外卖包','Sweet & Sour Indiv Pkg (DBL Hi) 500pcs',1,''),(90,3,10004,1.0000,'cs',18.00,0.00000000,18.00,'辣酱包','Chili Sauce Pkg 420/9g (SK)',1,''),(90,4,6082,1.0000,'cs',39.00,0.00000000,39.00,'李锦记海鮮醬','Hoisin Sauce (LKK) 6/5#',1,''),(90,5,6333,1.0000,'cs',36.00,0.00000000,36.00,'薄云吞皮','Wonton Skin - Thin (China) 24# (Pink)',1,''),(90,6,5125,1.0000,'cs',53.00,0.00000000,53.00,'味全春卷皮','Egg Roll Skin (WC) 8 40/25pcs',1,''),(90,7,9820,10.0000,'bag',5.99,0.00000000,59.90,'鱼丸','Fish Ball   (Ho Ho) 30#',0,''),(90,8,5900,5.0000,'pkg',6.79,0.00000000,33.95,'牛肉丸','Beef Ball (Great Wall) (311) 20/11oz',0,''),(90,9,6331,1.0000,'cs',28.00,0.00000000,28.00,'云吞面','Noodle - Wonton 10#',1,''),(90,10,4983,2.0000,'cs',8.99,0.00000000,17.98,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(90,11,10259,1.0000,'cs',31.00,0.00000000,31.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',1,''),(90,12,9090,1.0000,'cs',35.70,0.00000000,35.70,'猪颈骨','Pork - Bone Neck 30#',1,''),(90,13,5505,1.0000,'cs',27.60,0.00000000,27.60,'鸡骨','Chicken - Bone 40#',1,''),(90,14,5823,1.0000,'cs',156.00,0.00000000,156.00,'鸡胸肉','Chicken - Breast Meat 40#',1,''),(90,15,4826,2.0000,'cs',71.60,0.00000000,143.20,'无水鸡腿肉','Chicken - Leg Meat  40#',1,''),(90,16,5902,65.7000,'lb',1.19,0.00000000,78.18,'牛骨','Beef - Cut Leg Bone ',0,''),(91,1,9462,4.0000,'ea',40.00,0.08000000,172.80,'白湯匙','Spoon -White Melemine 20bx/5dz(7003W)',0,''),(91,2,5649,2.0000,'cs',38.00,0.00000000,76.00,'白套筷','ChopStick - White Env ',1,''),(91,3,5505,9.0000,'cs',27.60,0.00000000,248.40,'鸡骨','Chicken - Bone 40#',1,''),(91,4,9090,2.0000,'cs',35.70,0.00000000,71.40,'猪颈骨','Pork - Bone Neck 30#',1,''),(92,1,10642,1.0000,'lb',4.95,0.00000000,4.95,'杏仁粉','Almond Powder',1,''),(92,2,9025,1.0000,'cs',26.00,0.00000000,26.00,'杏仁饼','Almond Cookie 12#',1,''),(93,1,5957,1.0000,'bkt',44.00,0.08000000,47.64,'洗碗机水 黄','Dish Cleaner #3 (Sanitizer)Yellow 5gal',1,''),(93,2,6117,1.0000,'cs',38.00,0.00000000,38.00,'米酒','Michou 4/1g',1,''),(93,3,9126,1.0000,'cs',47.00,0.00000000,47.00,'联合辣醬','Chili Sauce (Union) 4/1gal',1,''),(93,4,7308,1.0000,'cs',46.00,0.00000000,46.00,'四季豆','Produce - Beans - Green  ',1,''),(93,5,5149,1.0000,'cs',28.00,0.00000000,28.00,'茄子','Produce - Eggplant',1,''),(93,6,9006,1.0000,'cs',29.00,0.00000000,29.00,'青江菜（上海小白菜）','Produce - Baby Bok Choy',1,''),(93,8,9266,6.0000,'pkg',4.29,0.00000000,25.74,'五香豆干','Tofu - Five Spice 30pkg/cs',0,''),(93,7,4983,4.0000,'cs',8.99,0.00000000,35.96,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(94,1,5901,3.0000,'cs',65.78,0.00000000,197.34,'牛柏叶','Beef - Tripe (AA) 22#',1,'5.31.22'),(94,2,11108,3.0000,'cs',26.00,0.00000000,78.00,'港式叉烧包','Dim Sum - Roasted Pork Bun 2/25pcs',1,'5.31.22'),(94,3,12065,40.0000,'lb',3.59,0.00000000,143.60,'金鲳鱼','Fish - Pomfret Gold (Pompano800/1000) 40#',0,'5.31.22'),(94,4,9766,128.9900,'lb',3.19,0.00000000,411.48,'五花肉','Pork - Belly Skin On ',0,'5.31.22/45.95,42.91,40.13'),(94,5,5908,55.8000,'lb',3.99,0.00000000,222.64,'牛腩','Beef - Stew Meat (Flank Tip)',0,'5.31.22'),(94,6,5905,70.9000,'lb',4.29,0.00000000,304.16,'牛腱','Beef - Shank Banana',0,'5.31.22'),(95,1,6322,1.0000,'cs',60.00,0.00000000,60.00,'越南蒜蓉辣醬','Chili Garlic Sauce (VN) 3/1gal',1,''),(95,2,5814,1.0000,'cs',54.00,0.00000000,54.00,'杯子','Cup - (P200N) 2oz   10/250pcs Fit PL200N',1,''),(95,3,5442,1.0000,'cs',47.00,0.00000000,47.00,'杯盖','Lid - (PL2N/PL200N) 2oz  25/100pcs Fit P200n',1,''),(95,4,9182,2.0000,'bag',17.00,0.00000000,34.00,'新鲜蒜头','Produce - Fresh Peel Garlic 5#',1,''),(95,5,5878,2.0000,'cs',62.00,0.00000000,124.00,'锅贴','Pot Sticker (Amoy) 6/30ct',1,''),(95,6,5908,134.0000,'lb',3.99,0.00000000,534.66,'牛腩','Beef - Stew Meat (Flank Tip)',0,'64.50,69.50'),(96,1,5870,1.0000,'cs',94.00,0.00000000,94.00,'上鸡调味粉','Chicken Powder (Ajinomoto) 4/6#',1,''),(96,2,6256,2.0000,'cs',48.00,0.00000000,96.00,'是拉差辣醬','Chili Sauce (Sriracha) 12/17oz',1,''),(96,3,9573,4.0000,'cs',32.00,0.00000000,128.00,'干面','Noodle - Dry (WC)   25# ',1,''),(96,4,6043,3.0000,'cs',14.00,0.00000000,42.00,'签语饼(单独包装)','Fortune Cookie - Indiv ',1,''),(96,5,7302,1.0000,'cs',29.00,0.00000000,29.00,'新鮮蘑菇','Produce - Mushroom 10#',1,''),(96,6,5173,2.0000,'cs',22.00,0.00000000,44.00,'软豆腐','Tofu (Soft/Green) 12/14oz',1,''),(97,1,9466,-1.0000,'cs',211.60,0.00000000,-211.60,'虾','Shrimp - WHT 21-25  40#',1,'cr for r/t on 5.31.22'),(97,2,9571,-8.0000,'lb',4.39,0.00000000,-35.12,'虾','Shrimp - WHT 31-35  40#',0,'cr for r/t on 5.31.22'),(99,1,6101,6.0000,'cs',70.00,0.00000000,420.00,'椰奶','Coconut Milk (Mae Ploy) 24/19oz',1,''),(99,2,9015,1.0000,'cs',85.00,0.00000000,85.00,'草菇罐头','Mushroom - Straw  6/5#',1,''),(99,3,5522,3.0000,'cs',55.00,0.00000000,165.00,'泰米粉（中）','Noodle - Rice Stick (M/3mm) (Thai)  30/14oz',1,''),(99,4,6291,1.0000,'sk',34.00,0.00000000,34.00,'天富罗炸粉','Flour - Tempura Ko 40#',1,''),(99,5,10799,6.0000,'sk',48.00,0.00000000,288.00,'绿象香米','Rice - (Jasmine Green Elephant ) 50#',1,''),(99,6,5918,1.0000,'sk',38.00,0.00000000,38.00,'糙米','Rice (Brown) 50#',1,''),(100,1,5125,2.0000,'cs',54.00,0.00000000,108.00,'味全春卷皮','Egg Roll Skin (WC) 8 40/25pcs',1,''),(101,1,6066,2.0000,'bkt',33.00,0.00000000,66.00,'万字酱油','Soy Sauce (KKM) 5gal',1,''),(101,2,9570,1.0000,'cs',46.00,0.00000000,46.00,'一格盒','Tray - K1  200pcs',1,''),(101,3,9207,1.0000,'cs',46.00,0.00000000,46.00,'三格盒','Tray - K3  200ps',1,''),(101,4,4729,1.0000,'cs',70.00,0.00000000,70.00,'马片','Water Chestnut - Sliced 6/5#   ',1,''),(101,5,6043,5.0000,'cs',14.00,0.00000000,70.00,'签语饼(单独包装)','Fortune Cookie - Indiv ',1,''),(101,6,5834,4.0000,'cs',23.00,0.00000000,92.00,'大背心袋','Bags - Plastic (L)  12x7x23',1,''),(101,7,5996,2.0000,'cs',72.00,0.00000000,144.00,'外卖盒32oz','Food Pail - 32oz Quart Micro 450 pcs',1,''),(101,8,6322,2.0000,'cs',58.00,0.00000000,116.00,'越南蒜蓉辣醬','Chili Garlic Sauce (VN) 3/1gal',1,''),(101,9,9080,1.0000,'bundl',25.00,0.00000000,25.00,'纸袋','Bags - #4 Brown (81007) 8/500 pcs',0,''),(101,10,10799,5.0000,'sk',47.00,0.00000000,235.00,'绿象香米','Rice - (Jasmine Green Elephant ) 50#',1,''),(101,11,5147,1.0000,'cs',22.00,0.00000000,22.00,'硬豆腐','Tofu (Firm/Red) 12/14oz',1,''),(101,12,5173,1.0000,'cs',22.00,0.00000000,22.00,'软豆腐','Tofu (Soft/Green) 12/14oz',1,''),(101,13,5132,2.0000,'cs',28.00,0.00000000,56.00,'椰菜','Produce - Cabbage',1,''),(101,14,7299,2.0000,'cs',18.00,0.00000000,36.00,'西蘭花','Produce - Broccoli - Crown',1,''),(101,15,9629,1.0000,'cs',18.00,0.00000000,18.00,'青葱','Produce - Green Onion 48bundles',1,''),(101,16,5383,1.0000,'sk',20.00,0.00000000,20.00,'洋葱','Produce - Onions Yellow  50#',1,''),(101,17,5417,2.0000,'cs',42.00,0.00000000,84.00,'蛋','Eggs (XL)',1,''),(101,18,5417,3.2500,'cs',0.00,0.00000000,0.00,'蛋','Eggs (XL)',0,'3#/free'),(101,19,10150,3.1500,'lb',0.00,0.00000000,0.00,'茼蒿','Produce - Tong Hou',0,'3#/free'),(101,20,11656,3.1600,'lb',0.00,0.00000000,0.00,'青江菜苗','Produce - Baby Bok Choy Miu',0,'3#/free'),(102,1,4841,1.0000,'cs',60.00,0.00000000,60.00,'發粉','Baking Powder (Clabber Girl) 6/5#',1,''),(102,2,5883,1.0000,'cs',32.00,0.00000000,32.00,'苏打粉','Baking Soda (Clabber Girl)  6/5#',1,''),(102,3,5680,1.0000,'bag',45.00,0.00000000,45.00,'冬菇','Mushroom - Dry Black (3/4) 5#',1,''),(102,4,9006,1.0000,'cs',29.00,0.00000000,29.00,'青江菜（上海小白菜）','Produce - Baby Bok Choy',1,''),(102,5,4983,10.0000,'cs',8.99,0.00000000,89.90,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(102,6,6333,1.0000,'cs',36.50,0.00000000,36.50,'薄云吞皮','Wonton Skin - Thin (China) 24# (Pink)',1,''),(102,7,5125,1.0000,'cs',53.00,0.00000000,53.00,'味全春卷皮','Egg Roll Skin (WC) 8 40/25pcs',1,''),(103,1,4826,2.0000,'cs',74.00,0.00000000,148.00,'无水鸡腿肉','Chicken - Leg Meat  40#',1,''),(104,1,9573,5.0000,'cs',31.00,0.00000000,155.00,'干面','Noodle - Dry (WC)   25# ',1,''),(104,2,9002,3.0000,'cs',33.00,0.00000000,99.00,'一格盒','Tray - TG1 150pcs(PC)',1,''),(104,3,5816,3.0000,'cs',33.00,0.00000000,99.00,'三格盒','Tray - TG3 150pcs (PC)',1,''),(104,4,5147,1.0000,'cs',22.00,0.00000000,22.00,'硬豆腐','Tofu (Firm/Red) 12/14oz',1,''),(104,5,4826,0.0000,'cs',0.00,0.00000000,0.00,'无水鸡腿肉','Chicken - Leg Meat  40#',1,'4cs/out'),(105,1,9570,4.0000,'cs',46.00,0.00000000,184.00,'一格盒','Tray - K1  200pcs',1,''),(105,2,9207,1.0000,'cs',46.00,0.00000000,46.00,'三格盒','Tray - K3  200ps',1,''),(105,3,6066,1.0000,'bkt',33.00,0.00000000,33.00,'万字酱油','Soy Sauce (KKM) 5gal',1,''),(105,4,9390,3.0000,'sk',27.00,0.00000000,81.00,'大三元米','Rice (Lucky) 50#',1,''),(105,5,5383,1.0000,'sk',20.00,0.00000000,20.00,'洋葱','Produce - Onions Yellow  50#',1,''),(105,6,7309,1.0000,'bag',18.00,0.00000000,18.00,'紅萝卜','Produce - Carrot 25#',1,''),(106,1,10483,1.0000,'cs',86.00,0.00000000,86.00,'三女瀨粉','Noodle - (3Ladies) (Lie/Blue Letter) Rice Stick(XL)  60/14oz',1,''),(106,2,6294,1.0000,'cs',59.00,0.00000000,59.00,'大三格盒','Tray - SN203 3 Comp. (L) 9  (TD1-9903) 200pcs',1,''),(106,3,10259,4.0000,'cs',31.00,0.00000000,124.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',1,''),(106,4,5902,202.5500,'lb',1.05,0.00000000,212.68,'牛骨','Beef - Cut Leg Bone ',0,'68.10,65.60,68.85'),(106,5,5908,103.2000,'lb',3.99,0.00000000,411.77,'牛腩','Beef - Stew Meat (Flank Tip)',0,'51.25,51.95'),(106,6,10230,55.5000,'lb',4.50,0.00000000,249.75,'牛胸肉','Beef - Brisket',0,''),(107,1,9024,1.0000,'cs',69.00,0.00000000,69.00,'外卖盒26oz.','Food Pail - 26oz Wire (GW) 450pcs',1,''),(107,2,4711,1.0000,'cs',13.00,0.00000000,13.00,'白醋','Vinegar   4/1gal',1,''),(107,3,5931,3.0000,'cs',34.76,0.00000000,104.28,'整鸡腿','Chicken - Whole Leg 33.1#',1,''),(107,4,10259,4.0000,'cs',31.00,0.00000000,124.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',1,''),(107,5,6172,1.0000,'cs',82.00,0.00000000,82.00,'猪扒','Pork - Chops  40#',1,''),(107,6,6265,44.1100,'lb',1.39,0.00000000,61.31,'老母鸡','Chicken - Hen Baking (Top Bee)',0,''),(108,1,5793,1.0000,'cs',50.00,0.00000000,50.00,'凤梨丁','Pineapple - Chunk 6/5#',1,''),(108,2,9570,1.0000,'cs',46.00,0.00000000,46.00,'一格盒','Tray - K1  200pcs',1,''),(108,3,9207,1.0000,'cs',46.00,0.00000000,46.00,'三格盒','Tray - K3  200ps',1,''),(108,4,6066,1.0000,'bkt',33.00,0.00000000,33.00,'万字酱油','Soy Sauce (KKM) 5gal',1,''),(108,5,9038,3.0000,'jar',2.49,0.00000000,7.47,'麦芽糖','Maltose 36/14.11oz (400g)',0,''),(108,6,6043,2.0000,'cs',14.00,0.00000000,28.00,'签语饼(单独包装)','Fortune Cookie - Indiv ',1,''),(108,7,9000,1.0000,'sk',50.00,0.00000000,50.00,'生粉','Cornstarch 50#',1,''),(108,8,5808,1.0000,'sk',55.00,0.00000000,55.00,'超級生粉','Potato Starch (Windmill) 50#',1,''),(108,9,5773,1.0000,'sk',32.00,0.00000000,32.00,'糖','Sugar 50#',1,''),(108,10,5733,1.0000,'sk',35.00,0.00000000,35.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,''),(108,11,9007,1.0000,'sk',13.00,0.00000000,13.00,'盐','Salt 50#',1,''),(108,12,5147,1.0000,'cs',22.00,0.00000000,22.00,'硬豆腐','Tofu (Firm/Red) 12/14oz',1,''),(108,13,7302,3.0000,'cs',29.00,0.00000000,87.00,'新鮮蘑菇','Produce - Mushroom 10#',1,''),(108,14,4983,10.0000,'cs',8.50,0.00000000,85.00,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(109,1,5948,8.0000,'pail',48.00,0.00000000,384.00,'甜浆','Syrup - Corn 5gal',1,''),(109,2,9037,6.0000,'cs',48.00,0.00000000,288.00,'甜辣酱','Chili Sauce - Sweet Chicken (Mae Ploy) 12/32oz',1,''),(109,3,6034,4.0000,'bag',20.50,0.00000000,82.00,'','Hondashi - Soup Stock (Ajino) 12/ 2.2#',0,''),(110,1,6291,2.0000,'sk',34.00,0.00000000,68.00,'天富罗炸粉','Flour - Tempura Ko 40#',1,''),(110,2,11281,3.0000,'cs',46.00,0.00000000,138.00,'讚岐乌冬面','Noodle - Udon Sanuki Froz. 5pc 2/6/2.42oz',1,''),(110,3,5293,4.0000,'cs',45.00,0.00000000,180.00,'肉春卷','Egg Roll - Pork (Baily) 120pcs/2oz',1,''),(110,4,5902,130.1000,'lb',1.09,0.00000000,141.81,'牛骨','Beef - Cut Leg Bone ',0,'65.4,64.7'),(111,1,10023,2.0000,'sk',61.00,0.00000000,122.00,'三女香米','Rice - (Jasmine - 3ladies)  50#',1,''),(111,2,10428,4.0000,'sk',32.00,0.00000000,128.00,'三女香米','Rice - (Jasmine - 3ladies)  25#',1,''),(111,3,6240,2.0000,'cs',93.36,0.00000000,186.72,'有头虾','Shrimp - Head On 50-60 24#',1,''),(111,4,10559,2.0000,'cs',111.60,0.00000000,223.20,'吴郭鱼','Fish - Tilapia (550/750) 40#',1,''),(111,5,10493,1.0000,'cs',118.80,0.00000000,118.80,'有頭蝦','Shrimp - Head On 20-30 24#',1,''),(111,6,10427,1.0000,'cs',102.96,0.00000000,102.96,'有頭蝦','Shrimp - Head On 30-40 24#',1,''),(111,7,9530,1.0000,'cs',199.60,0.00000000,199.60,'虾','Shrimp - WHT 26-30 40#',1,''),(111,8,6245,0.0000,'cs',0.00,0.00000000,0.00,'白虾','Shrimp - WHT 51-60 40# ',1,'out'),(112,1,5233,3.0000,'cs',0.00,0.00000000,0.00,'油','Oil - Soy ',1,'p/u, will charge next time'),(112,2,6354,2.0000,'cs',0.00,0.00000000,0.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,'p/u, will charge next time'),(112,3,5733,4.0000,'sk',0.00,0.00000000,0.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,'p/u, will charge next time'),(113,1,5233,3.0000,'cs',42.00,0.00000000,126.00,'油','Oil - Soy ',1,'p/u on 5/30/2022'),(113,2,6354,2.0000,'cs',57.00,0.00000000,114.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,'p/u on 5/30/2022'),(113,3,6354,2.0000,'cs',57.00,0.00000000,114.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,''),(113,4,5233,2.0000,'cs',42.00,0.00000000,84.00,'油','Oil - Soy ',1,''),(113,5,10076,2.0000,'cs',23.00,0.00000000,46.00,'椰子苏打水','Drink - Cocorico Drink 24/12oz',1,''),(113,6,11737,2.0000,'cs',38.00,0.00000000,76.00,'大罐南洋奶茶','Drink - Thai Tea In Big Can (Tasco) 24/16.9oz',1,''),(113,7,5845,1.0000,'cs',95.00,0.00000000,95.00,'杯子','Cup - (Dcc24MJ48) 24oz Fit 48JL(Dart)  20/25',1,''),(113,8,9169,1.0000,'cs',61.00,0.00000000,61.00,'杯盖','Lid -  (48JL) 24oz,32oz 5/100pcs',1,''),(113,9,6257,1.0000,'cs',58.00,0.00000000,58.00,'是拉差辣酱','Chili Sauce (Sriracha) 12/28oz',1,''),(113,10,5733,4.0000,'sk',35.00,0.00000000,140.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,'p/u on 5/30/2022'),(113,11,5733,3.0000,'sk',35.00,0.00000000,105.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,''),(113,12,9000,2.0000,'sk',55.00,0.00000000,110.00,'生粉','Cornstarch 50#',1,''),(113,13,12252,12.0000,'cs',82.80,0.00000000,993.60,'无皮无骨鸡大腿肉','Chicken Thigh Meat Boneless Skinless 40#',1,''),(113,14,11035,63.3400,'lb',4.29,0.00000000,271.73,'牛肉','Beef - Top Sirlion/Topbutt (ET)',0,''),(114,1,10076,-2.0000,'cs',23.00,0.00000000,-46.00,'椰子苏打水','Drink - Cocorico Drink 24/12oz',1,''),(114,2,10110,2.0000,'cs',35.00,0.00000000,70.00,'大椰子汁','Drink - Coconut Juice w. Pulp(Tasco/L) 24/16.9oz',1,''),(114,3,5233,3.0000,'cs',0.00,0.00000000,0.00,'油','Oil - Soy ',1,'n/c'),(114,4,5733,4.0000,'sk',0.00,0.00000000,0.00,'黄国宝米','Rice (Cal Rose - Yellow/Kokuho) 50#',1,''),(116,1,6202,1.0000,'cs',94.00,0.00000000,94.00,'米粉(肇庆)','Noodle - Rice Stick (Chao Ching) 60/16oz',1,''),(116,2,5319,1.0000,'cs',24.00,0.00000000,24.00,'甜酸外卖包','Sweet & Sour Indiv Pkg (DBL Hi) 500pcs',1,''),(116,3,10004,1.0000,'cs',18.00,0.00000000,18.00,'辣酱包','Chili Sauce Pkg 420/9g (SK)',1,''),(116,4,6082,1.0000,'cs',39.00,0.00000000,39.00,'李锦记海鮮醬','Hoisin Sauce (LKK) 6/5#',1,''),(116,5,6333,1.0000,'cs',36.00,0.00000000,36.00,'薄云吞皮','Wonton Skin - Thin (China) 24# (Pink)',1,''),(116,6,5125,1.0000,'cs',53.00,0.00000000,53.00,'味全春卷皮','Egg Roll Skin (WC) 8 40/25pcs',1,''),(116,7,9820,10.0000,'bag',5.99,0.00000000,59.90,'鱼丸','Fish Ball   (Ho Ho) 30#',0,''),(116,8,5900,5.0000,'pkg',6.79,0.00000000,33.95,'牛肉丸','Beef Ball (Great Wall) (311) 20/11oz',0,''),(116,9,6331,1.0000,'cs',28.00,0.00000000,28.00,'云吞面','Noodle - Wonton 10#',1,''),(116,10,4983,2.0000,'cs',8.99,0.00000000,17.98,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(116,11,10259,1.0000,'cs',31.00,0.00000000,31.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',1,''),(116,12,9090,1.0000,'cs',35.70,0.00000000,35.70,'猪颈骨','Pork - Bone Neck 30#',1,''),(116,13,5505,1.0000,'cs',27.60,0.00000000,27.60,'鸡骨','Chicken - Bone 40#',1,''),(116,14,5823,1.0000,'cs',156.00,0.00000000,156.00,'鸡胸肉','Chicken - Breast Meat 40#',1,''),(116,15,4826,2.0000,'cs',71.60,0.00000000,143.20,'无水鸡腿肉','Chicken - Leg Meat  40#',1,''),(116,16,5902,65.7000,'lb',1.19,0.00000000,78.18,'牛骨','Beef - Cut Leg Bone ',0,''),(117,1,9462,4.0000,'box',40.00,0.08000000,173.22,'白湯匙','Spoon -White Melemine 20bx/5dz(7003W)',1,''),(117,2,5649,2.0000,'cs',38.00,0.00000000,76.00,'白套筷','ChopStick - White Env ',1,''),(117,3,5505,9.0000,'cs',27.60,0.00000000,248.40,'鸡骨','Chicken - Bone 40#',1,''),(117,4,9090,2.0000,'cs',35.70,0.00000000,71.40,'猪颈骨','Pork - Bone Neck 30#',1,''),(118,1,5233,6.0000,'cs',42.00,0.00000000,252.00,'油','Oil - Soy ',1,''),(118,2,11562,1.0000,'cs',119.00,0.00000000,119.00,'農夫家乡牌米粉','Noodle - Rice Stick (802) 30/2#',1,''),(118,3,4711,1.0000,'cs',13.00,0.00000000,13.00,'白醋','Vinegar   4/1gal',1,''),(118,4,9117,1.0000,'cs',32.00,0.00000000,32.00,'绍兴料酒','Wine - Shaoxing Cooking 4/3Liter',1,''),(118,5,9020,1.0000,'cs',36.00,0.00000000,36.00,'茄醬','Ketchup 6/5#',1,''),(118,6,6354,1.0000,'cs',61.00,0.00000000,61.00,'一格盒','Tray - SN240 1 Comp. 8 (TD18801) 200pcs',1,''),(118,7,6355,1.0000,'cs',61.00,0.00000000,61.00,'三格盒','Tray - SN243 3 Comp. 8 (TD18803) 200pcs',1,''),(118,8,6066,1.0000,'bkt',34.00,0.00000000,34.00,'万字酱油','Soy Sauce (KKM) 5gal',1,''),(118,9,6043,2.0000,'cs',14.00,0.00000000,28.00,'签语饼(单独包装)','Fortune Cookie - Indiv ',1,''),(118,10,9066,2.0000,'gal',10.00,0.00000000,20.00,'黃水','Food Color - Egg Shade 4/1gal',0,''),(118,11,6193,1.0000,'gal',10.00,0.00000000,10.00,'紅水','Food Color - Red 4/1gal',0,''),(118,12,12241,2.0000,'sk',63.00,0.00000000,126.00,'蝴蝶香米','Rice (Jasmine - Butterfly) 50#',1,''),(118,13,5773,2.0000,'sk',33.00,0.00000000,66.00,'糖','Sugar 50#',1,''),(118,14,5252,1.0000,'cs',20.00,0.00000000,20.00,'芽菜','Bean Sprouts 20#/cs',1,''),(118,15,7309,1.0000,'bag',18.00,0.00000000,18.00,'紅萝卜','Produce - Carrot 25#',1,''),(118,16,9006,1.0000,'cs',29.00,0.00000000,29.00,'青江菜（上海小白菜）','Produce - Baby Bok Choy',1,''),(118,17,5132,1.0000,'cs',28.00,0.00000000,28.00,'椰菜','Produce - Cabbage',1,''),(118,18,9937,10.6300,'lb',2.99,0.00000000,31.78,'红葱头','Produce - Shallots Fresh  ',0,'10#'),(118,19,5383,1.0000,'sk',21.00,0.00000000,21.00,'洋葱','Produce - Onions Yellow  50#',1,''),(118,20,5417,1.0000,'cs',45.00,0.00000000,45.00,'蛋','Eggs (XL)',1,''),(118,21,9398,2.0000,'cs',59.90,0.00000000,119.80,'有尾虾','Shrimp - P&D 26-30 T/On 10#',1,''),(118,22,5878,1.0000,'cs',62.00,0.00000000,62.00,'锅贴','Pot Sticker (Amoy) 6/30ct',1,''),(118,23,4983,2.0000,'cs',8.99,0.00000000,17.98,'鮮蛋面','Noodle - (China) Fresh  10#',1,''),(118,24,5104,1.0000,'cs',36.00,0.00000000,36.00,'中华炸皮','Wonton Skin - Thick (China) (White) 24#',1,''),(118,25,9072,1.0000,'cs',52.00,0.00000000,52.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick 5/10# (Banana Box)',1,''),(118,26,5823,3.0000,'cs',156.00,0.00000000,468.00,'鸡胸肉','Chicken - Breast Meat 40#',1,''),(118,27,5505,2.0000,'cs',27.60,0.00000000,55.20,'鸡骨','Chicken - Bone 40#',1,''),(118,28,5402,76.9000,'lb',2.25,0.00000000,173.02,'无骨猪大腿肉','Pork - Butt Boneless',0,''),(118,29,9391,52.8300,'lb',2.09,0.00000000,110.41,'猪肩肉','Pork - Cushion ',0,''),(118,30,5902,66.1500,'lb',1.05,0.00000000,69.46,'牛骨','Beef - Cut Leg Bone ',0,''),(119,1,4732,1.0000,'cs',42.00,0.00000000,42.00,'筍片','Bamboo Shoot - Sliced 6/5#',1,''),(119,2,5945,1.0000,'cs',59.50,0.00000000,59.50,'外卖胶杯','Container - Quart  32oz Combo 10/25 Set',1,''),(119,3,5926,1.0000,'cs',48.50,0.00000000,48.50,'小椰奶','Coconut Milk (Chaokoh) 24/13.5oz',1,''),(119,4,9371,10.0000,'box',3.99,0.00000000,39.90,'吸管','Drinking Straw - 7.75  Paper Wrapped 24/500',0,''),(119,5,9054,1.0000,'cs',33.00,0.00000000,33.00,'瓶装海鮮醬','Hoisin Sauce  - Bottle (LKK) 12/20oz',1,''),(119,6,6082,1.0000,'cs',39.00,0.00000000,39.00,'李锦记海鮮醬','Hoisin Sauce (LKK) 6/5#',1,''),(119,7,9560,2.0000,'cs',43.00,0.00000000,86.00,'油','Oil - Salad  5gal',1,''),(119,8,6202,1.0000,'cs',96.00,0.00000000,96.00,'米粉(肇庆)','Noodle - Rice Stick (Chao Ching) 60/16oz',1,''),(119,9,4711,1.0000,'cs',14.00,0.00000000,14.00,'白醋','Vinegar   4/1gal',1,''),(119,10,9002,1.0000,'cs',35.00,0.00000000,35.00,'一格盒','Tray - TG1 150pcs(PC)',1,''),(119,11,5816,1.0000,'cs',35.00,0.00000000,35.00,'三格盒','Tray - TG3 150pcs (PC)',1,''),(119,12,6294,1.0000,'cs',62.00,0.00000000,62.00,'大三格盒','Tray - SN203 3 Comp. (L) 9  (TD1-9903) 200pcs',1,''),(119,13,10280,1.0000,'cs',105.00,0.00000000,105.00,'三女米紙','Rice Paper - (3ladies) 31cm 44/12oz',1,''),(119,14,5789,1.0000,'sk',160.00,0.00000000,160.00,'味精','MSG 50#',1,''),(119,15,5773,1.0000,'sk',33.00,0.00000000,33.00,'糖','Sugar 50#',1,''),(119,16,11222,18.0000,'pkg',2.79,0.00000000,50.22,'故乡豬皮絲','Pork - Cooked Skin Sliced (QH) 30/7oz',0,''),(119,17,4760,1.0000,'cs',357.00,0.00000000,357.00,'扇面牛肉','Steak - Flank60#',1,''),(119,18,9529,1.0000,'cs',132.00,0.00000000,132.00,'无壳虾','Shrimp - P&D 31-40   24# ',1,''),(119,19,9730,1.0000,'cs',105.00,0.00000000,105.00,'龙利鱼片','Fish - Sole Fillet (Swai)  ',1,''),(119,20,5901,1.0000,'cs',65.78,0.00000000,65.78,'牛柏叶','Beef - Tripe (AA) 22#',1,''),(119,21,4826,1.0000,'cs',75.60,0.00000000,75.60,'无水鸡腿肉','Chicken - Leg Meat  40#',1,''),(119,22,5823,1.0000,'cs',156.00,0.00000000,156.00,'鸡胸肉','Chicken - Breast Meat 40#',1,''),(119,23,5505,2.0000,'cs',27.60,0.00000000,55.20,'鸡骨','Chicken - Bone 40#',1,''),(119,24,6331,1.0000,'cs',28.00,0.00000000,28.00,'云吞面','Noodle - Wonton 10#',1,''),(119,25,9072,2.0000,'cs',52.00,0.00000000,104.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick 5/10# (Banana Box)',1,''),(119,26,5610,1.0000,'cs',79.00,0.00000000,79.00,'锅贴','Pot Sticker (Good Guy/99116) 16lb/(155-160)1.5oz',1,''),(119,27,6333,1.0000,'cs',36.00,0.00000000,36.00,'薄云吞皮','Wonton Skin - Thin (China) 24# (Pink)',1,''),(119,28,5402,66.8700,'lb',2.09,0.00000000,139.76,'无骨猪大腿肉','Pork - Butt Boneless',0,''),(119,29,5902,133.2500,'lb',1.05,0.00000000,139.91,'牛骨','Beef - Cut Leg Bone ',0,'65.85,67.40'),(120,1,5252,3.0000,'cs',20.00,0.00000000,60.00,'芽菜','Bean Sprouts 20#/cs',1,''),(120,2,9612,6.5500,'lb',1.49,0.00000000,9.76,'中青椒','Produce - Jalapeno ',0,'5#'),(120,3,9120,1.0000,'cs',25.00,0.00000000,25.00,'包生菜','Produce - Ice Berg Lettuce',1,''),(120,4,9306,1.0000,'cs',33.00,0.00000000,33.00,'绿叶生菜','Produce - Green Leaf Lettuce',1,''),(120,5,7309,1.0000,'bag',19.00,0.00000000,19.00,'紅萝卜','Produce - Carrot 25#',1,''),(120,6,9629,1.0000,'cs',19.00,0.00000000,19.00,'青葱','Produce - Green Onion 48bundles',1,''),(120,7,6000,1.0000,'cs',35.00,0.00000000,35.00,'新鮮姜','Produce - Fresh Ginger',1,''),(120,8,5383,1.0000,'sk',21.00,0.00000000,21.00,'洋葱','Produce - Onions Yellow  50#',1,''),(121,1,5900,1.0000,'cs',0.00,0.00000000,0.00,'牛肉丸','Beef Ball (Great Wall) (311) 20/11oz',1,'n/c'),(123,1,11192,1.0000,'cs',88.00,0.00000000,88.00,'三女鲜米粉','Noodle - Vietnamese Rice Vermicelli (M) (3Ladies/7772) 18/2#',1,''),(123,2,5689,0.0000,'cs',0.00,0.00000000,0.00,'杨协成豆奶','Drink - Soy Bean Milk(Yeos) 24/10.1oz',1,'out'),(123,3,6207,1.0000,'cs',98.00,0.00000000,98.00,'冰糖','Sugar - Rock 50/454g',1,''),(123,4,5789,1.0000,'sk',160.00,0.00000000,160.00,'味精','MSG 50#',1,''),(123,5,9007,1.0000,'sk',14.00,0.00000000,14.00,'盐','Salt 50#',1,''),(123,6,6000,1.0000,'cs',36.00,0.00000000,36.00,'新鮮姜','Produce - Fresh Ginger',1,''),(123,7,5125,1.0000,'cs',53.00,0.00000000,53.00,'味全春卷皮','Egg Roll Skin (WC) 8 40/25pcs',1,''),(123,8,6331,2.0000,'cs',28.00,0.00000000,56.00,'云吞面','Noodle - Wonton 10#',1,''),(123,9,10259,6.0000,'cs',31.00,0.00000000,186.00,'越南粉','Noodle - Fresh Froz.Pho Rice Stick (Sincere) 3/10#',1,''),(123,10,5900,1.0000,'cs',92.00,0.00000000,92.00,'牛肉丸','Beef Ball (Great Wall) (311) 20/11oz',1,''),(123,11,5901,1.0000,'cs',65.78,0.00000000,65.78,'牛柏叶','Beef - Tripe (AA) 22#',1,''),(123,12,5909,2.0000,'cs',175.78,0.00000000,351.56,'牛筋','Beef - Tendon  22#',1,''),(123,13,5908,61.7000,'lb',3.99,0.00000000,246.18,'牛腩','Beef - Stew Meat (Flank Tip)',0,''),(123,14,5902,253.1500,'lb',1.15,0.00000000,291.12,'牛骨','Beef - Cut Leg Bone ',0,'62.65,65.55,68.50,56.45'),(124,1,11679,5.0000,'cs',15.00,0.00000000,75.00,'李锦记酱油包','Soy Sauce - Pkg  (LKK) 500pcs',1,''),(124,2,6302,2.0000,'cs',70.00,0.00000000,140.00,'三文治盒','Tray - SN225  Sandwich 6  500pcs',1,''),(124,3,9002,1.0000,'cs',33.00,0.00000000,33.00,'一格盒','Tray - TG1 150pcs(PC)',1,''),(124,4,6001,20.0000,'pkg',2.49,0.00000000,49.80,'鹌鹑蛋','Egg - Quail Fresh',0,''),(126,1,9746,1.0000,'ea',39.95,0.08265000,43.25,'','Wok - 22  w/2 handles (USA)',1,'');
/*!40000 ALTER TABLE `saledetail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sellerlist`
--

DROP TABLE IF EXISTS `sellerlist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sellerlist` (
  `id` int NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `addr` varchar(200) DEFAULT NULL,
  `city` varchar(100) DEFAULT NULL,
  `state` varchar(20) DEFAULT NULL,
  `zip` varchar(20) DEFAULT NULL,
  `phone` varchar(100) DEFAULT NULL,
  `Fax` varchar(100) DEFAULT NULL,
  `cname` varchar(200) DEFAULT NULL,
  `ctitle` varchar(80) DEFAULT NULL,
  `email` varchar(50) DEFAULT NULL,
  `note` varchar(250) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sellerlist`
--

LOCK TABLES `sellerlist` WRITE;
/*!40000 ALTER TABLE `sellerlist` DISABLE KEYS */;
INSERT INTO `sellerlist` VALUES (1,'82','830 7th St','San Francisco','Ca','94107-    ','415.863.7886','415.863.2768','','','30',''),(2,'Amoy North America','15-01 Pollitt Dr','Fair Lawn','NJ','07410-    ','714.424.4951','832.353.1805','michelle:714.424.4951','','',''),(3,'American Poly Sales Co. Inc','2361 Davis Ave.','Hayward','CA','94545-    ','510.781.1111~fax:1115','510.781.1115','Daneil:650.867.8302~flora liu','','',''),(4,'B & B Quality Food Providers','1741 Tennessee St','San Francisco','CA','94124-    ','415.285.5810','415.285.2480','','','',''),(5,'Baily International Inc.','1751 Burns Ave.','St. Louis','MO','63132-    ','888.710.5168~fax:618.451.8879','618.451.8879','Nikki713.560.9588~amy:314.942.6353','','','janet@bailyfoods.com'),(6,'Best Choice Meat Sale Co','1110 98th Ave','Oakland','CA','94603-    ','510.635.0478','510.635.5682','','','',''),(7,'C & M Food Dist','7935 Sugar Pine Ct','Reno','NV','89523-    ','775.787.3020','775.787.3019','jenny','','',''),(8,'China Noodle Co','1791 Sabre St.','Hayward','CA','94545-    ','510.835.2269~fax:835.2518','510.781.0286','Mimi','','',''),(9,'C. H. Belt','20532 El Toro Rd Ste 103','Mission Viejo','CA','92692-    ','866.858.9828~949.859.0700','949.859.0711','','','',''),(10,'Eastimpex (良友)','1155 7th St.','Oakland','CA','94607-    ','510.208.6200','510.208.6208','vivian','','',''),(11,'Chicken of the Sea(Empress Intl)','222 N. Sepulveda Blvd. #1550','El Segundo','CA','90245-    ','310.469.7030~fax:7037','310.469.7037','chrystal plaisted','sales','','mariaw@empfish.com'),(12,'EDS Wrap & Roll','1909 International Blvd','Oakland','CA','94606-    ','510.266.0888~fax:6636','510.533.3908','brain:510.508.2090~ada:853.1384~billy','','',''),(13,'Golden Orchid','1399-1 Lowrie Ave','So. San Francisco','CA','94080-    ','650.589.4212','650.589.7438','Sam许:415.308.1602','','',''),(14,'Golden West Paper','2480 Grant Ave.','San Lorenzo','CA','94580-    ','510.317.0646~fax:0647','510.317.0647','Yvonne-Ext.14~kelvin','','',''),(15,'G & H Wholesale Foods','P.O. Box 885372','San Francisco','CA','94188-    ','415.822.0488','415.822.0688','Hary:650.279.3926','','',''),(16,'Gilt Edge Flour Mills','1090 W 1200 North','Richmond','UT','84333-    ','435.258.2425','','','','',''),(17,'Great River Food (Valley Star)','14500 E Valley Blvd','City of Industry','CA','91746-    ','626.968.6917~fax:415.822.3617','626.968.3238','豐:415.205.7433~Ryan~风','','',''),(18,'H & N Foods Intl','125 Bayshore Blvd','San Francisco','CA','94124-    ','415.821.6637','415.821.7159','peter:415.760.2287','','',''),(19,'Hosoda Bros','1444 Tennessee St','San Francisco','CA','94107-    ','415.648.7144','415.282.6336','','','',''),(21,'IPOH Food Products','282 Bernard Ave','San Jose','CA','95125-    ','408.286.8802','408.286.8806','','','',''),(22,'JFC Intl','48490 Milmont Drive','Fremont','CA','94538-    ','510.490.5300~fax0300','510.490.0300','Kane chiu:916.201.6668~komori:510.771.5714','','','skomori@jfc.com'),(23,'Kar Mee Fortune Cookies','221 7th St','Oakland','CA','94607-    ','510.835.0520','510.835.1952','','','',''),(24,'Kim Hong Noodle Co','1488 Wallace Ave','San Francisco','CA','94124-    ','415.822.3560~fax:8980','415.822.8980','譚415.519.4798','','',''),(25,'Kari-Out Co','15204 Spring Ave. ','Santa Spring','CA','90670-    ','562.407.5588~fax0592','914.580.3244','ken tan626.347.8888~christine luu914.580.3294','','',''),(26,'Kikkoman Intl','50 California St','San Francisco','CA','94111-    ','415.956.7750','415.956.7760','dee dee(a~r)','','',''),(27,'Linchen','20175 Mack St','Hayward','CA','94545-    ','510.887.7166','510.887.1336','John','','',''),(28,'Lucky K. T. Co','10925 Schmidt Rd.','El Monte','CA','91733-    ','626.579.7272','626.579.1515','Rober~Tom','','',''),(29,'Marathon Packing Corp','1000 Montague Ave','San Leandro','CA','94577-    ','510.895.2000','510.895.2022','Jessi~Jovita~kitty510.332.0175','','',''),(30,'M. J. Borelli & Co','2200 Powell St Ste 850','Emeryville','CA','94608-    ','510.420.8700','510.428.9186','','','',''),(31,'Ming Hong Intl','13285 Amar Rd','City of Industry','CA','91746-    ','626.820.9888','626.820.9088','','','',''),(32,'New Hong Kong Noodle Co','360 Swift Ave #22','So San Francisco','CA','94080-    ','650.952.9404~Fax:7342','650.952.7342','','','',''),(33,'Nevada Shipping Supplies','1205 Industrial Way','Sparks','NV','89430-    ','775.355.0233','775.355.9548','','','',''),(34,'O\'Tasty Foods','160 S. Hacienda Blvd','City of Industry','CA','91745-    ','626.330.1229','626.330.407','aloha:626.641.1172~wilson lu:707.843.0676','','',''),(35,'Ocean Blue Products','9040 Telstar Ave. #107','El Monte','CA','91731-    ','213.688.0133~fax:0137','213.688.0137','tony213.422.7875~Reed:626.484.9773','','','oceanblue@oceanblue.us'),(36,'Pacific Coral Seafood Co','2240 N.E. 2nd Ave','Miami','FL','33137-    ','305.573.8280','305.573.5582','','','',''),(37,'Papercraft','40999 Boyce Rd','Fremont','CA','94538-    ','510.353.1292~fax:9575~holi','510.353.9579','Evie lambert:209.495.7273','renee','','bob.doscher@bunzlusa.com'),(38,'Polin Poultry','59 W. Church St','Selbyville','DE','19975-    ','302.436.5191','302.436.5209','Henry:510.667.0098~Fax:510.667.0180','','',''),(39,'Purcell Intl','P.O. Box 5043','Walnut Creek','CA','94596-    ','925.933.6100','925.933.6304','','','',''),(40,'Rice Field Corp (Valley Star)','14500 E. Valley Blvd','City of Industry','CA','91746-    ','626.968.6917','626.968.3238','','','',''),(41,'Salad Cosmo','5944 Dixon Ave West','Dixon','CA','95620-    ','707.676.6633','707.678.6644','','','',''),(42,'Sheng Kee','201 South Hill Drive','Brisbane','CA','94005-    ','415.468.3800~fax5288','415.753.5288','Joyce,sarah','','',''),(43,'Seafood Connection','1979 Monterey Rd Unit 110','San Jose','CA','95112-    ','408.286.1388','408.286.1168','','','',''),(44,'Sea Port Products','15 10th Ave','San Mateo','CA','94401-    ','650.340.9900','650.347.6603','mike:425.827.2800','','',''),(45,'Sunnyvale Seafood','1651 Pomona Ave','San Jose','CA','95110-    ','510.477.0008~fax972.6148','510.972.6148','emma lin510.928.6658~mike:415.793.1325','','',''),(46,'Sweet Paper Sales','2399 W. Winton Ave','Hayward','CA','94545-    ','408.956.8096','','','','',''),(47,'Sin Ma Imports (新馬公司)','1425 Minnesota St','San Francisco','CA','94107-    ','415.282.1949~fax:648.4939','415.648.4939','彭生415.412.8609~285.9369','','',''),(48,'Mountain Pine Corp.(TakYuen) ','3004 -A Alvarado St.','San Leandro','CA','94577-    ','510.639.4813~fax:633.1273','510.633.1273','Queenie:510.330.7818~镇','','',''),(49,'Thai Kee Co','1689 Sabre St.','Hayward','CA','94545-    ','510.259.9038~9037(fax)','510.259.9037','','','',''),(50,'Bakery Street Inc.(Triple C Foods)','1465 Factor Ave.','San Leandro','CA','94577-    ','510.357.8880','510.357.8991','rebaca','','',''),(51,'Ottolini Transportation','P.O. Box 690008','Stockton','CA','95269-    ','209.931.6888','209.931.3767','','','',''),(52,'U.S. Trading','21118 Cabot Blvd.','Hayward','CA','94545-1130','510.781.1818~fax:1828','510.781.1828','馬生:415.307.3350','','',''),(53,'U.S. Import Export (民英公司)','9009 San Leandro St','Oakland','CA','94603-    ','510.383.8913','510.383.8912','Grace~415.794.5060','','',''),(54,'Union Intl Food','33035 Transit Ave','Union City','CA','94587-    ','510.471.8299~fax:471.9999','510.471.9999','daniel:510.912.0077~linda,eva,helan','','',''),(55,'Valley Star','14500 E. Valley Blvd.','City of Industry','CA','91746-    ','626.968.2878','626.968.3238','','','',''),(56,'Wei Chuan','23510 Cabot Blvd','Hayward','CA','94545-    ','510.887.2200','510.887.2425','Victor510.761.5763~hamer:408.628.2529','','',''),(57,'Well Luck Co (和樂)','26599 Corporate Ave.','Hayward','CA','94545-    ','510.782.3888~fax:3889','510.782.3889','Tim:415.720.5755~vicky760.6208','','',''),(58,'Willamette Valley Meat','336 Ne 8th Ave','Portland','OR','97232-    ','503.232.0933','503.232.0989','robert541.905.7594~philis','','',''),(59,'Yuet Cheong Co (悅昌)','2050 Jerold Ave','San Francisco','CA','94124-    ','415.920.8900~fax:8969','415.920.8969','paul:415.806.6019~莫太415.999.9211','','',''),(60,'ACC Food','2451 McMullen Booth Rd Ste 208','Clearwater','FL','33759-    ','8568488877fax9939','(856) 848-9939','helan~vivian','','',''),(61,'American Rice Inc.(水晶,孔雀米)','10700 N. Freeway, Ste 800','Houston','TX','77037-    ','281.272.8800~fax:9705','281.272.9705','','','',''),(62,'Good Choice Trading Inc','23759 Eichler ST#J','Hayward','CA','94545-    ','510-781-4880','510-781-4890','David:510.589.8855~peter847.8888,christin 女','','',''),(63,'Hi-Grade Foods, Inc.','30988 San Benito Street','Hayward','CA','94544-    ','510-476-1881','510-476-1880','','','',''),(65,'Lagasse (Essendant)','4100 Whipple Rd.','Union City','CA','94587-    ','800.733.4000~fax:209.931.8798','800-355.1219','Kris Poggio:209.406.5202~#18076001,025104~#37326','','',''),(66,'American Tai Wah Trading Corp','1028 44th Ave','Oakland','CA','94601-    ','510-261-9557~fax:0522','510-261-0522','振','','',''),(67,'B & T Ttrading Co','553 66th Ave','Oakland','CA','94621-    ','510-562-8884','510-383-8887','sherla','','',''),(68,'Cargill Food Distribution','730 Spreckels Ave.','Manteca','CA','95336-    ','209-923.6444~fax:823.1961','209.832.0906','resri:8774915965','','','james_harrison@cargill.com'),(69,'Chase Intl Trading','732 Sacramento St','San Francisco','CA','94108-    ','415-982-2222','','Mae','','',''),(70,'D & Y Enterprise Inc','P.O. Box 292','Pico Rivera','CA','90660-    ','562-942-7499','562-942-7433','','','',''),(71,'Fortuna Sea Products','1600 Potrero Grande Dr, #7','Rosemead','CA','91770-    ','626-572-4600','626-572-4466','','','',''),(72,'Seamaster','17800 Castleton St.','City of Industry','CA','91748-    ','626-964-1300','626-964-1175','Yip','','',''),(73,'AAA Test Supplier','888 Testing','Anytown','NV','99999-    ','775-888-8888','775-888-8888','','','',''),(74,'Hanmi','2992 Alvarado St. #M','San Leandro','CA','94577-    ','510-357-1200','510-357-9474','','','',''),(75,'Riceland Foods, Inc.(德卅米)','P.O. Box 927','Stuttgart','AK','72160-    ','870-673-5500','870.673.5246','','','',''),(76,'Pearson Sale CO.(Syrup,Ajinomoto)','8624 Thornton Ave.','Newark','CA','94560-    ','510.402.0200~fax:0205','510.402.0205','Bratt909.784.3840','','',''),(77,'Pan Pacific Plastic','2655 danti court','hayward','CA','94545-    ','5107856888ext.103','510.785.6886','','','',''),(78,'Wing Nien Foods','30560 San Antonio ST.','HAYWARD','CA','94544-    ','(510) 487-8877','(510) 489-6666','linda~tracy~judy','','',''),(79,'International Business Trading','','L.a','CA','','3232770000ext.4','','crystal Ficken','','',''),(80,'Tiao Peng Trading,Inc.(镇平贸易)','31760 Hayman St.','Hayward','CA','94544-7934','510.475.8288~fax:8999','510.475.8999','tracy','','','tiaopeng@pacbell.net'),(81,'Wang Globalnet~dba Hanmi','2480 Industrail Parkway West','Hayward','CA','94545-    ','510.357.1200','510.357.9474','Young,Julie,henry 25.872.0976','','',''),(82,'A1','jason','','','','(209) 931-6888','','','','',''),(83,'Harvest food product','710 Sandoval','Hayward','CA','94544-    ','5106750383et126','510.675.0396','Cindy Leung','order processor','','cindyhfoods@aol.com'),(84,'New Asia Food Inc.','3382 Enterprise Ave.','Hayward','CA','94545-    ','(510) 887-7112','(510) 887-7114','','','',''),(85,'Quon Yick(均益)','9668 Telstar AVE','El Monte','CA','91731-    ','626.297.9292(lynn)~fax912.4292','','','','',''),(86,'Amay\'s Bakery & Noodle Co.','837 Commercial St.','Los Angeles','CA','90012-    ','2136262713~fax:0353','(213) 626-0353','Jason','','',''),(87,'California World Trade(德卅米)','24615 O\'Neil Ave.','Hayward','CA','94544-    ','(510) 888-9393','(510) 888-1482','stan','','',''),(88,'Smith Frozen Foods, Inc.','P.O. Box 68','Weston','OR','97886-    ','','','','','',''),(89,'On On Food 安安','1130 5th Ave.','Oakland','CA','94606-    ','510.251.9588','510.251.9788','Sanny','','',''),(90,'MasterCraft','302 N.Thome ave','fresno','CA','93706-    ','(559) 233-2700','(559) 233-2750','','','',''),(91,'Restaurant Depot','2045 Evans Ave.','San Francisco','CA','94124-    ','415.920.2888','415.920.2889','','','',''),(92,'B&TKitchen Supplies','555 66th Ave.','Oakland','CA','94621-    ','510.638.3868','510.383.8887','','','',''),(93,'Tay Ho Food Corp. (西湖)','2430 W. Cape Cod Way','Santa Ana','CA','92703-    ','714.973.2286~fax;541.0683','714.541.0683','Jenny:657.226.7990','','',''),(94,'Field Products Inc., Northern California(孔雀米)','P.O.Box 296','La Mirada','CA','90637-    ','714.739.5329~800.600.7423','714.739.8243','Lorie~James Aragon','','','info@fieldproducts.com'),(95,'Sams Club','4835 kietzke Lane','Reno','NV','89509-    ','829.7900','829.8230','','','',''),(96,'Dick Lee Pastry Shop (得利糕粉店','777 Jackson St.','San Francisco','CA','94133-    ','415.397.0788','415.397.1236','','','','angelfire.com~80s~dickleepastry'),(97,'Super King Food Products Inc. 皇上皇','1049-1051 Quesada Ave.','San Francisco','CA','94124-    ','415.822.8768~fax:8767','','方太415.218.1647','','',''),(98,'Taiko Enterprises Corp.','1467 W. 178th St.','Gardena','CA','90248-    ','310.715.1888','310.324.1115','Miss Mutsuko','','',''),(99,'Unknow ','1234','abc','CA','12345-    ','','','','','',''),(101,'West Coast Trading, Inc.','1065 Quesada Ave.','San Francisco','CA','94124-    ','415.822.1687','415.822.6311','','','',''),(102,'Simex International','101 Associated Road','So. San Francisco','CA','94080-    ','650.875.7788','','','','',''),(103,'C J  United Food Corp.(德成)','105 Jackson ST.','Oakland','CA','94607-    ','(510) 663-5418','(510) 663-5420','John510.856.7485~Joe:510.393.5147','','',''),(105,'Win Woo Trading, LLC (华榕食品)','31056 Genstar Rd.','Harward','CA','94544-    ','510.259.1888~超:209.756.3283','510.259.0888','東510.363.0572~lina(a~r)','','',''),(106,'Costco','2200 Harvard Way','Reno','NV','89502-    ','689.2200~fax:689.2227','689.227','fax:689.2227','','',''),(107,'Cafvina Coffee & Tea (Quoc Viet Foods)','12221 Monarch St.','Garden Grove','CA','92841-    ','714.283.3663~fax3666','714.242.1583','Alan Nguyon(Cel:714.878.7409)','','',''),(108,'Slade Gorton &  Co. Inc','225 Southampton St.','Boston','MA','02118-2724','714.676.4206','','Shirley lee:800.567.5002','','',''),(109,'New Comback International (新东记食批)','1981 W. Ave. 140th','San Leandro','CA ','94577-    ','510.483.2388~3488~fax:2999','510.483.2999',' dong~510.282.6818~scott:510.282.8248','','',''),(110,'Trinity Formulas Inc','1067 77th Ave.','Oakland','CA','94621-    ','510.382.1689','510.382.1789','Kevin~傅小姐','','',''),(111,'Forest Restaurant Supply Inc.','1635 Rollins Rd.Ste.A','Burlingame','CA','94010-    ','415.282.8623~大哥408.702.0338','415.282.8622','650.588.8881~650.395.8632','','',''),(115,'Ten Ren Tea Co.','550 Grant Ave.','San Francisco','CA','94108-    ','415.788.0845','415.362.0657','amy chen小燕:415.706.9247','','',''),(116,'D & T Foods Inc','1261 Martin Ave.','Santa Clara','CA','95050-    ','408.727.8331~fax:8780','408.727.8780','doug:415.279.6885~wison:408.668.4698','Duc Tsan415.279.6885','',''),(117,'Artemiana Int. Inc.','781 Cascade  Dr.','Sunnyvale','CA','94087-    ','408.712.1729','408.228.0731','lei zhang','','','artemiana.com'),(118,'Office Depot','','Sparks','NV','89431-    ','','','','','',''),(119,'Goldberry Distributors, Inc.(GB)','1693 Sabre St.','Hayward','CA','94545-    ','510.300.1588~259.9038~fx9037','510.300.1587','anne:510.449.6776~Irene510.418.4552','','',''),(120,'Rinco International Inc.','33442 Western AVE','union city','CA','94587   ','510.785.1633~Fax:5451','510.7855451','Yi:510.468.1060','','',''),(121,'Menlo Food Corp.','175 Demeter St.','East Palo Alto','CA','94303-    ','650.326.9620~328.5980','650.328.107','Lee','','',''),(123,'Loon Hing Co. (联兴公司)','3838 - 49th Ave. ','Sacramento','CA','95823-    ','916.393.3773','916.393.6996','Micheal','','',''),(124,'First World Asian Trading Corp.(3 Ladies)','41888 Christy St.','Fremont','CA','94538-    ','510.683.8778~fax8880','510.683.8880','强哥：5105205748','','','www.threeladies.com'),(126,'Richmond Wholesale Meat (RWM)','2920 Regatta Blvd.','Richmond','CA','94804-    ','510.233.5111~fax877.396.7952','877.396.7952','peggy:510.685.9879~837.3563','','',''),(128,'EJ Distributor Inc dba Auby Trading Inc 嘉誠公司','301 Toland St.','San Francisco','CA','94124-    ','415.826.1166','415.282.8313','','','',''),(129,'Mon Fon (萬豐)','325 Freeport Blvd.','Sparks','NV','89431-    ','331.2199','','','','',''),(130,'B&G Foods, Inc(Clabber Girl~发粉)','P O Box 405354','Atlanta','GA','30384-5354','kimm@bgfoods.com','812.232.3531','kim McGraw:310.738.6595','','','kimm@bgfoods.com'),(131,'Sierra Meat & Seafood','P.O Box 12760','Reno','NV','89510-2760','(800)444.5687','','','','',''),(132,'Premier Foods','P.O. Box 847185','Boston','MA','02284-7185','508.743.9400 x109','508.743.9404','peter:508.743.9400.','','',''),(133,'H. N. Farms','1327 E.15th St.','Oakland','CA','94606-    ','510.533.2028','510.580.9418','Rendy:510.697.3385','','',''),(134,'Saroni Food Service','1301 26th St.','Okland','CA','94607-    ','510.465.6010~Fax:6020','510.465.6020','Al:510.377.8007~kaylath','','','DCTALKER@AOL.COM'),(135,'Bender Transportation (Reno)','P O Box 11430','Reno','NV','89510-1430','788.8824','788.8840','Karola','','',''),(136,'Western Energetix ','655 S. Stanford Way','Sparks','NV','89431-    ','689.1234 (800.322.4561)','689.1299','','','',''),(137,'Fanli Gourmet Trading Inc.(全)','5188 Abbeywood Dr.','Castro','CA','94552-    ','510.812.8606','510.881.2851','','','',''),(139,'G.M. Foam & Paper Int\'l Corp.','1919 Lundy Ave.','San Jose','CA','95131-    ','408.526.1689','408.526.1389','Howard','','',''),(140,'Archer Daniels Midland Co.(ADM) Packaged Oils','3390 So. Chestnut','Fresno','CA','93725-    ','800.350.2585','559.237.9343','Jewel Orbe','','',''),(141,'Weber Quality Meats, Inc.(曹生)','990 Carden St.','San Leandro','CA','94577-    ','510.635.9892','','','','',''),(142,'Sun Sang Market (好旺利燒臘肉食公司)','1205 Stockton St.','San Francisco','CA','94133-    ','415.989.3061','415.989.3060','Henry:415.819.1248~張415.516.3888','','',''),(143,'Junior Express(Trucking)','2531 Sutro St. #A','Reno','NV','89512-    ','323.8785','323.5797','john gallegos','gm','','joejrxp@sbcglobal.net'),(144,'Bakemark- Reno','5455 Louie Lane','Reno','NV','89511-    ','850.8500','850.8525','','','',''),(145,'Maple Trade Corporation','2660 W. Winton Ave.','Hayward','CA','94545-    ','510.783.3888','415.822.3887','Kelvin~888.853.3288','','',''),(150,'Peri & Sons Farms (洋蔥)','430 Hway 339~p o box 35','Yerington','NV','89447-    ','775.463.4444,6303~9月開始','775.217.6367','peter ng805.407.3663~217.6367','','',''),(151,'Sun Hing Foods, Inc. (黑白奶)','271 Harbor Way','So. San Francisco','CA','94080-    ','650.583.8188~fax:8187','650.583.8187','tina chang~Johny:415.720.0806~jesica','','','www.sunhingfoods.com'),(152,'Sincere Orient Commercial Corp. (新東食品)','15222 E. Valley Blvd.','City Of industry','CA','91746-    ','626.333.8882~fax:9600','626.333.9600','Jenny~Jason~Christy','','',''),(153,'California Paper Bag','1829 Dana Street','Glendale','CA','91201-    ','818.240.6717','818.240.7367','','','',''),(154,'Bay Janitorial Supply Co.','3014 Ford St.','Oakland','CA','94601-    ','510.534.0869','510.534.0866','eugene ko:510.701.6598','','','bayjanitorial@yahoo.com'),(155,'North America Food Manufacturing (USA) Inc.北美面廠','1175 Quesada Ave.','San Francisco','CA','94124-    ','415.558.9360','','','','',''),(156,'L & W Group Inc. (鴻運國際) (鸭包~美极)','30845 Huntwood Ave,','Hayward','CA','94544-    ','510.475.0111','510.429.9575','Ivy Chang~Annie','','',''),(157,'A-1 Chemical Inc.','4795 Longley Lane','Reno','NV','89502-    ','331.7627~fax:358.2082','358.2082','dennis LaCruze','','',''),(158,'Ocean Abyss International Inc.','655 Lewelling Blvd. Suite 313','San Leandro','CA','94579-    ','510.895.9986','510.225.1737','Raymond','owner','','oceanabyssint@gmail.com'),(159,'Nor - Cal Seafood Inc.','2810 E. 7th St.','Oakland','CA','94601-    ','510.532.7823','510.532.7821','Kevin Lee~超','president~live seafood','',''),(160,'Dakon Foods','P.O.box 20612','Castro Valley','CA','94546-    ','510.638.2288','','Pauling:650.490.0855','sales','',''),(161,'Cash & Carry','115 Kietzke Lane','Reno','NV','89502-    ','322.3709','','Jeff','','',''),(162,'Hsu\'s Ginseng (SF) Enterprises Inc.','23589 Foley St.','Hayward','CA','94545-    ','510.266.5988','510.266.5980','Kevin Lee:408.728.1773~jack510.468.1721','','',''),(163,'Seafood Expert West Inc.','4564 160 St.','Flushing','NY','11358-    ','718.961.9009~fax6196','718.961.6196','Vicky:718.961.1133','','',''),(164,'Daylee Foods,Inc.','2900 Faber St. #3','Union City','CA','94587-1214','510.471.9710~fax 9720','510.471.9720','Sammy:510.760.4749','','',''),(165,'H & L International, Inc.','3130-3132 Diablo Ave.','Hayward','CA','94545-2702','510.783.9261','510.785.5307','Iven:510.7839261','','','www.hlintl.net'),(166,'Shanghai Food Co.(上海食品公司)','44276 Fremont Blvd.','Fremont','CA','94538-    ','510.226.1089','510.226.1229','丛波:408.858.6102劉:408.666.3124Vkcky:510.368.8820','','',''),(168,'Walong Marketing, Inc.(華隆)','6281 Regio Ave.','Buena Park','CA','90620-    ','714.670.8899~fax:521.2953','714.521.2953','chestmond:714.783.5283~ben626.862.5759','','',''),(169,'Timber Lake Foods, Inc,','P O Box 3101','Tupelo','MS','38803-    ','800-804-0662','662.718.7923','Jimmy Buntin:','','',''),(170,'Tong Enterprises Inc.(金然盞)','23889 Connecticut St. ','Hayward','CA','94545-1610','510-784-9100~Fax:785.3181','510-785-3181','Margaretp~Haley~ID:nv04~5105663086','','',''),(171,'Rey Rey','2301 Valley Road','Reno','NV','89512-    ','825.2464~manuel:691.6048','825.2483','Ariana~Jose:691.6145','','',''),(172,'Rama Food Manufacture Corp.','2131 So. Parco Ave.','Ontario','CA','91761-    ','909.923.5305~fax:6666','909.923.6666',',Puk','','',''),(173,'Costco (C.C)','700 Old Clear Creek Rd.','Carson City','NV','89705-    ','775.881.2503','775.81.2505','Bob Tote(manager)','','',''),(174,'Costco (Sparks)','4810 Galleria Pkwy','Sparks','NV','89436-    ','356.4400','356.4404','Joe McLean(assistant)','','',''),(175,'Saalfeld Redistribution','P O Box 31001-1382','Pasadena','CA','91110-1382','859.212.2302','877.482.5606','Robert E Doscher III:209.649.7583','','',''),(176,'Bonanza Produce Co.','1925 freeport Blvd.','Sparks','NV','89431-    ','358.2442 alan7711607','358.5440','Kim:682.3689~Alain:650.458.1586','','',''),(177,'CaiE Foods','1802-A Brierley Way Ste #108','Sparks','NV','89434-    ','356.8838','356.8822','','','',''),(178,'Western pacific Distributors Inc','1201 E. Glendale Ave. ','Sparks','NV','89431-    ','355.0800','','','','',''),(179,'Duc Ky Seafood Co., Inc (德記)','5088 - B Valley Blvd.','Los Angeles','CA','90032-    ','323.221.1661~Fax:1676','323.221.1676','Johny:323.552.6688','','',''),(180,'Steinbeck Country Produce','P.O.Box 7417','Spreckels','CA','93962-    ','831.757.0665','','scott cummings','','',''),(181,'Ammex Corporation(手套)','P O Box 88047','Tukwila','WA','98138-    ','800.274.7354','425.251.8656','','','',''),(182,'Sing Kung Corp.(順化湯料)','12061 Clark St.','Arcadia','CA','91006-    ','626.358.5838 Rose','626.358.6885','成功食品','','',''),(183,'Magic Gourmet Trading Inc.(鲍鱼罐）','375 Adrian Road','Millbrae','CA','94030-    ','650.239.9068~fax9071','650.239.9071','民少,ms. eula','','',''),(184,'Dupont Market Inc.(new american pouiltry) 都板海產肉類','8612 Younger Creek Dr.','Sacramento','CA','95828-    ','四510.562.3593~916.441.1466','916.381.1898','四510.798.2078','','','NAPOULTRY@gmail.com'),(189,'Sun Fat Trading Corp.(新發貿易)','605 Vista Way','Milpitas','CA','95035-    ','408.262.3332~fax262.3363~芝','408.262.3363','洪明408.438.7713','','','sunfat@sbcglobal.net'),(190,'American Wah Ta Trading Inc.(華達貿易)','80 Monterey Blvd.','San Francisco','CA','94131-    ','415.330.0886~fax415.587.6879','415.587.6879','415.812.8338','','',''),(191,'Seafood Castle  Corp.','1111 Corporrate Center Dr. Ste. 204','Monterey Park','CA','91754-    ','323.796.0458~fax:0559','323.796.0559','Alfred Li:626.203.6000','','','robin.melnyk@eulerhermes.com'),(192,'Harvest Meat Co. Inc. ','7225 Florin Mall Dr. ','Sacramento','CA','95823-    ','916.399.8982~fax:8934','916.399.8934','','','',''),(193,'North American Food Distributing Co., Inc.(雪糕)','3969 Industrial Blvd.','West Sacramento','CA','95691-    ','916.373.1111~Fax:1124','916.373.1124','','','','www.nafdc.com'),(194,'Roxy Trading Inc.(Yeos 豆奶)','389 N. Humane Way','Pomona','CA','91768-    ','626.610.1388~fax:1339','626.610.1339','Janet:510.376.5249','','',''),(195,'KJ Mini Mart (印度店)','1086 So. Virginia St. #C','Reno','NV','89502-    ','329.6225','','Karunesh~Surlida','','',''),(196,'B & C Trading Co. (曹華)','769 Shell Blvd. Apt#203','Foster City','CA','94404-2544','650-867-0801~fax510-632.2754','','maggie:650.868.6290','','',''),(197,'Global Tableware Solutions, Inc.(GTS)','13775 Magnolia Ave.','Chino','CA','91710-    ','909.869.7267~fax909.594.8131','909.594.8131','Susan Runyon~craig heaton:559.470.7715','','',''),(198,'Pams,Inc-NV(genpak corp.)','3361 Pomona Blvd.','Pomona','CA','91768-    ','909.869.7267~fax:594.8131','909.594.8131','','','',''),(199,'Castle Foods','2555 Dickerson Rd. ','Reno','NV','89503-    ','333.9466~fax:2811','333.2811','shawn chalmers','','',''),(200,'Genpak LLC','P O Box 277796','Atlanta','GA','30384-7796','','','','','',''),(202,'Cellucap Manufacturing','4626 N.15th St.','Philadelphia','PA','19140-    ','800.523.3814xt620','215.324.1290','marlene sperry','','','marlene@cellucap.com'),(203,'New American Poultry(都板雞)','8612 Younger Creek Drive','Sacramento','CA','95828-    ','916.441.1466','','Ken','','','napoultry@gmail.com'),(204,'VT Solution','10385 Plcerville Dr.','Reno','NV','89508-    ','677.0117~fax677.1131','677.1131','druw:230.6447~susan:813.3317~Bill~tony813.3373','','',''),(205,'MarketSmart (Kikkoman)','','','','','925.475.2210~fax:846.4465','925.846.4465','Lorraine:530.314.9492~kelly reymundo:925.475.2254','','','elarsen@coregroupsales.com'),(206,'Felbro Food Products(檸檬精)','','','CA','','949.742.2805~fax:709.2954','','steve garwin:949.742.2805','','',''),(207,'Taifung Food Company, Inc (譚生)','24835 Eichler St.','Hayward','CA','94545-    ','510.887.3900~fax0800','510.887.0800','weizn~jenny','','',''),(208,'JB Hunt Transport Inc (Darren~Maggie)','','','CA','89214-    ','','','','','',''),(209,'Lucky Seven Wholesale Pot Stickers(七興食品有限公司)','10 Main Ave.#10','Sacramento','CA','95838-    ','916.385.9866','','Tony潘','','',''),(213,'K1 International','711 Valencia St.','San Francisco','CA','94110-    ','415.431.5151~fax:5159','415.431.5159','Juliet~mike503.939.2615','','',''),(215,'Foster Farms','P O Box 198','Livingston','CA','95334-0198','209.668.6668','','','','',''),(216,'Teh Tung Corporation(紙巾)','12110 Altamar Place','Santa Fe Springs','CA','90670-    ','562.903.8000~fax:8001','562.903.8001','','','',''),(217,'Riptide (Mike Kwong)','32980 Alvarado-Niles Rd.#810','Union City','CA','94587-    ','510.984.1180~fax813.373.7901','813.373.7901','mike:415.793.1325','','',''),(218,'Golden Fortune USA Inc 長年大富公司','13851 Ramona Ave.','Chino ','CA','91710-    ','909.628.2332~fax:6601','909.628.6601','Willie lima:408.888.6110','','','goldenfortuneusa@yahoo.com'),(219,'Major Gloves & Safety Inc.(手大套)','250 Turnbull Canyon Rd.','City Of Industry','CA','91745-    ','626.330.8022~Fax:8118','626.330.8118','薛Kally:','','','sales@Mggloves.com'),(220,'Fryers Energy, LLC','2360 Lindbergh St.','Auburn','CA','95602-    ','530.863.4400~fax4078','530.863.4078','a~r:530.863.4178~ext2078','','',''),(221,'Ajinomoto Windsor Inc.','Dept 97, POBox 4346','Houston','TX','77210-    ','800.437.6936~fax832.353.1802','800.376.9362','Jamica:714.424.4949~#04597','','','Rosalie.colca@ajinomotofoods.com'),(223,'American Poutry','','','CA','','','','Ken:510.562.3593','','',''),(224,'Fresh Green, Inc.','1970 Jerrold Ave.','San Francisco','CA','94124-    ','415.826.1697~fax285.4422','415.285.4422','Joyce:415.298.5936','','',''),(225,'Thunder Group, Inc.','780 S. Nogales St.','City Of Industry','CA','91748-    ','626.935.1605~Fax:1609','626.935.1609','','','',''),(226,'Eastwood Houseware Int\'l Inc.(LA杂货)','2736 Durfee Ave.','El Monte','CA','91732-    ','626.542.3976~Fax:672.0166','626.672.0166','許明:626.354.3891','','',''),(227,'Silva Trading Inc (LKK)','384 East Rd.','La Habra Heights','CA','90631-    ','818.814.8889','805.669.2804','','','',''),(228,'DM United Group, Inc (曹生)','9820 D St.','Oakland','CA','94603-2439','510.632.5064','','','','',''),(229,'Sun Tin Sung Supermarket(新天生)','310-7th St.','Oakland','CA','94607-    ','510.832.6256~Fax6257','510.832.6257','Jenifer510.851.1236~群,花','','',''),(230,'Craig Heaton (咖啡包)','','','','','559.470.7715','','craig heaton:559.470.7715','','',''),(231,'Bargain Wholesale($0.99)','4000 Union Pacific Ave.','Commerce','CA','90023-    ','323.980.8170~fax881.9991','','','','','www.bargainW.com'),(232,'Kim Seng Company(金成~802)','6121 Randolph St.','City Of Commerce','CA','90040-    ','323.724.8551~fax1408','323.724.1408','Cindy','','','KimSeng88@aol.com'),(233,'Grand A International co.inc(GAIC~LA卷袋等)','1310 So. Johnson Dr.','City Of Industry','CA','91745-    ','626.961.5800~Fax5908','626.961.5908','Raymond:626.759.6921','','','www.galcusa.com'),(234,'Leadway International Inc.(泰茶,波霸系列)','31010 San Antonio St.','Hayward','CA','94544-    ','510.324.0168~888.293.0615','888.293.0615','Betty:510.585.1272（106）','','','http:~~www.bossenstore.com~collections~all'),(235,'North American Food  Distributing Co.,Inc(廈威爾冰茶)','3969 Industrial Blvd.','West Sacraamento','CA','95691-    ','916.373.1111~fax1124','916.373.1124','','','',''),(236,'Sierra Gold Seafood   ','1335 Greg St. Ste. 106','Sparks','NV','89431-    ','352.9595~fax9577','775.352.9577','Justin crowell997.6164','','',''),(237,'Possmei (波霸商)','23476 Kidder St.','Hayward','CA','94545-    ','510.324.8888','510.471.7200','Ivan','','',''),(238,'Queensway Trading Company','P O Box 369','Millbrae','CA','94030-    ','415.988.2258~fax510.675.0955','510.675.0955','Steven650.464.1222','','',''),(242,'Kam Lee Yuen Trading Co. Inc','P O Box 1338','Millbrae','CA','94030-    ','510.675.0998~fax0933','510.675.0933','強415.860.2031','','',''),(243,'Chevalier International (USA) Inc. (奇事)','430 East Grand Ave.','So. San Francisco','CA','94080-    ','650.877.8118','650.877.8283','馬君华916.803.9867','','',''),(244,'Dai Cheong Trading Comany Inc. (大昌)','317 North Ave. 19','Los Angeles','CA','90031-    ','323.225.1888~fax:9080','323.225.9080','李生:415.694.1218','','',''),(245,'King Wai Trading Co.(經緯)','30098 Eigenbrodt Way','Union City','CA','94587-    ','510.48999.1888~fax:6846','510.489.6846','杨510.821.1097~a~r April:Ext.109','','',''),(246,'Wo Hing LLC ((和兴~泰哥)','78 4th Street','Oakland','CA','94607-    ','','','','','',''),(247,'Lenergy Distribution Inc.','1399 Lowrie Ave.','So. San Francisco','CA','94080-    ','415.290.9979','','','','',''),(248,'Sierra Trading','1641 West Main.Ste.#301','Alhambra','CA','91801-    ','626.309.9558','','Darren 626.309.9558','','',''),(249,'Ellision Enterprises 依力臣药业','738 Washington St.','San Francisco','CA','94108-    ','415.982.3886-8~fax3889','415.982.3889','Edward415.963.1986','','','ellisionusa@gmail.com'),(250,'Shearwater (雪柜佬)','280 Greg St. #10','Reno','NV','89502-    ','348.0979~Fax:786.5548','786.5548','Don','','',''),(251,'Lucky 8 Trading LLC','28312 Industrial Blvd, Suite D','Hayward','CA','94545-    ','510-200-7910','510-363-9560','Andy 415-516-1861','','',''),(252,'Louie\'s Noodle (雷氏面厂)','4248 W. Reno Ave.','Las Vegas','NV','89118-    ','702.214.2918~fax2919','702.214.2919','Ken702.338.8128','','',''),(253,'Kim Son Food Co., Inc (牛肉丸）','1088 Beecher St.','San Leandro','CA','94577-    ','510.569.1088~fax1086','510.569.1086','Andy Hua510.882.0528','','','ksf1240@yahoo.com'),(254,'Ez Buy (Website:EZBUY.US) (Jimmy)','1280 Van Dyke Ave.','San Francisco','CA','94124-    ','415.822.6188','','Jimmy:415.359.5951','','',''),(255,'Green Packing Suppy(胶袋）','10463 Grant Line Rd. Ste.124','Elk Grove','CA','95624-    ','916.686.3989','','Lucy Chen:510.780.6269~Brian Wang','','','sales@greenpackingsuppy.com'),(256,'C J Pacific Iternational Inc.','PO Box 24388','San Francisco','CA','94124-    ','415.822.8928~fax7526','415.822.7526','曹生','','',''),(257,'Meatco Inc.','545 9th St.','Oakland','CA','94607-    ','510.444.1411','','Jeff 何','','',''),(258,'Pacific Poultry Co','P O Box 2492','Union City','CA','94587-    ','510.828.1165~fax667.0098','510-667-0098','唐人Henry','','',''),(259,'Ming Lee International Corp.','2322 Irving St.','San Francisco','CA','94122-    ','415.518.6330','415.665.1876','415.990.8575','','',''),(260,'Rockman Company (USA) Inc.','12011 Smith Ave.','Santa Fe Springs','CA','90670-    ','562.236.8688~fax8699','562.236.8699','唐510.590.6893','','',''),(262,'D&J International Company (曹生）','','','','','','','','','',''),(263,'United Express Logistics, LLC (Otasty)','P.O Box 1774 ','Lake Oswego','OR ','97035-    ','707.843.0676','503.588.0939','weson lu:707.843.0676','','',''),(264,'MDI Food Inc (鸡，肉 曹生~jack tang)','201 Missoin St. Ste.1200','San Francisco','CA','94105-    ','510.828.5575','','Frank Liu510.828.5575','','',''),(265,'Donald Trading Co (伟骏）','3681 33rd Ave.','Sacramento','CA','95824-    ','916.424.8883~fax8168','916.424.8168','cary chiu916.955.1226','','',''),(266,'Ming Hong International (铁人牌）','14730 Don Julian Rd.','City of Industry','CA','91746-    ','626.820.9888~fas9088','626.820.9088','Jeff:626.825.1488','','',''),(267,'C J Pacific USA','1140 Revere Ave.','San Francisco','CA','94124-    ','415.822.8910','','','','',''),(268,'Hualong Global Inc','4030 Valley Ave. #108','Walnut','CA','91789-    ','626.474.1973','','Micheal','boss','','rongrong19760326@gmail.com'),(269,'OCM Group USA, Inc','16555 Gale Ave.','City Of Industry','CA','91745-    ','626.239.0506~fax626.400.2881','626.400.2881','J King','','',''),(270,'New Horizon Enterprises Ltd.','1992 Alpine Way','Hayward','CA','94545-    ','510.783.9368','','maggie chun','','','Maggie.Chu@nhe-usa.com'),(271,'Bonanza Pest Control Inc','PO Box 60506','Reno','NV','89506-    ','775.972.8212','','April','','',''),(272,'Asian American Trading Inc.飘馨香','101 Toland Street #2','San Francisco','CA','94124-    ','415.688.5653','','林进贤','','','');
/*!40000 ALTER TABLE `sellerlist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `spuser`
--

DROP TABLE IF EXISTS `spuser`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `spuser` (
  `id` int DEFAULT NULL,
  `name` varchar(80) DEFAULT NULL,
  `pass` varchar(80) DEFAULT NULL,
  `power` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `spuser`
--

LOCK TABLES `spuser` WRITE;
/*!40000 ALTER TABLE `spuser` DISABLE KEYS */;
INSERT INTO `spuser` VALUES (8,'sup1','s1','N'),(9,'sup2','s2','N'),(5,'sup3','s3','N'),(6,'sup4','s4','N'),(7,'sup5','s5','N'),(10,'rainie','rr','N');
/*!40000 ALTER TABLE `spuser` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `storelist`
--

DROP TABLE IF EXISTS `storelist`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `storelist` (
  `id` int NOT NULL,
  `smallnum` decimal(20,2) DEFAULT NULL,
  `largenum` decimal(12,2) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `storelist`
--

LOCK TABLES `storelist` WRITE;
/*!40000 ALTER TABLE `storelist` DISABLE KEYS */;
INSERT INTO `storelist` VALUES (9412,0.00,0.00);
/*!40000 ALTER TABLE `storelist` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder`
--

DROP TABLE IF EXISTS `temporder`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder` (
  `id` int DEFAULT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(80) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder`
--

LOCK TABLES `temporder` WRITE;
/*!40000 ALTER TABLE `temporder` DISABLE KEYS */;
INSERT INTO `temporder` VALUES (6322,1.0000,'100','gal',15.00,'0','越南蒜蓉辣醬','Chili Garlic Sauce (VN) 3/1gal'),(5814,1.0000,'100','sleev',39.00,'0','杯子','Cup - (P200N) 2oz   10/250pcs Fit PL200N'),(5442,1.0000,'100','tub',39.00,'0','杯盖','Lid - (PL2N/PL200N) 2oz  25/100pcs Fit P200n'),(9182,1.0000,'300','bag',7.00,'0','新鲜蒜头','Produce - Fresh Peel Garlic 5#'),(5878,1.0000,'400','pkg',11.00,'0','锅贴','Pot Sticker (Amoy) 6/30ct'),(5908,1.0000,'500','lb',3.99,'0','牛腩','Beef - Stew Meat (Flank Tip)');
/*!40000 ALTER TABLE `temporder` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder1`
--

DROP TABLE IF EXISTS `temporder1`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder1` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder1`
--

LOCK TABLES `temporder1` WRITE;
/*!40000 ALTER TABLE `temporder1` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder1` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder2`
--

DROP TABLE IF EXISTS `temporder2`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder2` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder2`
--

LOCK TABLES `temporder2` WRITE;
/*!40000 ALTER TABLE `temporder2` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder2` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder3`
--

DROP TABLE IF EXISTS `temporder3`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder3` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder3`
--

LOCK TABLES `temporder3` WRITE;
/*!40000 ALTER TABLE `temporder3` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder3` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder4`
--

DROP TABLE IF EXISTS `temporder4`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder4` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder4`
--

LOCK TABLES `temporder4` WRITE;
/*!40000 ALTER TABLE `temporder4` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder4` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder5`
--

DROP TABLE IF EXISTS `temporder5`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder5` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder5`
--

LOCK TABLES `temporder5` WRITE;
/*!40000 ALTER TABLE `temporder5` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder5` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder6`
--

DROP TABLE IF EXISTS `temporder6`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder6` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder6`
--

LOCK TABLES `temporder6` WRITE;
/*!40000 ALTER TABLE `temporder6` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder6` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder7`
--

DROP TABLE IF EXISTS `temporder7`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder7` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder7`
--

LOCK TABLES `temporder7` WRITE;
/*!40000 ALTER TABLE `temporder7` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder7` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temporder8`
--

DROP TABLE IF EXISTS `temporder8`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `temporder8` (
  `inner_id` int NOT NULL,
  `inv_id` int NOT NULL,
  `qty` decimal(14,4) DEFAULT NULL,
  `cati` varchar(10) DEFAULT NULL,
  `unit` varchar(10) DEFAULT NULL,
  `price` decimal(12,2) DEFAULT NULL,
  `total` decimal(14,2) DEFAULT NULL,
  `taxrate` varchar(10) DEFAULT NULL,
  `ch` varchar(80) DEFAULT NULL,
  `en` varchar(120) DEFAULT NULL,
  `csf` tinyint(1) DEFAULT NULL,
  `remark` varchar(120) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temporder8`
--

LOCK TABLES `temporder8` WRITE;
/*!40000 ALTER TABLE `temporder8` DISABLE KEYS */;
/*!40000 ALTER TABLE `temporder8` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `test`
--

DROP TABLE IF EXISTS `test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `test` (
  `id` int DEFAULT NULL,
  `ch_name` varchar(80) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `test`
--

LOCK TABLES `test` WRITE;
/*!40000 ALTER TABLE `test` DISABLE KEYS */;
INSERT INTO `test` VALUES (1,'李锦记酱油'),(2,'泡菜'),(3,'豆腐泡'),(4,'青菜'),(5,'abc');
/*!40000 ALTER TABLE `test` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user` (
  `id` int DEFAULT NULL,
  `name` varchar(80) DEFAULT NULL,
  `pass` varchar(80) DEFAULT NULL,
  `power` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'lily','yee6312','S'),(2,'yy','yy331','S'),(3,'jack','yee6312','S'),(4,'james','jc1202','S');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Current Database: `mysql`
--

USE `mysql`;

--
-- Current Database: `runoob`
--

USE `runoob`;

--
-- Final view structure for view `calcu`
--

/*!50001 DROP VIEW IF EXISTS `calcu`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `calcu` AS select `tb2`.`goodid` AS `goodid`,sum((`tb2`.`qty` / `tb3`.`Itempercase`)) AS `bignum` from ((`saledetail` `tb2` join `inventorylist` `tb3` on((`tb2`.`goodid` = `tb3`.`inv_id`))) left join `invoicelist` `tb1` on((`tb1`.`id` = `tb2`.`id`))) where ((`tb1`.`orderdate` > '2022-04-22') and (`tb1`.`orderdate` < '2022-07-22')) group by `tb2`.`goodid` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `calcu2`
--

/*!50001 DROP VIEW IF EXISTS `calcu2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `calcu2` AS select `buylist`.`invid` AS `invid`,sum(`buylist`.`largenum`) AS `largenum`,max(`buylist`.`cost`) AS `cost` from `buylist` group by `buylist`.`invid` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `cc`
--

/*!50001 DROP VIEW IF EXISTS `cc`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`uu`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `cc` AS select `tb1`.`id` AS `id`,`tb1`.`goodid` AS `goodid`,`tb1`.`qty` AS `qty`,`tb1`.`price` AS `price`,`tb3`.`Itempercase` AS `time`,`tb2`.`cost` AS `casecost`,cast((`tb2`.`cost` / `tb3`.`Itempercase`) as decimal(10,2)) AS `itemcost`,`tb1`.`unit` AS `unit`,`tb1`.`total` AS `total`,`tb1`.`csf` AS `csf`,`tb3`.`ch_name` AS `ch_name`,`tb3`.`en_name` AS `en_name`,`tb4`.`orderdate` AS `orderdate`,cast(if((`tb1`.`qty` > 0),(`tb1`.`qty` * (`tb1`.`price` - if((`tb1`.`csf` = 1),`tb2`.`cost`,(`tb2`.`cost` / `tb3`.`Itempercase`)))),(`tb1`.`qty` * `tb1`.`price`)) as decimal(10,2)) AS `profit` from (((`saledetail` `tb1` left join `buylist` `tb2` on((`tb1`.`goodid` = `tb2`.`invid`))) left join `inventorylist` `tb3` on((`tb1`.`goodid` = `tb3`.`inv_id`))) left join `invoicelist` `tb4` on((`tb1`.`id` = `tb4`.`id`))) where (`tb2`.`cost` <> 0) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `cc2`
--

/*!50001 DROP VIEW IF EXISTS `cc2`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`uu`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `cc2` AS select `tb1`.`goodid` AS `goodid`,sum(`tb1`.`qty`) AS `qty`,sum(`tb1`.`profit`) AS `profit` from `cc` `tb1` group by `tb1`.`goodid` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!50606 SET GLOBAL INNODB_STATS_AUTO_RECALC=@OLD_INNODB_STATS_AUTO_RECALC */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-07-25 17:25:40
